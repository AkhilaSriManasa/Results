// Application.Behaviors.cs
// Script#/FX/Sharpen/Core
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// Creates and attaches behaviors specified on the element declaratively.
/// </summary>
/// <param name="element">The element whose behaviors should be created and attached.</param>
// Use the Application's IoC capabilities to create behaviors.
// This allows satisfying dependencies behaviors have to other services,
// and also allows behaviors to provide or register services into the container.
// Special-case the common case where a behavior represents a single
// service type, and auto-register it.
// In the case where a behavior is registering multiple service types
// (not so common), it can do so manually in its Initialize method.
/// <summary>
/// Detaches all behaviors associated with the specified element.
/// </summary>
/// <param name="element">The element whose behaviors are to be detached.</param>
// Detach all behaviors by enumerating the key/value pair list of
// behaviors being maintained on the element, and disposing them
// individually.
/// <summary>
/// Registers a behavior so it can be used declaratively in markup.
/// </summary>
/// <param name="name">The unique name of the behavior.</param>
/// <param name="behaviorType">The type of the behavior.</param>
/// <summary>
/// Registers a behavior so it can be used declaratively in markup.
/// </summary>
/// <param name="name">The unique name of the behavior.</param>
/// <param name="behaviorType">The type of the behavior.</param>
/// <param name="serviceType">An option service type associated with the behavior for auto-registration with the application container.</param>
// Application.Bindings.cs
// Script#/FX/Sharpen/Core
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// TODO: Support scenarios where value is parent.method, or root.method (for invoking
//       a method on the parent model or root model... useful in templating scenarios
//       where items are not bound to view model but an object retrieved from the
//       view model.
// When the expression is exec, the value is interpreted as a reference to a method
// on the model. An invoker function is created that when called invokes the referenced
// method in context of the model instance. The expression itself contains a delegate
// to this dynamically created invoker function.
// function _(e) {
//   var result = this.modelMethod(e, this);
//   if (result) { e.preventDefault(); }
// }
// TODO: If bound to parent/root, generated this instead:
// function _(e) {
//   var model = Application.Current.GetModel(element.parentElement);
//   var result = this.modelMethod(e, model);
//   if (result) { e.preventDefault(); }
// }
/* canChange */ false);
// TODO: Eventually stop with the () business if we can switch over to true properties
//       with getter/setter accessors in javascript.
// Check if the value is something like A.B.C, where A, B and C are identifiers.
// The value represents a string that contains a script expression for properties off
// the model.
// If its a simple property path, then we parenthesize since in script, the
// properties are represented as functions.
// If its not a simple property path, we're going to assume that the developer
// has referenced the property functions themselves, and we use as-is.
// Read-only, one-time binder... so execute the getter, and create
// an expression with the current value.
/* canChange */ false);
// Read-only, bound binder... create a BindExpression that tracks the
// value by observing any observables representing the property.
// Read-write, bound binder ... must be a simple property path.
/// <summary>
/// Registers a binder factory. The supplied name prefixed with "data-" is used
/// as the attribute name in markup to create a binder.
/// </summary>
/// <param name="name">The name of the expression handler.</param>
/// <param name="factory">The factory being registered.</param>
/// <summary>
/// Registers an expression factory. The supplied name is used in markup to represent
/// an instance of the associated expression.
/// </summary>
/// <param name="name">The name of expression.</param>
/// <param name="factory">The factory to be used to handle the supplied name.</param>
/*, string binderType, string expressionType, string expressionValue */) {
// TODO: Add support for binding attributes - @xxx
// Since the expression value cannot change, there isn't a whole lot of need
// to keep the binder alive and manage it.
// The binder is managed using a behavior that is attached to the element.
// This allows stashing the model for later retrieval, as well as a way to
// dispose bindings (the behavior disposes all binders it is managing).
// Application.cs
// Script#/FX/Sharpen/Core
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// A page-level singleton representing the current application. It provides core
/// services like settings, IoC, and pub/sub events-based messaging for decoupled
/// components.
/// </summary>
/// <summary>
/// The current Application instance.
/// </summary>
/* contentOnly */ false);
/// <summary>
/// The model object associated with the application.
/// </summary>
/// <summary>
/// Activates a specified element and its children by instantiating any
/// declaratively specified behaviors or bindings within the markup.
/// </summary>
/// <param name="element">The element to activate.</param>
/// <param name="contentOnly">Whether the element should be activated, or only its contained content.</param>
/// <summary>
/// Activates a specified element and its children by instantiating any
/// declaratively specified behaviors or bindings within the markup.
/// </summary>
/// <param name="element">The element to activate.</param>
/// <param name="contentOnly">Whether the element should be activated, or only its contained content.</param>
/// <param name="model">The model to bind to.</param>
// Perform app-level activation (tied to body initialization)
// Setup top-level services specified declaratively.
// Create the model declaratively associated with the application.
// Create expressions and bindings associated with the specified elements and
// the contained elements. Do this first, as this allows behaviors to look at
// values set as a result of bindings when they are attached.
// Attach behaviors associated declaratively with the specified element and the
// contained elements.
/// <summary>
/// Deactivates the specified element and its children by disposing any
/// behaviors or binding instances attached to the elements.
/// </summary>
/// <param name="element">The element to deactivate.</param>
/// <param name="contentOnly">Whether the element should be deactivated, or only its contained content.</param>
// Detach behaviors associated with the element and the contained elements.
/// <summary>
/// Gets the value of the specified setting.
/// </summary>
/// <param name="name">The name of the setting.</param>
/// <returns>The value of the specified setting.</returns>
// TODO: Implement access to query string settings as well as maybe
//       a few other things like JSON data written out as page-level
//       metadata, or maybe a JSON block in an embedded script element.
/// <summary>
/// Gets an instance of the specified object type. An instance is created
/// if one has not been registered with the container. A factory method is
/// called if a factory has been registered or implemented on the object type.
/// </summary>
/// <param name="objectType">The type of object to retrieve.</param>
/// <returns>The object instance.</returns>
/// <summary>
/// Registers an object factory with the container. The factory is called
/// when the particular object type is requested. The factory can decide whether to
/// cache object instances it returns or not, based on its policy.
/// </summary>
/// <param name="objectType"></param>
/// <param name="objectFactory"></param>
/// <summary>
/// Registers an object instance for the specified object type.
/// </summary>
/// <param name="objectType">The type that can be used to lookup the specified object instance.</param>
/// <param name="objectInstance">The object instance to use.</param>
/// <summary>
/// Raises the specified event. The type of the event arguments is used to determine
/// which subscribers the event is routed to.
/// </summary>
/// <param name="eventArgs">The event arguments containing event-specific data.</param>
// TODO: Handle the case where a subscriber unsubscribes while we're iterating
//       Should we do it here by copying/cloning the list, or should we handle it
//       by completing unsubscribe asynchronously?
/// <summary>
/// Subscribes to the specified type of events. The resulting cookie can be used for
/// unsubscribing.
/// </summary>
/// <param name="eventType">The type of the event.</param>
/// <param name="eventHandler">The event handler to invoke when the specified event type is raised.</param>
/// <returns></returns>
// The subscription cookie we use is an object with the two strings
// identifying the event handler uniquely - the event type key used to index
// into the top-level event handlers key/value pair list, and the handler key
// (as generated above) to index into the event-type-specific key/value pair list.
// Keep these in sync with Unsubscribe...
/// <summary>
/// Unsubcribes from a previously subscribed-to event type.
/// </summary>
/// <param name="subscriptionCookie">The subscription cookie.</param>
// Application.Services.cs
// Script#/FX/Sharpen/Core
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// Registers a service type.
/// </summary>
/// <param name="name">The name of the service.</param>
/// <param name="serviceImplementationType">The type providing the implementation of the service.</param>
/// <param name="serviceType">The type of the service.</param>
// TODO: Add support for deferred loading of service implementation, where
//       the service gets included later, even though it is declared at the
//       page level.
// Application.Templates.cs
// Script#/FX/Sharpen/Core
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// Compiles a template instance from the specified template type and content.
/// </summary>
/// <param name="type">The template engine to use to compile the template.</param>
/// <param name="content">The template content.</param>
/// <param name="options">Any options to be passed to the template engine.</param>
/// <returns>The newly compiled template instance.</returns>
/// <summary>
/// Gets a template instance from the specified template name. The specified name
/// is used to lookup a script element with a matching id.
/// </summary>
/// <param name="name">The name to lookup a template.</param>
/// <returns>The template instance if the associated element could be found and successfully parsed.</returns>
// TODO: Should we allow plugging in a template selector callback?
//       We would need to have a value parameter to pass in the data value into GetTemplate.
// Check if there is a previously parsed or registered template
// Parse the template using the associated template engine
// Cache the newly parsed template for future use
/// <summary>
/// Registers a template with the specified name.
/// </summary>
/// <param name="name">The name of template.</param>
/// <param name="template">The template to be used.</param>
/// <summary>
/// Registers a template engine. The supplied name is used to match against the
/// mime type attribute on a template script element.
/// </summary>
/// <param name="name">The name of template engine.</param>
/// <param name="engine">The engine to be used to handle the supplied name.</param>
// Behavior.cs
// Script#/FX/Sharpen/Core
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// Represents a script objects that can be attached to an Element to
/// extend its standard functionality.
/// </summary>
/// <summary>
/// Gets the element that this behavior is attached to.
/// </summary>
/// <summary>
/// Disposes a behavior by detaching itself from its associated element.
/// When overriding this, be sure to call the base functionality at the after the implementation
/// in the derived class.
/// </summary>
// First remove the expando corresponding to this behavior on the element.
// Next remove this behavior from the key/value pair list of all behaviors
// being maintained on the element.
/// <summary>
/// Gets a behavior instance attached to the specified element if one exists.
/// </summary>
/// <param name="element">The element to lookup.</param>
/// <param name="behaviorType">The type of the behavior to lookup.</param>
/// <returns></returns>
// Find the first matching behavior by enumerating the key/value pair
// list of behaviors on the element.
/// <summary>
/// Initializes a behavior by attaching it to the specified element.
/// When overriding this, be sure to call the base functionality before the implementation
/// in the derived class.
/// </summary>
/// <param name="element">The element to attach the behavior to.</param>
/// <param name="options">Any initialization options that the behavior should consume.</param>
// Automatically expose the behavior on the DOM element as an expando using
// the name of the behavior as the key.
// Add a 'behaviors' expando on the element which is a key/value pair
// list of behavior name -> behavior instance mapping.
// Set data-behavior on the element if it is not already set (i.e. if the behavior
// is being programmatically constructed), so that if DisposeBehaviors is called,
// then this element is picked up via the CSS query used to find elements that have
// behaviors.
// BehaviorRegistration.cs
// Script#/FX/Sharpen/Core
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// Binder.cs
// Script#/FX/Sharpen/Core
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// A binder is an object that performs the work of binding an expression value
/// with the associated DOM element.
/// </summary>
// BinderFactory.cs
// Script#/FX/Sharpen/Core
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// Creates an expression binder given an element, the bound property and
/// the expression to bind to.
/// </summary>
/// <param name="element">The element that is bound.</param>
/// <param name="property">The property on the element that is bound.</param>
/// <param name="expression">The expression to bind to.</param>
/// <returns>The binder that was created. If no binder needs to be created, the return value is null.</returns>
// BinderManager.cs
// Script#/FX/Sharpen/Core
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// Expression.cs
// Script#/FX/Sharpen/Core
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// Represents the base class for all expressions. Expressions represent
/// a value, and optionally a value that can change after being read (in which
/// case, it provides a mechanism to subscribe for changes)
/// </summary>
/// <summary>
/// Initializes and instance of an Expression.
/// </summary>
/// <param name="value">The initial value of the expression.</param>
/// <param name="canChange">Whether the expression represents a value that can change.</param>
/// <summary>
/// Gets whether the expression represents a value that can change.
/// </summary>
/// <summary>
/// Gets the current value of the expression.
/// </summary>
/// <returns>The current value.</returns>
/// <summary>
/// Sets the value of the expression. Most expressions are read-only and ignore
/// this call, but some expressions do support the ability to write back.
/// </summary>
/// <param name="value">The new value of the expression.</param>
// By default expressions are read-only, so they ignore SetValue calls
// TODO: Should there be a IsReadOnly property?
/// <summary>
/// Allows a consumer of the expression to subscribe to change notifications.
/// </summary>
/// <param name="changeCallback">The callback to be invoked.</param>
/// <summary>
/// Updates the value represented by the expression.
/// </summary>
/// <param name="value">The new value of the expression.</param>
/// <param name="notify">Whether to notify the subscriber of the change.</param>
// ExpressionFactory.cs
// Script#/FX/Sharpen/Core
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// Creates an expression given a model object and a string representation of the
/// expression.
/// </summary>
/// <param name="model">The model object to be used for binding purposes.</param>
/// <param name="expressionType">The type of expression.</param>
/// <param name="value">The string representation of the expression.</param>
/// <returns>An expression object.</returns>
// OptionsParser.cs
// Script#/FX/Sharpen/Core
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// Find the following types of string sequences:
// Literals (true, false, null, numbers
// Strings (either single-quoted, or double-quoted)
//         (note, we don't handle nested quotes)
// Element references (either #id, or .class)
// Syntax (comma for name/value separators, square brackets
//         for arrays, curly braces for nested objects)
// Names (sequence of alphanumerics followed by a ':')
// Options can be specified using a pseudo-JSON/css-esque syntax
// as the value of a data-<name> attribute on the element.
// Vanilla JSON object
// Treat it as our pseudo-JSON/CSS-esque syntax which requires a bit of rewriting
// before it can be parsed as JSON.
// Create an empty object if no options were declaratively specified.
/*, string simpleValue, string stringValue, string elementReference, string separator, string name */) {
// Matches single and double quoted strings
// JSON strings are always double quoted, and additionally
// escape any double quotes within.
// ID references require resolution at JSON parse time
// Convert them to strings, so they can be parsed as valid JSON first.
// Matches a name followed by ":"
// In JSON, names must be double quoted
// Finally turn this into a JSON object, by wrapping with curly braces
// ServiceRegistration.cs
// Script#/FX/Sharpen/Core
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// Template.cs
// Script#/FX/Sharpen/Core
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// Creates an instance of the markup represented by this template.
/// </summary>
/// <param name="data">The data that is associated with the template instance.</param>
/// <param name="index">The index of the template if the template is being instantiated in a repeated fashion.</param>
/// <param name="context">Any additional contextual information that should be passed into the template.</param>
/// <returns>The markup instance.</returns>
// TemplateEngine.cs
// Script#/FX/Sharpen/Core
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// Creates an instance of a template from the specified content.
/// </summary>
/// <param name="content">The content representing the template.</param>
/// <param name="options">Any options associated with the template.</param>
/// <returns>The template instance.</returns>
// BindExpression.cs
// Script#/FX/Sharpen/Core
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// Implementation of an expression that binds to a value off the model and
/// tracks changes by virtue of being an observer.
/// </summary>
/* canChange */ true) {
/* notify */ false);
/* notify */ true);
// TODO: Error handling (logging + breakpoint if debugger attached)
// TODO: Error handling (logging + breakpoint if debugger attached)
// ContentBinder.cs
// Script#/FX/Sharpen/Core
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// Binds the content (textContent/innerHTML) of element to an expression.
/// </summary>
// Convert the value into a string if it isn't already... do this with a template
// if one is specified, or resort to ToString as a fallback.
/* index */ 0, /* context */ null);
// Raise contentUpdating event, so it allows any behaviors attached to this
// element to be notified
/* canBubble */ false, /* canCancel */ false, null);
// Deactivate the content, in case current content has attached behaviors or bindings.
/* contentOnly */ true);
// Update the element with the new value.
// If the property that was updated was the innerHTML, then activate any
// binding expressions or behaviors that might have been specified within the
// new markup.
/* contentOnly */ true, binderManager.Model);
// Raise contentUpdated event, so it allows any behaviors attached to this
// element to be notified
/* canBubble */ false, /* canCancel */ false, null);
// EventBinder.cs
// Script#/FX/Sharpen/Core
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// Binds an event of an element to the value of an expression.
/// </summary>
// PropertyBinder.cs
// Script#/FX/Sharpen/Core
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// This binds the property of an object to the value of an expression, and
/// updates the object as the expression's value changes.
/// </summary>
// ValueBinder.cs
// Script#/FX/Sharpen/Core
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// Binds the value property of an input element to an expression.
/// This binder supports two-way binding.
/// </summary>
// VisibilityBinder.cs
// Script#/FX/Sharpen/Core
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// Binds the visibility of an element to an expression.
/// </summary>
// AssemblyInfo.cs
// Script#/FX/Sharpen/Core
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
//www.scriptsharp.com")]
/*! {name}.js {version}
// Page.cs
//
/* newPhotos */ true);
/* newPhotos */ false);
/* newPhotos */ false);
/* newPhotos */ false);
// PageModel.cs
//
// Photo.cs
//
// Model.cs
//
// Model.cs
//
// Utility.cs
//
// Photo.cs
//
/// <summary>
/// Represents a geo-tagged photo along with various bits of metadata.
/// </summary>
/// <summary>
/// The ID of the photo.
/// </summary>
/// <summary>
/// The text description of the photo.
/// </summary>
/// <summary>
/// The URL of the page associated with the photo.
/// </summary>
/// <summary>
/// The URL of the thumbnail of the photo.
/// </summary>
/// <summary>
/// The URL of the image itself.
/// </summary>
/// <summary>
/// The width of the photo.
/// </summary>
/// <summary>
/// The height of the photo.
/// </summary>
/// <summary>
/// The latitude part of the geo-tag information.
/// </summary>
/// <summary>
/// The longitude part of the geo-tag information.
/// </summary>
/// <summary>
/// The set of tags associated with the photo.
/// </summary>
// Graph.cs
//
// GraphEdge.cs
//
// GraphLayout.cs
//
// lastMaxMotion / maxMotion-1
// A low damper value causes the graph to move slowly; as
// layout proceeds, the damper value decreases.
// Rigidity has the same effect as the damper, except that it's a constant.
// A low rigidity value causes things to go slowly.
// A value that's too high will cause oscillation.
// Allow's tracking the fastest moving node to see if the graph is stabilizing
// The damper slows things down.  It cuts down jiggling at the last moment, and optimizes
// layout. As an experiment, get rid of the damper in these lines, and make a
// long straight line of nodes. It wiggles too much and doesn't straighten out.
// Slow down, but dont stop. Nodes in motion store momentum. This helps when the force
// on a node is very low, but you still want to get optimal layout.
// How far did the node actually move?
// Don't move faster then 30 units at a time.
// Stops severed nodes from flying away?
// Subtract 1 to make a positive value that implies that
// things are moving faster
// Only damp when the graph starts to move faster
// When there is noise, you damp roughly half the time. (Which is a lot)
// If things are slowing down, then you can let them do so on their own,
// without damping.
// If maxMotion < 0.2, damp away
// If by the time the damper has gone down to 0.9, and
// maxMotion is still > 1, then damp away
// We never want the damper to be negative though.
// If we've slowed down significanly, damp more aggresively
// If max motion is pretty high, and we just started damping,
// then only damp slightly
// Pull nodes closes together by 'relaxing' each edge
// Rigidity makes edges tighter
// Edges pull directly in proportion to the distance between the nodes. This is good,
// because we want the edges to be stretchy.  The edges are ideal rubberbands.  They
// They don't become springs when they are too short. That only causes the graph to
// oscillate.
// TODO: 36 should be a property instead of hardcoded
// This is the radius of a node.
// If two nodes are right on top of each other, separate them
// apart randomly
// 600 * 600, because we don't want deleted nodes to fly too far away
// If it was sqrt(len) then a single node surrounded by many others will
// always look like a circle.  This might look good at first, but I think
// it makes large graphs look ugly + it contributes to oscillation.  A
// linear function does not fall off fast enough, so you get rough edges
// in the 'force field'
// Stabilize the graph, but do so gently by setting the damper
// to a low value
// GraphNode.cs
//
// AssemblyInfo.cs
//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
// Base58.cs
//
// FlickrService.cs
//
//api.flickr.com/services/rest/?method=flickr.photos.search&api_key={0}&tags={1}&tag_mode=all&has_geo=1&sort=interestingness-desc&safe_search=1&extras=o_dims%2Curl_sq%2Curl_m%2Cgeo%2Ctags&bbox={2}%2C{3}%2C{4}%2C{5}&per_page=20&format=json";
//api.flickr.com/services/rest/?method=flickr.photos.search&api_key={0}&tags={1}&has_geo=true&sort=interestingness-desc&safe_search=1&extras=o_dims%2Curl_sq%2Curl_m%2Cgeo%2Ctags&lat={2}&lon={3}&per_page=20&format=json";
//flic.kr/p/" + Base58.Encode(photo.ID);
// HtmlStorageService.cs
//
// IFlickrService.cs
//
// IStorageService.cs
//
// MockFlickrService.cs
//
// PageModelTests.cs
//
// DefaultTests.cs
//
// This starts the web server rooted at the specified directory
// on http://localhost:<port>
// AssemblyInfo.cs
//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
// AssemblyInfo.cs
//
// MapApplication.cs
//
/* useCapture */ false);
// MapPage.cs
//
// AssemblyInfo.cs
//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
// Twitter.cs
//
// https://dev.twitter.com/anywhere/begin
// AssemblyInfo.cs
//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
// CellarApplication.cs
//
// Page.cs
//
// Wine.cs
//
// WineResults.cs
//
// AssemblyInfo.cs
//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
// A script template using an AMD pattern for declaring dependencies consumed
// by the generated script.
/*! {name}.js {version}
// CellarApplication.cs
//
// Server.cs
//
//user:password@host:port/database");
// WinesController.cs
//
// Wine.cs
//
// AssemblyInfo.cs
//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
// A script template allows customization of the generated script.
// {name}.js {version}
// IWineRepository.cs
//
// MongoWineRepository.cs
//
// Fish.cs
//
// Stop fish from swimming straight up or down
// Face the fish the right way if angle is between 6 o'clock and 12 o'clock
// Calculate next position of fish
// If fish is going to move off right side of screen
// If angle is between 3 o'clock and 6 o'clock
// If angle is between 12 o'clock and 3 o'clock
// If fish is going to move off left side of screen
// If angle is between 6 o'clock and 9 o'clock
// If angle is between 9 o'clock and 12 o'clock
// If fish is going to move off bottom side of screen
// If angle is between 3 o'clock and 9 o'clock
// If fish is going to move off top side of screen
// If angle is between 9 o'clock and 3 o'clock
// If fish is going too far (getting too small)
// If fish is getting to close (getting too large)
// Don't let fish get too tiny
// Draw the fish
// Move the fish to where it is within the fish tank
// Make the fish bigger or smaller depending on how far away it is.
// Make the fish face the way it is swimming.
// Increment to next state
// Go through each cell in the animation
// Go back down once we hit the end of the animation
// FishTank.cs
//
// Show just a portion of the background image, since the window is
// smaller than the background
// Tile the background image horizontally if the window is wider than
// the background
// FishTankApplication.cs
//
/* useCapture */ false);
// AssemblyInfo.cs
//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
// {name}.js
//
// Class1.cs
//
// HelloPage.cs
//
// AssemblyInfo.cs
//
// A script template allows customization of the generated script.
/*! {name}.js {version}
// Generated with Script# {compiler}
// AssemblyInfo.cs
//
// FlickrPhotoService.cs
//
//api.flickr.com/services/rest/?method=flickr.photos.search&api_key={0}&tags={1}&sort=interestingness-desc&safe_search=1&extras=o_dims%2Curl_sq%2Curl_m%2Curl_t&per_page={2}&format=json";
//flic.kr/p/" + Base58Encode(photoResult.ID),
// IPhotoService.cs
//
// Photo.cs
//
/// <summary>
/// Represents a geo-tagged photo along with various bits of metadata.
/// </summary>
// Flickr.cs
//
//api.flickr.com/services/rest/?method=flickr.photos.search&api_key=be9b6f66bd7a1c0c0f1465a1b7e8a764&tags={0}&per_page={1}&sort=interestingness-desc&safe_search=1&content_type=1&in_gallery=true&extras=o_dims%2Curl_sq%2Curl_m&format=json&jsoncallback={2}";
// Json.cs
//
// AssemblyInfo.cs
//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
// PhotoGridPage.cs
//
// AssemblyInfo.cs
//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
// A script template using an AMD pattern for declaring dependencies consumed
// by the generated script.
/*! {name}.js {version}
// GalleryPlugin.cs
//
// ListPage.cs
//
// AssemblyInfo.cs
//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
// A script template using an AMD pattern for declaring dependencies consumed
// by the generated script.
/*! {name}.js {version}
// ListBuilderTests.cs
//
// MockFlickrService.cs
//
// GalleryPluginTests.cs
//
// This starts the web server rooted at the specified directory
// on http://localhost:<port>
// AssemblyInfo.cs
//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
// AssemblyInfo.cs
//
// PhotoTilesPage.cs
//
// AssemblyInfo.cs
//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
// A script template using an AMD pattern for declaring dependencies consumed
// by the generated script.
/*! {name}.js {version}
// Isotope.cs
//
// TODO: Define methods...
// Isotope.cs
//
// Isotope.cs
//
// AssemblyInfo.cs
//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
// TodoApplication.cs
//
/* completed */ false);
// TodoItem.cs
//
// TodoList.cs
//
// AssemblyInfo.cs
//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
/*! {name}.js
/*! Generated with Script# */
// AssemblyInfo.cs
//
// App.cs
//
// CommandHandler.cs
//
// WebCommand.cs
//
/*";
/* parseQueryString */ true);
// WebRequest.cs
//
// WebResponse.cs
//
// AssemblyInfo.cs
//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
// A script template allows customization of the generated script.
// {name}.js {version}
// ScriptSharp.cs
// Script#/Common
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
//www.scriptsharp.com")]
// FileInputStreamSource.cs
// Script#/Core
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// FileOutputStreamSource.cs
// Script#/Core
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// ResourceFile.cs
// Script#/Core
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// ResXItem.cs
// Script#/Core
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// ResXParser.cs
// Script#/Core
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// Application.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
//projects.nikhilk.net/ScriptSharp.
// TODO: This is a hack... something in the .net 4 build system causes
//       generation of an AssemblyAttributes.cs file with fully-qualified
//       type names, that we can't handle (this comes from multitargeting),
//       and there doesn't seem like a way to turn it off.
// TODO: This is a hack... something in the .net 4 build system causes
//       System.Core.dll to get included [sometimes].
//       That shouldn't happen... so filter it out here.
/* message */ String.Empty);
// DEBUG
// CommandLine.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// AssemblyInfo.cs
// Script#/Tools/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// ResXCodeBuilder.cs
// Script#/Core/Build
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
//------------------------------------------------------------------------------
// <auto-generated>
// Resources.g.cs
// Do not edit directly. This file has been auto-generated from .resx resources.
// </auto-generated>
//------------------------------------------------------------------------------
/// <summary>{0} resources class</summary>", className);
/// <summary>{0}</summary>", resourceItem.Comment);
// AssemblyInfo.cs
// Script#/Tools/Build
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// ResXCodeGeneratorTask.cs
// Script#/Core/Build
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// ScriptCompilerExecTask.cs
// Script#/Core/Build
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// The Script# MSBuild task corresponding exactly to functionality exposed
/// by the command-line tool.
/// </summary>
// TODO: This is a hack... something in the .net 4 build system causes
//       System.Core.dll to get included [sometimes].
//       That shouldn't happen... so filter it out here.
// Either the item locale matches, or the item locale is a prefix
// of the locale (eg. we want to include "fr" if the locale specified
// is fr-FR)
// TODO: This is a hack... something in the .net 4 build system causes
//       generation of an AssemblyAttributes.cs file with fully-qualified
//       type names, that we can't handle (this comes from multitargeting),
//       and there doesn't seem like a way to turn it off.
// ScriptCompilerTask.cs
// Script#/Core/Build
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// The Script# MSBuild task.
/// </summary>
/* includeTests */ false, /* minimize */ false,
// Only copy references once (when building language neutral scripts)
/* includeTests */ true, /* minimize */ false,
/* copyReferences */ false);
/* includeTests */ false, /* minimize */ true,
/* copyReferences */ false);
// Create the neutral culture scripts first, and if that 
// succeeds, compile any localized variants that are supposed
// to be generated.
/* locale */ String.Empty)) {
// Inspect the list of resources to create the list of unique locales
// TODO: This is a hack... something in the .net 4 build system causes
//       System.Core.dll to get included [sometimes].
//       That shouldn't happen... so filter it out here.
// Either the item locale matches, or the item locale is a prefix
// of the locale (eg. we want to include "fr" if the locale specified
// is fr-FR)
// TODO: This is a hack... something in the .net 4 build system causes
//       generation of an AssemblyAttributes.cs file with fully-qualified
//       type names, that we can't handle (this comes from multitargeting),
//       and there doesn't seem like a way to turn it off.
// If the file already exists, make sure it is not read-only, so
// it can be overrwritten.
/* overwrite */ true);
// Copy the file, and then make sure it is not read-only (for example, if the
// source file for a referenced script is read-only).
/* minimized */ false);
/* minimized */ true);
// CompilerOptions.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// Script# compiler options.
/// </summary>
// TODO: Get rid of internal test mode/type...
// IErrorHandler.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// IStreamSource.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// IStreamSourceResolver.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// ScriptCompiler.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// The Script# compiler.
/// </summary>
// Check if any of the types defined in this assembly conflict.
// Skip the check for types that are marked as imported, as they
// aren't going to be generated into the script.
// Delegates are implicitly imported types, as they're never generated into
// the script.
// Skip the check for partial types, since they should only be
// checked once.
// TODO: We could allow conflicting types as long as both aren't public
//       since they won't be on the exported types list. Internal types that
//       conflict could be generated using full name.
// Capture whether there are any test types in the project
// when not compiling the test flavor script. This is used to determine
// if the test flavor script should be compiled in the build task.
// DEBUG
/* useInheritanceOrder */ true);
// DEBUG
// DEBUG
// TODO: This is a hack... to make generated node.js scripts
//       be able to reference the 'scriptsharp' node module.
//       Fix this in a better/1st class manner by allowing
//       script assemblies to declare such things.
// ScriptInfo.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// ScriptReference.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// Utility.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// Current keywords
// Future reserved words
// Script#-specific words
// Some exceptions that simply need to be special cased
// Name is all upper case, or all lower case;
// leave it as-is.
// Convert the leading uppercase segment, except the last character
// which is assumed to be the first letter of the next word
// Convert the leading upper case character to lower case
/* testCamelCase */ false);
// Append the unhandled characters (that do not require special treament)
// to the string builder when special characters are detected.
// CodeModelBuilder.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// This ensures in file paths are just file names in test output.
// DEBUG
/* includeComments */ false);
// CodeModelProcessor.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// IParseNodeHandler.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// Modifiers.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// Modifiers for types and their _members.
/// </summary>
// valid flags by member type
// ParseNode.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// The root of the parse tree hierarchy.
/// Note that any ParseNode can be treated as a ListTree.
/// A null value corresponds to an empty list. A non-ListTree
/// ParseNode is a list of 1 element. While a ListTree is used
/// for lists containing more than 1 element.
/// </summary>
// ParseNodeList.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// ParseNodeType.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// List of parse node types.
/// </summary>
// AttributeBlockNode.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// AttributeNode.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// AttributeTargets.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// Locations which an attribute section can target.
/// </summary>
// AnonymousMethodNode.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// NOTE: Not supported in conversion
// ArrayInitializerNode.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// ArrayNewNode.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// BaseNode.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// ExpressionNode.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// CastNode.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// ConditionalNode.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// ExpressionNode.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// NOTE: Not supported in conversion
// ExpressionListNode.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// ExpressionNode.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// LiteralNode.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// NewNode.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// ExpressionNode.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// NOTE: Not supported in conversion
// StackAllocNode.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// NOTE: Not supported in conversion
// ThisNode.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// TypeofNode.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// UnaryExpressionNode.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// VariableInitializerNode.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// AccessorNode.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// Accessor.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// ConstantFieldDeclarationNode.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// ConstructorDeclarationNode.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/* return type */ null, name, formals, body) {
// DestructorDeclarationNode.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// NOTE: Not supported in conversion
/* return type */ null, name, new ParseNodeList(), body) {
// EnumerationFieldNode.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// TODO: Clearly we need something more general...
//       C# allows expressions. Likely expressions to be used
//       include negative values, binary OR'd values,
//       expressions involving other enum members (esp. hard to deal with)
// For now, just adding support for negative numbers, as
// everything else can be worked around in source code.
// EventDeclarationNode.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// FieldDeclarationNode.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// IndexerDeclarationNode.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// MemberNode.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// MethodDeclarationNode.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// OperatorDeclarationNode.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// NOTE: Not supported in conversion
/* name */ null, formals, body) {
// ParameterFlags.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// Modifiers on a formal parameter.
/// </summary>
// ParameterNode.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// PropertyDeclarationNode.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// AliasQualifiedNameNode.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// AtomicNameNode.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// GenericNameNode.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// MultiPartNameNode.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// NameNode.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// BlockStatementNode.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// BreakNode.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// CaseLabelNode.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// CatchNode.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// CheckedNode.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// NOTE: Not supported in conversion
// ConstantDeclarationNode.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// ContinueNode.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// DefaultLabelNode.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// DoWhileNode.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// EmptyStatementNode.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// ExpressionStatementNode.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// FixedNode.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// NOTE: Not supported in conversion
// ForeachNode.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// NOTE: Not supported in conversion
// ForNode.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// GotoNode.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// NOTE: Not supported in conversion
// IfElseNode.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// LabeledStatementNode.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// NOTE: Not supported in conversion
// LockNode.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// NOTE: Not supported in conversion
// ReturnNode.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// StatementNode.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// SwitchNode.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// SwitchSectionNode.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// ThrowNode.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// TryNode.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// UncheckedNode.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// NOTE: Not supported in conversion
// UnsafeNode.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// NOTE: Not supported in conversion
// UsingNode.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// NOTE: Not supported in conversion
// VariableDeclarationNode.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// WhileNode.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// YieldBreakNode.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// NOTE: Not supported in conversion
// YieldReturnNode.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// NOTE: Not supported in conversion
// BooleanToken.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// CharToken.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// CommentTokenType.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// CommentTokenType.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// DecimalToken.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// DoubleToken.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// FloatToken.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// IdentifierToken.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// IntToken.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// LiteralToken.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// LiteralTokenType.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// LongToken.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// NullToken.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// StringToken.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// Token.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// TokenFlags.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// TokenInfo.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// TokenType.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// The list of valid token types.
/// NOTE: Must keep this list in sync with the Token static constuctor.
/// </summary>
// must be last
// UIntToken.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// ULongToken.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// ArrayTypeNode.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// CompilationUnitNode.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// Top-level type nodes are turned into children of a namespace with
// an empty name.
// CustomTypeNode.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// DelegateTypeNode.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// NOTE: Ignored in conversion
// ExternAliasNode.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// NOTE: This is supported in conversion
// IntrinsicTypeNode.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// NamespaceNode.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// PointerTypeNode.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// NOTE: Not supported in conversion
// TypeNode.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// TypeParameterConstraintNode.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// TypeParameterNode.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// NOTE: Ignored in conversion
// UserTypeNode.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// UsingAliasNode.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// UsingNamespaceNode.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// CodeBuilder.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// Ignore test types, if tests are not to be compiled
/* adder */ true);
/* adder */ false);
/* getter */ true);
/* getter */ false);
/* getter */ true);
/* getter */ false);
// ExpressionBuilder.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/* explicitReference */ true);
/* isEventAddOrRemove */ true);
// For properties, we need to expand out the += and -= into a get, followed by
// the + or - operation and then a set with the resulting value
/* getter */ false);
/* getOrAdd */ (node.Operator != TokenType.Equal));
// For bitwise operators involving boolean expressions, we perform
// a type coercion due to behavioral differences between C# and JavaScript.
// Example:
//     var result = true & true;
//     actual: result === 1
//     expected: result === true
// Map "x op y" to "(x op y) === 1"
// Map "x op= y" to "x = (x op y) === 1"
// Since y above can be a complex expression, add parentheses around it to ensure
// proper operator precedence.
// Comparisons with null are mapped to the less-strict comparison operator
// to handle undefined as well.
// Map equality comparison between Date objects to a call to
// Script.CompareDates
// Switch to unsigned shift operator for unsigned types (which happens
// to be set up to follow the signed operator in the enumeration offset by 1)
// A float or double is being cast to an int
// In regular .net this causes a truncation to happen, and we'd like
// to preserve that behavior.
// We're just going to force the resulting expression to use the more
// specific type, rather than the generic type, and have that percolate through
// the rest of the expression tree.
// We didn't successfully create an expression. The first pass attempted to
// process the right child as an instance member of the left child expression.
// We need to process the left child again as a type so we can process the
// right child as a static member this time around.
// Nullable<T>.Value becomes Nullable<T>
// Nullable<T>.Value becomes Script.IsValue(Nullable<T>)
// type.Name becomes ss.typeName(type)
// Nullable<T>.GetValueOrDefault() becomes Nullable<T> || 0|false
// TODO: When inside a static method, we should only lookup static members
// TODO: Does C# allow access to private/protected members if the type of the member is
//       the same as the class context?
/* explicitReference */ false),
// If its an instantiation of a delegate, return the argument itself
// which is already a delegate expression.
// The delegate type itself does not have a runtime representation that
// is instantiated.
// We need parenthesis if we are declaring an inline function, ie
// Callback c = new Callback(delegate {}); --> var c = (function () {});
// But not for:
// Callback c = new Callback(this.callback); --> var c = this._callback;
// The function ctor in javascript takes parameters in
// reverse order, with the params array effectively at
// the start of the param list... in c# we must keep the params
// list at the end, so skip the first parameter, add the rest,
// and then add back the first parameter (the body of the
// function). Uggh!
// Creating a new Nullable<T> ... if there is a value specified as a ctor param,
// just use the value; otherwise use undefined.
// Handle the implicit delegate invoke scenario by turning the expression
// into an explicit call into the delegate's Invoke method
// A method call was evaluated into a non-member expression as part of building
// the left node. For example, Nullable<T>.GetValueOrDefault() becomes a logical or expression.
// REVIEW: Uggh... this has become too complex over time with all the transformations
//         added over time. Refactoring needed...
// A non-method member is being used in a method call; the member must be
// a delegate...
// The member being accessed is a method...
// This is a bit dangerous - GetEnumerator on any type gets mapped to
// Script.Enumerate. This actually somewhat matches c# semantics, where you
// can perform a foreach on any type that has a GetEnumerator method, rather
// than only types that implement IEnumerable.
// No-op ToString calls on strings (this happens when performing a ToString
// on a named enum value.
// If the enum value is a named enum, then it is already a string.
// Switch the instance Remove method on Dictionary to
// calls to the delete operator.
// Dictionary.GetDictionary is a no-op method; we're just interested
// in the object being passed in.
// However we'll re-evaluate the argument to be of dictionary type
// so that subsequent use of this expression sees it as a dictionary.
// Convert a call to Script.Literal into a literal expression
// TODO: When we start raising errors at the expression level instead of the statement
//       level, we should return an ErrorExpression instead of a dummy expression.
// Check whether the script is a valid string format string
// When using the result of a method call/property access directly
// with Type.CreateInstance, the following script would be generated:
//
// new method()()
// which is invalid. Instead we need to generate the following:
// var type = method();
// new type()
// Switch explicit late-bound calls into implicit late-bound expressions
// in script
// GetScriptType only takes an instance
// Switch Arguments.GetArgument into Arguments[]
// Switch Arguments.ToArray into Array.ToArray(arguments)
/* parenthesize */ false);
// array.Clear() becomes array.length = 0 in generated code
// array.Contains(item) becomes array.indexOf(item) >= 0
// array.Insert(index, item) becomes array.splice(index, 0, item);
// array.RemoveAt(index) becomes array.splice(index, 1)
// array.RemoveRange(index, count) becomes array.splice(index, count)
// array.GetRange(index, count) becomes array.slice(index, index + count)
/* explicitReference */ true);
/* getOrAdd */ true, /* isEventAddOrRemove */ false);
/* isEventAddOrRemove */ false);
// For enum types defined within the same assembly, simply use the literal value.
// Same goes for any enums marked as numeric values
// For enum types imported for another assembly
// Create a this expression, because "this" works just as well as base.
// It is explicit, because the base was explicit.
/* explicitReference */ true),
// Create a new type expression because a static member
// of the base type is being used.
// Change "this" references inside struct ctor code to "$o"
// Convert String.Empty to literal expression
// When the field corresponding to an event whose accessors are auto-generated is
// referenced, we need to hunt for a special generated field name (this is the
// field that is added to the class).
// Create a this expression, because "this" works just as well as base.
// It is explicit, because the base was explicit.
/* explicitReference */ true),
// ImplementationBuilder.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// For property getters (including indexers), we don't add the last parameter,
// which happens to be the "value" parameter, which only makes sense
// for the setter.
/* addParameters */ true);
/* addParameters */ true);
// The default for named values is null, so this only applies to
// regular enum types
/* hasInitializer */ true);
/* isFragment */ true));
/* addAllParameters */ true);
/* addAllParameters */ true);
/* addAllParameters */ false);
/* addAllParameters */ true);
/* addAllParameters */ false);
/* addAllParameters */ true);
// MetadataBuilder.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/* hasInitializer */ true);
// TODO: Handle other constant cases that can be evaluated at compile
//       time (eg. combining enum flags)
// Don't build interface associations for non-primary partial classes.
// Mark the method as abstract, as there is no actual implementation of the method
// to be generated
// Extern methods are there for defining overload signatures, so
// we just skip them as far as metadata goes. The validator has
// taken care of the requirements/constraints around use of extern methods.
// If the type is an imported type, then it is allowed to contain
// overloads, and we're simply going to ignore its existence, as long
// as one overload has been added to the member table.
// Add a private field that will serve as the backing member
// later on in the conversion (eg. in non-event expressions)
// Build all the types first.
// Types need to be loaded upfront so that they can be used in resolving types associated
// with members.
// Add parent namespaces as imports in reverse order since they
// are searched in that fashion.
// Build type symbols for all user-defined types
/* context */ null, SymbolFilter.Types);
// This class will be considered as a partial class
// Merge code model information for the partial class onto the code model node
// for the primary partial class. Interesting bits of information include things
// such as base class etc. that is yet to be processed.
// Merge interesting bits of information onto the primary type symbol as well
// representing this partial class
// Partial types don't get added to the namespace, so we don't have
// duplicated named items. However, they still do get instantiated
// and processed as usual.
//
// The members within partial classes refer to the partial type as their parent,
// and hence derive context such as the list of imports scoped to the
// particular type.
// However, the members will get added to the primary partial type's list of
// members so they can be found.
// Effectively the partial class here gets created just to hold
// context of type-symbol level bits of information such as the list of
// imports, that are consumed when generating code for the members defined
// within a specific partial class.
// Build inheritance chains
// Import members
// Associate interface members with interface member symbols
// Load resource values
// Load documentation
// Don't build type inheritance for non-primary partial classes.
// ResourceModelBuilder.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// Process resources in the order of neutral to most specific locale
// so that as string values are looked up and stored, the final value
// contains the most specific locale value.
// This is a somewhat hacky way to get the ordering right, without
// have to sort through sets of related resource files, and constructing
// a hierarchy in the right order.
// First handle all the locale-neutral resources
// Next handle all the language-only resource files
// Finally handle all the language+country resource files
// StatementBuilder.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/* preCondition */ false);
// This happens when the expression is a method call, and the method
// is debug conditional
/* preCondition */ true);
// CodeGenerator.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// DocCommentGenerator.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// No-op - no doc-comments get generated for enums.
/// {0}", trimmedLine);
/// <param name=\"{0}\"", parameterSymbol.GeneratedName);
/// </param>");
/// <param name=\"{0}\" type=\"Function\" />", eventSymbol.Parameters[0].Name);
/// <field name=\"{0}\"", fieldSymbol.GeneratedName);
/// </field>");
/// <value");
/// <returns");
/// <summary>");
/// </summary>");
// TODO: This is a dependency on Script.Web.dll that we should remove.
//       For now, changed SymbolSet.FindSymbol to handle the case
//       where a namespace being looked up might not be defined.
// ExpressionGenerator.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// Optimize generated script to perform loose equality checks for false-y values
// (null, false, 0, empty string)
// TODO: This should really be happening at compilation time, rather than generation
//       time. Because this is happening at generation time, we get something like
//       if (!!x) when if(x) would suffice just so we can get
//       foo(!!x) where foo is a method expecting a boolean.
//       Doing this at compilation time would allow handling if scenarios specially.
// If this method is to be skipped from generation, just generate the
// left-hand-side object reference, and skip everything past it, including
// the dot.
// MemberGenerator.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/* add */ true);
/* add */ false);
/* getter */ true);
/* getter */ false);
/* getter */ true);
/* getter */ false);
// ScriptGenerator.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// Nothing needs to be generated for delegate types.
// Internal enums can be skipped since their values have been inlined.
// Public enums marked as constants can also be skipped since their
// values will always be inlined.
// Sort the types, so similar types of types are grouped, and parent classes
// come before derived classes.
// Heuristic to turn on initial indent:
// The script template has a space prior to {script}, i.e. {script} is not the
// first thing on a line within the template.
// If types are different, then use the symbol type to
// similar types of types together.
// For classes, sort by inheritance depth. This is a crude
// way to ensure the base class for a class is generated
// first, without specifically looking at the inheritance
// chain for any particular type. A parent class with lesser
// inheritance depth has to by definition come first.
// ScriptTextWriter.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// StatementGenerator.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// ERROR: ");
// ERROR: at ");
// TestGenerator.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// TypeGenerator.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// NOTE: This is emitted last in the script file, and separate from the initial class definition
//       because it needs to be emitted after the class registration.
// PrivateInstance/Internal constant fields are omitted since they have been inlined
// TODO: We need to introduce the notion of a base class that only exists in the metadata
//       and not at runtime. At that point this check of IsTestClass can be generalized.
// No-op ... there is currently nothing to generate for a particular delegate type
// Nothing to generate for internal records with no explicit ctor
// No members on script modules, which only contain startup code
// " + typeSymbol.FullName);
// Interop.cs
// Script#/Core/ScriptSharp
// Copyright (c) Nikhil Kothari.
// Copyright (c) Microsoft Corporation.
// This source code is subject to terms and conditions of the Microsoft 
// Public License. A copy of the license can be found in License.txt.
//
// Use this mask to retrieve the type visibility information.
// Class is not public scope.
// Class is public scope.
// Class is nested with public visibility.
// Class is nested with private visibility.
// Class is nested with family visibility.
// Class is nested with assembly visibility.
// Class is nested with family and assembly visibility.
// Class is nested with family or assembly visibility.
// Use this mask to retrieve class layout information
// Class fields are auto-laid out
// Class fields are laid out sequentially
// Layout is supplied explicitly
// Use this mask to retrieve class semantics information.
// Type is a class.
// Type is an interface.
// Special semantics in addition to class semantics.
// Class is abstract
// Class is concrete and may not be extended
// Class name is special.  Name describes how.
// Implementation attributes.
// Class / interface is imported
// The class is Serializable.
// Use tdStringFormatMask to retrieve string information for native interop
// LPTSTR is interpreted as ANSI in this class
// LPTSTR is interpreted as UNICODE
// LPTSTR is interpreted automatically
// A non-standard encoding specified by CustomFormatMask
// Use this mask to retrieve non-standard encoding information for native interop. The meaning of the values of these 2 bits is unspecified.
// Flags reserved for runtime use.
// Initialize the class any time before first static field access.
// This ExportedType is a type forwarder.
// Runtime should check name encoding.
// Class has security associate with it.
// member access mask - Use this mask to retrieve accessibility information.
// Member not referenceable.
// Accessible only by the parent type.
// Accessible by sub-types only in this Assembly.
// Accessibly by anyone in the Assembly.
// Accessible only by type and sub-types.
// Accessibly by sub-types anywhere, plus anyone in assembly.
// Accessibly by anyone who has visibility to this scope.
// field contract attributes.
// Defined on type, else per instance.
// Field may only be initialized, not written to after init.
// Value is compile time constant.
// Field does not have to be serialized when type is remoted.
// field is special.  Name describes how.
// interop attributes
// Implementation is forwarded through pinvoke.
// Reserved flags for runtime use only.
// Runtime(metadata internal APIs) should check name encoding.
// Field has marshalling information.
// Field has default.
// Field has RVA.
// member access mask - Use this mask to retrieve accessibility information.
// Member not referenceable.
// Accessible only by the parent type.
// Accessible by sub-types only in this Assembly.
// Accessibly by anyone in the Assembly.
// Accessible only by type and sub-types.
// Accessibly by sub-types anywhere, plus anyone in assembly.
// Accessibly by anyone who has visibility to this scope.
// method contract attributes.
// Defined on type, else per instance.
// Method may not be overridden.
// Method virtual.
// Method hides by name+sig, else just by name.
// vtable layout mask - Use this mask to retrieve vtable attributes.
// The default.
// Method always gets a new slot in the vtable.
// method implementation attributes.
// Overridability is the same as the visibility.
// Method does not provide an implementation.
// Method is special.  Name describes how.
// interop attributes
// Implementation is forwarded through pinvoke.
// Managed method exported via thunk to unmanaged code.
// Reserved flags for runtime use only.
// Runtime should check name encoding.
// Method has security associate with it.
// Method calls another method containing security code.
// property is special.  Name describes how.
// Reserved flags for Runtime use only.
// Runtime(metadata internal APIs) should check name encoding.
// Property has default
// event is special.  Name describes how.
// Reserved flags for Runtime use only.
// Runtime(metadata internal APIs) should check name encoding.
// Marks end of a list
// Followed by type
// Followed by type
// Followed by TypeDef or TypeRef token
// Followed by TypeDef or TypeRef token
// Generic parameter in a generic type definition; represented as number
// type rank boundsCount bound1 ... loCount lo1 ...
// Generic type instantiation. Followed by type type-arg-count type-1 ... type-n
// System.IntPtr
// System.UIntPtr
// Followed by full method signature
// System.Object
// Single-dim array with 0 lower bound
// Generic parameter in a generic method definition;represented as number
// Required modifier : followed by a TypeDef or TypeRef token
// Optional modifier : followed by a TypeDef or TypeRef token
// Implemented within the CLI
// Ord with following element types
// Sentinel for vararg method signature
// Denotes a local variable that points at a pinned object
// default calling convention
// C calling convention
// Stdcall calling convention
// thiscall  calling convention
// fastcall calling convention
// vararg calling convention
// encodes a field
// used for the .locals directive
// used to encode a property
// used to indicate that the method has one or more generic parameters.
// used to encode the keyword instance in the calling convention
// used to encode the keyword explicit in the calling convention
// ParseTypeDefOrRefEncoded returns this as the out index type for typedefs
// ParseTypeDefOrRefEncoded returns this as the out index type for typerefs
// ParseTypeDefOrRefEncoded returns this as the out index type for typespecs
// STDMETHOD_(void, CloseEnum)(HCORENUM hEnum) PURE;
// STDMETHOD(CountEnum)(HCORENUM hEnum, ULONG *pulCount) PURE;
// STDMETHOD(ResetEnum)(HCORENUM hEnum, ULONG ulPos) PURE;
// STDMETHOD(EnumTypeDefs)(HCORENUM *phEnum, mdTypeDef rTypeDefs[],ULONG cMax, ULONG *pcTypeDefs) PURE;
/* must be 1 */,
// STDMETHOD(EnumInterfaceImpls)(HCORENUM *phEnum, mdTypeDef td, mdInterfaceImpl rImpls[], ULONG cMax, ULONG* pcImpls) PURE;
// STDMETHOD(EnumTypeRefs)(HCORENUM *phEnum, mdTypeRef rTypeRefs[], ULONG cMax, ULONG* pcTypeRefs) PURE;
// STDMETHOD(FindTypeDefByName)(           // S_OK or error.
//     LPCWSTR     szTypeDef,              // [IN] Name of the Type.
//     mdToken     tkEnclosingClass,       // [IN] TypeDef/TypeRef for Enclosing class.
//     mdTypeDef   *ptd) PURE;             // [OUT] Put the TypeDef token here.
// STDMETHOD(GetScopeProps)(               // S_OK or error.
//     LPWSTR      szName,                 // [OUT] Put the name here.
//     ULONG       cchName,                // [IN] Size of name buffer in wide chars.
//     ULONG       *pchName,               // [OUT] Put size of name (wide chars) here.
//     GUID        *pmvid) PURE;           // [OUT, OPTIONAL] Put MVID here.
// STDMETHOD(GetModuleFromScope)(mdModule* pmd) // [OUT] Put mdModule token here.
// STDMETHOD(GetTypeDefProps)(             // S_OK or error.
//     mdTypeDef   td,                     // [IN] TypeDef token for inquiry.
//     LPWSTR      szTypeDef,              // [OUT] Put name here.
//     ULONG       cchTypeDef,             // [IN] size of name buffer in wide chars.
//     ULONG       *pchTypeDef,            // [OUT] put size of name (wide chars) here.
//     DWORD       *pdwTypeDefFlags,       // [OUT] Put flags here.
//     mdToken     *ptkExtends) PURE;      // [OUT] Put base class TypeDef/TypeRef here.
// STDMETHOD(GetInterfaceImplProps)(       // S_OK or error.
//     mdInterfaceImpl iiImpl,             // [IN] InterfaceImpl token.
//     mdTypeDef   *pClass,                // [OUT] Put implementing class token here.
//     mdToken     *ptkIface) PURE;        // [OUT] Put implemented interface token here.
// STDMETHOD(GetTypeRefProps)(             // S_OK or error.
//     mdTypeRef   tr,                     // [IN] TypeRef token.
//     mdToken     *ptkResolutionScope,    // [OUT] Resolution scope, ModuleRef or AssemblyRef.
//     LPWSTR      szName,                 // [OUT] Name of the TypeRef.
//     ULONG       cchName,                // [IN] Size of buffer.
//     ULONG       *pchName) PURE;         // [OUT] Size of Name.
// STDMETHOD(ResolveTypeRef)(mdTypeRef tr, REFIID riid, IUnknown **ppIScope, mdTypeDef *ptd) PURE;
// STDMETHOD(EnumMembers)(                 // S_OK, S_FALSE, or error. 
//     HCORENUM    *phEnum,                // [IN|OUT] Pointer to the enum.    
//     mdTypeDef   cl,                     // [IN] TypeDef to scope the enumeration.   
//     mdToken     rMembers[],             // [OUT] Put MemberDefs here.   
//     ULONG       cMax,                   // [IN] Max MemberDefs to put.  
//     ULONG       *pcTokens) PURE;        // [OUT] Put # put here.    
// STDMETHOD(EnumMembersWithName)(         // S_OK, S_FALSE, or error.             
//     HCORENUM    *phEnum,                // [IN|OUT] Pointer to the enum.                
//     mdTypeDef   cl,                     // [IN] TypeDef to scope the enumeration.   
//     LPCWSTR     szName,                 // [IN] Limit results to those with this name.              
//     mdToken     rMembers[],             // [OUT] Put MemberDefs here.                   
//     ULONG       cMax,                   // [IN] Max MemberDefs to put.              
//     ULONG       *pcTokens) PURE;        // [OUT] Put # put here.    
// STDMETHOD(EnumMethods)(                 // S_OK, S_FALSE, or error. 
//     HCORENUM    *phEnum,                // [IN|OUT] Pointer to the enum.    
//     mdTypeDef   cl,                     // [IN] TypeDef to scope the enumeration.   
//     mdMethodDef rMethods[],             // [OUT] Put MethodDefs here.   
//     ULONG       cMax,                   // [IN] Max MethodDefs to put.  
//     ULONG       *pcTokens) PURE;        // [OUT] Put # put here.    
/* must be 1 */,
// STDMETHOD(EnumMethodsWithName)(         // S_OK, S_FALSE, or error.             
//     HCORENUM    *phEnum,                // [IN|OUT] Pointer to the enum.                
//     mdTypeDef   cl,                     // [IN] TypeDef to scope the enumeration.   
//     LPCWSTR     szName,                 // [IN] Limit results to those with this name.              
//     mdMethodDef rMethods[],             // [OU] Put MethodDefs here.    
//     ULONG       cMax,                   // [IN] Max MethodDefs to put.              
//     ULONG       *pcTokens) PURE;        // [OUT] Put # put here.    
// STDMETHOD(EnumFields)(                 // S_OK, S_FALSE, or error.  
//     HCORENUM    *phEnum,                // [IN|OUT] Pointer to the enum.    
//     mdTypeDef   cl,                     // [IN] TypeDef to scope the enumeration.   
//     mdFieldDef  rFields[],              // [OUT] Put FieldDefs here.    
//     ULONG       cMax,                   // [IN] Max FieldDefs to put.   
//     ULONG       *pcTokens) PURE;        // [OUT] Put # put here.    
/* must be 1 */,
// STDMETHOD(EnumFieldsWithName)(         // S_OK, S_FALSE, or error.              
//     HCORENUM    *phEnum,                // [IN|OUT] Pointer to the enum.                
//     mdTypeDef   cl,                     // [IN] TypeDef to scope the enumeration.   
//     LPCWSTR     szName,                 // [IN] Limit results to those with this name.              
//     mdFieldDef  rFields[],              // [OUT] Put MemberDefs here.                   
//     ULONG       cMax,                   // [IN] Max MemberDefs to put.              
//     ULONG       *pcTokens) PURE;        // [OUT] Put # put here.    
// STDMETHOD(EnumParams)(                  // S_OK, S_FALSE, or error. 
//     HCORENUM    *phEnum,                // [IN|OUT] Pointer to the enum.    
//     mdMethodDef mb,                     // [IN] MethodDef to scope the enumeration. 
//     mdParamDef  rParams[],              // [OUT] Put ParamDefs here.    
//     ULONG       cMax,                   // [IN] Max ParamDefs to put.   
//     ULONG       *pcTokens) PURE;        // [OUT] Put # put here.
// STDMETHOD(EnumMemberRefs)(              // S_OK, S_FALSE, or error. 
//     HCORENUM    *phEnum,                // [IN|OUT] Pointer to the enum.    
//     mdToken     tkParent,               // [IN] Parent token to scope the enumeration.  
//     mdMemberRef rMemberRefs[],          // [OUT] Put MemberRefs here.   
//     ULONG       cMax,                   // [IN] Max MemberRefs to put.  
//     ULONG       *pcTokens) PURE;        // [OUT] Put # put here.    
// STDMETHOD(EnumMethodImpls)(             // S_OK, S_FALSE, or error  
//     HCORENUM    *phEnum,                // [IN|OUT] Pointer to the enum.    
//     mdTypeDef   td,                     // [IN] TypeDef to scope the enumeration.   
//     mdToken     rMethodBody[],          // [OUT] Put Method Body tokens here.   
//     mdToken     rMethodDecl[],          // [OUT] Put Method Declaration tokens here.
//     ULONG       cMax,                   // [IN] Max tokens to put.  
//     ULONG       *pcTokens) PURE;        // [OUT] Put # put here.    
// STDMETHOD(EnumPermissionSets)(          // S_OK, S_FALSE, or error. 
//     HCORENUM    *phEnum,                // [IN|OUT] Pointer to the enum.    
//     mdToken     tk,                     // [IN] if !NIL, token to scope the enumeration.    
//     DWORD       dwActions,              // [IN] if !0, return only these actions.   
//     mdPermission rPermission[],         // [OUT] Put Permissions here.  
//     ULONG       cMax,                   // [IN] Max Permissions to put. 
//     ULONG       *pcTokens) PURE;        // [OUT] Put # put here.    
// STDMETHOD(FindMember)(  
//     mdTypeDef   td,                     // [IN] given typedef   
//     LPCWSTR     szName,                 // [IN] member name 
//     PCCOR_SIGNATURE pvSigBlob,          // [IN] point to a blob value of CLR signature 
//     ULONG       cbSigBlob,              // [IN] count of bytes in the signature blob    
//     mdToken     *pmb) PURE;             // [OUT] matching memberdef 
// STDMETHOD(FindMethod)(  
//     mdTypeDef   td,                     // [IN] given typedef   
//     LPCWSTR     szName,                 // [IN] member name 
//     PCCOR_SIGNATURE pvSigBlob,          // [IN] point to a blob value of CLR signature 
//     ULONG       cbSigBlob,              // [IN] count of bytes in the signature blob    
//     mdMethodDef *pmb) PURE;             // [OUT] matching memberdef 
// STDMETHOD(FindField)(   
//     mdTypeDef   td,                     // [IN] given typedef   
//     LPCWSTR     szName,                 // [IN] member name 
//     PCCOR_SIGNATURE pvSigBlob,          // [IN] point to a blob value of CLR signature 
//     ULONG       cbSigBlob,              // [IN] count of bytes in the signature blob    
//     mdFieldDef  *pmb) PURE;             // [OUT] matching memberdef 
// STDMETHOD(FindMemberRef)(   
//     mdTypeRef   td,                     // [IN] given typeRef   
//     LPCWSTR     szName,                 // [IN] member name 
//     PCCOR_SIGNATURE pvSigBlob,          // [IN] point to a blob value of CLR signature 
//     ULONG       cbSigBlob,              // [IN] count of bytes in the signature blob    
//     mdMemberRef *pmr) PURE;             // [OUT] matching memberref 
// STDMETHOD (GetMethodProps)( 
//     mdMethodDef mb,                     // The method for which to get props.   
//     mdTypeDef   *pClass,                // Put method's class here. 
//     LPWSTR      szMethod,               // Put method's name here.  
//     ULONG       cchMethod,              // Size of szMethod buffer in wide chars.   
//     ULONG       *pchMethod,             // Put actual size here 
//     DWORD       *pdwAttr,               // Put flags here.  
//     PCCOR_SIGNATURE *ppvSigBlob,        // [OUT] point to the blob value of meta data   
//     ULONG       *pcbSigBlob,            // [OUT] actual size of signature blob  
//     ULONG       *pulCodeRVA,            // [OUT] codeRVA    
//     DWORD       *pdwImplFlags) PURE;    // [OUT] Impl. Flags    
// STDMETHOD(GetMemberRefProps)(           // S_OK or error.   
//     mdMemberRef mr,                     // [IN] given memberref 
//     mdToken     *ptk,                   // [OUT] Put classref or classdef here. 
//     LPWSTR      szMember,               // [OUT] buffer to fill for member's name   
//     ULONG       cchMember,              // [IN] the count of char of szMember   
//     ULONG       *pchMember,             // [OUT] actual count of char in member name    
//     PCCOR_SIGNATURE *ppvSigBlob,        // [OUT] point to meta data blob value  
//     ULONG       *pbSig) PURE;           // [OUT] actual size of signature blob  
// STDMETHOD(EnumProperties)(              // S_OK, S_FALSE, or error. 
//     HCORENUM    *phEnum,                // [IN|OUT] Pointer to the enum.    
//     mdTypeDef   td,                     // [IN] TypeDef to scope the enumeration.   
//     mdProperty  rProperties[],          // [OUT] Put Properties here.   
//     ULONG       cMax,                   // [IN] Max properties to put.  
//     ULONG       *pcProperties) PURE;    // [OUT] Put # put here.    
/* must be 1 */,
// STDMETHOD(EnumEvents)(                  // S_OK, S_FALSE, or error. 
//     HCORENUM    *phEnum,                // [IN|OUT] Pointer to the enum.    
//     mdTypeDef   td,                     // [IN] TypeDef to scope the enumeration.   
//     mdEvent     rEvents[],              // [OUT] Put events here.   
//     ULONG       cMax,                   // [IN] Max events to put.  
//     ULONG       *pcEvents) PURE;        // [OUT] Put # put here.    
/* must be 1 */,
// STDMETHOD(GetEventProps)(               // S_OK, S_FALSE, or error. 
//     mdEvent     ev,                     // [IN] event token 
//     mdTypeDef   *pClass,                // [OUT] typedef containing the event declarion.    
//     LPCWSTR     szEvent,                // [OUT] Event name 
//     ULONG       cchEvent,               // [IN] the count of wchar of szEvent   
//     ULONG       *pchEvent,              // [OUT] actual count of wchar for event's name 
//     DWORD       *pdwEventFlags,         // [OUT] Event flags.   
//     mdToken     *ptkEventType,          // [OUT] EventType class    
//     mdMethodDef *pmdAddOn,              // [OUT] AddOn method of the event  
//     mdMethodDef *pmdRemoveOn,           // [OUT] RemoveOn method of the event   
//     mdMethodDef *pmdFire,               // [OUT] Fire method of the event   
//     mdMethodDef rmdOtherMethod[],       // [OUT] other method of the event  
//     ULONG       cMax,                   // [IN] size of rmdOtherMethod  
//     ULONG       *pcOtherMethod) PURE;   // [OUT] total number of other method of this event 
// STDMETHOD(EnumMethodSemantics)(         // S_OK, S_FALSE, or error. 
//     HCORENUM    *phEnum,                // [IN|OUT] Pointer to the enum.    
//     mdMethodDef mb,                     // [IN] MethodDef to scope the enumeration. 
//     mdToken     rEventProp[],           // [OUT] Put Event/Property here.   
//     ULONG       cMax,                   // [IN] Max properties to put.  
//     ULONG       *pcEventProp) PURE;     // [OUT] Put # put here.    
// STDMETHOD(GetMethodSemantics)(          // S_OK, S_FALSE, or error. 
//     mdMethodDef mb,                     // [IN] method token    
//     mdToken     tkEventProp,            // [IN] event/property token.   
//     DWORD       *pdwSemanticsFlags) PURE; // [OUT] the role flags for the method/propevent pair 
// STDMETHOD(GetClassLayout) ( 
//     mdTypeDef   td,                     // [IN] give typedef    
//     DWORD       *pdwPackSize,           // [OUT] 1, 2, 4, 8, or 16  
//     COR_FIELD_OFFSET rFieldOffset[],    // [OUT] field offset array 
//     ULONG       cMax,                   // [IN] size of the array   
//     ULONG       *pcFieldOffset,         // [OUT] needed array size  
//     ULONG       *pulClassSize) PURE;        // [OUT] the size of the class  
// STDMETHOD(GetFieldMarshal) (    
//     mdToken     tk,                     // [IN] given a field's memberdef   
//     PCCOR_SIGNATURE *ppvNativeType,     // [OUT] native type of this field  
//     ULONG       *pcbNativeType) PURE;   // [OUT] the count of bytes of *ppvNativeType   
// STDMETHOD(GetRVA)(                      // S_OK or error.   
//     mdToken     tk,                     // Member for which to set offset   
//     ULONG       *pulCodeRVA,            // The offset   
//     DWORD       *pdwImplFlags) PURE;    // the implementation flags 
// STDMETHOD(GetPermissionSetProps) (  
//     mdPermission pm,                    // [IN] the permission token.   
//     DWORD       *pdwAction,             // [OUT] CorDeclSecurity.   
//     void const  **ppvPermission,        // [OUT] permission blob.   
//     ULONG       *pcbPermission) PURE;   // [OUT] count of bytes of pvPermission.    
// STDMETHOD(GetSigFromToken)(             // S_OK or error.   
//     mdSignature mdSig,                  // [IN] Signature token.    
//     PCCOR_SIGNATURE *ppvSig,            // [OUT] return pointer to token.   
//     ULONG       *pcbSig) PURE;          // [OUT] return size of signature.  
// STDMETHOD(GetModuleRefProps)(           // S_OK or error.   
//     mdModuleRef mur,                    // [IN] moduleref token.    
//     LPWSTR      szName,                 // [OUT] buffer to fill with the moduleref name.    
//     ULONG       cchName,                // [IN] size of szName in wide characters.  
//     ULONG       *pchName) PURE;         // [OUT] actual count of characters in the name.    
// STDMETHOD(EnumModuleRefs)(              // S_OK or error.   
//     HCORENUM    *phEnum,                // [IN|OUT] pointer to the enum.    
//     mdModuleRef rModuleRefs[],          // [OUT] put modulerefs here.   
//     ULONG       cmax,                   // [IN] max memberrefs to put.  
//     ULONG       *pcModuleRefs) PURE;    // [OUT] put # put here.    
// STDMETHOD(GetTypeSpecFromToken)(        // S_OK or error.   
//     mdTypeSpec typespec,                // [IN] TypeSpec token.    
//     PCCOR_SIGNATURE *ppvSig,            // [OUT] return pointer to TypeSpec signature  
//     ULONG       *pcbSig) PURE;          // [OUT] return size of signature.  
// STDMETHOD(GetNameFromToken)(            // Not Recommended! May be removed!
//     mdToken     tk,                     // [IN] Token to get name from.  Must have a name.
//     MDUTF8CSTR  *pszUtf8NamePtr) PURE;  // [OUT] Return pointer to UTF8 name in heap.
// STDMETHOD(EnumUnresolvedMethods)(       // S_OK, S_FALSE, or error. 
//     HCORENUM    *phEnum,                // [IN|OUT] Pointer to the enum.    
//     mdToken     rMethods[],             // [OUT] Put MemberDefs here.   
//     ULONG       cMax,                   // [IN] Max MemberDefs to put.  
//     ULONG       *pcTokens) PURE;        // [OUT] Put # put here.
// STDMETHOD(GetUserString)(               // S_OK or error.
//     mdString    stk,                    // [IN] String token.
//     LPWSTR      szString,               // [OUT] Copy of string.
//     ULONG       cchString,              // [IN] Max chars of room in szString.
//     ULONG       *pchString) PURE;       // [OUT] How many chars in actual string.
// STDMETHOD(GetPinvokeMap)(               // S_OK or error.
//     mdToken     tk,                     // [IN] FieldDef or MethodDef.
//     DWORD       *pdwMappingFlags,       // [OUT] Flags used for mapping.
//     LPWSTR      szImportName,           // [OUT] Import name.
//     ULONG       cchImportName,          // [IN] Size of the name buffer.
//     ULONG       *pchImportName,         // [OUT] Actual number of characters stored.
//     mdModuleRef *pmrImportDLL) PURE;    // [OUT] ModuleRef token for the target DLL.
// STDMETHOD(EnumSignatures)(              // S_OK or error.
//     HCORENUM    *phEnum,                // [IN|OUT] pointer to the enum.    
//     mdSignature rSignatures[],          // [OUT] put signatures here.   
//     ULONG       cmax,                   // [IN] max signatures to put.  
//     ULONG       *pcSignatures) PURE;    // [OUT] put # put here.
// STDMETHOD(EnumTypeSpecs)(               // S_OK or error.
//     HCORENUM    *phEnum,                // [IN|OUT] pointer to the enum.    
//     mdTypeSpec  rTypeSpecs[],           // [OUT] put TypeSpecs here.   
//     ULONG       cmax,                   // [IN] max TypeSpecs to put.  
//     ULONG       *pcTypeSpecs) PURE;     // [OUT] put # put here.
// STDMETHOD(EnumUserStrings)(             // S_OK or error.
//     HCORENUM    *phEnum,                // [IN/OUT] pointer to the enum.
//     mdString    rStrings[],             // [OUT] put Strings here.
//     ULONG       cmax,                   // [IN] max Strings to put.
//     ULONG       *pcStrings) PURE;       // [OUT] put # put here.
// STDMETHOD(GetParamForMethodIndex)(      // S_OK or error.
//     mdMethodDef md,                     // [IN] Method token.
//     ULONG       ulParamSeq,             // [IN] Parameter sequence.
//     mdParamDef  *ppd) PURE;             // [IN] Put Param token here.
// STDMETHOD(EnumCustomAttributes)(        // S_OK or error.
//     HCORENUM    *phEnum,                // [IN, OUT] COR enumerator.
//     mdToken     tk,                     // [IN] Token to scope the enumeration, 0 for all.
//     mdToken     tkType,                 // [IN] Type of interest, 0 for all.
//     mdCustomAttribute rCustomAttributes[], // [OUT] Put custom attribute tokens here.
//     ULONG       cMax,                   // [IN] Size of rCustomAttributes.
//     ULONG       *pcCustomAttributes) PURE;  // [OUT, OPTIONAL] Put count of token values here.
/* must be 1 */,
// STDMETHOD(GetCustomAttributeProps)(     // S_OK or error.
//     mdCustomAttribute cv,               // [IN] CustomAttribute token.
//     mdToken     *ptkObj,                // [OUT, OPTIONAL] Put object token here.
//     mdToken     *ptkType,               // [OUT, OPTIONAL] Put AttrType token here.
//     void const  **ppBlob,               // [OUT, OPTIONAL] Put pointer to data here.
//     ULONG       *pcbSize) PURE;         // [OUT, OPTIONAL] Put size of date here.
// STDMETHOD(FindTypeRef)(   
//     mdToken     tkResolutionScope,      // [IN] ModuleRef, AssemblyRef or TypeRef.
//     LPCWSTR     szName,                 // [IN] TypeRef Name.
//     mdTypeRef   *ptr) PURE;             // [OUT] matching TypeRef.
// STDMETHOD(GetMemberProps)(  
//     mdToken     mb,                     // The member for which to get props.   
//     mdTypeDef   *pClass,                // Put member's class here. 
//     LPWSTR      szMember,               // Put member's name here.  
//     ULONG       cchMember,              // Size of szMember buffer in wide chars.   
//     ULONG       *pchMember,             // Put actual size here 
//     DWORD       *pdwAttr,               // Put flags here.  
//     PCCOR_SIGNATURE *ppvSigBlob,        // [OUT] point to the blob value of meta data   
//     ULONG       *pcbSigBlob,            // [OUT] actual size of signature blob  
//     ULONG       *pulCodeRVA,            // [OUT] codeRVA    
//     DWORD       *pdwImplFlags,          // [OUT] Impl. Flags    
//     DWORD       *pdwCPlusTypeFlag,      // [OUT] flag for value type. selected ELEMENT_TYPE_*   
//     void const  **ppValue,              // [OUT] constant value 
//     ULONG       *pcchValue) PURE;       // [OUT] size of constant string in chars, 0 for non-strings.
// STDMETHOD(GetFieldProps)(  
//     mdFieldDef  mb,                     // The field for which to get props.    
//     mdTypeDef   *pClass,                // Put field's class here.  
//     LPWSTR      szField,                // Put field's name here.   
//     ULONG       cchField,               // Size of szField buffer in wide chars.    
//     ULONG       *pchField,              // Put actual size here 
//     DWORD       *pdwAttr,               // Put flags here.  
//     PCCOR_SIGNATURE *ppvSigBlob,        // [OUT] point to the blob value of meta data   
//     ULONG       *pcbSigBlob,            // [OUT] actual size of signature blob  
//     DWORD       *pdwCPlusTypeFlag,      // [OUT] flag for value type. selected ELEMENT_TYPE_*   
//     void const  **ppValue,              // [OUT] constant value 
//     ULONG       *pcchValue) PURE;       // [OUT] size of constant string in chars, 0 for non-strings.
// STDMETHOD(GetPropertyProps)(            // S_OK, S_FALSE, or error. 
//     mdProperty  prop,                   // [IN] property token  
//     mdTypeDef   *pClass,                // [OUT] typedef containing the property declarion. 
//     LPCWSTR     szProperty,             // [OUT] Property name  
//     ULONG       cchProperty,            // [IN] the count of wchar of szProperty    
//     ULONG       *pchProperty,           // [OUT] actual count of wchar for property name    
//     DWORD       *pdwPropFlags,          // [OUT] property flags.    
//     PCCOR_SIGNATURE *ppvSig,            // [OUT] property type. pointing to meta data internal blob 
//     ULONG       *pbSig,                 // [OUT] count of bytes in *ppvSig  
//     DWORD       *pdwCPlusTypeFlag,      // [OUT] flag for value type. selected ELEMENT_TYPE_*   
//     void const  **ppDefaultValue,       // [OUT] constant value 
//     ULONG       *pcchDefaultValue,      // [OUT] size of constant string in chars, 0 for non-strings.
//     mdMethodDef *pmdSetter,             // [OUT] setter method of the property  
//     mdMethodDef *pmdGetter,             // [OUT] getter method of the property  
//     mdMethodDef rmdOtherMethod[],       // [OUT] other method of the property   
//     ULONG       cMax,                   // [IN] size of rmdOtherMethod  
//     ULONG       *pcOtherMethod) PURE;   // [OUT] total number of other method of this property
// STDMETHOD(GetParamProps)(               // S_OK or error.
//     mdParamDef  tk,                     // [IN]The Parameter.
//     mdMethodDef *pmd,                   // [OUT] Parent Method token.
//     ULONG       *pulSequence,           // [OUT] Parameter sequence.
//     LPWSTR      szName,                 // [OUT] Put name here.
//     ULONG       cchName,                // [OUT] Size of name buffer.
//     ULONG       *pchName,               // [OUT] Put actual size of name here.
//     DWORD       *pdwAttr,               // [OUT] Put flags here.
//     DWORD       *pdwCPlusTypeFlag,      // [OUT] Flag for value type. selected ELEMENT_TYPE_*.
//     void const  **ppValue,              // [OUT] Constant value.
//     ULONG       *pcchValue) PURE;       // [OUT] size of constant string in chars, 0 for non-strings.
// STDMETHOD(GetCustomAttributeByName)(    // S_OK or error.
//     mdToken     tkObj,                  // [IN] Object with Custom Attribute.
//     LPCWSTR     szName,                 // [IN] Name of desired Custom Attribute.
//     const void  **ppData,               // [OUT] Put pointer to data here.
//     ULONG       *pcbData) PURE;         // [OUT] Put size of data here.
// STDMETHOD_(BOOL, IsValidToken)(         // True or False.
//     mdToken     tk) PURE;               // [IN] Given token.
// STDMETHOD(GetNestedClassProps)(         // S_OK or error.
//     mdTypeDef   tdNestedClass,          // [IN] NestedClass token.
//     mdTypeDef   *ptdEnclosingClass) PURE; // [OUT] EnclosingClass token.
// STDMETHOD(GetNativeCallConvFromSig)(    // S_OK or error.
//     void const  *pvSig,                 // [IN] Pointer to signature.
//     ULONG       cbSig,                  // [IN] Count of signature bytes.
//     ULONG       *pCallConv) PURE;       // [OUT] Put calling conv here (see CorPinvokemap).
// STDMETHOD(IsGlobal)(                    // S_OK or error.
//     mdToken     pd,                     // [IN] Type, Field, or Method token.
//     int         *pbGlobal) PURE;        // [OUT] Put 1 if global, 0 otherwise.
// PreserveSig because this method is an exception that 
// actually returns void, not HRESULT.
// MetadataHelpers.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// MetadataImporter.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/* coreAssembly */ true);
// Array is special - it is used to build other Arrays of more
// specific types we load members for in the second pass...
// Generics are also special - they are used to build other generic instances
// with specific types for generic arguments as we load members for other
// types subsequently...
// There is some special-case logic to be performed on some members of the
// global namespace.
// The Script class contains additional pseudo global methods that cannot
// be referenced at compile-time by the app author, but can be
// referenced by generated code during compilation.
// We need to add a static GetType method
// The Dictionary class contains static methods at runtime, rather
// than instance methods.
// We need to add a static indexer, which isn't allowed in C#
// Import all the types first.
// Types need to be loaded upfront so that they can be used in resolving types associated
// with members.
/* coreAssembly */ false);
// Resolve Base Types
// Import members
// already processed above
/* interfaces */ null);
// PreserveName is ignored - it only is used for internal members, which are not imported.
// NOTE: We do not import parameters for imported members.
//       Parameters are used in the script model generation phase to populate
//       symbol tables, which is not done for imported methods.
// Ignore if its an overload since we don't care about parameters
// for imported methods, overloaded ctors don't matter.
// We just care about return values pretty much, and existence of the
// method.
/* typeArgument */ false,
// NOTE: We're ignoring the override scenario - it doesn't matter in terms
//       of the compilation and code generation
// TODO: Why are we ignoring the other bits...
// bool dummyPreserveName;
// bool preserveCase;
// string dummyName = MetadataHelpers.GetScriptName(property, out dummyPreserveName, out preserveCase);
// propertySymbol.SetNameCasing(preserveCase);
// Properties marked with this attribute are to be thought of as
// fields. If they are read-only, the C# compiler will enforce that,
// so we don't have to worry about making them read-write via a field
// instead of a property
// Import pseudo members that go on the class but aren't defined in mscorlib.dll
// These are meant to be used by internal compiler-generated transformations etc.
// and aren't meant to be referenced directly in C# code.
// Enumerate - IEnumerable.GetEnumerator gets mapped to this
// TypeName - Type.Name gets mapped to this
// CompareDates - Date equality checks get converted to call to compareDates
// Define Dictionary.Keys
// Define Dictionary.GetCount
// NOTE: We don't care about the flags bit on imported enums
//       because this is only consumed by the generation logic.
/* flags */ false);
/* typeArgument */ true,
// Ignore this type - it is the base class for enums, and other primitive types
// but we don't import it since it is not useful in script
// MetadataSource.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// Perform a topological sort to get the list of assemblies in order
// to cause loading of dependencies to happen before an assembly
// that references them.
// SigatureParser.cs
// Script#/Core/ScriptSharp
// Copyright (c) Nikhil Kothari.
// Copyright (c) Microsoft Corporation.
// This source code is subject to terms and conditions of the Microsoft 
// Public License. A copy of the license can be found in License.txt.
//
// TODO: Error
// Skip parameter count
// Special encoding of NULL
// 1-byte encoding
// 2-byte encoding
// 4-byte encoding
// TODO: Error handler
// TODO: Error handler
//
// ArrayType.cs
//
// Author:
//   Jb Evain (jbevain@gmail.com)
//
// Copyright (c) 2008 - 2010 Jb Evain
//
// Permission is hereby granted, free of charge, to any person obtaining
// a copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to
// permit persons to whom the Software is furnished to do so, subject to
// the following conditions:
//
// The above copyright notice and this permission notice shall be
// included in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//
/* public */ struct ArrayDimension {
/* public */ sealed class ArrayType : TypeSpecification {
//
// AssemblyDefinition.cs
//
// Author:
//   Jb Evain (jbevain@gmail.com)
//
// Copyright (c) 2008 - 2010 Jb Evain
//
// Permission is hereby granted, free of charge, to any person obtaining
// a copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to
// permit persons to whom the Software is furnished to do so, subject to
// the following conditions:
//
// The above copyright notice and this permission notice shall be
// included in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//
/* public */ sealed class AssemblyDefinition : ICustomAttributeProvider, ISecurityDeclarationProvider {
//
// AssemblyFlags.cs
//
// Author:
//   Jb Evain (jbevain@gmail.com)
//
// Copyright (c) 2008 - 2010 Jb Evain
//
// Permission is hereby granted, free of charge, to any person obtaining
// a copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to
// permit persons to whom the Software is furnished to do so, subject to
// the following conditions:
//
// The above copyright notice and this permission notice shall be
// included in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//
/* public */ enum AssemblyAttributes : uint {
//
// AssemblyHashAlgorithm.cs
//
// Author:
//   Jb Evain (jbevain@gmail.com)
//
// Copyright (c) 2008 - 2010 Jb Evain
//
// Permission is hereby granted, free of charge, to any person obtaining
// a copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to
// permit persons to whom the Software is furnished to do so, subject to
// the following conditions:
//
// The above copyright notice and this permission notice shall be
// included in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//
/* public */ enum AssemblyHashAlgorithm : uint {
// MD5
//
// AssemblyLinkedResource.cs
//
// Author:
//   Jb Evain (jbevain@gmail.com)
//
// Copyright (c) 2008 - 2010 Jb Evain
//
// Permission is hereby granted, free of charge, to any person obtaining
// a copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to
// permit persons to whom the Software is furnished to do so, subject to
// the following conditions:
//
// The above copyright notice and this permission notice shall be
// included in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//
/* public */ sealed class AssemblyLinkedResource : Resource {
//
// AssemblyNameDefinition.cs
//
// Author:
//   Jb Evain (jbevain@gmail.com)
//
// Copyright (c) 2008 - 2010 Jb Evain
//
// Permission is hereby granted, free of charge, to any person obtaining
// a copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to
// permit persons to whom the Software is furnished to do so, subject to
// the following conditions:
//
// The above copyright notice and this permission notice shall be
// included in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//
/* public */ sealed class AssemblyNameDefinition : AssemblyNameReference {
//
// AssemblyNameReference.cs
//
// Author:
//   Jb Evain (jbevain@gmail.com)
//
// Copyright (c) 2008 - 2010 Jb Evain
//
// Permission is hereby granted, free of charge, to any person obtaining
// a copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to
// permit persons to whom the Software is furnished to do so, subject to
// the following conditions:
//
// The above copyright notice and this permission notice shall be
// included in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//
/* public */ class AssemblyNameReference : IMetadataScope {
// we need the last 8 bytes in reverse order
// None default to SHA1
//
// AssemblyReader.cs
//
// Author:
//   Jb Evain (jbevain@gmail.com)
//
// Copyright (c) 2008 - 2010 Jb Evain
//
// Permission is hereby granted, free of charge, to any person obtaining
// a copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to
// permit persons to whom the Software is furnished to do so, subject to
// the following conditions:
//
// The above copyright notice and this permission notice shall be
// included in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//
// Generation
// count
// attach method
// index
// FIXME: if the table is not properly sorted
//
// AssemblyWriter.cs
//
// Author:
//   Jb Evain (jbevain@gmail.com)
//
// Copyright (c) 2008 - 2010 Jb Evain
//
// Permission is hereby granted, free of charge, to any person obtaining
// a copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to
// permit persons to whom the Software is furnished to do so, subject to
// the following conditions:
//
// The above copyright notice and this permission notice shall be
// included in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//
// Generation
// Name
// Mvid
// EncId
// EncBaseId
// Scope
// Name
// Namespace
// Attributes
// Name
// Namespace
// Extends
// FieldList
// MethodList
// Attributes
// Name
// Signature
// RVA
// ImplFlags
// Flags
// Name
// Signature
// ParamList
// Attributes
// Sequence
// Name
// Class
// Interface
/*public override int Compare (InterfaceImplRow x, InterfaceImplRow y)
// Parent
// Type
// PackingSize
// ClassSize
// Parent
// Offset
// Parent
// Parent
// EventList
// Flags
// Name
// EventType
// Parent
// PropertyList
// Flags
// Name
// Type
// Flags
// Method
// Association
// Class
// MethodBody
// MethodDeclaration
// Name
// Signature
// Flags
// MemberForwarded
// ImportName
// ImportScope
// RVA
// Field
// AssemblyHashAlgorithm
// MajorVersion
// MinorVersion
// Build
// Revision
// Flags
// PublicKey
// Name
// Culture
// MajorVersion
// MinorVersion
// Build
// Revision
// Flags
// PublicKeyOrToken
// Name
// Culture
// Hash
// NestedClass
// EnclosingClass
// Number
// Flags
// Owner
// Name
// Method
// Instantiation
// Owner
// Constraint
// length
// count
//
// BaseAssemblyResolver.cs
//
// Author:
//   Jb Evain (jbevain@gmail.com)
//
// Copyright (c) 2008 - 2010 Jb Evain
//
// Permission is hereby granted, free of charge, to any person obtaining
// a copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to
// permit persons to whom the Software is furnished to do so, subject to
// the following conditions:
//
// The above copyright notice and this permission notice shall be
// included in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//
/* public */ delegate AssemblyDefinition AssemblyResolveEventHandler(object sender, AssemblyNameReference reference);
/* public */ sealed class AssemblyResolveEventArgs : EventArgs {
/* public */ class AssemblyResolutionException : FileNotFoundException {
/* public */ abstract class BaseAssemblyResolver : IAssemblyResolver {
//
// CallSite.cs
//
// Author:
//   Jb Evain (jbevain@gmail.com)
//
// Copyright (c) 2008 - 2010 Jb Evain
//
// Permission is hereby granted, free of charge, to any person obtaining
// a copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to
// permit persons to whom the Software is furnished to do so, subject to
// the following conditions:
//
// The above copyright notice and this permission notice shall be
// included in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//
/* public */ sealed class CallSite : IMethodSignature {
//
// CustomAttribute.cs
//
// Author:
//   Jb Evain (jbevain@gmail.com)
//
// Copyright (c) 2008 - 2010 Jb Evain
//
// Permission is hereby granted, free of charge, to any person obtaining
// a copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to
// permit persons to whom the Software is furnished to do so, subject to
// the following conditions:
//
// The above copyright notice and this permission notice shall be
// included in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//
/* public */ struct CustomAttributeArgument {
/* public */ struct CustomAttributeNamedArgument {
/* public */ interface ICustomAttribute {
/* public */ sealed class CustomAttribute : ICustomAttribute {
//
// DefaultAssemblyResolver.cs
//
// Author:
//   Jb Evain (jbevain@gmail.com)
//
// Copyright (c) 2008 - 2010 Jb Evain
//
// Permission is hereby granted, free of charge, to any person obtaining
// a copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to
// permit persons to whom the Software is furnished to do so, subject to
// the following conditions:
//
// The above copyright notice and this permission notice shall be
// included in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//
/* public */ static class GlobalAssemblyResolver {
/* public */ class DefaultAssemblyResolver : BaseAssemblyResolver {
//
// EmbeddedResource.cs
//
// Author:
//   Jb Evain (jbevain@gmail.com)
//
// Copyright (c) 2008 - 2010 Jb Evain
//
// Permission is hereby granted, free of charge, to any person obtaining
// a copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to
// permit persons to whom the Software is furnished to do so, subject to
// the following conditions:
//
// The above copyright notice and this permission notice shall be
// included in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//
/* public */ sealed class EmbeddedResource : Resource {
//
// EventAttributes.cs
//
// Author:
//   Jb Evain (jbevain@gmail.com)
//
// Copyright (c) 2008 - 2010 Jb Evain
//
// Permission is hereby granted, free of charge, to any person obtaining
// a copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to
// permit persons to whom the Software is furnished to do so, subject to
// the following conditions:
//
// The above copyright notice and this permission notice shall be
// included in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//
/* public */ enum EventAttributes : ushort {
// Event is special
// CLI provides 'special' behavior, depending upon the name of the event
//
// EventDefinition.cs
//
// Author:
//   Jb Evain (jbevain@gmail.com)
//
// Copyright (c) 2008 - 2010 Jb Evain
//
// Permission is hereby granted, free of charge, to any person obtaining
// a copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to
// permit persons to whom the Software is furnished to do so, subject to
// the following conditions:
//
// The above copyright notice and this permission notice shall be
// included in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//
/* public */ sealed class EventDefinition : EventReference, IMemberDefinition {
//
// EventReference.cs
//
// Author:
//   Jb Evain (jbevain@gmail.com)
//
// Copyright (c) 2008 - 2010 Jb Evain
//
// Permission is hereby granted, free of charge, to any person obtaining
// a copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to
// permit persons to whom the Software is furnished to do so, subject to
// the following conditions:
//
// The above copyright notice and this permission notice shall be
// included in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//
/* public */ abstract class EventReference : MemberReference {
//
// ExportedType.cs
//
// Author:
//   Jb Evain (jbevain@gmail.com)
//
// Copyright (c) 2008 - 2010 Jb Evain
//
// Permission is hereby granted, free of charge, to any person obtaining
// a copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to
// permit persons to whom the Software is furnished to do so, subject to
// the following conditions:
//
// The above copyright notice and this permission notice shall be
// included in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//
/* public */ class ExportedType : IMetadataTokenProvider {
//
// FieldAttributes.cs
//
// Author:
//   Jb Evain (jbevain@gmail.com)
//
// Copyright (c) 2008 - 2010 Jb Evain
//
// Permission is hereby granted, free of charge, to any person obtaining
// a copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to
// permit persons to whom the Software is furnished to do so, subject to
// the following conditions:
//
// The above copyright notice and this permission notice shall be
// included in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//
/* public */ enum FieldAttributes : ushort {
// Member not referenceable
// Accessible only by the parent type
// Accessible by sub-types only in this assembly
// Accessible by anyone in the Assembly
// Accessible only by type and sub-types
// Accessible by sub-types anywhere, plus anyone in the assembly
// Accessible by anyone who has visibility to this scope field contract attributes
// Defined on type, else per instance
// Field may only be initialized, not written after init
// Value is compile time constant
// Field does not have to be serialized when type is remoted
// Field is special
// Interop Attributes
// Implementation is forwarded through PInvoke
// Additional flags
// CLI provides 'special' behavior, depending upon the name of the field
// Field has marshalling information
// Field has default
// Field has RVA
//
// FieldDefinition.cs
//
// Author:
//   Jb Evain (jbevain@gmail.com)
//
// Copyright (c) 2008 - 2010 Jb Evain
//
// Permission is hereby granted, free of charge, to any person obtaining
// a copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to
// permit persons to whom the Software is furnished to do so, subject to
// the following conditions:
//
// The above copyright notice and this permission notice shall be
// included in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//
/* public */ sealed class FieldDefinition : FieldReference, IMemberDefinition, IConstantProvider, IMarshalInfoProvider {
//
// FieldReference.cs
//
// Author:
//   Jb Evain (jbevain@gmail.com)
//
// Copyright (c) 2008 - 2010 Jb Evain
//
// Permission is hereby granted, free of charge, to any person obtaining
// a copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to
// permit persons to whom the Software is furnished to do so, subject to
// the following conditions:
//
// The above copyright notice and this permission notice shall be
// included in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//
/* public */ class FieldReference : MemberReference {
//
// FileAttributes.cs
//
// Author:
//   Jb Evain (jbevain@gmail.com)
//
// Copyright (c) 2008 - 2010 Jb Evain
//
// Permission is hereby granted, free of charge, to any person obtaining
// a copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to
// permit persons to whom the Software is furnished to do so, subject to
// the following conditions:
//
// The above copyright notice and this permission notice shall be
// included in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//
// This is not a resource file
// This is a resource file or other non-metadata-containing file
//
// FunctionPointerType.cs
//
// Author:
//   Jb Evain (jbevain@gmail.com)
//
// Copyright (c) 2008 - 2010 Jb Evain
//
// Permission is hereby granted, free of charge, to any person obtaining
// a copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to
// permit persons to whom the Software is furnished to do so, subject to
// the following conditions:
//
// The above copyright notice and this permission notice shall be
// included in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//
/* public */ sealed class FunctionPointerType : TypeSpecification, IMethodSignature {
//
// GenericInstanceMethod.cs
//
// Author:
//   Jb Evain (jbevain@gmail.com)
//
// Copyright (c) 2008 - 2010 Jb Evain
//
// Permission is hereby granted, free of charge, to any person obtaining
// a copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to
// permit persons to whom the Software is furnished to do so, subject to
// the following conditions:
//
// The above copyright notice and this permission notice shall be
// included in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//
/* public */ sealed class GenericInstanceMethod : MethodSpecification, IGenericInstance, IGenericContext {
//
// GenericInstanceType.cs
//
// Author:
//   Jb Evain (jbevain@gmail.com)
//
// Copyright (c) 2008 - 2010 Jb Evain
//
// Permission is hereby granted, free of charge, to any person obtaining
// a copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to
// permit persons to whom the Software is furnished to do so, subject to
// the following conditions:
//
// The above copyright notice and this permission notice shall be
// included in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//
/* public */ sealed class GenericInstanceType : TypeSpecification, IGenericInstance, IGenericContext {
//
// GenericParameter.cs
//
// Author:
//   Jb Evain (jbevain@gmail.com)
//
// Copyright (c) 2008 - 2010 Jb Evain
//
// Permission is hereby granted, free of charge, to any person obtaining
// a copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to
// permit persons to whom the Software is furnished to do so, subject to
// the following conditions:
//
// The above copyright notice and this permission notice shall be
// included in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//
/* public */ sealed class GenericParameter : TypeReference, ICustomAttributeProvider {
//
// GenericParameterAttributes.cs
//
// Author:
//   Jb Evain (jbevain@gmail.com)
//
// Copyright (c) 2008 - 2010 Jb Evain
//
// Permission is hereby granted, free of charge, to any person obtaining
// a copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to
// permit persons to whom the Software is furnished to do so, subject to
// the following conditions:
//
// The above copyright notice and this permission notice shall be
// included in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//
/* public */ enum GenericParameterAttributes : ushort {
//
// IConstantProvider.cs
//
// Author:
//   Jb Evain (jbevain@gmail.com)
//
// Copyright (c) 2008 - 2010 Jb Evain
//
// Permission is hereby granted, free of charge, to any person obtaining
// a copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to
// permit persons to whom the Software is furnished to do so, subject to
// the following conditions:
//
// The above copyright notice and this permission notice shall be
// included in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//
/* public */ interface IConstantProvider : IMetadataTokenProvider {
//
// ICustomAttributeProvider.cs
//
// Author:
//   Jb Evain (jbevain@gmail.com)
//
// Copyright (c) 2008 - 2010 Jb Evain
//
// Permission is hereby granted, free of charge, to any person obtaining
// a copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to
// permit persons to whom the Software is furnished to do so, subject to
// the following conditions:
//
// The above copyright notice and this permission notice shall be
// included in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//
/* public */ interface ICustomAttributeProvider : IMetadataTokenProvider {
//
// IGenericInstance.cs
//
// Author:
//   Jb Evain (jbevain@gmail.com)
//
// Copyright (c) 2008 - 2010 Jb Evain
//
// Permission is hereby granted, free of charge, to any person obtaining
// a copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to
// permit persons to whom the Software is furnished to do so, subject to
// the following conditions:
//
// The above copyright notice and this permission notice shall be
// included in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//
/* public */ interface IGenericInstance : IMetadataTokenProvider {
//
// IGenericParameterProvider.cs
//
// Author:
//   Jb Evain (jbevain@gmail.com)
//
// Copyright (c) 2008 - 2010 Jb Evain
//
// Permission is hereby granted, free of charge, to any person obtaining
// a copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to
// permit persons to whom the Software is furnished to do so, subject to
// the following conditions:
//
// The above copyright notice and this permission notice shall be
// included in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//
/* public */ interface IGenericParameterProvider : IMetadataTokenProvider {
/* public */ enum GenericParameterType {
//
// IMarshalInfoProvider.cs
//
// Author:
//   Jb Evain (jbevain@gmail.com)
//
// Copyright (c) 2008 - 2010 Jb Evain
//
// Permission is hereby granted, free of charge, to any person obtaining
// a copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to
// permit persons to whom the Software is furnished to do so, subject to
// the following conditions:
//
// The above copyright notice and this permission notice shall be
// included in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//
/* public */ interface IMarshalInfoProvider : IMetadataTokenProvider {
//
// IMemberDefinition.cs
//
// Author:
//   Jb Evain (jbevain@gmail.com)
//
// Copyright (c) 2008 - 2010 Jb Evain
//
// Permission is hereby granted, free of charge, to any person obtaining
// a copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to
// permit persons to whom the Software is furnished to do so, subject to
// the following conditions:
//
// The above copyright notice and this permission notice shall be
// included in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//
/* public */ interface IMemberDefinition : ICustomAttributeProvider {
//
// IMetadataScope.cs
//
// Author:
//   Jb Evain (jbevain@gmail.com)
//
// Copyright (c) 2008 - 2010 Jb Evain
//
// Permission is hereby granted, free of charge, to any person obtaining
// a copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to
// permit persons to whom the Software is furnished to do so, subject to
// the following conditions:
//
// The above copyright notice and this permission notice shall be
// included in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//
/* public */ enum MetadataScopeType {
/* public */ interface IMetadataScope : IMetadataTokenProvider {
//
// IMetadataTokenProvider.cs
//
// Author:
//   Jb Evain (jbevain@gmail.com)
//
// Copyright (c) 2008 - 2010 Jb Evain
//
// Permission is hereby granted, free of charge, to any person obtaining
// a copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to
// permit persons to whom the Software is furnished to do so, subject to
// the following conditions:
//
// The above copyright notice and this permission notice shall be
// included in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//
/* public */ interface IMetadataTokenProvider {
//
// IMethodSignature.cs
//
// Author:
//   Jb Evain (jbevain@gmail.com)
//
// Copyright (c) 2008 - 2010 Jb Evain
//
// Permission is hereby granted, free of charge, to any person obtaining
// a copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to
// permit persons to whom the Software is furnished to do so, subject to
// the following conditions:
//
// The above copyright notice and this permission notice shall be
// included in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//
/* public */ interface IMethodSignature : IMetadataTokenProvider {
//
// Import.cs
//
// Author:
//   Jb Evain (jbevain@gmail.com)
//
// Copyright (c) 2008 - 2010 Jb Evain
//
// Permission is hereby granted, free of charge, to any person obtaining
// a copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to
// permit persons to whom the Software is furnished to do so, subject to
// the following conditions:
//
// The above copyright notice and this permission notice shall be
// included in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//
// TODO compare field by field
// TODO compare field by field
//
// LinkedResource.cs
//
// Author:
//   Jb Evain (jbevain@gmail.com)
//
// Copyright (c) 2008 - 2010 Jb Evain
//
// Permission is hereby granted, free of charge, to any person obtaining
// a copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to
// permit persons to whom the Software is furnished to do so, subject to
// the following conditions:
//
// The above copyright notice and this permission notice shall be
// included in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//
/* public */ sealed class LinkedResource : Resource {
//
// ManifestResourceAttributes.cs
//
// Author:
//   Jb Evain (jbevain@gmail.com)
//
// Copyright (c) 2008 - 2010 Jb Evain
//
// Permission is hereby granted, free of charge, to any person obtaining
// a copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to
// permit persons to whom the Software is furnished to do so, subject to
// the following conditions:
//
// The above copyright notice and this permission notice shall be
// included in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//
/* public */ enum ManifestResourceAttributes : uint {
// The resource is exported from the Assembly
// The resource is private to the Assembly
//
// MarshalInfo.cs
//
// Author:
//   Jb Evain (jbevain@gmail.com)
//
// Copyright (c) 2008 - 2010 Jb Evain
//
// Permission is hereby granted, free of charge, to any person obtaining
// a copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to
// permit persons to whom the Software is furnished to do so, subject to
// the following conditions:
//
// The above copyright notice and this permission notice shall be
// included in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//
/* public */ class MarshalInfo {
/* public */ sealed class ArrayMarshalInfo : MarshalInfo {
/* public */ sealed class CustomMarshalInfo : MarshalInfo {
/* public */ sealed class SafeArrayMarshalInfo : MarshalInfo {
/* public */ sealed class FixedArrayMarshalInfo : MarshalInfo {
/* public */ sealed class FixedSysStringMarshalInfo : MarshalInfo {
//
// MemberDefinitionCollection.cs
//
// Author:
//   Jb Evain (jbevain@gmail.com)
//
// Copyright (c) 2008 - 2010 Jb Evain
//
// Permission is hereby granted, free of charge, to any person obtaining
// a copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to
// permit persons to whom the Software is furnished to do so, subject to
// the following conditions:
//
// The above copyright notice and this permission notice shall be
// included in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//
//
// MemberReference.cs
//
// Author:
//   Jb Evain (jbevain@gmail.com)
//
// Copyright (c) 2008 - 2010 Jb Evain
//
// Permission is hereby granted, free of charge, to any person obtaining
// a copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to
// permit persons to whom the Software is furnished to do so, subject to
// the following conditions:
//
// The above copyright notice and this permission notice shall be
// included in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//
/* public */ abstract class MemberReference : IMetadataTokenProvider {
//
// MetadataResolver.cs
//
// Author:
//   Jb Evain (jbevain@gmail.com)
//
// Copyright (c) 2008 - 2010 Jb Evain
//
// Permission is hereby granted, free of charge, to any person obtaining
// a copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to
// permit persons to whom the Software is furnished to do so, subject to
// the following conditions:
//
// The above copyright notice and this permission notice shall be
// included in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//
/* public */ interface IAssemblyResolver {
/* public */ class ResolutionException : Exception {
// TODO: dimensions
//TODO: check scope
//
// MetadataSystem.cs
//
// Author:
//   Jb Evain (jbevain@gmail.com)
//
// Copyright (c) 2008 - 2010 Jb Evain
//
// Permission is hereby granted, free of charge, to any person obtaining
// a copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to
// permit persons to whom the Software is furnished to do so, subject to
// the following conditions:
//
// The above copyright notice and this permission notice shall be
// included in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//
//
// MethodAttributes.cs
//
// Author:
//   Jb Evain (jbevain@gmail.com)
//
// Copyright (c) 2008 - 2010 Jb Evain
//
// Permission is hereby granted, free of charge, to any person obtaining
// a copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to
// permit persons to whom the Software is furnished to do so, subject to
// the following conditions:
//
// The above copyright notice and this permission notice shall be
// included in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//
/* public */ enum MethodAttributes : ushort {
// Member not referenceable
// Accessible only by the parent type
// Accessible by sub-types only in this Assembly
// Accessibly by anyone in the Assembly
// Accessible only by type and sub-types
// Accessibly by sub-types anywhere, plus anyone in assembly
// Accessibly by anyone who has visibility to this scope
// Defined on type, else per instance
// Method may not be overridden
// Method is virtual
// Method hides by name+sig, else just by name
// Use this mask to retrieve vtable attributes
// Method reuses existing slot in vtable
// Method always gets a new slot in the vtable
// Method can only be overriden if also accessible
// Method does not provide an implementation
// Method is special
// Interop Attributes
// Implementation is forwarded through PInvoke
// Reserved: shall be zero for conforming implementations
// Additional flags
// CLI provides 'special' behavior, depending upon the name of the method
// Method has security associate with it
// Method calls another method containing security code
//
// MethodCallingConvention.cs
//
// Author:
//   Jb Evain (jbevain@gmail.com)
//
// Copyright (c) 2008 - 2010 Jb Evain
//
// Permission is hereby granted, free of charge, to any person obtaining
// a copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to
// permit persons to whom the Software is furnished to do so, subject to
// the following conditions:
//
// The above copyright notice and this permission notice shall be
// included in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//
/* public */ enum MethodCallingConvention : byte {
//
// MethodDefinition.cs
//
// Author:
//   Jb Evain (jbevain@gmail.com)
//
// Copyright (c) 2008 - 2010 Jb Evain
//
// Permission is hereby granted, free of charge, to any person obtaining
// a copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to
// permit persons to whom the Software is furnished to do so, subject to
// the following conditions:
//
// The above copyright notice and this permission notice shall be
// included in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//
/* public */ sealed class MethodDefinition : MethodReference, IMemberDefinition, ISecurityDeclarationProvider {
//
// MethodImplAttributes.cs
//
// Author:
//   Jb Evain (jbevain@gmail.com)
//
// Copyright (c) 2008 - 2010 Jb Evain
//
// Permission is hereby granted, free of charge, to any person obtaining
// a copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to
// permit persons to whom the Software is furnished to do so, subject to
// the following conditions:
//
// The above copyright notice and this permission notice shall be
// included in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//
/* public */ enum MethodImplAttributes : ushort {
// Method impl is CIL
// Method impl is native
// Reserved: shall be zero in conforming implementations
// Method impl is provided by the runtime
// Flags specifying whether the code is managed or unmanaged
// Method impl is unmanaged, otherwise managed
// Method impl is managed
// Implementation info and interop
// Indicates method is defined; used primarily in merge scenarios
// Reserved: conforming implementations may ignore
// Reserved: shall be zero in conforming implementations
// Method is single threaded through the body
// Method is not optimized by the JIT.
// Method may not be inlined
// Range check value
//
// MethodReference.cs
//
// Author:
//   Jb Evain (jbevain@gmail.com)
//
// Copyright (c) 2008 - 2010 Jb Evain
//
// Permission is hereby granted, free of charge, to any person obtaining
// a copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to
// permit persons to whom the Software is furnished to do so, subject to
// the following conditions:
//
// The above copyright notice and this permission notice shall be
// included in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//
/* public */ class MethodReference : MemberReference, IMethodSignature, IGenericParameterProvider, IGenericContext {
//
// MethodReturnType.cs
//
// Author:
//   Jb Evain (jbevain@gmail.com)
//
// Copyright (c) 2008 - 2010 Jb Evain
//
// Permission is hereby granted, free of charge, to any person obtaining
// a copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to
// permit persons to whom the Software is furnished to do so, subject to
// the following conditions:
//
// The above copyright notice and this permission notice shall be
// included in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//
/* public */ sealed class MethodReturnType : IConstantProvider, ICustomAttributeProvider, IMarshalInfoProvider {
//
// MethodSemanticsattributes.cs
//
// Author:
//   Jb Evain (jbevain@gmail.com)
//
// Copyright (c) 2008 - 2010 Jb Evain
//
// Permission is hereby granted, free of charge, to any person obtaining
// a copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to
// permit persons to whom the Software is furnished to do so, subject to
// the following conditions:
//
// The above copyright notice and this permission notice shall be
// included in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//
/* public */ enum MethodSemanticsAttributes : ushort {
// Setter for property
// Getter for property
// Other method for property or event
// AddOn method for event
// RemoveOn method for event
// Fire method for event
//
// MethodSpecification.cs
//
// Author:
//   Jb Evain (jbevain@gmail.com)
//
// Copyright (c) 2008 - 2010 Jb Evain
//
// Permission is hereby granted, free of charge, to any person obtaining
// a copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to
// permit persons to whom the Software is furnished to do so, subject to
// the following conditions:
//
// The above copyright notice and this permission notice shall be
// included in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//
/* public */ abstract class MethodSpecification : MethodReference {
//
// Modifiers.cs
//
// Author:
//   Jb Evain (jbevain@gmail.com)
//
// Copyright (c) 2008 - 2010 Jb Evain
//
// Permission is hereby granted, free of charge, to any person obtaining
// a copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to
// permit persons to whom the Software is furnished to do so, subject to
// the following conditions:
//
// The above copyright notice and this permission notice shall be
// included in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//
/* public */ interface IModifierType {
/* public */ sealed class OptionalModifierType : TypeSpecification, IModifierType {
/* public */ sealed class RequiredModifierType : TypeSpecification, IModifierType {
//
// ModuleDefinition.cs
//
// Author:
//   Jb Evain (jbevain@gmail.com)
//
// Copyright (c) 2008 - 2010 Jb Evain
//
// Permission is hereby granted, free of charge, to any person obtaining
// a copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to
// permit persons to whom the Software is furnished to do so, subject to
// the following conditions:
//
// The above copyright notice and this permission notice shall be
// included in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//
/* public */ enum ReadingMode {
/* public */ sealed class ReaderParameters {
/* public */ sealed class ModuleParameters {
/* public */ sealed class WriterParameters {
/* public */ sealed class ModuleDefinition : ModuleReference, ICustomAttributeProvider {
//
// ModuleKind.cs
//
// Author:
//   Jb Evain (jbevain@gmail.com)
//
// Copyright (c) 2008 - 2010 Jb Evain
//
// Permission is hereby granted, free of charge, to any person obtaining
// a copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to
// permit persons to whom the Software is furnished to do so, subject to
// the following conditions:
//
// The above copyright notice and this permission notice shall be
// included in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//
/* public */ enum ModuleKind {
/* public */ enum TargetArchitecture {
/* public */ enum ModuleAttributes {
//
// ModuleReference.cs
//
// Author:
//   Jb Evain (jbevain@gmail.com)
//
// Copyright (c) 2008 - 2010 Jb Evain
//
// Permission is hereby granted, free of charge, to any person obtaining
// a copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to
// permit persons to whom the Software is furnished to do so, subject to
// the following conditions:
//
// The above copyright notice and this permission notice shall be
// included in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//
/* public */ class ModuleReference : IMetadataScope {
//
// NativeType.cs
//
// Author:
//   Jb Evain (jbevain@gmail.com)
//
// Copyright (c) 2008 - 2010 Jb Evain
//
// Permission is hereby granted, free of charge, to any person obtaining
// a copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to
// permit persons to whom the Software is furnished to do so, subject to
// the following conditions:
//
// The above copyright notice and this permission notice shall be
// included in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//
/* public */ enum NativeType {
// Msft specific
//
// ParameterAttributes.cs
//
// Author:
//   Jb Evain (jbevain@gmail.com)
//
// Copyright (c) 2008 - 2010 Jb Evain
//
// Permission is hereby granted, free of charge, to any person obtaining
// a copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to
// permit persons to whom the Software is furnished to do so, subject to
// the following conditions:
//
// The above copyright notice and this permission notice shall be
// included in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//
/* public */ enum ParameterAttributes : ushort {
// Param is [In]
// Param is [Out]
// Param is optional
// Param has default value
// Param has field marshal
// Reserved: shall be zero in a conforming implementation
//
// ParameterDefinition.cs
//
// Author:
//   Jb Evain (jbevain@gmail.com)
//
// Copyright (c) 2008 - 2010 Jb Evain
//
// Permission is hereby granted, free of charge, to any person obtaining
// a copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to
// permit persons to whom the Software is furnished to do so, subject to
// the following conditions:
//
// The above copyright notice and this permission notice shall be
// included in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//
/* public */ sealed class ParameterDefinition : ParameterReference, ICustomAttributeProvider, IConstantProvider, IMarshalInfoProvider {
//
// ParameterDefinitionCollection.cs
//
// Author:
//   Jb Evain (jbevain@gmail.com)
//
// Copyright (c) 2008 - 2010 Jb Evain
//
// Permission is hereby granted, free of charge, to any person obtaining
// a copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to
// permit persons to whom the Software is furnished to do so, subject to
// the following conditions:
//
// The above copyright notice and this permission notice shall be
// included in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//
//
// ParameterReference.cs
//
// Author:
//   Jb Evain (jbevain@gmail.com)
//
// Copyright (c) 2008 - 2010 Jb Evain
//
// Permission is hereby granted, free of charge, to any person obtaining
// a copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to
// permit persons to whom the Software is furnished to do so, subject to
// the following conditions:
//
// The above copyright notice and this permission notice shall be
// included in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//
/* public */ abstract class ParameterReference : IMetadataTokenProvider {
//
// PinnedType.cs
//
// Author:
//   Jb Evain (jbevain@gmail.com)
//
// Copyright (c) 2008 - 2010 Jb Evain
//
// Permission is hereby granted, free of charge, to any person obtaining
// a copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to
// permit persons to whom the Software is furnished to do so, subject to
// the following conditions:
//
// The above copyright notice and this permission notice shall be
// included in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//
/* public */ sealed class PinnedType : TypeSpecification {
//
// PInvokeAttributes.cs
//
// Author:
//   Jb Evain (jbevain@gmail.com)
//
// Copyright (c) 2008 - 2010 Jb Evain
//
// Permission is hereby granted, free of charge, to any person obtaining
// a copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to
// permit persons to whom the Software is furnished to do so, subject to
// the following conditions:
//
// The above copyright notice and this permission notice shall be
// included in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//
/* public */ enum PInvokeAttributes : ushort {
// PInvoke is to use the member name as specified
// Character set
// Information about target function. Not relevant for fields
// Calling convetion
//
// PInvokeInfo.cs
//
// Author:
//   Jb Evain (jbevain@gmail.com)
//
// Copyright (c) 2008 - 2010 Jb Evain
//
// Permission is hereby granted, free of charge, to any person obtaining
// a copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to
// permit persons to whom the Software is furnished to do so, subject to
// the following conditions:
//
// The above copyright notice and this permission notice shall be
// included in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//
/* public */ sealed class PInvokeInfo {
//
// PointerType.cs
//
// Author:
//   Jb Evain (jbevain@gmail.com)
//
// Copyright (c) 2008 - 2010 Jb Evain
//
// Permission is hereby granted, free of charge, to any person obtaining
// a copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to
// permit persons to whom the Software is furnished to do so, subject to
// the following conditions:
//
// The above copyright notice and this permission notice shall be
// included in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//
/* public */ sealed class PointerType : TypeSpecification {
//
// PropertyAttributes.cs
//
// Author:
//   Jb Evain (jbevain@gmail.com)
//
// Copyright (c) 2008 - 2010 Jb Evain
//
// Permission is hereby granted, free of charge, to any person obtaining
// a copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to
// permit persons to whom the Software is furnished to do so, subject to
// the following conditions:
//
// The above copyright notice and this permission notice shall be
// included in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//
/* public */ enum PropertyAttributes : ushort {
// Property is special
// Runtime(metadata internal APIs) should check name encoding
// Property has default
// Reserved: shall be zero in a conforming implementation
//
// PropertyDefinition.cs
//
// Author:
//   Jb Evain (jbevain@gmail.com)
//
// Copyright (c) 2008 - 2010 Jb Evain
//
// Permission is hereby granted, free of charge, to any person obtaining
// a copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to
// permit persons to whom the Software is furnished to do so, subject to
// the following conditions:
//
// The above copyright notice and this permission notice shall be
// included in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//
/* public */ sealed class PropertyDefinition : PropertyReference, IMemberDefinition, IConstantProvider {
//
// PropertyReference.cs
//
// Author:
//   Jb Evain (jbevain@gmail.com)
//
// Copyright (c) 2008 - 2010 Jb Evain
//
// Permission is hereby granted, free of charge, to any person obtaining
// a copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to
// permit persons to whom the Software is furnished to do so, subject to
// the following conditions:
//
// The above copyright notice and this permission notice shall be
// included in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//
/* public */ abstract class PropertyReference : MemberReference {
//
// ByReferenceType.cs
//
// Author:
//   Jb Evain (jbevain@gmail.com)
//
// Copyright (c) 2008 - 2010 Jb Evain
//
// Permission is hereby granted, free of charge, to any person obtaining
// a copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to
// permit persons to whom the Software is furnished to do so, subject to
// the following conditions:
//
// The above copyright notice and this permission notice shall be
// included in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//
/* public */ sealed class ByReferenceType : TypeSpecification {
//
// ResourceType.cs
//
// Author:
//   Jb Evain (jbevain@gmail.com)
//
// Copyright (c) 2008 - 2010 Jb Evain
//
// Permission is hereby granted, free of charge, to any person obtaining
// a copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to
// permit persons to whom the Software is furnished to do so, subject to
// the following conditions:
//
// The above copyright notice and this permission notice shall be
// included in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//
/* public */ enum ResourceType {
/* public */ abstract class Resource {
//
// SecurityDeclaration.cs
//
// Author:
//   Jb Evain (jbevain@gmail.com)
//
// Copyright (c) 2008 - 2010 Jb Evain
//
// Permission is hereby granted, free of charge, to any person obtaining
// a copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to
// permit persons to whom the Software is furnished to do so, subject to
// the following conditions:
//
// The above copyright notice and this permission notice shall be
// included in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//
/* public */ enum SecurityAction : ushort {
/* public */ interface ISecurityDeclarationProvider : IMetadataTokenProvider {
/* public */ sealed class SecurityAttribute : ICustomAttribute {
/* public */ sealed class SecurityDeclaration {
//
// SentinelType.cs
//
// Author:
//   Jb Evain (jbevain@gmail.com)
//
// Copyright (c) 2008 - 2010 Jb Evain
//
// Permission is hereby granted, free of charge, to any person obtaining
// a copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to
// permit persons to whom the Software is furnished to do so, subject to
// the following conditions:
//
// The above copyright notice and this permission notice shall be
// included in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//
/* public */ sealed class SentinelType : TypeSpecification {
//
// TargetRuntime.cs
//
// Author:
//   Jb Evain (jbevain@gmail.com)
//
// Copyright (c) 2008 - 2010 Jb Evain
//
// Permission is hereby granted, free of charge, to any person obtaining
// a copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to
// permit persons to whom the Software is furnished to do so, subject to
// the following conditions:
//
// The above copyright notice and this permission notice shall be
// included in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//
/* public */ enum TargetRuntime {
//
// TypeAttributes.cs
//
// Author:
//   Jb Evain (jbevain@gmail.com)
//
// Copyright (c) 2008 - 2010 Jb Evain
//
// Permission is hereby granted, free of charge, to any person obtaining
// a copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to
// permit persons to whom the Software is furnished to do so, subject to
// the following conditions:
//
// The above copyright notice and this permission notice shall be
// included in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//
/* public */ enum TypeAttributes : uint {
// Visibility attributes
// Use this mask to retrieve visibility information
// Class has no public scope
// Class has public scope
// Class is nested with public visibility
// Class is nested with private visibility
// Class is nested with family visibility
// Class is nested with assembly visibility
// Class is nested with family and assembly visibility
// Class is nested with family or assembly visibility
// Class layout attributes
// Use this mask to retrieve class layout information
// Class fields are auto-laid out
// Class fields are laid out sequentially
// Layout is supplied explicitly
// Class semantics attributes
// Use this mask to retrieve class semantics information
// Type is a class
// Type is an interface
// Special semantics in addition to class semantics
// Class is abstract
// Class cannot be extended
// Class name is special
// Implementation attributes
// Class/Interface is imported
// Class is serializable
// String formatting attributes
// Use this mask to retrieve string information for native interop
// LPSTR is interpreted as ANSI
// LPSTR is interpreted as Unicode
// LPSTR is interpreted automatically
// Class initialization attributes
// Initialize the class before first static field access
// Additional flags
// CLI provides 'special' behavior, depending upon the name of the Type
// Type has security associate with it
// Exported type is a type forwarder
//
// TypeDefinition.cs
//
// Author:
//   Jb Evain (jbevain@gmail.com)
//
// Copyright (c) 2008 - 2010 Jb Evain
//
// Permission is hereby granted, free of charge, to any person obtaining
// a copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to
// permit persons to whom the Software is furnished to do so, subject to
// the following conditions:
//
// The above copyright notice and this permission notice shall be
// included in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//
/* public */ sealed class TypeDefinition : TypeReference, IMemberDefinition, ISecurityDeclarationProvider {
//
// TypeDefinitionCollection.cs
//
// Author:
//   Jb Evain (jbevain@gmail.com)
//
// Copyright (c) 2008 - 2010 Jb Evain
//
// Permission is hereby granted, free of charge, to any person obtaining
// a copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to
// permit persons to whom the Software is furnished to do so, subject to
// the following conditions:
//
// The above copyright notice and this permission notice shall be
// included in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//
//
// TypeParser.cs
//
// Author:
//   Jb Evain (jbevain@gmail.com)
//
// Copyright (c) 2008 - 2010 Jb Evain
//
// Permission is hereby granted, free of charge, to any person obtaining
// a copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to
// permit persons to whom the Software is furnished to do so, subject to
// the following conditions:
//
// The above copyright notice and this permission notice shall be
// included in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//
//
// TypeReference.cs
//
// Author:
//   Jb Evain (jbevain@gmail.com)
//
// Copyright (c) 2008 - 2010 Jb Evain
//
// Permission is hereby granted, free of charge, to any person obtaining
// a copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to
// permit persons to whom the Software is furnished to do so, subject to
// the following conditions:
//
// The above copyright notice and this permission notice shall be
// included in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//
/* public */ enum MetadataType : byte {
/* public */ class TypeReference : MemberReference, IGenericParameterProvider, IGenericContext {
//
// TypeSpecification.cs
//
// Author:
//   Jb Evain (jbevain@gmail.com)
//
// Copyright (c) 2008 - 2010 Jb Evain
//
// Permission is hereby granted, free of charge, to any person obtaining
// a copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to
// permit persons to whom the Software is furnished to do so, subject to
// the following conditions:
//
// The above copyright notice and this permission notice shall be
// included in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//
/* public */ abstract class TypeSpecification : TypeReference {
//
// TypeSystem.cs
//
// Author:
//   Jb Evain (jbevain@gmail.com)
//
// Copyright (c) 2008 - 2010 Jb Evain
//
// Permission is hereby granted, free of charge, to any person obtaining
// a copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to
// permit persons to whom the Software is furnished to do so, subject to
// the following conditions:
//
// The above copyright notice and this permission notice shall be
// included in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//
/* public */ abstract class TypeSystem {
//
// VariantType.cs
//
// Author:
//   Jb Evain (jbevain@gmail.com)
//
// Copyright (c) 2008 - 2010 Jb Evain
//
// Permission is hereby granted, free of charge, to any person obtaining
// a copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to
// permit persons to whom the Software is furnished to do so, subject to
// the following conditions:
//
// The above copyright notice and this permission notice shall be
// included in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//
/* public */ enum VariantType {
//
// Code.cs
//
// Author:
//   Jb Evain (jbevain@gmail.com)
//
// Copyright (c) 2008 - 2010 Jb Evain
//
// Permission is hereby granted, free of charge, to any person obtaining
// a copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to
// permit persons to whom the Software is furnished to do so, subject to
// the following conditions:
//
// The above copyright notice and this permission notice shall be
// included in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//
/* public */ enum Code {
//
// CodeReader.cs
//
// Author:
//   Jb Evain (jbevain@gmail.com)
//
// Copyright (c) 2008 - 2010 Jb Evain
//
// Permission is hereby granted, free of charge, to any person obtaining
// a copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to
// permit persons to whom the Software is furnished to do so, subject to
// the following conditions:
//
// The above copyright notice and this permission notice shall be
// included in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//
// tiny
// fat
// inline ?
// tiny
// fat
//
// CodeWriter.cs
//
// Author:
//   Jb Evain (jbevain@gmail.com)
//
// Copyright (c) 2008 - 2010 Jb Evain
//
// Permission is hereby granted, free of charge, to any person obtaining
// a copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to
// permit persons to whom the Software is furnished to do so, subject to
// the following conditions:
//
// The above copyright notice and this permission notice shall be
// included in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//
// tiny
// fat
// init locals
// more sections
//
// Document.cs
//
// Author:
//   Jb Evain (jbevain@gmail.com)
//
// Copyright (c) 2008 - 2010 Jb Evain
//
// Permission is hereby granted, free of charge, to any person obtaining
// a copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to
// permit persons to whom the Software is furnished to do so, subject to
// the following conditions:
//
// The above copyright notice and this permission notice shall be
// included in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//
/* public */ enum DocumentType {
/* public */ enum DocumentHashAlgorithm {
/* public */ enum DocumentLanguage {
/* public */ enum DocumentLanguageVendor {
/* public */ sealed class Document {
//
// ExceptionHandler.cs
//
// Author:
//   Jb Evain (jbevain@gmail.com)
//
// Copyright (c) 2008 - 2010 Jb Evain
//
// Permission is hereby granted, free of charge, to any person obtaining
// a copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to
// permit persons to whom the Software is furnished to do so, subject to
// the following conditions:
//
// The above copyright notice and this permission notice shall be
// included in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//
/* public */ enum ExceptionHandlerType {
/* public */ sealed class ExceptionHandler {
//
// ILProcessor.cs
//
// Author:
//   Jb Evain (jbevain@gmail.com)
//
// Copyright (c) 2008 - 2010 Jb Evain
//
// Permission is hereby granted, free of charge, to any person obtaining
// a copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to
// permit persons to whom the Software is furnished to do so, subject to
// the following conditions:
//
// The above copyright notice and this permission notice shall be
// included in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//
/* public */ sealed class ILProcessor {
//
// Instruction.cs
//
// Author:
//   Jb Evain (jbevain@gmail.com)
//
// Copyright (c) 2008 - 2010 Jb Evain
//
// Permission is hereby granted, free of charge, to any person obtaining
// a copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to
// permit persons to whom the Software is furnished to do so, subject to
// the following conditions:
//
// The above copyright notice and this permission notice shall be
// included in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//
/* public */ sealed class Instruction {
//
// MethodBody.cs
//
// Author:
//   Jb Evain (jbevain@gmail.com)
//
// Copyright (c) 2008 - 2010 Jb Evain
//
// Permission is hereby granted, free of charge, to any person obtaining
// a copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to
// permit persons to whom the Software is furnished to do so, subject to
// the following conditions:
//
// The above copyright notice and this permission notice shall be
// included in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//
/* public */ sealed class MethodBody : IVariableDefinitionProvider {
/* public */ interface IVariableDefinitionProvider {
//
// OpCode.cs
//
// Author:
//   Jb Evain (jbevain@gmail.com)
//
// Copyright (c) 2008 - 2010 Jb Evain
//
// Permission is hereby granted, free of charge, to any person obtaining
// a copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to
// permit persons to whom the Software is furnished to do so, subject to
// the following conditions:
//
// The above copyright notice and this permission notice shall be
// included in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//
/* public */ enum FlowControl {
/* public */ enum OpCodeType {
/* public */ enum OperandType {
/* public */ enum StackBehaviour {
/* public */ struct OpCode {
// added by spouliot to match Cecil existing definitions
// added by spouliot to match Cecil existing definitions
//
// OpCodes.cs
//
// Author:
//   Jb Evain (jbevain@gmail.com)
//
// Copyright (c) 2008 - 2010 Jb Evain
//
// Permission is hereby granted, free of charge, to any person obtaining
// a copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to
// permit persons to whom the Software is furnished to do so, subject to
// the following conditions:
//
// The above copyright notice and this permission notice shall be
// included in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//
/* public */ static class OpCodes {
//
// SequencePoint.cs
//
// Author:
//   Jb Evain (jbevain@gmail.com)
//
// Copyright (c) 2008 - 2010 Jb Evain
//
// Permission is hereby granted, free of charge, to any person obtaining
// a copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to
// permit persons to whom the Software is furnished to do so, subject to
// the following conditions:
//
// The above copyright notice and this permission notice shall be
// included in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//
/* public */ sealed class SequencePoint {
//
// Symbols.cs
//
// Author:
//   Jb Evain (jbevain@gmail.com)
//
// Copyright (c) 2008 - 2010 Jb Evain
//
// Permission is hereby granted, free of charge, to any person obtaining
// a copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to
// permit persons to whom the Software is furnished to do so, subject to
// the following conditions:
//
// The above copyright notice and this permission notice shall be
// included in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//
/* public */ struct ImageDebugDirectory {
/* public */ sealed class Scope : IVariableDefinitionProvider {
/* public */ struct InstructionSymbol {
/* public */ sealed class MethodSymbols {
/* public */ delegate Instruction InstructionMapper(int offset);
/* public */ interface ISymbolReader : IDisposable {
/* public */ interface ISymbolReaderProvider {
/* public */ interface ISymbolWriter : IDisposable {
/* public */ interface ISymbolWriterProvider {
//
// VariableDefinition.cs
//
// Author:
//   Jb Evain (jbevain@gmail.com)
//
// Copyright (c) 2008 - 2010 Jb Evain
//
// Permission is hereby granted, free of charge, to any person obtaining
// a copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to
// permit persons to whom the Software is furnished to do so, subject to
// the following conditions:
//
// The above copyright notice and this permission notice shall be
// included in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//
/* public */ sealed class VariableDefinition : VariableReference {
//
// VariableReference.cs
//
// Author:
//   Jb Evain (jbevain@gmail.com)
//
// Copyright (c) 2008 - 2010 Jb Evain
//
// Permission is hereby granted, free of charge, to any person obtaining
// a copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to
// permit persons to whom the Software is furnished to do so, subject to
// the following conditions:
//
// The above copyright notice and this permission notice shall be
// included in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//
/* public */ abstract class VariableReference {
//
// BlobHeap.cs
//
// Author:
//   Jb Evain (jbevain@gmail.com)
//
// Copyright (c) 2008 - 2010 Jb Evain
//
// Permission is hereby granted, free of charge, to any person obtaining
// a copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to
// permit persons to whom the Software is furnished to do so, subject to
// the following conditions:
//
// The above copyright notice and this permission notice shall be
// included in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//
//
// TableHeapBuffer.cs
//
// Author:
//   Jb Evain (jbevain@gmail.com)
//
// Copyright (c) 2008 - 2010 Jb Evain
//
// Permission is hereby granted, free of charge, to any person obtaining
// a copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to
// permit persons to whom the Software is furnished to do so, subject to
// the following conditions:
//
// The above copyright notice and this permission notice shall be
// included in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//
// Reserved
// MajorVersion
// MinorVersion
// HeapSizes
// Reserved2
// Valid
// Sorted
//
// CodedIndex.cs
//
// Author:
//   Jb Evain (jbevain@gmail.com)
//
// Copyright (c) 2008 - 2010 Jb Evain
//
// Permission is hereby granted, free of charge, to any person obtaining
// a copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to
// permit persons to whom the Software is furnished to do so, subject to
// the following conditions:
//
// The above copyright notice and this permission notice shall be
// included in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//
//
// ElementType.cs
//
// Author:
//   Jb Evain (jbevain@gmail.com)
//
// Copyright (c) 2008 - 2010 Jb Evain
//
// Permission is hereby granted, free of charge, to any person obtaining
// a copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to
// permit persons to whom the Software is furnished to do so, subject to
// the following conditions:
//
// The above copyright notice and this permission notice shall be
// included in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//
// Followed by <type> token
// Followed by <type> token
// Followed by <type> token
// Followed by <type> token
// Followed by generic parameter number
// <type> <rank> <boundsCount> <bound1>  <loCount> <lo1>
// <type> <type-arg-count> <type-1> ... <type-n> */
// System.IntPtr
// System.UIntPtr
// Followed by full method signature
// System.Object
// Single-dim array with 0 lower bound
// Followed by generic parameter number
// Required modifier : followed by a TypeDef or TypeRef token
// Optional modifier : followed by a TypeDef or TypeRef token
// Implemented within the CLI
// Or'd with following element types
// Sentinel for varargs method signature
// Denotes a local variable that points at a pinned object
// special undocumented constants
//
// GuidHeap.cs
//
// Author:
//   Jb Evain (jbevain@gmail.com)
//
// Copyright (c) 2008 - 2010 Jb Evain
//
// Permission is hereby granted, free of charge, to any person obtaining
// a copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to
// permit persons to whom the Software is furnished to do so, subject to
// the following conditions:
//
// The above copyright notice and this permission notice shall be
// included in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//
//
// Heap.cs
//
// Author:
//   Jb Evain (jbevain@gmail.com)
//
// Copyright (c) 2008 - 2010 Jb Evain
//
// Permission is hereby granted, free of charge, to any person obtaining
// a copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to
// permit persons to whom the Software is furnished to do so, subject to
// the following conditions:
//
// The above copyright notice and this permission notice shall be
// included in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//
//
// MetadataToken.cs
//
// Author:
//   Jb Evain (jbevain@gmail.com)
//
// Copyright (c) 2008 - 2010 Jb Evain
//
// Permission is hereby granted, free of charge, to any person obtaining
// a copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to
// permit persons to whom the Software is furnished to do so, subject to
// the following conditions:
//
// The above copyright notice and this permission notice shall be
// included in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//
/* public */ struct MetadataToken {
//
// Row.cs
//
// Author:
//   Jb Evain (jbevain@gmail.com)
//
// Copyright (c) 2008 - 2010 Jb Evain
//
// Permission is hereby granted, free of charge, to any person obtaining
// a copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to
// permit persons to whom the Software is furnished to do so, subject to
// the following conditions:
//
// The above copyright notice and this permission notice shall be
// included in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//
//
// StringHeap.cs
//
// Author:
//   Jb Evain (jbevain@gmail.com)
//
// Copyright (c) 2008 - 2010 Jb Evain
//
// Permission is hereby granted, free of charge, to any person obtaining
// a copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to
// permit persons to whom the Software is furnished to do so, subject to
// the following conditions:
//
// The above copyright notice and this permission notice shall be
// included in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//
//
// TableHeap.cs
//
// Author:
//   Jb Evain (jbevain@gmail.com)
//
// Copyright (c) 2008 - 2010 Jb Evain
//
// Permission is hereby granted, free of charge, to any person obtaining
// a copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to
// permit persons to whom the Software is furnished to do so, subject to
// the following conditions:
//
// The above copyright notice and this permission notice shall be
// included in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//
//
// TokenType.cs
//
// Author:
//   Jb Evain (jbevain@gmail.com)
//
// Copyright (c) 2008 - 2010 Jb Evain
//
// Permission is hereby granted, free of charge, to any person obtaining
// a copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to
// permit persons to whom the Software is furnished to do so, subject to
// the following conditions:
//
// The above copyright notice and this permission notice shall be
// included in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//
/* public */ enum TokenType : uint {
//
// UserStringHeap.cs
//
// Author:
//   Jb Evain (jbevain@gmail.com)
//
// Copyright (c) 2008 - 2010 Jb Evain
//
// Permission is hereby granted, free of charge, to any person obtaining
// a copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to
// permit persons to whom the Software is furnished to do so, subject to
// the following conditions:
//
// The above copyright notice and this permission notice shall be
// included in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//
//
// Utilities.cs
//
// Author:
//   Jb Evain (jbevain@gmail.com)
//
// Copyright (c) 2008 - 2010 Jb Evain
//
// Permission is hereby granted, free of charge, to any person obtaining
// a copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to
// permit persons to whom the Software is furnished to do so, subject to
// the following conditions:
//
// The above copyright notice and this permission notice shall be
// included in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//
//
// BinaryStreamReader.cs
//
// Author:
//   Jb Evain (jbevain@gmail.com)
//
// Copyright (c) 2008 - 2010 Jb Evain
//
// Permission is hereby granted, free of charge, to any person obtaining
// a copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to
// permit persons to whom the Software is furnished to do so, subject to
// the following conditions:
//
// The above copyright notice and this permission notice shall be
// included in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//
//
// BinaryStreamWriter.cs
//
// Author:
//   Jb Evain (jbevain@gmail.com)
//
// Copyright (c) 2008 - 2010 Jb Evain
//
// Permission is hereby granted, free of charge, to any person obtaining
// a copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to
// permit persons to whom the Software is furnished to do so, subject to
// the following conditions:
//
// The above copyright notice and this permission notice shall be
// included in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//
//
// ByteBuffer.cs
//
// Author:
//   Jb Evain (jbevain@gmail.com)
//
// Copyright (c) 2008 - 2010 Jb Evain
//
// Permission is hereby granted, free of charge, to any person obtaining
// a copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to
// permit persons to whom the Software is furnished to do so, subject to
// the following conditions:
//
// The above copyright notice and this permission notice shall be
// included in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//
//
// ByteBufferEqualityComparer.cs
//
// Author:
//   Jb Evain (jbevain@gmail.com)
//
// Copyright (c) 2008 - 2010 Jb Evain
//
// Permission is hereby granted, free of charge, to any person obtaining
// a copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to
// permit persons to whom the Software is furnished to do so, subject to
// the following conditions:
//
// The above copyright notice and this permission notice shall be
// included in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//
//
// DataDirectory.cs
//
// Author:
//   Jb Evain (jbevain@gmail.com)
//
// Copyright (c) 2008 - 2010 Jb Evain
//
// Permission is hereby granted, free of charge, to any person obtaining
// a copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to
// permit persons to whom the Software is furnished to do so, subject to
// the following conditions:
//
// The above copyright notice and this permission notice shall be
// included in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//
//
// Image.cs
//
// Author:
//   Jb Evain (jbevain@gmail.com)
//
// Copyright (c) 2008 - 2010 Jb Evain
//
// Permission is hereby granted, free of charge, to any person obtaining
// a copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to
// permit persons to whom the Software is furnished to do so, subject to
// the following conditions:
//
// The above copyright notice and this permission notice shall be
// included in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//
//
// ImageReader.cs
//
// Author:
//   Jb Evain (jbevain@gmail.com)
//
// Copyright (c) 2008 - 2010 Jb Evain
//
// Permission is hereby granted, free of charge, to any person obtaining
// a copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to
// permit persons to whom the Software is furnished to do so, subject to
// the following conditions:
//
// The above copyright notice and this permission notice shall be
// included in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//
// - DOSHeader
// PE					2
// Start				58
// Lfanew				4
// End					64
// - PEFileHeader
// Machine				2
// NumberOfSections		2
// TimeDateStamp		4
// PointerToSymbolTable	4
// NumberOfSymbols		4
// OptionalHeaderSize	2
// Characteristics		2
// ImageCharacteristics.Dll
// SubSystem.WindowsGui || SubSystem.WindowsCeGui
// - PEOptionalHeader
//   - StandardFieldsHeader
// Magic				2
//						pe32 || pe64
// LMajor				1
// LMinor				1
// CodeSize				4
// InitializedDataSize	4
// UninitializedDataSize4
// EntryPointRVA		4
// BaseOfCode			4
// BaseOfData			4 || 0
//   - NTSpecificFieldsHeader
// ImageBase			4 || 8
// SectionAlignment		4
// FileAlignement		4
// OSMajor				2
// OSMinor				2
// UserMajor			2
// UserMinor			2
// SubSysMajor			2
// SubSysMinor			2
// Reserved				4
// ImageSize			4
// HeaderSize			4
// FileChecksum			4
// SubSystem			2
// DLLFlags				2
// StackReserveSize		4 || 8
// StackCommitSize		4 || 8
// HeapReserveSize		4 || 8
// HeapCommitSize		4 || 8
// LoaderFlags			4
// NumberOfDataDir		4
//   - DataDirectoriesHeader
// ExportTable			8
// ImportTable			8
// ResourceTable		8
// ExceptionTable		8
// CertificateTable		8
// BaseRelocationTable	8
// Debug				8
// Copyright			8
// GlobalPtr			8
// TLSTable				8
// LoadConfigTable		8
// BoundImport			8
// IAT					8
// DelayImportDescriptor8
// CLIHeader			8
// Reserved				8
// Name
// VirtualSize		4
// VirtualAddress	4
// SizeOfRawData	4
// PointerToRawData	4
// PointerToRelocations		4
// PointerToLineNumbers		4
// NumberOfRelocations		2
// NumberOfLineNumbers		2
// Characteristics			4
// - CLIHeader
// Cb						4
// MajorRuntimeVersion		2
// MinorRuntimeVersion		2
// Metadata					8
// Flags					4
// EntryPointToken			4
// Resources				8
// StrongNameSignature		8
// CodeManagerTable			8
// VTableFixups				8
// ExportAddressTableJumps	8
// ManagedNativeHeader		8
// MajorVersion			2
// MinorVersion			2
// Reserved				4
// Flags		2
// Offset		4
// relative to the section start
// Size			4
// Reserved			4
// MajorVersion		1
// MinorVersion		1
// HeapSizes		1
// Reserved2		1
// Valid			8
// Sorted			8
// header
// Generation
// Name
// Mvid, EncId, EncBaseId
// ResolutionScope
// Name, Namespace
// Flags
// Name, Namespace
// BaseType
// FieldList
// MethodList
// Field
// Flags
// Name
// Signature
// Method
// Rva 4, ImplFlags 2, Flags 2
// Name
// Signature
// ParamList
// Param
// Flags 2, Sequence 2
// Name
// Class
// Interface
// Class
// Name
// Signature
// Type
// Parent
// Value
// Parent
// Type
// Value
// Parent
// NativeType
// Action
// Parent
// PermissionSet
// PackingSize 2, ClassSize 4
// Parent
// Offset
// Field
// Signature
// Parent
// EventList
// Event
// Flags
// Name
// EventType
// Parent
// PropertyList
// Property
// Flags
// Name
// Type
// Semantics
// Method
// Association
// Class
// MethodBody
// MethodDeclaration
// Name
// Signature
// MappingFlags
// MemberForwarded
// ImportName
// ImportScope
// RVA
// Field
// HashAlgId 4, Version 4 * 2, Flags 4
// PublicKey
// Name, Culture
// Processor
// Platform 4, Version 2 * 4
// Version 2 * 4 + Flags 4
// PublicKeyOrToken, HashValue
// Name, Culture
// Processor
// AssemblyRef
// Platform 4, Version 2 * 4
// AssemblyRef
// Flags
// Name
// HashValue
// Flags 4, TypeDefId 4
// Name, Namespace
// Implementation
// Offset, Flags
// Name
// Implementation
// NestedClass
// EnclosingClass
// Number, Flags
// Owner
// Name
// Method
// Instantiation
// Owner
// Constraint
//
// ImageWriter.cs
//
// Author:
//   Jb Evain (jbevain@gmail.com)
//
// Copyright (c) 2008 - 2010 Jb Evain
//
// Permission is hereby granted, free of charge, to any person obtaining
// a copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to
// permit persons to whom the Software is furnished to do so, subject to
// the following conditions:
//
// The above copyright notice and this permission notice shall be
// included in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//
// text + reloc
// dos header start
// lfanew
// dos header end
// Magic
// Machine
// NumberOfSections
// PointerToSymbolTable
// NumberOfSymbols
// SizeOfOptionalHeader
// ExecutableImage | (pe64 ? 32BitsMachine : LargeAddressAware)
// Characteristics
// Magic
// LMajor
// LMinor
// CodeSize
// InitializedDataSize
// UninitializedDataSize
// EntryPointRVA
// BaseOfCode
// BaseOfData
// ImageBase
// ImageBase
// SectionAlignment
// FileAlignment
// OSMajor
// OSMinor
// UserMajor
// UserMinor
// SubSysMajor
// SubSysMinor
// Reserved
// ImageSize
// HeaderSize
// Checksum
// SubSystem
// DLLFlags
// LoaderFlags
// NumberOfDataDir
// ExportTable
// ImportTable
// ResourceTable
// ExceptionTable
// CertificateTable
// BaseRelocationTable
// Copyright
// GlobalPtr
// TLSTable
// LoadConfigTable
// BoundImport
// IAT
// DelayImportDesc
// CLIHeader
// Reserved
// PointerToRelocations
// PointerToLineNumbers
// NumberOfRelocations
// NumberOfLineNumbers
// ImportAddressTable
// CLIHeader
// CodeManagerTable
// VTableFixups
// ExportAddressTableJumps
// ManagedNativeHeader
// Code
// Resources
// Data
// StrongNameSignature
// stays blank
// MetadataHeader
// DebugDirectory
// ImportDirectory
// StartupStub
// Signature
// MajorVersion
// MinorVersion
// Reserved
// Flags
// #~
// #Strings
// #US
// GUID
// #Blob
// ImportLookupTable
// DateTimeStamp
// ForwarderChain
// ImportLookupTable
// ImportHintNameTable
// Hint
// PageRVA
// Block Size
// MetadataHeader
// #~ header
// #Strings header
// #US header
// #GUID header
// #Blob header
// in fx 2.0 the key may be from 384 to 16384 bits
// so we must calculate the signature size based on
// the size of the public key (minus the 32 byte header)
// note: size == 16 for the ECMA "key" which is replaced
// by the runtime with a 1024 bits key (128 bytes)
// default strongname signature size
//
// Section.cs
//
// Author:
//   Jb Evain (jbevain@gmail.com)
//
// Copyright (c) 2008 - 2010 Jb Evain
//
// Permission is hereby granted, free of charge, to any person obtaining
// a copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to
// permit persons to whom the Software is furnished to do so, subject to
// the following conditions:
//
// The above copyright notice and this permission notice shall be
// included in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//
//
// TextMap.cs
//
// Author:
//   Jb Evain (jbevain@gmail.com)
//
// Copyright (c) 2008 - 2010 Jb Evain
//
// Permission is hereby granted, free of charge, to any person obtaining
// a copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to
// permit persons to whom the Software is furnished to do so, subject to
// the following conditions:
//
// The above copyright notice and this permission notice shall be
// included in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//
// Metadata
// End Metadata
/*Enum.GetValues (typeof (TextSegment)).Length*/];
//
// Collection.cs
//
// Author:
//   Jb Evain (jbevain@gmail.com)
//
// Copyright (c) 2008 - 2010 Jb Evain
//
// Permission is hereby granted, free of charge, to any person obtaining
// a copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to
// permit persons to whom the Software is furnished to do so, subject to
// the following conditions:
//
// The above copyright notice and this permission notice shall be
// included in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//
/* public */ class Collection<T> : IList<T>, IList {
//
// CryptoConvert.cs - Crypto Convertion Routines
//
// Author:
//	Sebastien Pouliot  <sebastien@ximian.com>
//
// (C) 2003 Motus Technologies Inc. (http://www.motus.com)
// Copyright (C) 2004-2006 Novell Inc. (http://www.novell.com)
//
// Permission is hereby granted, free of charge, to any person obtaining
// a copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to
// permit persons to whom the Software is furnished to do so, subject to
// the following conditions:
//
// The above copyright notice and this permission notice shall be
// included in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//
// PRIVATEKEYBLOB (0x07)
// Version (0x02)
// Reserved (word)
// DWORD magic = RSA2
// ALGID (CALG_RSA_SIGN, CALG_RSA_KEYX, ...)
// int algId = ToInt32LE (blob, offset+4);
// DWORD bitlen
// DWORD public exponent
// BYTE modulus[rsapubkey.bitlen/8];
// BYTE prime1[rsapubkey.bitlen/16];
// BYTE prime2[rsapubkey.bitlen/16];
// BYTE exponent1[rsapubkey.bitlen/16];
// BYTE exponent2[rsapubkey.bitlen/16];
// BYTE coefficient[rsapubkey.bitlen/16];
// ok, this is hackish but CryptoAPI support it so...
// note: only works because CRT is used by default
// http://bugzilla.ximian.com/show_bug.cgi?id=57941
// must be allocated
// BYTE privateExponent[rsapubkey.bitlen/8];
// this may cause problem when this code is run under
// the SYSTEM identity on Windows (e.g. ASP.NET). See
// http://bugzilla.ximian.com/show_bug.cgi?id=77559
// rethrow original, not the later, exception if this fails
// PUBLICKEYBLOB (0x06)
// Version (0x02)
// Reserved (word)
// DWORD magic = RSA1
// ALGID (CALG_RSA_SIGN, CALG_RSA_KEYX, ...)
// int algId = ToInt32LE (blob, offset+4);
// DWORD bitlen
// DWORD public exponent
// BYTE modulus[rsapubkey.bitlen/8];
// this may cause problem when this code is run under
// the SYSTEM identity on Windows (e.g. ASP.NET). See
// http://bugzilla.ximian.com/show_bug.cgi?id=77559
// PRIVATEKEYBLOB
// PUBLICKEYBLOB
// this could be a public key inside an header
// like "sn -e" would produce
//
// CryptoService.cs
//
// Author:
//   Jb Evain (jbevain@gmail.com)
//
// Copyright (c) 2008 - 2010 Jb Evain
//
// Permission is hereby granted, free of charge, to any person obtaining
// a copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to
// permit persons to whom the Software is furnished to do so, subject to
// the following conditions:
//
// The above copyright notice and this permission notice shall be
// included in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//
// Most of this code has been adapted
// from Jeroen Frijters' fantastic work
// in IKVM.Reflection.Emit. Thanks!
//
// Empty.cs
//
// Author:
//   Jb Evain (jbevain@gmail.com)
//
// Copyright (c) 2008 - 2010 Jb Evain
//
// Permission is hereby granted, free of charge, to any person obtaining
// a copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to
// permit persons to whom the Software is furnished to do so, subject to
// the following conditions:
//
// The above copyright notice and this permission notice shall be
// included in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//
// BufferPosition.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// A line and column position in a source buffer.
/// </summary>
/// <summary>
/// The line number of the position (0 based).
/// </summary>
/// <summary>
/// The column number of the position (0 based).
/// </summary>
/// <summary>
/// The character offset of the position (0 based).
/// </summary>
/// <summary>
/// Converts the position to a string suitable for display in an error _message
/// </summary>
// Add 1 to convert line/column indexes into numbers
// Error.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// ensure that _errorTable are unique
/// <summary>
/// Error number. Should be unique for a given component.
/// </summary>
/// <summary>
/// Warning Level of the _message. 0 means its an Error.
/// </summary>
/// <summary>
/// Message template.
/// </summary>
/// <summary>
/// Is this error fatal.
/// </summary>
/// <summary>
/// Is this an error as opposed to a warning.
/// </summary>
/// <summary>
/// Is this a warning as opposed to an error.
/// </summary>
// ErrorEventArgs.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// ErrorEventHandler.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// FileErrorEventArgs.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// FileErrorEventHandler.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// FileLexer.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// Preprocesses and Lexes a C# compilation Unit.
/// </summary>
/// <summary>
/// Lexes a compilation unit.
/// </summary>
/// <param name="text"> The text to lex. </param>
/// <param name="defines"> The set of preprocessor symbols defined in source. 
/// Is modified to include results of #define/#undef found in this compilation unit. </param>
/// <param name="lineMap">The LineMap contains the source text to file/line mapping
/// as a result of #line directives. </param>
/// <param name="includeComments"> Should comment tokens be generated. </param>
/// <returns></returns>
// initialize
/// <summary>
/// Returns whether a character is a C# line separator.
/// </summary>
// have more than BOF
// #line hidden is for the weak
// no pragma's suported yet
// first token is BOF
// FileParser.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// Preprocesses, Lexes and Parses a C# Compilation Unit
/// Uses a FileLexer and a Parser object.
/// </summary>
/// <summary>
/// Event to receive error notifications on. Subscribe to this event before calling Parse.
/// </summary>
/// <summary>
/// Preprocesses, Lexes and Parses a C# compilation unit. Subscribe to the OnError
/// event before calling this method to receive error notifications.
/// After calling Parse, the Defines property contains the list of preprocessor
/// symbols defined as a result of #define and #undef directives in this
/// compilation unit.
/// </summary>
// FilePosition.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// A position in a source file.
/// </summary>
/// <summary>
/// Returns a string suitable for display in an error _message.
/// </summary>
// Keywords.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// C# Keywords
/// </summary>
/// <summary>
/// Initializes Keywords object. Adds all keywords to _nameTable.
/// </summary>
/// <summary>
/// Returns true if name is a C# keyword
/// </summary>
// Lexer.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// Lexes C# source code. Does not handle # preprocessor directives.
/// </summary>
/// <summary>
/// Lexes a block of C# text.
/// Does not handle preprocessor directives.
/// Will stop at EOF or before a # found as the first non-whitespace character
/// on a line. Does not include comment tokens.
/// </summary>
/// <param name="text"> Buffer containing the text to lex. </param>
/// <param name="tokenList"> List of tokens to add to. </param>
/// <returns> true if a preprocessor directive was found, or false on end of buffer. </returns>
/// <summary>
/// Lexes a block of C# text.
/// Does not handle preprocessor directives.
/// Will stop at EOF or before a # found as the first non-whitespace character
/// on a line. 
/// </summary>
/// <param name="text"> Buffer containing the text to lex. </param>
/// <param name="tokenList"> List of tokens to add to. </param>
/// <param name="includeComments"> Should comment tokens be generated. </param>
/// <returns> true if a preprocessor directive was found, or false on end of buffer. </returns>
// get the tokens
// pre-processor directive
/// <summary>
/// Event to subscribe to for Lex errors.
/// </summary>
// operators
// literals
// char literal
// string literal
// verbatim string literal
// this is the one place where a CR/LF pair is significant
// hexadecimal constant
// decimal integer constant
// real constant
// catch overflow exceptions from the numeric parse
// check for keywords
// integer suffixes
// floating point suffixes
// unicode esape
// hex digits
// unicode surrogates
/// <summary>
/// Tests if ch is a whitespace character
/// </summary>
// line separators are whitespace
// regular whitespace
// handle odd unicode whitespace
/// <summary>
/// Tests if ch is a line separator character.
/// </summary>
/// <summary>
/// Tests if ch is a decimal digit.
/// </summary>
/// <summary>
/// Tests if ch is any valid identifier character.
/// </summary>
/// <summary>
/// Tests if ch is a valid hexadecimal digit.
/// </summary>
// LexError.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// LineMap.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// Container of #line directives for a single file.
/// Maps from a buffer TextBufferPosition to a FilePosition.
/// </summary>
/// <summary>
/// Add a #line entry to the map.
/// </summary>
/// <summary>
/// Add a #line entry with a filename to the map.
/// </summary>
/// <summary>
/// Map a buffer position to a position in a file.
/// </summary>
// Name.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// An identifier or keyword. Symbols are stored in a shared NameTable
/// so there is only one instance of a given Name around at a time.
/// You can use the == operator to test if two names from the same
/// NameTable are equal.
/// </summary>
// NameTable.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// A container for unique Names
/// </summary>
/// <summary>
/// The number of Names in the table
/// </summary>
/// <summary>
/// Creates or returns the Name for a string.
/// </summary>
/// <summary>
/// Creates or returns the Name for a string.
/// </summary>
/// <summary>
/// Returns a Name if it exists for value
/// or null if the NameTable doesn't contain value
/// </summary>
/// <summary>
/// Returns a Name if it exists for value
/// or null if the NameTable doesn't contain value
/// </summary>
/// <summary>
/// Returns an iterator over the Names in the table
/// </summary>
/// <summary>
/// Returns true if a Name exists for the string.
/// </summary>
/// <summary>
/// Returns true if a Name exists for the string.
/// </summary>
/// <summary>
/// Provides a common Hash function for strings and Names
/// A Utility class for Name and NameTable classes
/// </summary>
/// <summary>
/// This must match with the string versino below.
/// </summary>
// Hash two characters/one dword at a time.
// Hash the last character, if any.
/// <summary>
/// This must match with the StringBuilder version above.
/// </summary>
// Hash two characters/one dword at a time.
// Hash the last character, if any.
/// <summary>
/// A generally useful hashing function. Uses no state.
/// Hash a 32-bit value to get a much more randomized
/// 32-bit value.
/// </summary>
// Randomize the hash value further by multiplying by a large prime,
// then adding the hi and lo DWORDs of the 64-bit result together. This
// produces an excellent randomization very efficiently.
// this number is prime.
// ParserError.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// Parser.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
//
// some handy predefined names
//
/// <summary>
/// Parses an array of C# tokens. Subscribe to the OnError event before
/// calling Parse to receive errors while Parsing.
/// </summary>
// using-directives
// using-alias-directive
// using-namespace-directive
// identifier
// qualified-name
// alias-qualified-name
// namespace-or-type-name
// namespace-member-declarations
// namespace-declaration
// namespace-body
// type-declaration
// UNDONE use an array of TID's here instead
// check for invalidModifiers
// NOTE: We aren't supporting Nullable<T> for arbitrary T types
//       since users can't create their own value types...
//       So handling here for predefined types takes care of
//       Nullable<T> scenarios
// didn't consume any tokens!
// ensure we make some progress
// this
// type-name.this
// methodName (
// methodName<T> (
// typename.methodName (
// propertyName {
// typename.propertyName {
// typename.methodName<[Attr]T> (
// fieldName
// _id
// ~
// implicit/explicit
// operator
// unary or binary operators
// unary operators
// binary operators
// first accessor
// next accessor
// event
// ensure we make progress in an error case
// block
// empty
// local const
// selection statements
// iteration statements
// labelled statement
// jump statements
// try
// checked
// lock
// fixed
// parse case labels
// parse statements
// ensure we make progress in an error case
// local vardecl or statement list
// postincrment, postdecrement
// method call
// assignment
// preincrement, predecrement
// scan a base type
// scan pointer flags
// scan nullable flags
// scan array flags
// _attributes
// _attributes
// check for cast expression
// must be a primary expression
// postfix operators
// PreprocessorControlLine.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// #error/#warning
// PreprocessorDeclarationLine.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// #define/#undef
// PreprocessorError.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// PreprocessorIdentifierToken.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// PreprocessorIfLine.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// #if/#elif
// PreprocessorIntToken.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// PreprocessorKeywords.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// PreprocessorLexer.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// PreprocessorLine.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// #else/#endif/EOL
// PreprocessorLineNumberLine.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// #line
// PreprocessorLineParser.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// hidden, default
// PreprocessorStringToken.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// PreprocessorTokens.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// PreprocessorTokenType.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// Must be last
// TextBuffer.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// A text buffer which tracks current line and column.
/// </summary>
/// <summary>
/// Returns the current character.
/// </summary>
/// <summary>
/// Peeks ahead index chars from the current position.
/// </summary>
/// <summary>
/// Advances the current position and returns the current character.
/// </summary>
/// <summary>
/// Advances the current position and returns the current character.
/// </summary>
// carriage return followed by a line feed is considered one line break
/// <summary>
/// The line number of the current position.
/// </summary>
/// <summary>
/// The column number of the current postiion.
/// Note that tabs are treated as a single column.
/// </summary>
/// <summary>
/// The current position.
/// </summary>
/// <summary>
/// The total number of characters in the buffer.
/// </summary>
/// <summary>
/// The number of characters remaining in the buffer.
/// </summary>
/// <summary>
/// Is the current position at the end of the buffer.
/// </summary>
/// <summary>
/// Move the current position backwards one character.
/// </summary>
/// <summary>
/// Moves the current position backwards.
/// </summary>
// AssemblyInfo.cs
// Script#/ScriptSharp
// Copyright (c) Nikhil Kothari, 2006. All Rights Reserved.
//
// Assembly Metadata
//
// BaseExpression.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// Represents the base class of the current type context.
/// </summary>
// BaseInitializerExpression.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// BinaryExpression.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// ConditionalExpression.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// DelegateExpression.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// DelegateInvokeExpression.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// FieldExpression.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// EventExpression.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// Expression.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// ExpressionType.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// FieldExpression.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// IndexerExpression.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// InlineScriptExpression.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/* parenthesize */ true) {
// LateBoundExpression.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// LateBoundOperation.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// LiteralExpression.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// Represents constant values, null values, as well as type instances
/// (eg. typeof(x))
/// </summary>
// Numeric literals need to be paranthesized in script when followed by a
// dot member access, so it is not redundant for numbers.
// SymbolExpression.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// MemberExpression.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// MethodExpression.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// NewExpression.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// NewExpression.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// Operator.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// OperatorConverter.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// PropertyExpression.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// ThisExpression.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// Represents the class of the current type context.
/// </summary>
// TypeExpression.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// Represents a type which allows access to static members on the type
/// Note that this does not represent a Type object itself (eg. typeof(x));
/// Instead that is represented by a LiteralExpression.
/// </summary>
// UnaryExpression.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// BlockStatement.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// BreakStatement.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// ContinueStatement.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// EmptyStatement.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// ErrorStatement.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// ExpressionStatement.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// ForInStatement.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// ForStatement.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// IfElseStatement.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// ReturnStatement.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// Statement.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// StatementType.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// SwitchGroup.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// SwitchStatement.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// ThrowStatement.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// TryCatchFinallyStatement.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// VariableDeclarationStatement.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// WhileStatement.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// AnonymousMethodSymbol.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/* name */ String.Empty, (TypeSymbol)containingMember.Parent, returnType) {
// ClassSymbol.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// This is like InheritanceDepth but not the same. It is specific for
// use by the minimization process.
//
// - For imported types this matches actual inheritance depth.
// - When the base class is an imported type, then we also go ahead
//   and use matches inheritance depth as well.
// - Special case: When this type and the base type are both application
//   types, they both have the same minimization depth. (This is done to
//   keep inheritance depth to 0 as much as possible, since this
//   reduces size of minimized identifiers).
// If this classes members did not get transformed,
// return the base classes transformation cookie.
//
// The transformation cookie is accessed when transforming
// members of a derived class, so by then this classes
// members would have been transformed if they needed
// to be. The fact that the transformation cookie is unset
// implies no members on this class needed to be transformed.
// Inheritance should only be assigned to a primary partial class.
// CodeMemberSymbol.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// MethodSymbol.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/* name */ String.Empty, parent, /* associatedType */ parent) {
// DelegateSymbol.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// EnumerationFieldSymbol.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// EnumerationSymbol.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// FieldSymbol.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// FieldSymbol.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// NOTE: This is only called for fields built from application
//       code. We use this information to do const inlining
//       which is scoped to consts defined within the assembly
//       being compiled.
// GenericParameterSymbol.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// ClassSymbol.cs
// Script#/Core/ScriptSharp
// Copyright (c) Nikhil Kothari.
// Copyright (c) Microsoft Corporation.
// This source code is subject to terms and conditions of the Microsoft 
// Public License. A copy of the license can be found in License.txt.
//
// ILocalSymbolTable.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// IndexerSymbol.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// Only include the first parameter.
// InterfaceSymbol.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// IntrinsicType.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// ISymbolTable.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// ISymbolTransformer.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// LocalSymbol.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// MemberSymbol.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// If this member is implementing an interface,
// defer to the interface for our generated name.
// Filter specifies member should be an instance member;
// Visibility of member indicates it is a static member.
// Filter specifies member should be a static member;
// Visibility of member indicates it is an instance member.
// Filter specifies member should be public;
// Visibility of member indicates it is not public or internal
// Filter specifies member should be public or protected;
// Visibility of member indicates it is not public, internal or protected
// MemberVisibility.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// MethodSymbol.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// NamespaceSymbol.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// ParameterMode.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// ParameterSymbol.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// PropertySymbol.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// RecordSymbol.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// ResourcesSymbol.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// Symbol.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// SymbolFilter.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// SymbolImplementation.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// SymbolImplementationFlags.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// SymbolSetTransformer.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// SymbolInternalizer.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// We add the inheritance depth, because two classes in the
// same type hierarchy can have similar named private methods
// which end up overriding each other in the generated script.
// In release mode, these will get transformed into generated
// names, so this type of disambiguation needs to be done for
// debug builds only.
// Can be null if the member was already prefixed with
// a "_"
// If the enum uses named values, then don't transform, as its
// unlikely the code wants to use some random generated name as the
// named value.
// Unlikely that classes adding members to another object contain
// members that should be renamed.
// SymbolObfuscator.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// Shorten the name - the use of "$" ensures it won't conflict with a
// name in the source code.
/* useDigits */ true);
/* useDigits */ false) + "$" + name;
// Interface members do get obfuscated
// Also members with already short names do not get
// obfuscated, as doing so might infact increase the name size
// Set current count to the base classes transformation
// cookie, so the generated one will the next one in
// sequence
// If the enum uses named values, then don't transform, as its
// unlikely the code wants to use some random generated name as the
// named value.
// Unlikely that classes adding members to another object contain
// members that should be renamed.
// SymbolScope.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// SymbolSet.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// The dependency already exists ... copy over identifier
// from the new one to the existing one.
// This is to support the scenario where a dependency got defined
// by virtue of the app using a [ScriptReference] to specify path/delayLoad
// semnatics, and we're finding the imported dependency later on
// such as when a type with a dependency is referred in the code.
// Prepopulate with a placeholder ... if a generic type's member refers to its
// parent type it will use the type being created when the return value is null.
// Split up the namespace into its individual parts, and then
// create namespace symbols for each sub-namespace leading up
// to the full specified namespace
//doc/members/member[@name='{0}']/param[@name='{1}']", id, paramName));
//doc/members/member[@name='{0}']/summary", id));
/// <summary>
/// This maps C# intrinsic types (managed types that have an equivalent
/// C# keyword)
/// </summary>
/* context */ null, SymbolFilter.Types);
/* context */ null, SymbolFilter.Types);
/* context */ null, SymbolFilter.Types);
// Since we included all parent namespaces of the current type's
// namespace, we might run into a namespace that doesn't contain
// any defined types, i.e. doesn't exist.
/* context */ null, SymbolFilter.Types);
/* context */ null, SymbolFilter.Types);
/* context */ null, SymbolFilter.Types);
// SymbolSetDumper.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// DEBUG
// SymbolSetTransformer.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/* excludeImportedTypes */ true) {
// SymbolType.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// TypeSymbol.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// LocalSymbol.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// ArrayNewNodeValidator.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// ArrayTypeNodeValidator.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// CodeModelValidator.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// Validates the code model based on the constrained subset of C# supposed
/// in Script#.
/// </summary>
// No validation required
// valid; continue with children...
// CompilationUnitNodeValidator.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// CustomTypeNodeValidator.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// This is an imported type definition... we'll assume its valid, since
// the set of restrictions for such types is fewer, and different, so
// for now that translates into skipping the members.
// Extern methods are placeholders for creating overload signatures
// Operators don't have a name
/* testCamelCase */ (preserveCase == false))) {
// EnumerationFieldNodeValidator.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// EventDeclarationNodeValidator.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// FieldDeclarationNodeValidator.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// IndexerDeclarationNodeValidator.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// IParseNodeValidator.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// Defines a parse node validator
/// </summary>
// MethodDeclarationNodeValidator.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// NameNodeValidator.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// NamespaceNodeValidator.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// Usage of the System namespace is limited to imported types.
// NewNodeValidator.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// TODO: This is somewhat hacky - it only looks for any type named Dictionary
//       rather than resolving the type and checking if its actually
//       System.Dictionary.
//       This is because validators don't have a reference to the SymbolSet.
// ParameterNodeValidator.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// PropertyDeclarationNodeValidator.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// ThrowNodeValidator.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// TryNodeValidator.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// UnsupportedParseNodeValidator.cs
// Script#/Core/Compiler
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// Raises errors for unsupported and not-yet-implemented C# constructs.
/// </summary>
// Action.cs
// Script#/Libraries/CoreLib
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// Arguments.cs
// Script#/Libraries/CoreLib
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// Provides access to the arguments of the current function.
/// </summary>
/// <summary>
/// Retrieves the arguments list.
/// </summary>
/// <returns>The arguments list.</returns>
/// <summary>
/// Retrieves the number of actual arguments passed to the function.
/// </summary>
/// <returns>The count of arguments.</returns>
/// <summary>
/// Retrieves the specified actual argument value passed to the
/// function by index.
/// </summary>
/// <param name="index">The index of the argument to retrieve.</param>
/// <returns>The value of the specified argument.</returns>
/// <summary>
/// Retrieves the specified actual argument value passed to the
/// function by index.
/// </summary>
/// <param name="index">The index of the argument to retrieve.</param>
/// <typeparam name="T">The type of the return value.</typeparam>
/// <returns>The value of the specified argument.</returns>
// Array.cs
// Script#/Libraries/CoreLib
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// NOTE: Keep in sync with ArrayList and List
/// <summary>
/// Equivalent to the Array type in Javascript.
/// </summary>
// Boolean.cs
// Script#/Libraries/CoreLib
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// Equivalent to the Boolean type in Javascript.
/// </summary>
/// <summary>
/// Enables you to parse a string representation of a boolean value.
/// </summary>
/// <param name="s">The string to be parsed.</param>
/// <returns>The resulting boolean value.</returns>
// Byte.cs
// Script#/Libraries/CoreLib
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// The byte data type which is mapped to the Number type in Javascript.
/// </summary>
/// <summary>
/// Converts the value to its string representation.
/// </summary>
/// <param name="radix">The radix used in the conversion (eg. 10 for decimal, 16 for hexadecimal)</param>
/// <returns>The string representation of the value.</returns>
/// <internalonly />
// Action.cs
// Script#/Libraries/CoreLib
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// CancelEventArgs.cs
// Script#/Libraries/CoreLib
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// The event argument associated with cancelable events.
/// </summary>
/// <summary>
/// Whether the event has been canceled.
/// </summary>
// Char.cs
// Script#/Libraries/CoreLib
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// The char data type which is mapped to the String type in Javascript.
/// </summary>
/// <internalonly />
// CompareCallback.cs
// Script#/Libraries/CoreLib
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// Date.cs
// Script#/Libraries/CoreLib
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// Equivalent to the Date type in Javascript.
/// </summary>
/// <summary>
/// Creates a new instance of Date initialized from the current time.
/// </summary>
/// <summary>
/// Creates a new instance of Date initialized from the specified number of milliseconds.
/// </summary>
/// <param name="milliseconds">Milliseconds since January 1st, 1970.</param>
/// <summary>
/// Creates a new instance of Date initialized from parsing the specified date.
/// </summary>
/// <param name="date"></param>
/// <summary>
/// Creates a new instance of Date.
/// </summary>
/// <param name="year">The full year.</param>
/// <param name="month">The month (0 through 11)</param>
/// <param name="date">The day of the month (1 through # of days in the specified month)</param>
/// <summary>
/// Creates a new instance of Date.
/// </summary>
/// <param name="year">The full year.</param>
/// <param name="month">The month (0 through 11)</param>
/// <param name="date">The day of the month (1 through # of days in the specified month)</param>
/// <param name="hours">The hours (0 through 23)</param>
/// <summary>
/// Creates a new instance of Date.
/// </summary>
/// <param name="year">The full year.</param>
/// <param name="month">The month (0 through 11)</param>
/// <param name="date">The day of the month (1 through # of days in the specified month)</param>
/// <param name="hours">The hours (0 through 23)</param>
/// <param name="minutes">The minutes (0 through 59)</param>
/// <summary>
/// Creates a new instance of Date.
/// </summary>
/// <param name="year">The full year.</param>
/// <param name="month">The month (0 through 11)</param>
/// <param name="date">The day of the month (1 through # of days in the specified month)</param>
/// <param name="hours">The hours (0 through 23)</param>
/// <param name="minutes">The minutes (0 through 59)</param>
/// <param name="seconds">The seconds (0 through 59)</param>
/// <summary>
/// Creates a new instance of Date.
/// </summary>
/// <param name="year">The full year.</param>
/// <param name="month">The month (0 through 11)</param>
/// <param name="date">The day of the month (1 through # of days in the specified month)</param>
/// <param name="hours">The hours (0 through 23)</param>
/// <param name="minutes">The minutes (0 through 59)</param>
/// <param name="seconds">The seconds (0 through 59)</param>
/// <param name="milliseconds">The milliseconds (0 through 999)</param>
/// <summary>
/// Returns the current date and time.
/// </summary>
/// <summary>
/// Returns the current date with the time part set to 00:00:00.
/// </summary>
// NOTE: There is no + operator since in JavaScript that returns the
//       concatenation of the date strings, which is pretty much useless.
/// <summary>
/// Returns the difference in milliseconds between two dates.
/// </summary>
/// <summary>
/// Compares two dates
/// </summary>
/// <summary>
/// Compares two dates
/// </summary>
/// <summary>
/// Compares two dates
/// </summary>
/// <summary>
/// Compares two dates
/// </summary>
/// <summary>
/// Compares two dates
/// </summary>
/// <summary>
/// Compares two dates
/// </summary>
// Decimal.cs
// Script#/Libraries/CoreLib
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// The decimal data type which is mapped to the Number type in Javascript.
/// </summary>
/// <summary>
/// Converts the value to its string representation.
/// </summary>
/// <param name="radix">The radix used in the conversion (eg. 10 for decimal, 16 for hexadecimal)</param>
/// <returns>The string representation of the value.</returns>
/// <internalonly />
/// <internalonly />
/// <internalonly />
/// <internalonly />
/// <internalonly />
/// <internalonly />
/// <internalonly />
/// <internalonly />
/// <internalonly />
/// <internalonly />
/// <internalonly />
/// <internalonly />
/// <internalonly />
/// <internalonly />
/// <internalonly />
/// <internalonly />
/// <internalonly />
/// <internalonly />
/// <internalonly />
/// <internalonly />
/// <internalonly />
/// <internalonly />
/// <internalonly />
/// <internalonly />
// Delegate.cs
// Script#/Libraries/CoreLib
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// Double.cs
// Script#/Libraries/CoreLib
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// The double data type which is mapped to the Number type in Javascript.
/// </summary>
/// <summary>
/// Returns a string containing the value represented in exponential notation.
/// </summary>
/// <returns>The exponential representation</returns>
/// <summary>
/// Returns a string containing the value represented in exponential notation.
/// </summary>
/// <param name="fractionDigits">The number of digits after the decimal point from 0 - 20</param>
/// <returns>The exponential representation</returns>
/// <summary>
/// Returns a string representing the value in fixed-point notation.
/// </summary>
/// <returns>The fixed-point notation</returns>
/// <summary>
/// Returns a string representing the value in fixed-point notation.
/// </summary>
/// <param name="fractionDigits">The number of digits after the decimal point from 0 - 20</param>
/// <returns>The fixed-point notation</returns>
/// <summary>
/// Returns a string containing the value represented either in exponential or
/// fixed-point notation with a specified number of digits.
/// </summary>
/// <returns>The string representation of the value.</returns>
/// <summary>
/// Returns a string containing the value represented either in exponential or
/// fixed-point notation with a specified number of digits.
/// </summary>
/// <param name="precision">The number of significant digits (in the range 1 to 21)</param>
/// <returns>The string representation of the value.</returns>
/// <internalonly />
// Enum.cs
// Script#/Libraries/CoreLib
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// EventArgs.cs
// Script#/Libraries/CoreLib
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// Used by event sources to pass event argument information.
/// </summary>
/// <summary>
/// A static object of type <see cref="EventArgs"/> that is used as a convenient way to
/// specify an empty EventArgs instance.
/// </summary>
// EventHandler.cs
// Script#/Libraries/CoreLib
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// Delegate for handling generic events.
/// </summary>
/// <param name="sender">The object that raised the event.</param>
/// <param name="e">The <see cref="EventArgs"/> object that contains the event data.</param>
// Exception.cs
// Script#/Libraries/CoreLib
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// Equivalent to the Error type in Javascript.
/// </summary>
// Export.cs
// Script#/Libraries/CoreLib
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// Func.cs
// Script#/Libraries/CoreLib
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// Function.cs
// Script#/Libraries/CoreLib
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// Equivalent to the Function type in Javascript.
/// </summary>
/// <summary>
/// Creates a new function with the specified implementation.
/// </summary>
/// <param name="functionBody">The implementation of the function.</param>
/// <summary>
/// Creates a new function with the specified implementation, and the
/// set of named parameters.
/// </summary>
/// <param name="functionBody">The implementation of the function.</param>
/// <param name="argNames">The names of the arguments required by the function.</param>
/// <summary>
/// Gets the number of parameters expected by the function.
/// </summary>
/// <summary>
/// Invokes the function against the specified object instance.
/// </summary>
/// <param name="instance">The object used as the value of 'this' within the function.</param>
/// <returns>Any return value returned from the function.</returns>
/// <summary>
/// Invokes the function against the specified object instance.
/// </summary>
/// <param name="instance">The object used as the value of 'this' within the function.</param>
/// <param name="arguments">The set of arguments to pass in into the function.</param>
/// <returns>Any return value returned from the function.</returns>
/// <summary>
/// Invokes the function against the specified object instance.
/// </summary>
/// <param name="instance">The object used as the value of 'this' within the function.</param>
/// <returns>Any return value returned from the function.</returns>
/// <summary>
/// Invokes the function against the specified object instance.
/// </summary>
/// <param name="instance">The object used as the value of 'this' within the function.</param>
/// <param name="arguments">One or more arguments to pass in into the function.</param>
/// <returns>Any return value returned from the function.</returns>
// IDisposable.cs
// Script#/Libraries/CoreLib
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// Script Equivalent: IDisposable
// Int16.cs
// Script#/Libraries/CoreLib
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// The short data type which is mapped to the Number type in Javascript.
/// </summary>
/// <summary>
/// Converts the value to its string representation.
/// </summary>
/// <param name="radix">The radix used in the conversion (eg. 10 for decimal, 16 for hexadecimal)</param>
/// <returns>The string representation of the value.</returns>
/// <internalonly />
// Int32.cs
// Script#/Libraries/CoreLib
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// The int data type which is mapped to the Number type in Javascript.
/// </summary>
/// <summary>
/// Converts the value to its string representation.
/// </summary>
/// <param name="radix">The radix used in the conversion (eg. 10 for decimal, 16 for hexadecimal)</param>
/// <returns>The string representation of the value.</returns>
/// <internalonly />
// Int64.cs
// Script#/Libraries/CoreLib
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// The long data type which is mapped to the Number type in Javascript.
/// </summary>
/// <summary>
/// Converts the value to its string representation.
/// </summary>
/// <param name="radix">The radix used in the conversion (eg. 10 for decimal, 16 for hexadecimal)</param>
/// <returns>The string representation of the value.</returns>
/// <internalonly />
// Math.cs
// Script#/Libraries/CoreLib
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// Equivalent to the Math object in Javascript.
/// </summary>
// Nullable.cs
// Script#/Libraries/CoreLib
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// Number.cs
// Script#/Libraries/CoreLib
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// Equivalent to the Number type in Javascript.
/// </summary>
/// <summary>
/// Returns a string containing the number represented in exponential notation.
/// </summary>
/// <returns>The exponential representation</returns>
/// <summary>
/// Returns a string containing the number represented in exponential notation.
/// </summary>
/// <param name="fractionDigits">The number of digits after the decimal point (0 - 20)</param>
/// <returns>The exponential representation</returns>
/// <summary>
/// Returns a string representing the number in fixed-point notation.
/// </summary>
/// <returns>The fixed-point notation</returns>
/// <summary>
/// Returns a string representing the number in fixed-point notation.
/// </summary>
/// <param name="fractionDigits">The number of digits after the decimal point from 0 - 20</param>
/// <returns>The fixed-point notation</returns>
/// <summary>
/// Returns a string containing the number represented either in exponential or
/// fixed-point notation with a specified number of digits.
/// </summary>
/// <returns>The string representation of the value.</returns>
/// <summary>
/// Returns a string containing the number represented either in exponential or
/// fixed-point notation with a specified number of digits.
/// </summary>
/// <param name="precision">The number of significant digits (in the range 1 to 21)</param>
/// <returns>The string representation of the value.</returns>
/// <summary>
/// Converts the value to its string representation.
/// </summary>
/// <param name="radix">The radix used in the conversion (eg. 10 for decimal, 16 for hexadecimal)</param>
/// <returns>The string representation of the value.</returns>
/// <internalonly />
// Object.cs
// Script#/Libraries/CoreLib
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// Equivalent to the Object type in Javascript.
/// </summary>
/// <summary>
/// Retrieves the type associated with an object instance.
/// </summary>
/// <returns>The type of the object.</returns>
/// <summary>
/// Converts an object to its string representation.
/// </summary>
/// <returns>The string representation of the object.</returns>
/// <summary>
/// Converts an object to its culture-sensitive string representation.
/// </summary>
/// <returns>The culture-sensitive string representation of the object.</returns>
// RegExp.cs
// Script#/Libraries/CoreLib
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// Equivalent to the RegExp type in Javascript.
/// </summary>
// Runtime.cs
// Script#/Libraries/CoreLib
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// This attribute marks a field, property, event or method as
/// "browsable", i.e. present in the type descriptor associated with
/// the type.
/// </summary>
// SByte.cs
// Script#/Libraries/CoreLib
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// The signed byte data type which is mapped to the Number type in Javascript.
/// </summary>
/// <summary>
/// Converts the value to its string representation.
/// </summary>
/// <param name="radix">The radix used in the conversion (eg. 10 for decimal, 16 for hexadecimal)</param>
/// <returns>The string representation of the value.</returns>
/// <internalonly />
// Script.cs
// Script#/Libraries/CoreLib
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// The Script class contains various methods that represent global
/// methods present in the underlying script engine.
/// </summary>
/// <summary>
/// Converts an object into a boolean.
/// </summary>
/// <param name="o">The object to convert.</param>
/// <returns>true if the object is not null, zero, empty string or undefined.</returns>
/// <summary>
/// Enables you to evaluate (or execute) an arbitrary script
/// literal. This includes JSON literals, where the return
/// value is the deserialized object graph.
/// </summary>
/// <param name="s">The script to be evaluated.</param>
/// <returns>The result of the evaluation.</returns>
/// <summary>
/// Checks if the specified object has a falsey value, i.e. it is null or
/// undefined or empty string or false or zero.
/// </summary>
/// <param name="o">The object to test.</param>
/// <returns>true if the object represents a falsey value; false otherwise.</returns>
/// <summary>
/// Checks if the specified object is null.
/// </summary>
/// <param name="o">The object to test against null.</param>
/// <returns>true if the object is null; false otherwise.</returns>
/// <summary>
/// Checks if the specified object is null or undefined.
/// The object passed in should be a local variable, and not
/// a member of a class (to avoid potential script warnings).
/// </summary>
/// <param name="o">The object to test against null or undefined.</param>
/// <returns>true if the object is null or undefined; false otherwise.</returns>
/// <summary>
/// Checks if the specified object is undefined.
/// The object passed in should be a local variable, and not
/// a member of a class (to avoid potential script warnings).
/// </summary>
/// <param name="o">The object to test against undefined.</param>
/// <returns>true if the object is undefined; false otherwise.</returns>
/// <summary>
/// Checks if the specified object has a value, i.e. it is not
/// null or undefined.
/// </summary>
/// <param name="o">The object to test.</param>
/// <returns>true if the object represents a value; false otherwise.</returns>
/// <summary>
/// Checks if the specified object has a truthy value, i.e. it is not
/// null or undefined or empty string or false or zero.
/// </summary>
/// <param name="o">The object to test.</param>
/// <returns>true if the object represents a truthy value; false otherwise.</returns>
/// <summary>
/// Enables you to generate an arbitrary (literal) script expression.
/// The script can contain simple String.Format style tokens (such as
/// {0}, {1}, ...) to be replaced with the specified arguments.
/// </summary>
/// <param name="script">The script expression to be evaluated.</param>
/// <param name="args">Optional arguments matching tokens in the script.</param>
/// <returns>The result of the script expression.</returns>
/// <summary>
/// Gets the first truthy (true, non-null, non-undefined, non-empty, non-zero) value.
/// </summary>
/// <typeparam name="TValue">The type of the value.</typeparam>
/// <param name="value">The value to check for validity.</param>
/// <param name="alternateValue">The alternate value to use if the first is invalid.</param>
/// <param name="alternateValues">Additional alternative values to use if the first is invalid.</param>
/// <returns>The first valid value.</returns>
/// <summary>
/// Gets the first non-null and non-undefined value.
/// </summary>
/// <typeparam name="TValue">The type of the value.</typeparam>
/// <param name="value">The value to check for validity.</param>
/// <param name="alternateValue">The alternate value to use if the first is invalid.</param>
/// <param name="alternateValues">Additional alternative values to use if the first is invalid.</param>
/// <returns>The first valid value.</returns>
// ScriptMetadata.cs
// Script#/Libraries/CoreLib
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// Marks an assembly as a script assembly that can be used with Script#.
/// Additionally, each script must have a unique name that can be used as
/// a dependency name.
/// This name is also used to generate unique names for internal types defined
/// within the assembly. The ScriptQualifier attribute can be used to provide a
/// shorter name if needed.
/// </summary>
/// <summary>
/// This attribute can be placed on a static class that only contains static string
/// fields representing a set of resource strings.
/// </summary>
/// <summary>
/// This attribute is used to mark an enum as a set of constant values, i.e. if
/// specified, the enum does not exist/is not generated, but rather its values
/// are inlined as constants. If the UseName property is set to true, then instead
/// of actual values, the names of the fields are used as string constants.
/// </summary>
/// <summary>
/// Allows specifying the name to use for a type or member in the generated script.
/// </summary>
/// <summary>
/// This attribute can be placed on types in system script assemblies that should not
/// be imported. It is only meant to be used within mscorlib.dll.
/// </summary>
/// <summary>
/// This attribute can be placed on types that should not be emitted into generated
/// script, as they represent existing script or native types.
/// </summary>
/// <summary>
/// Marks a type with a script dependency that is required at runtime.
/// The specified name is used as the name of the dependency, and the runtime identifier.
/// </summary>
/// <summary>
/// This attribute indicates that the namespace of type within a system assembly
/// should be ignored at script generation time. It is useful for creating namespaces
/// for the purpose of c# code that don't exist at runtime.
/// </summary>
/// <summary>
/// This attribute allows specifying a script name for an imported method.
/// The method is interpreted as a global method. As a result it this attribute
/// only applies to static methods.
/// </summary>
// REVIEW: Eventually do we want to support this on properties/field and instance methods as well?
/// <summary>
/// This attribute denotes a C# property that manifests like a field in the generated
/// JavaScript (i.e. is not accessed via get/set methods). This is really meant only
/// for use when defining OM corresponding to native objects exposed to script.
/// </summary>
// Single.cs
// Script#/Libraries/CoreLib
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// The float data type which is mapped to the Number type in Javascript.
/// </summary>
/// <summary>
/// Returns a string containing the value represented in exponential notation.
/// </summary>
/// <returns>The exponential representation</returns>
/// <summary>
/// Returns a string containing the value represented in exponential notation.
/// </summary>
/// <param name="fractionDigits">The number of digits after the decimal point (0 - 20)</param>
/// <returns>The exponential representation</returns>
/// <summary>
/// Returns a string representing the value in fixed-point notation.
/// </summary>
/// <returns>The fixed-point notation</returns>
/// <summary>
/// Returns a string representing the value in fixed-point notation.
/// </summary>
/// <param name="fractionDigits">The number of digits after the decimal point from 0 - 20</param>
/// <returns>The fixed-point notation</returns>
/// <summary>
/// Returns a string containing the value represented either in exponential or
/// fixed-point notation with a specified number of digits.
/// </summary>
/// <returns>The string representation of the value.</returns>
/// <summary>
/// Returns a string containing the value represented either in exponential or
/// fixed-point notation with a specified number of digits.
/// </summary>
/// <param name="precision">The number of significant digits (in the range 1 to 21)</param>
/// <returns>The string representation of the value.</returns>
/// <internalonly />
// String.cs
// Script#/Libraries/CoreLib
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// Equivalent to the String type in Javascript.
/// </summary>
/// <summary>
/// An empty zero-length string.
/// </summary>
/// <summary>
/// The number of characters in the string.
/// </summary>
/// <summary>
/// Retrieves the character at the specified position.
/// </summary>
/// <param name="index">The specified 0-based position.</param>
/// <returns>The character within the string.</returns>
/// <summary>
/// Retrieves the character at the specified position.
/// </summary>
/// <param name="index">The specified 0-based position.</param>
/// <returns>The character within the string.</returns>
/// <summary>
/// Retrieves the character code of the character at the specified position.
/// </summary>
/// <param name="index">The specified 0-based position.</param>
/// <returns>The character code of the character within the string.</returns>
/// <summary>
/// Concatenates a set of individual strings into a single string.
/// </summary>
/// <param name="strings">The sequence of strings</param>
/// <returns>The concatenated string.</returns>
/// <summary>
/// Returns the unencoded version of a complete encoded URI.
/// </summary>
/// <returns>The unencoded string.</returns>
/// <summary>
/// Returns the unencoded version of a single part or component of an encoded URI.
/// </summary>
/// <returns>The unencoded string.</returns>
/// <summary>
/// Encodes the complete URI.
/// </summary>
/// <returns>The encoded string.</returns>
/// <summary>
/// Encodes a single part or component of a URI.
/// </summary>
/// <returns>The encoded string.</returns>
/// <summary>
/// Determines if the string ends with the specified character.
/// </summary>
/// <param name="ch">The character to test for.</param>
/// <returns>true if the string ends with the character; false otherwise.</returns>
/// <summary>
/// Determines if the string ends with the specified substring or suffix.
/// </summary>
/// <param name="suffix">The string to test for.</param>
/// <returns>true if the string ends with the suffix; false otherwise.</returns>
/// <summary>
/// Encodes a string by replacing punctuation, spaces etc. with their escaped equivalents.
/// </summary>
/// <returns>The escaped string.</returns>
/// <summary>
/// Decodes a string by replacing escaped parts with their equivalent textual representation.
/// </summary>
/// <returns>The unescaped string.</returns>
/// <internalonly />
/// <internalonly />
// StringBuilder.cs
// Script#/Libraries/CoreLib
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// Provides an optimized mechanism to concatenate strings.
/// </summary>
/// <summary>
/// Initializes a new instance of the <see cref="StringBuilder"/> class.
/// </summary>
/// <summary>
/// Initializes a new instance of the <see cref="StringBuilder"/> class.
/// </summary>
/// <param name="initialText">
/// The string that is used to initialize the value of the instance.
/// </param>
/// <summary>
/// Gets whether the <see cref="StringBuilder"/> object has any content.
/// </summary>
/// <returns>true if the StringBuilder instance contains no text; otherwise, false.</returns>
/// <summary>
/// Appends a boolean value to the end of the <see cref="StringBuilder"/> instance.
/// </summary>
/// <param name="b">The boolean value to append to the end of the StringBuilder instance.</param>
/// <returns>A reference to this instance after the append operation has completed.</returns>
/// <summary>
/// Appends a character to the end of the <see cref="StringBuilder"/> instance.
/// </summary>
/// <param name="c">The character to append to the end of the StringBuilder instance.</param>
/// <returns>A reference to this instance after the append operation has completed.</returns>
/// <summary>
/// Appends a number to the end of the <see cref="StringBuilder"/> instance.
/// </summary>
/// <param name="n">The number to append to the end of the StringBuilder instance.</param>
/// <returns>A reference to this instance after the append operation has completed.</returns>
/// <summary>
/// Appends an object's string representation to the end of the <see cref="StringBuilder"/> instance.
/// </summary>
/// <param name="o">The object to append to the end of the StringBuilder instance.</param>
/// <returns>A reference to this instance after the append operation has completed.</returns>
/// <summary>
/// Appends the specified string to the end of the <see cref="StringBuilder"/> instance.
/// </summary>
/// <param name="s">The string to append to the end of the StringBuilder instance.</param>
/// <returns>A reference to this instance after the append operation has completed.</returns>
/// <summary>
/// Appends a string with a line terminator to the end of the <see cref="StringBuilder"/> instance.
/// </summary>
/// <returns>A reference to this instance after the append operation has completed.</returns>
/// <summary>
/// Appends a boolean with a line terminator to the end of the <see cref="StringBuilder"/> instance.
/// </summary>
/// <param name="b">The boolean value to append to the end of the StringBuilder instance.</param>
/// <returns>A reference to this instance after the append operation has completed.</returns>
/// <summary>
/// Appends a character with a line terminator to the end of the <see cref="StringBuilder"/> instance.
/// </summary>
/// <param name="c">The character to append to the end of the StringBuilder instance.</param>
/// <returns>A reference to this instance after the append operation has completed.</returns>
/// <summary>
/// Appends a number with a line terminator to the end of the <see cref="StringBuilder"/> instance.
/// </summary>
/// <param name="n">The number to append to the end of the StringBuilder instance.</param>
/// <returns>A reference to this instance after the append operation has completed.</returns>
/// <summary>
/// Appends an object's string representation with a line terminator to the end of the
/// <see cref="StringBuilder"/> instance.
/// </summary>
/// <param name="o">The object to append to the end of the StringBuilder instance.</param>
/// <returns>A reference to this instance after the append operation has completed.</returns>
/// <summary>
/// Appends a string with a line terminator to the end of the <see cref="StringBuilder"/> instance.
/// </summary>
/// <param name="s">The string to append with a line terminator to the end of the StringBuilder instance.</param>
/// <returns>A reference to this instance after the append operation has completed.</returns>
/// <summary>
/// Clears the contents of the <see cref="StringBuilder"/> instance.
/// </summary>
/// <summary>
/// Creates a string from the contents of a <see cref="StringBuilder"/> instance.
/// </summary>
/// <returns>A string representation of the StringBuilder instance.</returns>
/// <summary>
/// Creates a string from the contents of a <see cref="StringBuilder"/> instance, and
/// optionally inserts a delimeter between each element of the created string.
/// </summary>
/// <param name="separator">A string to append between each element of the string that is returned.</param>
/// <returns>
/// A string representation of the StringBuilder instance. If <paramref name="separator"/>
/// is specified, the delimeter string is inserted between each element of the returned string.
/// </returns>
// StringReplaceCallback.cs
// Script#/Libraries/CoreLib
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// TODO: The actual signature needs to be
//       string callback(match, m1, m2... mN, offset, fullString)
//       but there isn't a way to express the varying number of parameters in the
//       middle of the signature!
// Tuple.cs
// Script#/Libraries/CoreLib
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// Type.cs
// Script#/Libraries/CoreLib
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// The Type data type which is mapped to the Function type in Javascript.
/// </summary>
/// <summary>
/// Gets the prototype associated with the type.
/// </summary>
// UInt16.cs
// Script#/Libraries/CoreLib
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// The ushort data type which is mapped to the Number type in Javascript.
/// </summary>
/// <summary>
/// Converts the value to its string representation.
/// </summary>
/// <param name="radix">The radix used in the conversion (eg. 10 for decimal, 16 for hexadecimal)</param>
/// <returns>The string representation of the value.</returns>
/// <internalonly />
// UInt32.cs
// Script#/Libraries/CoreLib
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// The uint data type which is mapped to the Number type in Javascript.
/// </summary>
/// <summary>
/// Converts the value to its string representation.
/// </summary>
/// <param name="radix">The radix used in the conversion (eg. 10 for decimal, 16 for hexadecimal)</param>
/// <returns>The string representation of the value.</returns>
/// <internalonly />
// UInt64.cs
// Script#/Libraries/CoreLib
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// The ulong data type which is mapped to the Number type in Javascript.
/// </summary>
/// <summary>
/// Converts the value to its string representation.
/// </summary>
/// <param name="radix">The radix used in the conversion (eg. 10 for decimal, 16 for hexadecimal)</param>
/// <returns>The string representation of the value.</returns>
/// <internalonly />
// Void.cs
// Script#/Libraries/CoreLib
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// This doesn't map to an actual type, but needs to be present
// in the set of types, so that the C# void type can be mapped
// ArrayCallback.cs
// Script#/Libraries/CoreLib
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// ArrayFilterCallback.cs
// Script#/Libraries/CoreLib
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// ArrayItemCallback.cs
// Script#/Libraries/CoreLib
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// ArrayItemFilterCallback.cs
// Script#/Libraries/CoreLib
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// ArrayItemMapCallback.cs
// Script#/Libraries/CoreLib
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// ArrayItemReduceCallback.cs
// Script#/Libraries/CoreLib
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// ArrayList.cs
// Script#/Libraries/CoreLib
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// NOTE: Keep in sync with Array and List
/// <summary>
/// Equivalent to the Array type in Javascript.
/// </summary>
// ArrayMapCallback.cs
// Script#/Libraries/CoreLib
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// ArrayReduceCallback.cs
// Script#/Libraries/CoreLib
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// Dictionary.cs
// Script#/Libraries/CoreLib
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// The Dictionary data type which is mapped to the Object type in Javascript.
/// </summary>
// DictionaryEntry.cs
// Script#/Libraries/CoreLib
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// ICollection.cs
// Script#/Libraries/CoreLib
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// IEnumerable.cs
// Script#/Libraries/CoreLib
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// IEnumerator.cs
// Script#/Libraries/CoreLib
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// IReadonlyCollection.cs
// Script#/Libraries/CoreLib
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// ObservableCollection.cs
// Script#/Libraries/CoreLib
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// Queue.cs
// Script#/Libraries/CoreLib
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// Stack.cs
// Script#/Libraries/CoreLib
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// CompareCallback.cs
// Script#/Libraries/CoreLib
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// Dictionary.cs
// Script#/Libraries/CoreLib
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// The Dictionary data type which is mapped to the Object type in Javascript.
/// </summary>
/* error */ true)]
/* error */ true)]
/* error */ true)]
// ICollection.cs
// Script#/Libraries/CoreLib
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// IEnumerable.cs
// Script#/Libraries/CoreLib
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// IEnumerator.cs
// Script#/Libraries/CoreLib
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// IReadonlyCollection.cs
// Script#/Libraries/CoreLib
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// KeyValuePair.cs
// Script#/Libraries/CoreLib
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// List.cs
// Script#/Libraries/CoreLib
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// NOTE: Keep in sync with ArrayList and Array
/// <summary>
/// Equivalent to the Array type in Javascript.
/// </summary>
// ListCallback.cs
// Script#/Libraries/CoreLib
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// ListFilterCallback.cs
// Script#/Libraries/CoreLib
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// ListItemCallback.cs
// Script#/Libraries/CoreLib
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// ListItemFilterCallback.cs
// Script#/Libraries/CoreLib
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// ListItemMapCallback.cs
// Script#/Libraries/CoreLib
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// ListItemReduceCallback.cs
// Script#/Libraries/CoreLib
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// ListMapCallback.cs
// Script#/Libraries/CoreLib
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// ListReduceCallback.cs
// Script#/Libraries/CoreLib
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// ObservableCollection.cs
// Script#/Libraries/CoreLib
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// Queue.cs
// Script#/Libraries/CoreLib
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// Stack.cs
// Script#/Libraries/CoreLib
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// DependencyAttribute.cs
// Script#/Libraries/CoreLib
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// This attribute can be placed on a property, or constructor parameter.
/// When placed on a property or parameter this can be used to mark a dependency
/// and whether it is optional or not.
/// </summary>
/// <summary>
/// Gets or sets whether the dependency is optional.
/// </summary>
// IApplication.cs
// Script#/Libraries/CoreLib
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// Defines contextual information about the current application.
/// </summary>
/// <summary>
/// Gets the value of the specified setting value.
/// </summary>
/// <param name="name">The name of the setting.</param>
/// <returns>The value of the setting if it is available.</returns>
// IContainer.cs
// Script#/Libraries/CoreLib
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// Encapsulates the functionality of a container that defines a scope of
/// composition where objects can be registered and dependencies can be resolved.
/// </summary>
/// <summary>
/// Gets an instance of an object for the specified object type.
/// </summary>
/// <param name="objectType">The type of object to retrieve.</param>
/// <returns>The resulting object; null if the object could not be retrieved.</returns>
/// <summary>
/// Registers an object instance for the specified type with the container.
/// </summary>
/// <param name="objectType">The type of object this instance corresponds to.</param>
/// <param name="objectInstance">The object to register.</param>
/// <summary>
/// Registers an object factory for the specified type with the container.
/// </summary>
/// <param name="objectType">The type of object this factory corresponds to.</param>
/// <param name="objectFactory">The factory to register.</param>
// IEventManager.cs
// Script#/Libraries/CoreLib
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// Provides a simple pub/sub mechanism to allow objects to broadcast and
/// listen to messages or events without being coupled to each other.
/// </summary>
/// <summary>
/// Broadcasts an event. The event is sequentially handled by all subscribers.
/// Any errors that occur are ignored.
/// </summary>
/// <param name="eventArgs">The data associated with the event.</param>
/// <summary>
/// Subscribes the specified handler to listen to events of the specified type.
/// </summary>
/// <param name="eventType">The type of the event to listen to.</param>
/// <param name="eventHandler">The event handler to be invoked when the event occurs.</param>
/// <returns>An opaque cookie that can be used to unsubscribe subsequently.</returns>
/// <summary>
/// Unsubscribes a previous event handler from subsequent events.
/// </summary>
/// <param name="subscriptionCookie">The cookie that represents the subscription.</param>
// IInitializable.cs
// Script#/Libraries/CoreLib
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// Implemented by objects that supports a simple, transacted notification for batch
/// initialization. 
/// </summary>
/// <summary>
/// Signals the object that initialization is starting.
/// </summary>
/// <param name="options">An optional set of name/value pairs containing initialization data.</param>
/// <summary>
/// Signals the object that initialization is complete.
/// </summary>
// IObserver.cs
// Script#/Libraries/CoreLib
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// Observable.cs
// Script#/Libraries/CoreLib
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// ObserverManager.cs
// Script#/Libraries/CoreLib
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// ConditionalAttribute.cs
// Script#/Libraries/CoreLib
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// Debug.cs
// Script#/Libraries/CoreLib
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// SuppressMessageAttribute.cs
// Script#/Libraries/CoreLib
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// SyntaxValidationAttribute.cs
// Script#/Libraries/CoreLib
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// CultureInfo.cs
// Script#/Libraries/CoreLib
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// DateFormatInfo.cs
// Script#/Libraries/CoreLib
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// NumberFormatInfo.cs
// Script#/Libraries/CoreLib
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// AssemblyInfo.cs
// Script#/Libraries/CoreLib
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// Json.cs
// Script#/Libraries/CoreLib
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// Parses the specified JSON text.
/// </summary>
/// <param name="json">The JSON text to be parsed.</param>
/// <returns>The deserialized object.</returns>
/// <summary>
/// Parses the specified JSON text.
/// </summary>
/// <param name="json">The JSON text to be parsed.</param>
/// <returns>The deserialized object.</returns>
/// <summary>
/// Parses the specified JSON text.
/// </summary>
/// <param name="json">The JSON text to be parsed.</param>
/// <param name="parseCallback">A callback to invoke on each value that is deserialized.</param>
/// <returns>The deserialized object.</returns>
/// <summary>
/// Parses the specified JSON text.
/// </summary>
/// <param name="json">The JSON text to be parsed.</param>
/// <param name="parseCallback">A callback to invoke on each value that is deserialized.</param>
/// <returns>The deserialized object.</returns>
/// <summary>
/// Serializes the specified object into JSON representation.
/// </summary>
/// <param name="o">The object to serialize.</param>
/// <returns>The serialized value as JSON text.</returns>
/// <summary>
/// Serializes the specified object into JSON representation.
/// </summary>
/// <param name="o">The object to serialize.</param>
/// <param name="serializableMembers">The specific members to serialize and their order.</param>
/// <returns>The serialized value as JSON text.</returns>
/// <summary>
/// Serializes the specified object into JSON representation.
/// </summary>
/// <param name="o">The object to serialize.</param>
/// <param name="serializableMembers">The specific members to serialize and their order.</param>
/// <param name="indentSpaces">The number of spaces to use for indentation.</param>
/// <returns>The serialized value as JSON text.</returns>
/// <summary>
/// Serializes the specified object into JSON representation.
/// </summary>
/// <param name="o">The object to serialize.</param>
/// <param name="serializableMembers">The specific members to serialize and their order.</param>
/// <param name="indentText">The string to use for indentation.</param>
/// <returns>The serialized value as JSON text.</returns>
/// <summary>
/// Serializes the specified object into JSON representation.
/// </summary>
/// <param name="o">The object to serialize.</param>
/// <param name="callback">A callback to invoke for each value being serialized.</param>
/// <returns>The serialized value as JSON text.</returns>
/// <summary>
/// Serializes the specified object into JSON representation.
/// </summary>
/// <param name="o">The object to serialize.</param>
/// <param name="callback">A callback to invoke for each value being serialized.</param>
/// <param name="indentSpaces">The number of spaces to use for indentation.</param>
/// <returns>The serialized value as JSON text.</returns>
/// <summary>
/// Serializes the specified object into JSON representation.
/// </summary>
/// <param name="o">The object to serialize.</param>
/// <param name="callback">A callback to invoke for each value being serialized.</param>
/// <param name="indentText">The string to use for indentation.</param>
/// <returns>The serialized value as JSON text.</returns>
// JsonParseCallback.cs
// Script#/Libraries/CoreLib
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// A function that filters and transforms objects deserialized from JSON text.
/// If the callback returns the same value, the member is left unmodified. If
/// the callback returns null, the member is removed. Otherwise the new value
/// returned from the callback is used instead.
/// </summary>
/// <param name="name">The name of the member.</param>
/// <param name="value">The value of the member.</param>
/// <returns>The transformed value.</returns>
// JsonStringifyCallback.cs
// Script#/Libraries/CoreLib
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// A function that filters and serializes objects being serialized into JSON text.
/// If the callback returns undefined, the member is not serialized. Otherwise the new
/// value returned from the callback is serialized instead.
/// </summary>
/// <param name="name">The name of the member.</param>
/// <param name="value">The value of the member.</param>
/// <returns>The value to be serialized.</returns>
// Assert.cs
// Script#/Libraries/CoreLib
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// TestClass.cs
// Script#/Libraries/CoreLib
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// TestEngine.cs
// Script#/Libraries/CoreLib
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// Deferred.cs
// Script#/Libraries/CoreLib
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// Task.cs
// Script#/Libraries/CoreLib
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// TaskStatus.cs
// Script#/Libraries/CoreLib
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// AjaxCallback.cs
// Script#/Libraries/jQuery/Core
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// A callback to be invoked for an Ajax request.
/// </summary>
/// <param name="data">The result of the request.</param>
/// <summary>
/// A callback to be invoked for an Ajax request.
/// </summary>
/// <param name="data">The result of the request.</param>
/// <summary>
/// A callback to be invoked for an Ajax request.
/// </summary>
/// <param name="data">The result of the request.</param>
/// <param name="textStatus">The status of the request.</param>
/// <param name="request">The request that was invoked.</param>
/// <summary>
/// A callback to be invoked for an Ajax request.
/// </summary>
/// <param name="data">The result of the request.</param>
/// <param name="textStatus">The status of the request.</param>
/// <param name="request">The request that was invoked.</param>
/// <summary>
/// A callback to be invoked for a failed Ajax request.
/// </summary>
/// <param name="request">The request that was invoked.</param>
/// <param name="textStatus">The status of the request.</param>
/// <param name="error">The error or exception if any.</param>
/// <summary>
/// A callback to be invoked for a failed Ajax request.
/// </summary>
/// <param name="request">The request that was invoked.</param>
/// <param name="textStatus">The status of the request.</param>
/// <param name="error">The error or exception if any.</param>
/// <summary>
/// A callback to be invoked for a completed Ajax request.
/// </summary>
/// <param name="request">The request that was invoked.</param>
/// <param name="textStatus">The status of the request.</param>
/// <summary>
/// A callback to be invoked for a completed Ajax request.
/// </summary>
/// <param name="request">The request that was invoked.</param>
/// <param name="textStatus">The status of the request.</param>
/// <summary>
/// A callback to be invoked for an Ajax request being sent.
/// </summary>
/// <param name="request">The request that was invoked.</param>
/// <summary>
/// A callback to be invoked for an Ajax request being sent.
/// </summary>
/// <param name="request">The request that was invoked.</param>
/// <summary>
/// Creates a jQueryXmlHttpRequest object.
/// </summary>
/// <returns>A newly created request instance.</returns>
/// <summary>
/// Handles ajax events.
/// </summary>
/// <param name="e">The event information.</param>
/// <param name="request">The request instance.</param>
/// <param name="options">The Ajax options associated with the request.</param>
/// <summary>
/// Handles ajax events.
/// </summary>
/// <param name="e">The event information.</param>
/// <param name="request">The request instance.</param>
/// <param name="options">The Ajax options associated with the request.</param>
/// <summary>
/// Handles ajax error events.
/// </summary>
/// <param name="e">The event information.</param>
/// <param name="request">The request instance.</param>
/// <param name="options">The Ajax options associated with the request.</param>
/// <param name="error">The error information.</param>
/// <summary>
/// Handles ajax error events.
/// </summary>
/// <param name="e">The event information.</param>
/// <param name="request">The request instance.</param>
/// <param name="options">The Ajax options associated with the request.</param>
/// <param name="error">The error information.</param>
// ArrayFilterCallback.cs
// Script#/Libraries/jQuery/Core
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// A callback to be invoked for each item in an array being filtered.
/// </summary>
/// <param name="item">The item within the array.</param>
/// <param name="index">The index of the item.</param>
/// <returns>True if the value satisfies the filter; false if it doesn't.</returns>
// ArrayIterationCallback.cs
// Script#/Libraries/jQuery/Core
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// A callback to be invoked for each item in an array being iterated.
/// </summary>
/// <param name="index">The index of the item.</param>
/// <param name="value">The item within the array.</param>
/// <summary>
/// A callback to be invoked for each item in an array being iterated.
/// </summary>
/// <param name="index">The index of the item.</param>
/// <param name="value">The item within the array.</param>
/// <summary>
/// A callback to be invoked for each item in an array being iterated.
/// </summary>
/// <param name="index">The index of the item.</param>
/// <param name="value">The item within the array.</param>
/// <returns>false if the iteration is to be stopped; true otherwise.</returns>
/// <summary>
/// A callback to be invoked for each item in an array being iterated.
/// </summary>
/// <param name="index">The index of the item.</param>
/// <param name="value">The item within the array.</param>
/// <returns>false if the iteration is to be stopped; true otherwise.</returns>
// ArrayMapCallback.cs
// Script#/Libraries/jQuery/Core
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// A callback to be invoked for each item in an array being mapped.
/// </summary>
/// <param name="item">The item within the array.</param>
/// <param name="index">The index of the item.</param>
/// <returns>The value that the item was mapped to.</returns>
// BooleanFunction.cs
// Script#/Libraries/jQuery/Core
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// A callback that returns a value for the element at the specified index.
/// </summary>
/// <param name="index">The index of the element in the set.</param>
// EffectDuration.cs
// Script#/Libraries/jQuery/Core
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// Stock duration values for effects.
/// </summary>
// EffectEasing.cs
// Script#/Libraries/jQuery/Core
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// Basic effect easing functions.
/// </summary>
// ElementFilterCallback.cs
// Script#/Libraries/jQuery/Core
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// A callback to be invoked for each element in a jQueryObject being filtered.
/// </summary>
/// <param name="index">The index of the element in the matching set.</param>
/// <returns>true if the element should be included; false otherwise.</returns>
// ElementIterationCallback.cs
// Script#/Libraries/jQuery/Core
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// A callback to be invoked for each element in a jQueryObject being iterated.
/// </summary>
/// <param name="index">The index of the element.</param>
/// <param name="element">The element.</param>
/// <summary>
/// A callback to be invoked for each element in a jQueryObject being iterated.
/// </summary>
/// <param name="index">The index of the element.</param>
/// <param name="element">The element.</param>
/// <returns>false if the iteration is to be stopped; true otherwise.</returns>
// ElementMapCallback.cs
// Script#/Libraries/jQuery/Core
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// A callback to be invoked for each element in a jQueryObject being mapped.
/// </summary>
/// <param name="index">The index of the element.</param>
/// <param name="element">The element.</param>
/// <returns>The object that the element is mapped to.</returns>
// IDeferred.cs
// Script#/Libraries/jQuery/Core
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// Represents a deferred value.
/// </summary>
/// <summary>
/// Add handlers to be called when the deferred object is resolved or
/// rejected.
/// </summary>
/// <param name="callbacks">The callbacsk to invoke (in order).</param>
/// <returns>The current deferred object.</returns>
/// <summary>
/// Add handlers to be called when the deferred object is resolved or
/// rejected.
/// </summary>
/// <param name="callbacks">The callbacsk to invoke (in order).</param>
/// <returns>The current deferred object.</returns>
/// <summary>
/// Add handlers to be called when the deferred object is resolved. If the
/// deferred object is already resolved, the handlers are still invoked.
/// </summary>
/// <param name="doneCallbacks">The callbacks to invoke (in order).</param>
/// <returns>The current deferred object.</returns>
/// <summary>
/// Add handlers to be called when the deferred object is resolved. If the
/// deferred object is already resolved, the handlers are still invoked.
/// </summary>
/// <param name="doneCallbacks">The callbacks to invoke (in order).</param>
/// <returns>The current deferred object.</returns>
/// <summary>
/// Add handlers to be called when the deferred object is rejected. If the
/// deferred object is already resolved, the handlers are still invoked.
/// </summary>
/// <param name="failCallbacks">The callbacks to invoke (in order).</param>
/// <returns>The current deferred object.</returns>
/// <summary>
/// Add handlers to be called when the deferred object is rejected. If the
/// deferred object is already resolved, the handlers are still invoked.
/// </summary>
/// <param name="failCallbacks">The callbacks to invoke (in order).</param>
/// <returns>The current deferred object.</returns>
/// <summary>
/// Determines whether the deferred object has been rejected.
/// </summary>
/// <returns>true if it has been rejected; false otherwise.</returns>
/// <summary>
/// Determines whether the deferred object has been resolved.
/// </summary>
/// <returns>true if it has been resolved; false otherwise.</returns>
/// <summary>
/// Filters or chains deffered objects.
/// </summary>
/// <param name="successFilter">The filter to invoke when the deferred object is resolved.</param>
/// <returns>The current deferred object.</returns>
/// <summary>
/// Filters or chains deffered objects.
/// </summary>
/// <param name="successFilter">The filter to invoke when the deferred object is resolved.</param>
/// <param name="failFilter">The filter to invoke when the deferred object is rejected.</param>
/// <returns>The current deferred object.</returns>
/// <summary>
/// Add handlers to be called when the deferred object is resolved or rejected.
/// If the object has already been resolved or rejected, the handlers are still invoked.
/// </summary>
/// <param name="doneCallback">The callback to invoke when the object is resolved.</param>
/// <param name="failCallback">The callback to invoke when the object is rejected.</param>
/// <returns>The current deferred object.</returns>
/// <summary>
/// Add handlers to be called when the deferred object is resolved or rejected.
/// If the object has already been resolved or rejected, the handlers are still invoked.
/// </summary>
/// <param name="doneCallback">The callback to invoke when the object is resolved.</param>
/// <param name="failCallback">The callback to invoke when the object is rejected.</param>
/// <returns>The current deferred object.</returns>
/// <summary>
/// Add handlers to be called when the deferred object is resolved or rejected.
/// If the object has already been resolved or rejected, the handlers are still invoked.
/// </summary>
/// <param name="doneCallbacks">The callbacks to invoke when the object is resolved.</param>
/// <param name="failCallbacks">The callbacks to invoke when the object is rejected.</param>
/// <returns>The current deferred object.</returns>
/// <summary>
/// Add handlers to be called when the deferred object is resolved or rejected.
/// If the object has already been resolved or rejected, the handlers are still invoked.
/// </summary>
/// <param name="doneCallbacks">The callbacks to invoke when the object is resolved.</param>
/// <param name="failCallbacks">The callbacks to invoke when the object is rejected.</param>
/// <returns>The current deferred object.</returns>
/// <summary>
/// Represents a deferred value.
/// </summary>
/// <summary>
/// Add handlers to be called when the deferred object is resolved or
/// rejected.
/// </summary>
/// <param name="callbacks">The callbacsk to invoke (in order).</param>
/// <returns>The current deferred object.</returns>
/// <summary>
/// Add handlers to be called when the deferred object is resolved or
/// rejected.
/// </summary>
/// <param name="callbacks">The callbacsk to invoke (in order).</param>
/// <returns>The current deferred object.</returns>
/// <summary>
/// Add handlers to be called when the deferred object is resolved. If the
/// deferred object is already resolved, the handlers are still invoked.
/// </summary>
/// <param name="doneCallbacks">The callbacks to invoke (in order).</param>
/// <returns>The current deferred object.</returns>
/// <summary>
/// Add handlers to be called when the deferred object is resolved. If the
/// deferred object is already resolved, the handlers are still invoked.
/// </summary>
/// <param name="doneCallbacks">The callbacks to invoke (in order).</param>
/// <returns>The current deferred object.</returns>
/// <summary>
/// Add handlers to be called when the deferred object is rejected. If the
/// deferred object is already resolved, the handlers are still invoked.
/// </summary>
/// <param name="failCallbacks">The callbacks to invoke (in order).</param>
/// <returns>The current deferred object.</returns>
/// <summary>
/// Add handlers to be called when the deferred object is rejected. If the
/// deferred object is already resolved, the handlers are still invoked.
/// </summary>
/// <param name="failCallbacks">The callbacks to invoke (in order).</param>
/// <returns>The current deferred object.</returns>
/// <summary>
/// Determines whether the deferred object has been rejected.
/// </summary>
/// <returns>true if it has been rejected; false otherwise.</returns>
/// <summary>
/// Determines whether the deferred object has been resolved.
/// </summary>
/// <returns>true if it has been resolved; false otherwise.</returns>
/// <summary>
/// Filters deffered objects.
/// </summary>
/// <param name="successFilter">The filter to invoke when the deferred object is resolved.</param>
/// <returns>The current deferred object.</returns>
/// <summary>
/// Filters deffered objects.
/// </summary>
/// <param name="successFilter">The filter to invoke when the deferred object is resolved.</param>
/// <param name="failFilter">The filter to invoke when the deferred object is rejected.</param>
/// <returns>The current deferred object.</returns>
/// <summary>
/// Chains deffered objects.
/// </summary>
/// <param name="successChain">The filter to invoke when the deferred object is resolved.</param>
/// <returns>The current deferred object.</returns>
/// <summary>
/// Add handlers to be called when the deferred object is resolved or rejected.
/// If the object has already been resolved or rejected, the handlers are still invoked.
/// </summary>
/// <param name="doneCallback">The callback to invoke when the object is resolved.</param>
/// <param name="failCallback">The callback to invoke when the object is rejected.</param>
/// <returns>The current deferred object.</returns>
/// <summary>
/// Add handlers to be called when the deferred object is resolved or rejected.
/// If the object has already been resolved or rejected, the handlers are still invoked.
/// </summary>
/// <param name="doneCallback">The callback to invoke when the object is resolved.</param>
/// <param name="failCallback">The callback to invoke when the object is rejected.</param>
/// <returns>The current deferred object.</returns>
/// <summary>
/// Add handlers to be called when the deferred object is resolved or rejected.
/// If the object has already been resolved or rejected, the handlers are still invoked.
/// </summary>
/// <param name="doneCallbacks">The callbacks to invoke when the object is resolved.</param>
/// <param name="failCallbacks">The callbacks to invoke when the object is rejected.</param>
/// <returns>The current deferred object.</returns>
/// <summary>
/// Add handlers to be called when the deferred object is resolved or rejected.
/// If the object has already been resolved or rejected, the handlers are still invoked.
/// </summary>
/// <param name="doneCallbacks">The callbacks to invoke when the object is resolved.</param>
/// <param name="failCallbacks">The callbacks to invoke when the object is rejected.</param>
/// <returns>The current deferred object.</returns>
// jQuery.cs
// Script#/Libraries/jQuery/Core
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// The global jQuery object.
/// </summary>
/// <summary>
/// Gets or sets the rate (in milliseconds) at which animations fire.
/// </summary>
/// <summary>
/// Gets or sets whether animations are disabled or not.
/// </summary>
/// <summary>
/// Gets information about the current browser and its version.
/// </summary>
/// <summary>
/// Gets the current jQueryObject against which a plugin method is invoked.
/// </summary>
/// <returns>The jQueryObject represented by 'this' within a plugin.</returns>
/// <summary>
/// Gets the current document object wrapped into a jQuery object.
/// </summary>
/// <summary>
/// Gets the element passed in as 'this' within a jQuery callback function.
/// </summary>
/// <returns>The element represented by 'this' in a callback.</returns>
/// <summary>
/// Gets the instance of the global jQuery object.
/// </summary>
/// <summary>
/// Gets information about supported features and browser capabilities.
/// </summary>
/// <summary>
/// Gets the element passed in as 'this' within a jQuery callback function,
/// wrapped into a jQueryObject.
/// </summary>
/// <returns>The jQueryObject for the element represented by 'this' in a callback.</returns>
/// <summary>
/// Gets the current window object wrapped into a jQuery object.
/// </summary>
/// <summary>
/// Issues an Ajax request.
/// </summary>
/// <param name="url">The endpoint to which the request is issued.</param>
/// <returns>The jQueryXmlHttpRequest object.</returns>
/// <summary>
/// Issues an Ajax request.
/// </summary>
/// <param name="url">The endpoint to which the request is issued.</param>
/// <param name="options">The options and settings for the request to invoke.</param>
/// <returns>The jQueryXmlHttpRequest object.</returns>
/// <summary>
/// Issues an Ajax request.
/// </summary>
/// <param name="options">The options and settings for the request to invoke.</param>
/// <returns>The jQueryXmlHttpRequest object.</returns>
/// <summary>
/// Issues an Ajax request.
/// </summary>
/// <param name="url">The endpoint to which the request is issued.</param>
/// <returns>The jQueryXmlHttpRequest object.</returns>
/// <summary>
/// Issues an Ajax request.
/// </summary>
/// <param name="url">The endpoint to which the request is issued.</param>
/// <param name="options">The options and settings for the request to invoke.</param>
/// <returns>The jQueryXmlHttpRequest object.</returns>
/// <summary>
/// Issues an Ajax request.
/// </summary>
/// <param name="options">The options and settings for the request to invoke.</param>
/// <returns>The jQueryXmlHttpRequest object.</returns>
/// <summary>
/// Sets up defaults for future Ajax requests.
/// </summary>
/// <param name="options">The options and settings for Ajax requests.</param>
/// <summary>
/// Creates an instance of a custom jQueryEvent object that contains custom
/// data members.
/// </summary>
/// <param name="eventName">The name of the event.</param>
/// <typeparam name="TEvent">The type of the event to create.</typeparam>
/// <returns>A new jQueryEvent object.</returns>
/// <summary>
/// Creates a new instance of a deferred object.
/// </summary>
/// <summary>
/// Creates a new instance of a deferred object.
/// </summary>
/// <summary>
/// Creates a new instance of a deferred object.
/// </summary>
/// <param name="initializer">An initializer callback to initialize the new deferred object.</param>
/// <summary>
/// Creates a new instance of a deferred object.
/// </summary>
/// <param name="initializer">An initializer callback to initialize the new deferred object.</param>
/// <summary>
/// Iterates over items in the specified array and calls the callback
/// for each item in the array.
/// </summary>
/// <param name="items">The array to iterate over.</param>
/// <param name="callback">The callback to invoke for each item.</param>
/// <summary>
/// Iterates over items in the specified array and calls the callback
/// for each item in the array.
/// </summary>
/// <param name="items">The array to iterate over.</param>
/// <param name="callback">The callback to invoke for each item.</param>
/// <summary>
/// Iterates over items in the specified array and calls the callback
/// for each item in the array. The callback can return false to
/// break the iteration.
/// </summary>
/// <param name="items">The array to iterate over.</param>
/// <param name="callback">The callback to invoke for each item.</param>
/// <summary>
/// Iterates over items in the specified array and calls the callback
/// for each item in the array. The callback can return false to
/// break the iteration.
/// </summary>
/// <param name="items">The array to iterate over.</param>
/// <param name="callback">The callback to invoke for each item.</param>
/// <summary>
/// Iterates over properties of the specified object and calls the callback
/// for each property/value of the object.
/// </summary>
/// <param name="obj">The object whose properties are to be iterated over..</param>
/// <param name="callback">The callback to invoke for each property.</param>
/// <summary>
/// Iterates over properties of the specified object and calls the callback
/// for each property/value of the object. The callback can return false to
/// break the iteration.
/// </summary>
/// <param name="obj">The object whose properties are to be iterated over..</param>
/// <param name="callback">The callback to invoke for each property.</param>
/// <summary>
/// Raises an error using the specified error message.
/// </summary>
/// <param name="message">The error message.</param>
/// <summary>
/// Creates an instance of a jQueryEvent object.
/// </summary>
/// <param name="eventName">The name of the event.</param>
/// <returns>A new jQueryEvent object.</returns>
/// <summary>
/// Merge the properties of one or more objects into the target object.
/// </summary>
/// <param name="target">The object that will contain the merged values.</param>
/// <param name="objects">The objects to merge.</param>
/// <returns>The merged object.</returns>
/// <summary>
/// Merge the properties of one or more objects into the target object.
/// </summary>
/// <param name="deep">True if a deep copy is to be performed.</param>
/// <param name="target">The object that will contain the merged values.</param>
/// <param name="objects">The objects to merge.</param>
/// <returns>The merged object.</returns>
/// <summary>
/// Merge the properties of one or more objects into the target object.
/// </summary>
/// <param name="target">The dictionary that will contain the merged values.</param>
/// <param name="dictionaries">The dictionary to merge.</param>
/// <typeparam name="TKey">The type of keys within the dictionary.</typeparam>
/// <typeparam name="TValue">The type of values within the dictionary.</typeparam>
/// <returns>The merged dictionary.</returns>
/// <summary>
/// Merge the properties of one or more objects into the target object.
/// </summary>
/// <param name="deep">True if a deep copy is to be performed.</param>
/// <param name="target">The dictionary that will contain the merged values.</param>
/// <param name="dictionaries">The dictionaries to merge.</param>
/// <typeparam name="TKey">The type of keys within the dictionary.</typeparam>
/// <typeparam name="TValue">The type of values within the dictionary.</typeparam>
/// <returns>The merged dictionary.</returns>
/// <summary>
/// Merge the properties of one or more objects into the target object.
/// </summary>
/// <param name="target">The object that will contain the merged values.</param>
/// <param name="objects">The objects to merge.</param>
/// <returns>The merged object.</returns>
/// <summary>
/// Merge the properties of one or more objects into the target object.
/// </summary>
/// <param name="deep">True if a deep copy is to be performed.</param>
/// <param name="target">The object that will contain the merged values.</param>
/// <param name="objects">The objects to merge.</param>
/// <returns>The merged object.</returns>
/// <summary>
/// Wraps an instance of a <see cref="jQueryObject"/> around the specified element.
/// </summary>
/// <param name="element">The element to wrap.</param>
/// <returns>The resulting jQueryObject instance.</returns>
/// <summary>
/// Wraps an instance of a <see cref="jQueryObject"/> around the specified elements.
/// </summary>
/// <param name="elements">The elements to wrap.</param>
/// <returns>The resulting jQueryObject instance.</returns>
/// <summary>
/// Create DOM elements on-the-fly from the provided string of raw HTML and wraps
/// them into a <see cref="jQueryObject"/>.
/// </summary>
/// <param name="html">The HTML to parse.</param>
/// <returns>The resulting jQueryObject instance.</returns>
/// <summary>
/// Create DOM elements on-the-fly from the provided string of raw HTML and wraps
/// them into a <see cref="jQueryObject"/>.
/// </summary>
/// <param name="html">The HTML to parse.</param>
/// <param name="document">The document in which the elements will be created.</param>
/// <returns>The resulting jQueryObject instance.</returns>
/// <summary>
/// Creates a DOM element from the provided string defining a single tag and wraps
/// it into a <see cref="jQueryObject"/>.
/// </summary>
/// <param name="html">The HTML to parse.</param>
/// <param name="properties">The attributes and events to set on the element.</param>
/// <returns>The resulting jQueryObject instance.</returns>
/// <summary>
/// Creates a jQueryObject from the specified object.
/// </summary>
/// <param name="o">The object to wrap.</param>
/// <returns>The resulting jQueryObject instance.</returns>
/// <summary>
/// Load data from the server using a HTTP GET request.
/// </summary>
/// <param name="url">The URL to request.</param>
/// <returns>The jQueryXmlHttpRequest object.</returns>
/// <summary>
/// Load data from the server using a HTTP GET request.
/// </summary>
/// <param name="url">The URL to request.</param>
/// <param name="callback">The callback to invoke with the response.</param>
/// <returns>The jQueryXmlHttpRequest object.</returns>
/// <summary>
/// Load data from the server using a HTTP GET request.
/// </summary>
/// <param name="url">The URL to request.</param>
/// <param name="data">A string or dictionary containing the data sent with the request.</param>
/// <param name="callback">The callback to invoke with the response.</param>
/// <returns>The jQueryXmlHttpRequest object.</returns>
/// <summary>
/// Load data from the server using a HTTP GET request.
/// </summary>
/// <param name="url">The URL to request.</param>
/// <param name="data">A string or dictionary containing the data sent with the request.</param>
/// <param name="callback">The callback to invoke with the response.</param>
/// <returns>The jQueryXmlHttpRequest object.</returns>
/// <summary>
/// Load data from the server using a HTTP GET request.
/// </summary>
/// <param name="url">The URL to request.</param>
/// <param name="data">A string or dictionary containing the data sent with the request.</param>
/// <param name="callback">The callback to invoke with the response.</param>
/// <param name="dataType">The type of data expected in the response.</param>
/// <returns>The jQueryXmlHttpRequest object.</returns>
/// <summary>
/// Load data from the server using a HTTP GET request.
/// </summary>
/// <param name="url">The URL to request.</param>
/// <param name="data">A string or dictionary containing the data sent with the request.</param>
/// <param name="callback">The callback to invoke with the response.</param>
/// <param name="dataType">The type of data expected in the response.</param>
/// <returns>The jQueryXmlHttpRequest object.</returns>
/// <summary>
/// Load data from the server using a HTTP GET request.
/// </summary>
/// <param name="url">The URL to request.</param>
/// <returns>The jQueryXmlHttpRequest object.</returns>
/// <summary>
/// Load data from the server using a HTTP GET request.
/// </summary>
/// <param name="url">The URL to request.</param>
/// <param name="callback">The callback to invoke with the response.</param>
/// <returns>The jQueryXmlHttpRequest object.</returns>
/// <summary>
/// Load data from the server using a HTTP GET request.
/// </summary>
/// <param name="url">The URL to request.</param>
/// <param name="data">A string or dictionary containing the data sent with the request.</param>
/// <param name="callback">The callback to invoke with the response.</param>
/// <returns>The jQueryXmlHttpRequest object.</returns>
/// <summary>
/// Load data from the server using a HTTP GET request.
/// </summary>
/// <param name="url">The URL to request.</param>
/// <param name="data">A string or dictionary containing the data sent with the request.</param>
/// <param name="callback">The callback to invoke with the response.</param>
/// <returns>The jQueryXmlHttpRequest object.</returns>
/// <summary>
/// Load data from the server using a HTTP GET request.
/// </summary>
/// <param name="url">The URL to request.</param>
/// <param name="data">A string or dictionary containing the data sent with the request.</param>
/// <param name="callback">The callback to invoke with the response.</param>
/// <param name="dataType">The type of data expected in the response.</param>
/// <returns>The jQueryXmlHttpRequest object.</returns>
/// <summary>
/// Load data from the server using a HTTP GET request.
/// </summary>
/// <param name="url">The URL to request.</param>
/// <param name="data">A string or dictionary containing the data sent with the request.</param>
/// <param name="callback">The callback to invoke with the response.</param>
/// <param name="dataType">The type of data expected in the response.</param>
/// <returns>The jQueryXmlHttpRequest object.</returns>
/// <summary>
/// Load JSON data from the server using a HTTP GET request.
/// </summary>
/// <param name="url">The URL to request.</param>
/// <returns>The jQueryXmlHttpRequest object.</returns>
/// <summary>
/// Load JSON data from the server using a HTTP GET request.
/// </summary>
/// <param name="url">The URL to request.</param>
/// <param name="callback">The callback to invoke with the response.</param>
/// <returns>The jQueryXmlHttpRequest object.</returns>
/// <summary>
/// Load JSON data from the server using a HTTP GET request.
/// </summary>
/// <param name="url">The URL to request.</param>
/// <param name="data">A string or dictionary containing the data sent with the request.</param>
/// <param name="callback">The callback to invoke with the response.</param>
/// <returns>The jQueryXmlHttpRequest object.</returns>
/// <summary>
/// Load JSON data from the server using a HTTP GET request.
/// </summary>
/// <param name="url">The URL to request.</param>
/// <returns>The jQueryXmlHttpRequest object.</returns>
/// <summary>
/// Load JSON data from the server using a HTTP GET request.
/// </summary>
/// <param name="url">The URL to request.</param>
/// <param name="callback">The callback to invoke with the response.</param>
/// <returns>The jQueryXmlHttpRequest object.</returns>
/// <summary>
/// Load JSON data from the server using a HTTP GET request.
/// </summary>
/// <param name="url">The URL to request.</param>
/// <param name="data">A string or dictionary containing the data sent with the request.</param>
/// <param name="callback">The callback to invoke with the response.</param>
/// <returns>The jQueryXmlHttpRequest object.</returns>
/// <summary>
/// Load script from the server using a HTTP GET request and execute it.
/// </summary>
/// <param name="url">The URL to request.</param>
/// <returns>The jQueryXmlHttpRequest object.</returns>
/// <summary>
/// Load script from the server using a HTTP GET request and execute it.
/// </summary>
/// <param name="url">The URL to request.</param>
/// <param name="callback">The callback to invoke with the response.</param>
/// <returns>The jQueryXmlHttpRequest object.</returns>
/// <summary>
/// Filters the specified array using the provided callback, and returns the
/// matching items.
/// </summary>
/// <param name="a">The array to be filtered.</param>
/// <param name="callback">The callback to filter the items.</param>
/// <returns>The matching items.</returns>
/// <summary>
/// Filters the specified array using the provided callback, and returns the
/// matching items.
/// </summary>
/// <param name="a">The array to be filtered.</param>
/// <param name="callback">The callback to filter the items.</param>
/// <param name="invert">If true, the items not matching are returned.</param>
/// <returns>The matching items.</returns>
// TODO: Add generic version of Grep
/// <summary>
/// Holds or releases the execution of jQuery's ready event.
/// </summary>
/// <param name="hold">Indicates whether the ready hold is being requested or released.</param>
/// <summary>
/// Gets the index of the specified value within the specified array.
/// </summary>
/// <param name="value">The value to look for.</param>
/// <param name="a">The array to look in.</param>
/// <returns>The index of value if it is found; -1 if it is not.</returns>
/// <summary>
/// Gets the index of the specified value within the specified list.
/// </summary>
/// <param name="value">The value to look for.</param>
/// <param name="list">The list to look in.</param>
/// <returns>The index of value if it is found; -1 if it is not.</returns>
/// <summary>
/// Checks if the specified object is an array.
/// </summary>
/// <param name="o">The object to check.</param>
/// <returns>True if the object is an array; false otherwise.</returns>
/// <summary>
/// Checks if the specified object is a function.
/// </summary>
/// <param name="o">The object to check.</param>
/// <returns>True if the object is a function; false otherwise.</returns>
/// <summary>
/// Checks if the specified object is a window.
/// </summary>
/// <param name="o">The object to check.</param>
/// <returns>True if the object is a window instance; false otherwise.</returns>
/// <summary>
/// Turns anything into a true array.
/// </summary>
/// <param name="o">The object to turn into an array.</param>
/// <returns>The resulting array.</returns>
/// <summary>
/// Returns a new object by mapping each item in the specified object
/// using the provided callback.
/// </summary>
/// <param name="o">The object to map.</param>
/// <param name="callback">The function that performs the mapping.</param>
/// <returns>The array of mapped values.</returns>
/// <summary>
/// Returns a new array by mapping each item in the specified array
/// using the provided callback.
/// </summary>
/// <param name="a">The array of items to map.</param>
/// <param name="callback">The function that performs the mapping.</param>
/// <returns>The array of mapped values.</returns>
/* TODO
/// Returns a new list by mapping each item in the specified list
/// using the provided callback.
/// </summary>
/// <param name="list">The list of items to map.</param>
/// <param name="callback">The function that performs the mapping.</param>
/// <returns>The list of mapped values.</returns>
/// <summary>
/// Merges the specified arrays into a single array.
/// </summary>
/// <param name="firstArray">The first array to merge.</param>
/// <param name="secondArray">The second array to merge.</param>
/// <returns>The new array containing merged set of items.</returns>
/// <summary>
/// Merges the specified lists into a single list.
/// </summary>
/// <param name="firstList">The first list to merge.</param>
/// <param name="secondList">The second list to merge.</param>
/// <returns>The new list containing merged set of items.</returns>
/// <summary>
/// Calls the specified function when the document is ready. This is equivalent to
/// jQuery(document).ready(callback).
/// </summary>
/// <param name="callback">The callback to invoke.</param>
/// <returns>The resulting jQueryObject instance.</returns>
/// <summary>
/// Serializes an object for use in URL query string for an Ajax request.
/// </summary>
/// <param name="o">The object to serialize.</param>
/// <returns>The serialized representation of the object.</returns>
/// <summary>
/// Parses the specified well-formed json string into an object.
/// </summary>
/// <param name="json">The json string.</param>
/// <returns>The parsed document.</returns>
/// <summary>
/// Parses the specified well-formed json string into an object.
/// </summary>
/// <param name="json">The json string.</param>
/// <returns>The parsed document.</returns>
/// <summary>
/// Parses the specified well-formed xml data into an XML document.
/// </summary>
/// <param name="data">The xml markup.</param>
/// <returns>The parsed document.</returns>
/// <summary>
/// Post data to the server using a HTTP POST request.
/// </summary>
/// <param name="url">The URL to request.</param>
/// <returns>The jQueryXmlHttpRequest object.</returns>
/// <summary>
/// Post data to the server using a HTTP POST request.
/// </summary>
/// <param name="url">The URL to request.</param>
/// <param name="callback">The callback to invoke with the response.</param>
/// <returns>The jQueryXmlHttpRequest object.</returns>
/// <summary>
/// Post data to the server using a HTTP POST request.
/// </summary>
/// <param name="url">The URL to request.</param>
/// <param name="data">A string or dictionary containing the data sent with the request.</param>
/// <returns>The jQueryXmlHttpRequest object.</returns>
/// <summary>
/// Post data to the server using a HTTP POST request.
/// </summary>
/// <param name="url">The URL to request.</param>
/// <param name="data">A string or dictionary containing the data sent with the request.</param>
/// <param name="callback">The callback to invoke with the response.</param>
/// <returns>The jQueryXmlHttpRequest object.</returns>
/// <summary>
/// Post data to the server using a HTTP POST request.
/// </summary>
/// <param name="url">The URL to request.</param>
/// <param name="data">A string or dictionary containing the data sent with the request.</param>
/// <param name="callback">The callback to invoke with the response.</param>
/// <returns>The jQueryXmlHttpRequest object.</returns>
/// <summary>
/// Post data to the server using a HTTP POST request.
/// </summary>
/// <param name="url">The URL to request.</param>
/// <param name="data">A string or dictionary containing the data sent with the request.</param>
/// <param name="callback">The callback to invoke with the response.</param>
/// <param name="dataType">The type of data expected in the response.</param>
/// <returns>The jQueryXmlHttpRequest object.</returns>
/// <summary>
/// Post data to the server using a HTTP POST request.
/// </summary>
/// <param name="url">The URL to request.</param>
/// <param name="data">A string or dictionary containing the data sent with the request.</param>
/// <param name="callback">The callback to invoke with the response.</param>
/// <param name="dataType">The type of data expected in the response.</param>
/// <returns>The jQueryXmlHttpRequest object.</returns>
/// <summary>
/// Post data to the server using a HTTP POST request.
/// </summary>
/// <param name="url">The URL to request.</param>
/// <returns>The jQueryXmlHttpRequest object.</returns>
/// <summary>
/// Post data to the server using a HTTP POST request.
/// </summary>
/// <param name="url">The URL to request.</param>
/// <param name="callback">The callback to invoke with the response.</param>
/// <returns>The jQueryXmlHttpRequest object.</returns>
/// <summary>
/// Post data to the server using a HTTP POST request.
/// </summary>
/// <param name="url">The URL to request.</param>
/// <param name="data">A string or dictionary containing the data sent with the request.</param>
/// <param name="callback">The callback to invoke with the response.</param>
/// <returns>The jQueryXmlHttpRequest object.</returns>
/// <summary>
/// Post data to the server using a HTTP POST request.
/// </summary>
/// <param name="url">The URL to request.</param>
/// <param name="data">A string or dictionary containing the data sent with the request.</param>
/// <param name="callback">The callback to invoke with the response.</param>
/// <returns>The jQueryXmlHttpRequest object.</returns>
/// <summary>
/// Post data to the server using a HTTP POST request.
/// </summary>
/// <param name="url">The URL to request.</param>
/// <param name="data">A string or dictionary containing the data sent with the request.</param>
/// <param name="callback">The callback to invoke with the response.</param>
/// <param name="dataType">The type of data expected in the response.</param>
/// <returns>The jQueryXmlHttpRequest object.</returns>
/// <summary>
/// Post data to the server using a HTTP POST request.
/// </summary>
/// <param name="url">The URL to request.</param>
/// <param name="data">A string or dictionary containing the data sent with the request.</param>
/// <param name="callback">The callback to invoke with the response.</param>
/// <param name="dataType">The type of data expected in the response.</param>
/// <returns>The jQueryXmlHttpRequest object.</returns>
/// <summary>
/// Finds one or more DOM elements matching a CSS selector and wraps them into a
/// <see cref="jQueryObject"/> instance.
/// </summary>
/// <param name="selector">The selector to match elements.</param>
/// <returns>The resulting jQueryObject instance.</returns>
/// <summary>
/// Finds one or more DOM elements matching a CSS selector and wraps them into a
/// <see cref="jQueryObject"/> instance. The elements are scoped to those contained
/// within the specified document.
/// </summary>
/// <param name="selector">The selector to match elements.</param>
/// <param name="document">The document to search within.</param>
/// <returns>The resulting jQueryObject instance.</returns>
/// <summary>
/// Finds one or more DOM elements matching a CSS selector and wraps them into a
/// <see cref="jQueryObject"/> instance. The elements are scoped to those contained
/// within the specified root element.
/// </summary>
/// <param name="selector">The selector to match elements.</param>
/// <param name="rootElement">The root element to begin the search at.</param>
/// <returns>The resulting jQueryObject instance.</returns>
/// <summary>
/// Finds one or more DOM elements matching a CSS selector and wraps them into a
/// <see cref="jQueryObject"/> instance. The elements are scoped to those contained
/// within the specified jQueryObject context.
/// </summary>
/// <param name="selector">The selector to match elements.</param>
/// <param name="context">The context to scope the selection.</param>
/// <returns>The resulting jQueryObject instance.</returns>
/// <summary>
/// Removes whitespace from the beginning and end of the string.
/// </summary>
/// <param name="s">The string to trim.</param>
/// <returns>The trimmed string.</returns>
/// <summary>
/// Gets the type of the specified object.
/// </summary>
/// <param name="o">The object whose type is to be looked up.</param>
/// <returns>The type name of the object.</returns>
/// <summary>
/// Creates a deferred object representing the aggregate of the specified
/// deferred objects.
/// </summary>
/// <param name="deferreds">The set of deferred objects.</param>
/// <returns>A deferred object representing the individual deferred objects.</returns>
/// <summary>
/// Creates a deferred object representing the aggregate of the specified
/// deferred objects. If any of the objects are not deferred objects, then they
/// are considered as pre-resolved deferred objects.
/// </summary>
/// <param name="deferreds">The set of deferred objects.</param>
/// <returns>A deferred object representing the individual deferred objects.</returns>
/// <summary>
/// Creates a deferred object representing the aggregate of the specified
/// deferred objects.
/// </summary>
/// <param name="deferreds">The set of deferred objects.</param>
/// <returns>A deferred object representing the individual deferred objects.</returns>
// jQueryAjaxOptions.cs
// Script#/Libraries/jQuery/Core
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// Represents Ajax request settings or options.
/// </summary>
/// <summary>
/// Initializes an empty instance of a jQueryAjaxOptions object.
/// </summary>
/// <summary>
/// Initializes an instance of a jQueryAjaxOptions object with the
/// specified name/value pair list of fields.
/// </summary>
/// <param name="nameValuePairs">An alternating set of string names and object values.</param>
/// <summary>
/// Gets or sets the content type sent in the request header that tells the server what kind of response it will accept in return.
/// </summary>
/// <summary>
/// Gets or sets whether the request is async.
/// </summary>
/// <summary>
/// Gets or sets the callback to invoke before the request is sent.
/// </summary>
/// <summary>
/// Gets or sets whether the request can be cached.
/// </summary>
/// <summary>
/// Gets or sets the callback invoked after the request is completed
/// and success or error callbacks have been invoked.
/// </summary>
/// <summary>
/// Gets or sets a map of string/regular-expression pairs that determine how jQuery will parse the response, given its content type.
/// </summary>
/// <summary>
/// Gets or sets the content type of the data sent to the server.
/// </summary>
/// <summary>
/// Gets or sets the object that will be the context for the request.
/// </summary>
/// <summary>
/// Gets or sets a map of dataType-to-dataType converters.
/// </summary>
/// <summary>
/// Gets or sets if you wish to force a crossDomain request (such as JSONP) on the same domain, set the value of crossDomain to true
/// </summary>
/// <summary>
/// Gets or sets the data to be sent to the server.
/// </summary>
/// <summary>
/// Gets or sets the data type expected in response from the server.
/// </summary>
/// <summary>
/// Gets or sets the callback to be invoked if the request fails.
/// </summary>
/// <summary>
/// Gets or sets whether to trigger global event handlers for this Ajax request.
/// </summary>
/// <summary>
/// Gets or sets if a map of additional header key/value pairs to send along with the request.
/// </summary>
/// <summary>
/// Gets or sets whether the request is successful only if its been modified since
/// the last request.
/// </summary>
/// <summary>
/// Gets or sets whether the current environment should be treated as a local
/// environment (eg. when the page is loaded using file:///).
/// </summary>
/// <summary>
/// Gets or sets the callback parameter name to use for JSONP requests.
/// </summary>
/// <summary>
/// Gets or sets the callback name to use for JSONP requests.
/// </summary>
/// <summary>
/// Gets or sets the mime type of the request.
/// </summary>
/// <summary>
/// Gets or sets the password to be used for an HTTP authentication request.
/// </summary>
/// <summary>
/// Gets or sets whether the data passed in will be processed.
/// </summary>
/// <summary>
/// Gets or sets how to handle character sets for script and JSONP requests.
/// </summary>
/// <summary>
/// Gets or sets a map of numeric HTTP codes and functions to be called when the response has the corresponding code.
/// </summary>
/// <summary>
/// Gets or sets the function to invoke upon successful completion of the request.
/// </summary>
/// <summary>
/// Gets or sets the timeout in milliseconds for the request.
/// </summary>
/// <summary>
/// Gets or sets if you want to use traditional parameter serialization.
/// </summary>
/// <summary>
/// Gets or sets the type or HTTP verb associated with the request.
/// </summary>
/// <summary>
/// Gets or sets the URL to be requested.
/// </summary>
/// <summary>
/// Gets or sets the name of the user to use in a HTTP authentication request.
/// </summary>
/// <summary>
/// Gets or sets the function creating the XmlHttpRequest instance.
/// </summary>
/// <summary>
/// Gets or sets a set of additional name/value pairs set of the XmlHttpRequest
/// object.
/// </summary>
// jQueryBrowser.cs
// Script#/Libraries/jQuery/Core
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// Provides information about the current browser.
/// </summary>
/// <summary>
/// Gets whether the current browser is Opera.
/// </summary>
/// <summary>
/// Gets whether the current browser is a Mozilla-based browser.
/// </summary>
/// <summary>
/// Gets whether the current browser is Microsoft Internet Explorer.
/// </summary>
/// <summary>
/// Gets whether the current browser is Safari.
/// </summary>
/// <summary>
/// Gets the browser version information.
/// </summary>
/// <summary>
/// Gets whether the current browser is WebKit-based.
/// </summary>
// jQueryDataHttpRequest.cs
// Script#/Libraries/jQuery/Core
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// Represents an XMLHttpRequest object as a deferred object.
/// </summary>
/// <summary>
/// The ready state property of the XmlHttpRequest object.
/// </summary>
/// <summary>
/// The XML document for an XML response.
/// </summary>
/// <summary>
/// The text of the response.
/// </summary>
/// <summary>
/// The status code associated with the response.
/// </summary>
/// <summary>
/// The status text of the response.
/// </summary>
/// <summary>
/// Aborts the request.
/// </summary>
/// <summary>
/// Add handlers to be called when the request completes or fails.
/// </summary>
/// <param name="callbacks">The callbacks to invoke (in order).</param>
/// <returns>The current request object.</returns>
/// <summary>
/// Add handlers to be called when the request completes or fails.
/// </summary>
/// <param name="callbacks">The callbacks to invoke (in order).</param>
/// <returns>The current request object.</returns>
/// <summary>
/// Adds a callback to handle completion of the request.
/// </summary>
/// <param name="callback">The callback to invoke.</param>
/// <returns>The current request object.</returns>
/// <summary>
/// Add handlers to be called when the request is successfully completed. If the
/// request is already completed, the handlers are still invoked.
/// </summary>
/// <param name="doneCallbacks">The callbacks to invoke (in order).</param>
/// <returns>The current request object.</returns>
/// <summary>
/// Add handlers to be called when the request is successfully completed. If the
/// request is already completed, the handlers are still invoked.
/// </summary>
/// <param name="doneCallbacks">The callbacks to invoke (in order).</param>
/// <returns>The current request object.</returns>
/// <summary>
/// Adds a callback to handle an error completing the request.
/// </summary>
/// <param name="callback">The callback to invoke.</param>
/// <returns>The current request object.</returns>
/// <summary>
/// Add handlers to be called when the request errors. If the
/// request is already completed, the handlers are still invoked.
/// </summary>
/// <param name="failCallbacks">The callbacks to invoke (in order).</param>
/// <returns>The current request object.</returns>
/// <summary>
/// Add handlers to be called when the request errors. If the
/// request is already completed, the handlers are still invoked.
/// </summary>
/// <param name="failCallbacks">The callbacks to invoke (in order).</param>
/// <returns>The current request object.</returns>
/// <summary>
/// Gets the response headers associated with the request.
/// </summary>
/// <returns>The response headers.</returns>
/// <summary>
/// Gets a specific response header associated with the request.
/// </summary>
/// <param name="name">The name of the response header.</param>
/// <returns>The response header value.</returns>
/// <summary>
/// Sets the mime type on the request.
/// </summary>
/// <param name="type">The mime type to use.</param>
/// <summary>
/// Filters or chains the result of the request.
/// </summary>
/// <param name="successFilter">The filter to invoke when the request successfully completes.</param>
/// <returns>The current request object.</returns>
/// <summary>
/// Filters or chains the result of the request.
/// </summary>
/// <param name="successFilter">The filter to invoke when the request successfully completes.</param>
/// <param name="failFilter">The filter to invoke when the request fails.</param>
/// <returns>The current request object.</returns>
/// <summary>
/// Sets a request header value.
/// </summary>
/// <param name="name">The name of the request header.</param>
/// <param name="value">The value of the request header.</param>
/// <summary>
/// Adds a callback to handle a successful completion of the request.
/// </summary>
/// <param name="callback">The callback to invoke.</param>
/// <returns>The current request object.</returns>
/// <summary>
/// Adds a callback to handle a successful completion of the request.
/// </summary>
/// <param name="callback">The callback to invoke.</param>
/// <returns>The current request object.</returns>
/// <summary>
/// Add handlers to be called when the request is completed. If the
/// request is already completed, the handlers are still invoked.
/// </summary>
/// <param name="doneCallback">The callback to invoke when the request completes successfully.</param>
/// <param name="failCallback">The callback to invoke when the request completes with an error.</param>
/// <returns>The current request object.</returns>
/// <summary>
/// Add handlers to be called when the request is completed. If the
/// request is already completed, the handlers are still invoked.
/// </summary>
/// <param name="doneCallback">The callback to invoke when the request completes successfully.</param>
/// <param name="failCallback">The callback to invoke when the request completes with an error.</param>
/// <returns>The current request object.</returns>
/// <summary>
/// Add handlers to be called when the request is completed. If the
/// request is already completed, the handlers are still invoked.
/// </summary>
/// <param name="doneCallbacks">The callbacks to invoke when the request completes successfully.</param>
/// <param name="failCallbacks">The callbacks to invoke when the request completes with an error.</param>
/// <returns>The current deferred object.</returns>
/// <summary>
/// Add handlers to be called when the request is completed. If the
/// request is already completed, the handlers are still invoked.
/// </summary>
/// <param name="doneCallbacks">The callbacks to invoke when the request completes successfully.</param>
/// <param name="failCallbacks">The callbacks to invoke when the request completes with an error.</param>
/// <returns>The current deferred object.</returns>
// jQueryDeferred.cs
// Script#/Libraries/jQuery/Core
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// Represents a deferred value.
/// </summary>
/// <summary>
/// Add handlers to be called when the deferred object is resolved or
/// rejected.
/// </summary>
/// <param name="callbacks">The callbacks to invoke (in order).</param>
/// <returns>The current deferred object.</returns>
/// <summary>
/// Add handlers to be called when the deferred object is resolved or
/// rejected.
/// </summary>
/// <param name="callbacks">The callbacks to invoke (in order).</param>
/// <returns>The current deferred object.</returns>
/// <summary>
/// Add handlers to be called when the deferred object is resolved. If the
/// deferred object is already resolved, the handlers are still invoked.
/// </summary>
/// <param name="doneCallbacks">The callbacks to invoke (in order).</param>
/// <returns>The current deferred object.</returns>
/// <summary>
/// Add handlers to be called when the deferred object is resolved. If the
/// deferred object is already resolved, the handlers are still invoked.
/// </summary>
/// <param name="doneCallbacks">The callbacks to invoke (in order).</param>
/// <returns>The current deferred object.</returns>
/// <summary>
/// Add handlers to be called when the deferred object is rejected. If the
/// deferred object is already resolved, the handlers are still invoked.
/// </summary>
/// <param name="failCallbacks">The callbacks to invoke (in order).</param>
/// <returns>The current deferred object.</returns>
/// <summary>
/// Add handlers to be called when the deferred object is rejected. If the
/// deferred object is already resolved, the handlers are still invoked.
/// </summary>
/// <param name="failCallbacks">The callbacks to invoke (in order).</param>
/// <returns>The current deferred object.</returns>
/// <summary>
/// Determines whether the deferred object has been rejected.
/// </summary>
/// <returns>true if it has been rejected; false otherwise.</returns>
/// <summary>
/// Determines whether the deferred object has been resolved.
/// </summary>
/// <returns>true if it has been resolved; false otherwise.</returns>
/// <summary>
/// Returns a deferred object that can be further composed.
/// </summary>
/// <returns>A deferred object.</returns>
/// <summary>
/// Rejects the deferred object and call any failure callbacks with the specified arguments.
/// </summary>
/// <param name="args">The arguments to pass to the callbacks.</param>
/// <returns>The current deferred object.</returns>
/// <summary>
/// Rejects the deferred object and call any failure callbacks with the specified arguments
/// using the specified context as the this parameter.
/// </summary>
/// <param name="context">The context in which the callback is invoked.</param>
/// <param name="args">The arguments to pass to the callbacks.</param>
/// <returns>The current deferred object.</returns>
/// <summary>
/// Resolves the deferred object and call any done callbacks with the specified arguments.
/// </summary>
/// <param name="args">The arguments to pass to the callbacks.</param>
/// <returns>The current deferred object.</returns>
/// <summary>
/// Resolves the deferred object and call any failure callbacks with the specified arguments
/// using the specified context as the this parameter.
/// </summary>
/// <param name="context">The context in which the callback is invoked.</param>
/// <param name="args">The arguments to pass to the callbacks.</param>
/// <returns>The current deferred object.</returns>
/// <summary>
/// Add handlers to be called when the deferred object is resolved or rejected.
/// If the object has already been resolved or rejected, the handlers are still invoked.
/// </summary>
/// <param name="doneCallback">The callback to invoke when the object is resolved.</param>
/// <param name="failCallback">The callback to invoke when the object is rejected.</param>
/// <returns>The current deferred object.</returns>
/// <summary>
/// Add handlers to be called when the deferred object is resolved or rejected.
/// If the object has already been resolved or rejected, the handlers are still invoked.
/// </summary>
/// <param name="doneCallback">The callback to invoke when the object is resolved.</param>
/// <param name="failCallback">The callback to invoke when the object is rejected.</param>
/// <returns>The current deferred object.</returns>
/// <summary>
/// Add handlers to be called when the deferred object is resolved or rejected.
/// If the object has already been resolved or rejected, the handlers are still invoked.
/// </summary>
/// <param name="doneCallbacks">The callbacks to invoke when the object is resolved.</param>
/// <param name="failCallbacks">The callbacks to invoke when the object is rejected.</param>
/// <returns>The current deferred object.</returns>
/// <summary>
/// Add handlers to be called when the deferred object is resolved or rejected.
/// If the object has already been resolved or rejected, the handlers are still invoked.
/// </summary>
/// <param name="doneCallbacks">The callbacks to invoke when the object is resolved.</param>
/// <param name="failCallbacks">The callbacks to invoke when the object is rejected.</param>
/// <returns>The current deferred object.</returns>
/// <summary>
/// Represents a deferred value.
/// </summary>
/// <summary>
/// Add handlers to be called when the deferred object is resolved or
/// rejected.
/// </summary>
/// <param name="callbacks">The callbacks to invoke (in order).</param>
/// <returns>The current deferred object.</returns>
/// <summary>
/// Add handlers to be called when the deferred object is resolved or
/// rejected.
/// </summary>
/// <param name="callbacks">The callbacks to invoke (in order).</param>
/// <returns>The current deferred object.</returns>
/// <summary>
/// Add handlers to be called when the deferred object is resolved. If the
/// deferred object is already resolved, the handlers are still invoked.
/// </summary>
/// <param name="doneCallbacks">The callbacks to invoke (in order).</param>
/// <returns>The current deferred object.</returns>
/// <summary>
/// Add handlers to be called when the deferred object is resolved. If the
/// deferred object is already resolved, the handlers are still invoked.
/// </summary>
/// <param name="doneCallbacks">The callbacks to invoke (in order).</param>
/// <returns>The current deferred object.</returns>
/// <summary>
/// Add handlers to be called when the deferred object is rejected. If the
/// deferred object is already resolved, the handlers are still invoked.
/// </summary>
/// <param name="failCallbacks">The callbacks to invoke (in order).</param>
/// <returns>The current deferred object.</returns>
/// <summary>
/// Add handlers to be called when the deferred object is rejected. If the
/// deferred object is already resolved, the handlers are still invoked.
/// </summary>
/// <param name="failCallbacks">The callbacks to invoke (in order).</param>
/// <returns>The current deferred object.</returns>
/// <summary>
/// Determines whether the deferred object has been rejected.
/// </summary>
/// <returns>true if it has been rejected; false otherwise.</returns>
/// <summary>
/// Determines whether the deferred object has been resolved.
/// </summary>
/// <returns>true if it has been resolved; false otherwise.</returns>
/// <summary>
/// Returns a deferred object that can be further composed.
/// </summary>
/// <returns>A deferred object.</returns>
/// <summary>
/// Rejects the deferred object and call any failure callbacks with the specified arguments.
/// </summary>
/// <param name="args">The arguments to pass to the callbacks.</param>
/// <returns>The current deferred object.</returns>
/// <summary>
/// Rejects the deferred object and call any failure callbacks with the specified arguments
/// using the specified context as the this parameter.
/// </summary>
/// <param name="context">The context in which the callback is invoked.</param>
/// <param name="args">The arguments to pass to the callbacks.</param>
/// <returns>The current deferred object.</returns>
/// <summary>
/// Resolves the deferred object and call any done callbacks with the specified arguments.
/// </summary>
/// <param name="args">The arguments to pass to the callbacks.</param>
/// <returns>The current deferred object.</returns>
/// <summary>
/// Resolves the deferred object and call any failure callbacks with the specified arguments
/// using the specified context as the this parameter.
/// </summary>
/// <param name="context">The context in which the callback is invoked.</param>
/// <param name="args">The arguments to pass to the callbacks.</param>
/// <returns>The current deferred object.</returns>
/// <summary>
/// Add handlers to be called when the deferred object is resolved or rejected.
/// If the object has already been resolved or rejected, the handlers are still invoked.
/// </summary>
/// <param name="doneCallback">The callback to invoke when the object is resolved.</param>
/// <param name="failCallback">The callback to invoke when the object is rejected.</param>
/// <returns>The current deferred object.</returns>
/// <summary>
/// Add handlers to be called when the deferred object is resolved or rejected.
/// If the object has already been resolved or rejected, the handlers are still invoked.
/// </summary>
/// <param name="doneCallback">The callback to invoke when the object is resolved.</param>
/// <param name="failCallback">The callback to invoke when the object is rejected.</param>
/// <returns>The current deferred object.</returns>
/// <summary>
/// Add handlers to be called when the deferred object is resolved or rejected.
/// If the object has already been resolved or rejected, the handlers are still invoked.
/// </summary>
/// <param name="doneCallbacks">The callbacks to invoke when the object is resolved.</param>
/// <param name="failCallbacks">The callbacks to invoke when the object is rejected.</param>
/// <returns>The current deferred object.</returns>
/// <summary>
/// Add handlers to be called when the deferred object is resolved or rejected.
/// If the object has already been resolved or rejected, the handlers are still invoked.
/// </summary>
/// <param name="doneCallbacks">The callbacks to invoke when the object is resolved.</param>
/// <param name="failCallbacks">The callbacks to invoke when the object is rejected.</param>
/// <returns>The current deferred object.</returns>
// jQueryDeferredFilter.cs
// Script#/Libraries/jQuery/Core
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// A callback that can filter a deferred object's resolved/rejected value.
/// </summary>
/// <param name="value">The value to be filtered.</param>
/// <summary>
/// A callback that can filter a deferred object's resolved/rejected value.
/// </summary>
/// <param name="value">The value to be filtered.</param>
/// <summary>
/// A callback that can filter a deferred object's resolved/rejected value.
/// </summary>
/// <typeparam name="TTargetData">The type of target data.</typeparam>
/// <typeparam name="TSourceData">The type of source data.</typeparam>
/// <param name="value">The source value to be filtered.</param>
/// <returns>The target value.</returns>
// jQueryDeferredInitializer.cs
// Script#/Libraries/jQuery/Core
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// A callback that can initialize a deferred object during construction.
/// </summary>
/// <param name="deferred">The deferred object being created.</param>
/// <summary>
/// A callback that can initialize a deferred object during construction.
/// </summary>
/// <param name="deferred">The deferred object being created.</param>
// jQueryEvent.cs
// Script#/Libraries/jQuery/Core
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// Provides information about the current event.
/// </summary>
/// <summary>
/// Gets the current DOM element within the event bubbling phase.
/// </summary>
/// <summary>
/// Gets the event data that was passed in into the Bind method.
/// </summary>
/// <summary>
/// Gets the namespace specified when the event was triggered.
/// </summary>
/// <summary>
/// Gets the original DOM event which spawned this event.
/// </summary>
/// <summary>
/// Gets the mouse position relative to left edge of the document.
/// </summary>
/// <summary>
/// Gets the mouse position relative to top edge of the document.
/// </summary>
/// <summary>
/// Gets the other DOM element associated with the event if any.
/// </summary>
/// <summary>
/// Gets the value returned by the last event handler if any.
/// </summary>
/// <summary>
/// Gets the DOM element that initiated the event.
/// </summary>
/// <summary>
/// Gets the number of milliseconds since Jan 1, 1970, when the event
/// was triggered.
/// </summary>
/// <summary>
/// Gets the type or name of the event.
/// </summary>
/// <summary>
/// Gets the key or button that was pressed.
/// </summary>
/// <summary>
/// Gets whether PreventDefault has been called on this event.
/// </summary>
/// <returns>True if PreventDefault was called. False otherwise.</returns>
/// <summary>
/// Gets whether StopImmediatePropagation has been called on this event.
/// </summary>
/// <returns>True if StopImmediatePropagation was called. False otherwise.</returns>
/// <summary>
/// Gets whether StopPropagation has been called on this event.
/// </summary>
/// <returns>True if StopPropagation was called. False otherwise.</returns>
/// <summary>
/// Prevents the default action associated with the event.
/// </summary>
/// <summary>
/// Prevents the rest of the handlers associated with the event from being invoked.
/// </summary>
/// <summary>
/// Prevents the event from being bubbled up the DOM tree.
/// </summary>
// jQueryEventHandler.cs
// Script#/Libraries/jQuery/Core
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// Handles a jQuery event.
/// </summary>
// jQueryNameValuePair.cs
// Script#/Libraries/jQuery/Core
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// Represents a name and value.
/// </summary>
/// <summary>
/// Gets the name.
/// </summary>
/// <summary>
/// Gets the value.
/// </summary>
// jQueryObject.cs
// Script#/Libraries/jQuery/Core
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// Represents a jQuery result that wraps a set of elements.
/// </summary>
/// <summary>
/// Initializes an instance of a jQueryObject.
/// </summary>
/// <summary>
/// Gets the Document or DOM element used as the context to match
/// this set of elements.
/// </summary>
/// <summary>
/// Gets the number of elements in this <see cref="jQueryObject" />.
/// </summary>
/// <summary>
/// Gets the selector used to match this set of elements.
/// </summary>
/// <summary>
/// Gets the matched element at the specified index.
/// </summary>
/// <param name="index">The index to lookup.</param>
/// <returns>The DOM element at the specified index.</returns>
/// <summary>
/// Adds elements to the set of matched elements.
/// </summary>
/// <param name="element">The element to add.</param>
/// <returns>The new jQueryObject with added elements.</returns>
/// <summary>
/// Adds elements to the set of matched elements.
/// </summary>
/// <param name="elements">The elements to add.</param>
/// <returns>The new jQueryObject with added elements.</returns>
/// <summary>
/// Adds elements to the set of matched elements.
/// </summary>
/// <param name="elements">The jQuery object representing the elements to add.</param>
/// <returns>The new jQueryObject with added elements.</returns>
/// <summary>
/// Adds elements to the set of matched elements.
/// </summary>
/// <param name="selector">The set of elements to select and add.</param>
/// <returns>The new jQueryObject with added elements.</returns>
/// <summary>
/// Adds elements to the set of matched elements.
/// </summary>
/// <param name="selector">The set of elements to select and add.</param>
/// <param name="context">The document to select elements from.</param>
/// <returns>The new jQueryObject with added elements.</returns>
/// <summary>
/// Adds elements to the set of matched elements.
/// </summary>
/// <param name="selector">The set of elements to select and add.</param>
/// <param name="context">The root element to select elements from.</param>
/// <returns>The new jQueryObject with added elements.</returns>
/// <summary>
/// Adds the specified class(es) to each of the set of matched elements.
/// </summary>
/// <param name="className">The class or classes to add.</param>
/// <returns>The current jQueryObject.</returns>
/// <summary>
/// Adds the CSS class returned by the specified function.
/// </summary>
/// <param name="cssFunction">The function that returns the CSS class to add.</param>
/// <returns>The current jQueryObject.</returns>
/// <summary>
/// Adds the CSS class returned by the specified function.
/// </summary>
/// <param name="cssFunction">The function that returns the CSS class to add.</param>
/// <returns>The current jQueryObject.</returns>
/// <summary>
/// Adds elements to the set of matched elements.
/// </summary>
/// <param name="markup">The HTML fragment to add.</param>
/// <returns>The new jQueryObject with added elements.</returns>
/// <summary>
/// Insert content after each element of the matching elements.
/// </summary>
/// <param name="content">The content to insert.</param>
/// <returns>The current jQueryObject</returns>
/// <summary>
/// Insert content after each element of the matching elements.
/// </summary>
/// <param name="content">The jQueryObject containing the content.</param>
/// <returns>The current jQueryObject</returns>
/// <summary>
/// Insert content returned from the specified function after each element
/// of the matching elements.
/// </summary>
/// <param name="contentFunction">The function that returns the content to insert.</param>
/// <returns>The current jQueryObject</returns>
/// <summary>
/// Registers the event handler to be invoked when an Ajax request is
/// completed.
/// </summary>
/// <param name="handler">The event handler.</param>
/// <returns>The current jQueryObject.</returns>
/// <summary>
/// Registers the event handler to be invoked when there is an error
/// completing an Ajax request.
/// </summary>
/// <param name="handler">The event handler.</param>
/// <returns>The current jQueryObject.</returns>
/// <summary>
/// Registers the event handler to be invoked when an Ajax request is
/// being sent.
/// </summary>
/// <param name="handler">The event handler.</param>
/// <returns>The current jQueryObject.</returns>
/// <summary>
/// Registers the event handler to be invoked when an Ajax request is
/// completed successfully.
/// </summary>
/// <param name="handler">The event handler.</param>
/// <returns>The current jQueryObject.</returns>
/// <summary>
/// Registers the callback to be invoked when there the first
/// Ajax request is started.
/// </summary>
/// <param name="callback">The callback to invoke.</param>
/// <returns>The current jQueryObject.</returns>
/// <summary>
/// Registers the callback to be invoked when there are no more
/// outstanding Ajax requests.
/// </summary>
/// <param name="callback">The callback to invoke.</param>
/// <returns>The current jQueryObject.</returns>
/// <summary>
/// Add the previous set of elements on the stack to the current set.
/// </summary>
/// <returns>The new jQueryObject with added elements.</returns>
/// <summary>
/// Animates a set of CSS properties using the default duration.
/// </summary>
/// <param name="propertiesToAnimate">The properties to animate with their target values.</param>
/// <returns>The current jQueryObject.</returns>
/// <summary>
/// Animates a set of CSS properties over the specified duration.
/// </summary>
/// <param name="propertiesToAnimate">The properties to animate with their target values.</param>
/// <param name="duration">The duration in milliseconds for the animation.</param>
/// <returns>The current jQueryObject.</returns>
/// <summary>
/// Animates a set of CSS properties over the specified duration.
/// </summary>
/// <param name="propertiesToAnimate">The properties to animate with their target values.</param>
/// <param name="duration">The duration in milliseconds for the animation.</param>
/// <param name="easing">The easing to apply to the animation.</param>
/// <returns>The current jQueryObject.</returns>
/// <summary>
/// Animates a set of CSS properties over the specified duration.
/// </summary>
/// <param name="propertiesToAnimate">The properties to animate with their target values.</param>
/// <param name="duration">The duration in milliseconds for the animation.</param>
/// <param name="easing">The easing to apply to the animation.</param>
/// <param name="callback">The callback to invoke upon completion.</param>
/// <returns>The current jQueryObject.</returns>
/// <summary>
/// Animates a set of CSS properties over the specified duration.
/// </summary>
/// <param name="propertiesToAnimate">The properties to animate with their target values.</param>
/// <param name="duration">The duration in milliseconds for the animation.</param>
/// <returns>The current jQueryObject.</returns>
/// <summary>
/// Animates a set of CSS properties over the specified duration.
/// </summary>
/// <param name="propertiesToAnimate">The properties to animate with their target values.</param>
/// <param name="duration">The duration in milliseconds for the animation.</param>
/// <param name="easing">The easing to apply to the animation.</param>
/// <returns>The current jQueryObject.</returns>
/// <summary>
/// Animates a set of CSS properties over the specified duration.
/// </summary>
/// <param name="propertiesToAnimate">The properties to animate with their target values.</param>
/// <param name="duration">The duration in milliseconds for the animation.</param>
/// <param name="easing">The easing to apply to the animation.</param>
/// <param name="callback">The callback to invoke upon completion.</param>
/// <returns>The current jQueryObject.</returns>
/// <summary>
/// Animates a set of CSS properties using the specified options.
/// </summary>
/// <param name="propertiesToAnimate">The properties to animate with their target values.</param>
/// <param name="options">Animation options.</param>
/// <returns>The current jQueryObject.</returns>
/// <summary>
/// Insert content to the end of each element of the matching elements.
/// </summary>
/// <param name="content">The content to append.</param>
/// <returns>The current jQueryObject</returns>
/// <summary>
/// Insert content to the end of each element of the matching elements.
/// </summary>
/// <param name="content">The DOM element to append.</param>
/// <returns>The current jQueryObject</returns>
/// <summary>
/// Insert content to the end of each element of the matching elements.
/// </summary>
/// <param name="content">The jQueryObject containing the content.</param>
/// <returns>The current jQueryObject</returns>
/// <summary>
/// Insert content returned from the specified function to end end of each element
/// of the matching elements.
/// </summary>
/// <param name="contentFunction">The function that returns the content to append.</param>
/// <returns>The current jQueryObject</returns>
/// <summary>
/// Insert content returned from the specified function to end end of each element
/// of the matching elements.
/// </summary>
/// <param name="contentFunction">The function that returns the content to append.</param>
/// <returns>The current jQueryObject</returns>
/// <summary>
/// Appends every element of the matching set to the end of the specified element.
/// </summary>
/// <param name="element">The element to append to.</param>
/// <returns>The resulting jQuery object</returns>
/// <summary>
/// Appends every element of the matching set to the end of the elements matching
/// the specified selector.
/// </summary>
/// <param name="selector">The elements to append to.</param>
/// <returns>The resulting jQuery object</returns>
/// <summary>
/// Appends every element of the matching set to the end of the specified matched elements.
/// </summary>
/// <param name="jQueryObject">The elements to append to.</param>
/// <returns>The resulting jQuery object</returns>
/// <summary>
/// Sets the specified attribute value to the specified value on
/// the set of matched elements.
/// </summary>
/// <param name="attributeName">The name of the attribute to set.</param>
/// <param name="value">The value of the attribute.</param>
/// <returns>The current jQueryObject.</returns>
/// <summary>
/// Sets the specified attributes to the set of matched elements.
/// </summary>
/// <param name="nameValueMap">The list of names and values of the attributes to set.</param>
/// <returns>The current jQueryObject.</returns>
/// <summary>
/// Sets the specified attributes to the value returned from the specified function.
/// </summary>
/// <param name="attrFunction">The function returning the attribute values.</param>
/// <returns>The current jQueryObject.</returns>
/// <summary>
/// Sets the specified attributes to the value returned from the specified function.
/// </summary>
/// <param name="attrFunction">The function returning the attribute values.</param>
/// <returns>The current jQueryObject.</returns>
/// <summary>
/// Insert content before each element of the matching elements.
/// </summary>
/// <param name="content">The content to insert.</param>
/// <returns>The current jQueryObject</returns>
/// <summary>
/// Insert content before each element of the matching elements.
/// </summary>
/// <param name="content">The DOM element to insert.</param>
/// <returns>The current jQueryObject</returns>
/// <summary>
/// Insert content before each element of the matching elements.
/// </summary>
/// <param name="content">The jQueryObject containing the content.</param>
/// <returns>The current jQueryObject</returns>
/// <summary>
/// Insert content returned from the specified function before each element
/// of the matching elements.
/// </summary>
/// <param name="contentFunction">The function that returns the content to insert.</param>
/// <returns>The current jQueryObject</returns>
/// <summary>
/// Attaches a handler for handling the specified event on the matched set of elements.
/// </summary>
/// <param name="eventName">The name of the event.</param>
/// <param name="eventHandler">The event handler to be invoked.</param>
/// <returns>The current jQueryObject</returns>
/// <summary>
/// Attaches a handler for the specified event on the matched set of elements.
/// </summary>
/// <param name="eventName">The name of the event.</param>
/// <param name="eventData">Any data that needs to be passed to the event handler.</param>
/// <param name="eventHandler">The event handler to be invoked.</param>
/// <returns>The current jQueryObject</returns>
/// <summary>
/// Attaches a handler that prevents default behavior and stops event bubbling for
/// the specified event on the matched set of elements.
/// </summary>
/// <param name="eventName">The name of the event.</param>
/// <param name="result">Should be false.</param>
/// <returns>The current jQueryObject</returns>
/// <summary>
/// Triggers the blur event on each of the matched set of elements.
/// </summary>
/// <returns>The current jQueryObject</returns>
/// <summary>
/// Attaches a handler to the blur event on each of the matched set of elements.
/// </summary>
/// <param name="eventHandler">The event handler to be invoked.</param>
/// <returns>The current jQueryObject</returns>
/// <summary>
/// Attaches a handler to the blur event on each of the matched set of elements.
/// </summary>
/// <param name="eventData">Data to be passed in into the event handler.</param>
/// <param name="eventHandler">The event handler to be invoked.</param>
/// <returns>The current jQueryObject</returns>
/// <summary>
/// Triggers the change event on each of the matched set of elements.
/// </summary>
/// <returns>The current jQueryObject</returns>
/// <summary>
/// Attaches a handler to the change event on each of the matched set of elements.
/// </summary>
/// <param name="eventHandler">The event handler to be invoked.</param>
/// <returns>The current jQueryObject</returns>
/// <summary>
/// Attaches a handler to the change event on each of the matched set of elements.
/// </summary>
/// <param name="eventData">Data to be passed in into the event handler.</param>
/// <param name="eventHandler">The event handler to be invoked.</param>
/// <returns>The current jQueryObject</returns>
/// <summary>
/// Gets a jQueryObject representing the children of the matched set of elements.
/// </summary>
/// <returns>The new jQueryObject.</returns>
/// <summary>
/// Gets a jQueryObject representing the children of the matched set of elements.
/// </summary>
/// <param name="selector">The selector to match children against.</param>
/// <returns>The new jQueryObject.</returns>
/// <summary>
/// Triggers the click event on each of the matched set of elements.
/// </summary>
/// <returns>The current jQueryObject</returns>
/// <summary>
/// Attaches a handler to the click event on each of the matched set of elements.
/// </summary>
/// <param name="eventHandler">The event handler to be invoked.</param>
/// <returns>The current jQueryObject</returns>
/// <summary>
/// Attaches a handler to the click event on each of the matched set of elements.
/// </summary>
/// <param name="eventData">Data to be passed in into the event handler.</param>
/// <param name="eventHandler">The event handler to be invoked.</param>
/// <returns>The current jQueryObject</returns>
/// <summary>
/// Creates a clone of the current jQueryObject and the matching elements it
/// represents.
/// </summary>
/// <returns>The cloned jQueryObject.</returns>
/// <summary>
/// Creates a clone of the current jQueryObject and the matching elements it
/// represents.
/// </summary>
/// <param name="withDataAndEvents">Whether event handlers and element data should be copied over.</param>
/// <returns>The cloned jQueryObject.</returns>
/// <summary>
/// Creates a clone of the current jQueryObject and the matching elements it
/// represents.
/// </summary>
/// <param name="withDataAndEvents">Whether event handlers and element data should be copied over.</param>
/// <param name="deepWithDataAndEvents">Whether event handlers and element data for all children should be copied over.</param>
/// <returns>The cloned jQueryObject.</returns>
/// <summary>
/// Returns a new jQueryObject with the closest ancestor matching
/// the specified element.
/// </summary>
/// <param name="element">The element to match against.</param>
/// <returns>The new jQueryObject.</returns>
/// <summary>
/// Returns a new jQueryObject with the closest ancestor matching
/// the specified set of elements.
/// </summary>
/// <param name="elements">The matched set of elements to lookup.</param>
/// <returns>The new jQueryObject.</returns>
/// <summary>
/// Returns a new jQueryObject with the closest ancestor matching
/// the specified selector.
/// </summary>
/// <param name="selector">The selector used to match elements.</param>
/// <returns>The new jQueryObject.</returns>
/// <summary>
/// Returns a new jQueryObject with the closest ancestor matching
/// the specified selector.
/// </summary>
/// <param name="selector">The selector used to match elements.</param>
/// <param name="context">The element within which to search.</param>
/// <returns>The new jQueryObject.</returns>
/// <summary>
/// Gets a jQueryObject representing the content of the matched set of elements
/// including text nodes.
/// </summary>
/// <returns>The new jQueryObject with added elements.</returns>
/// <summary>
/// Sets the specified CSS attribute value to the specified value on
/// the set of matched elements.
/// </summary>
/// <param name="attributeName">The name of the CSS attribute to set.</param>
/// <param name="value">The value of the CSS attribute.</param>
/// <returns>The current jQueryObject.</returns>
/// <summary>
/// Sets the specified CSS attribute value to the values returned by the
/// specified function on the set of matched elements.
/// </summary>
/// <param name="attributeName">The name of the CSS attribute to set.</param>
/// <param name="valueFunction">The function returning attribute values.</param>
/// <returns>The current jQueryObject.</returns>
/// <summary>
/// Sets the specified CSS attribute value to the values returned by the
/// specified function on the set of matched elements.
/// </summary>
/// <param name="attributeName">The name of the CSS attribute to set.</param>
/// <param name="valueFunction">The function returning attribute values.</param>
/// <returns>The current jQueryObject.</returns>
/// <summary>
/// Sets the specified CSS attributes to the set of matched elements.
/// </summary>
/// <param name="nameValueMap">The list of names and values of the CSS attributes to set.</param>
/// <returns>The current jQueryObject.</returns>
/// <summary>
/// Sets the specified value as data on the matching set of elements.
/// </summary>
/// <param name="key">The key used to store value.</param>
/// <param name="value">The value to store.</param>
/// <returns>The current jQueryObject.</returns>
/// <summary>
/// Sets the specified name/value pairs as data on the matching set of elements.
/// This extends any existing data on the element.
/// </summary>
/// <param name="data">The set of name/value pairs to set.</param>
/// <returns>The current jQueryObject.</returns>
/// <summary>
/// Attaches a handler for handling the specified event on elements matching the
/// specified selector within the matched set of elements, now or in the future.
/// </summary>
/// <param name="selector">The selector to match elements.</param>
/// <param name="eventName">The name of the event.</param>
/// <param name="eventHandler">The event handler to be invoked.</param>
/// <returns></returns>
/// <summary>
/// Attaches a handler for handling the specified event on elements matching the
/// specified selector within the matched set of elements, now or in the future.
/// </summary>
/// <param name="selector">The selector to match elements.</param>
/// <param name="eventName">The name of the event.</param>
/// <param name="eventData">Any data that needs to be passed to the event handler.</param>
/// <param name="eventHandler">The event handler to be invoked.</param>
/// <returns></returns>
/// <summary>
/// Removes the matching elements from the DOM, but keeps jQuery data on elements
/// intact.
/// </summary>
/// <returns>The current jQueryObject.</returns>
/// <summary>
/// Removes the matching elements from the DOM, but keeps jQuery data on elements
/// intact.
/// </summary>
/// <param name="selector">The selector to use to filter the elements to remove.</param>
/// <returns>The current jQueryObject.</returns>
/// <summary>
/// Triggers the dblclick event on each of the matched set of elements.
/// </summary>
/// <returns>The current jQueryObject</returns>
/// <summary>
/// Attaches a handler to the dblclick event on each of the matched set of elements.
/// </summary>
/// <param name="eventHandler">The event handler to be invoked.</param>
/// <returns>The current jQueryObject</returns>
/// <summary>
/// Attaches a handler to the dblclick event on each of the matched set of elements.
/// </summary>
/// <param name="eventData">Data to be passed in into the event handler.</param>
/// <param name="eventHandler">The event handler to be invoked.</param>
/// <returns>The current jQueryObject</returns>
/// <summary>
/// Detaches all handlers attached using Live from the matched set of elements.
/// </summary>
/// <returns>The current jQueryObject.</returns>
/// <summary>
/// Detaches all handlers attached using Live for the specified event on the
/// matched set of elements.
/// </summary>
/// <param name="eventName">The event to detach handlers for.</param>
/// <returns>The current jQueryObject.</returns>
/// <summary>
/// Detaches the specified handler attached using Live for the specified event on the
/// matched set of elements.
/// </summary>
/// <param name="eventName">The name of the event.</param>
/// <param name="eventHandler">The event handler to be detached.</param>
/// <returns></returns>
/// <summary>
/// Execute a function within for every matched element.
/// part way through.
/// </summary>
/// <param name="callback">The callback to call.</param>
/// <returns>The current jQueryObject.</returns>
/// <summary>
/// Execute a function within for every matched element. If the callback
/// returns false, the iteration is interrupted.
/// </summary>
/// <param name="callback">The callback to call.</param>
/// <returns>The current jQueryObject.</returns>
/// <summary>
/// Removes all child elements of the matching set of elements.
/// </summary>
/// <returns>The current jQueryObject.</returns>
/// <summary>
/// Add the most recent filtering operation and return the previous set of
/// matching elements.
/// </summary>
/// <returns>The jQueryObject containing the previous element set.</returns>
/// <summary>
/// Reduce the set of matched elements to a single element.
/// </summary>
/// <param name="index">The index of the element. Use negative to count backwards.</param>
/// <returns>A new jQueryObject wrapping the specified element.</returns>
/// <summary>
/// Triggers the error event on each of the matched set of elements.
/// </summary>
/// <returns>The current jQueryObject</returns>
/// <summary>
/// Attaches a handler to the error event on each of the matched set of elements.
/// </summary>
/// <param name="eventHandler">The event handler to be invoked.</param>
/// <returns>The current jQueryObject</returns>
/// <summary>
/// Attaches a handler to the error event on each of the matched set of elements.
/// </summary>
/// <param name="eventData">Data to be passed in into the event handler.</param>
/// <param name="eventHandler">The event handler to be invoked.</param>
/// <returns>The current jQueryObject</returns>
/// <summary>
/// Fades in the matching set of elements using a default duration of 400ms.
/// </summary>
/// <returns>The current jQueryObject.</returns>
/// <summary>
/// Fades in the matching set of elements using a the specified duration.
/// </summary>
/// <param name="duration">The duration in milliseconds for the effect.</param>
/// <returns>The current jQueryObject.</returns>
/// <summary>
/// Fades in the matching set of elements using a the specified duration.
/// </summary>
/// <param name="duration">The duration in milliseconds for the effect.</param>
/// <param name="callback">The callback to invoke upon completion.</param>
/// <returns>The current jQueryObject.</returns>
/// <summary>
/// Fades in the matching set of elements using a the specified duration.
/// </summary>
/// <param name="duration">The duration in milliseconds for the effect.</param>
/// <param name="easing">The easing to use.</param>
/// <param name="callback">The callback to invoke upon completion.</param>
/// <returns>The current jQueryObject.</returns>
/// <summary>
/// Fades in the matching set of elements using a the specified duration.
/// </summary>
/// <param name="duration">The duration for the effect.</param>
/// <returns>The current jQueryObject.</returns>
/// <summary>
/// Fades in the matching set of elements using a the specified duration.
/// </summary>
/// <param name="duration">The duration for the effect.</param>
/// <param name="callback">The callback to invoke upon completion.</param>
/// <returns>The current jQueryObject.</returns>
/// <summary>
/// Fades in the matching set of elements using a the specified duration.
/// </summary>
/// <param name="duration">The duration for the effect.</param>
/// <param name="easing">The easing to use.</param>
/// <param name="callback">The callback to invoke upon completion.</param>
/// <returns>The current jQueryObject.</returns>
/// <summary>
/// Fades out the matching set of elements using a default duration of 400ms.
/// </summary>
/// <returns>The current jQueryObject.</returns>
/// <summary>
/// Fades out the matching set of elements using a the specified duration.
/// </summary>
/// <param name="duration">The duration in milliseconds for the effect.</param>
/// <returns>The current jQueryObject.</returns>
/// <summary>
/// Fades out the matching set of elements using a the specified duration.
/// </summary>
/// <param name="duration">The duration in milliseconds for the effect.</param>
/// <param name="callback">The callback to invoke upon completion.</param>
/// <returns>The current jQueryObject.</returns>
/// <summary>
/// Fades out the matching set of elements using a the specified duration.
/// </summary>
/// <param name="duration">The duration in milliseconds for the effect.</param>
/// <param name="easing">The easing to use.</param>
/// <param name="callback">The callback to invoke upon completion.</param>
/// <returns>The current jQueryObject.</returns>
/// <summary>
/// Fades out the matching set of elements using a the specified duration.
/// </summary>
/// <param name="duration">The duration for the effect.</param>
/// <returns>The current jQueryObject.</returns>
/// <summary>
/// Fades out the matching set of elements using a the specified duration.
/// </summary>
/// <param name="duration">The duration for the effect.</param>
/// <param name="callback">The callback to invoke upon completion.</param>
/// <returns>The current jQueryObject.</returns>
/// <summary>
/// Fades out the matching set of elements using a the specified duration.
/// </summary>
/// <param name="duration">The duration for the effect.</param>
/// <param name="easing">The easing to use.</param>
/// <param name="callback">The callback to invoke upon completion.</param>
/// <returns>The current jQueryObject.</returns>
/// <summary>
/// Fades the matching set of elements using a the specified duration to the
/// specified opacity.
/// </summary>
/// <param name="duration">The duration in milliseconds for the effect.</param>
/// <param name="opacity">The opacity level between 0 and 1.</param>
/// <returns>The current jQueryObject.</returns>
/// <summary>
/// Fades the matching set of elements using a the specified duration to
/// the specified opacity.
/// </summary>
/// <param name="duration">The duration in milliseconds for the effect.</param>
/// <param name="opacity">The opacity level between 0 and 1.</param>
/// <param name="callback">The callback to invoke upon completion.</param>
/// <returns>The current jQueryObject.</returns>
/// <summary>
/// Fades the matching set of elements using a the specified duration to
/// the specified opacity.
/// </summary>
/// <param name="duration">The duration in milliseconds for the effect.</param>
/// <param name="opacity">The opacity level between 0 and 1.</param>
/// <param name="easing">The easing to use.</param>
/// <param name="callback">The callback to invoke upon completion.</param>
/// <returns>The current jQueryObject.</returns>
/// <summary>
/// Fades the matching set of elements using a the specified duration to the
/// specified opacity.
/// </summary>
/// <param name="duration">The duration for the effect.</param>
/// <param name="opacity">The opacity level between 0 and 1.</param>
/// <returns>The current jQueryObject.</returns>
/// <summary>
/// Fades the matching set of elements using a the specified duration to
/// the specified opacity.
/// </summary>
/// <param name="duration">The duration for the effect.</param>
/// <param name="opacity">The opacity level between 0 and 1.</param>
/// <param name="callback">The callback to invoke upon completion.</param>
/// <returns>The current jQueryObject.</returns>
/// <summary>
/// Fades the matching set of elements using a the specified duration to
/// the specified opacity.
/// </summary>
/// <param name="duration">The duration for the effect.</param>
/// <param name="opacity">The opacity level between 0 and 1.</param>
/// <param name="easing">The easing to use.</param>
/// <param name="callback">The callback to invoke upon completion.</param>
/// <returns>The current jQueryObject.</returns>
/// <summary>
/// Toggles the visibility of the matching set of elements by fading them
/// using a default duration of 400ms.
/// </summary>
/// <returns>The current jQueryObject.</returns>
/// <summary>
/// Toggles the visibility of the matching set of elements by fading them
/// using the specified duration.
/// </summary>
/// <param name="duration">The duration in milliseconds for the effect.</param>
/// <returns>The current jQueryObject.</returns>
/// <summary>
/// Toggles the visibility of the matching set of elements by fading them
/// using the specified duration.
/// </summary>
/// <param name="duration">The duration in milliseconds for the effect.</param>
/// <param name="callback">The callback to invoke upon completion.</param>
/// <returns>The current jQueryObject.</returns>
/// <summary>
/// Toggles the visibility of the matching set of elements by fading them
/// using the specified duration.
/// </summary>
/// <param name="duration">The duration in milliseconds for the effect.</param>
/// <param name="easing">The easing to use.</param>
/// <param name="callback">The callback to invoke upon completion.</param>
/// <returns>The current jQueryObject.</returns>
/// <summary>
/// Toggles the visibility of the matching set of elements by fading them
/// using the specified duration.
/// </summary>
/// <param name="duration">The duration for the effect.</param>
/// <returns>The current jQueryObject.</returns>
/// <summary>
/// Toggles the visibility of the matching set of elements by fading them
/// using the specified duration.
/// </summary>
/// <param name="duration">The duration for the effect.</param>
/// <param name="callback">The callback to invoke upon completion.</param>
/// <returns>The current jQueryObject.</returns>
/// <summary>
/// Returns a new jQueryObject with elements matching the specified selector.
/// </summary>
/// <param name="selector">The selector used to match elements.</param>
/// <returns>The new jQueryObject.</returns>
/// <summary>
/// Returns a new jQueryObject with elements for which the specified filter
/// function return true.
/// </summary>
/// <param name="filterFunction">The function used to filter elements.</param>
/// <returns>The new jQueryObject.</returns>
/// <summary>
/// Returns a new jQueryObject with descendents of each matched element filtered
/// by the specified element.
/// This traverses down multiple levels of the tree.
/// </summary>
/// <param name="element">The element to match against.</param>
/// <returns>The new jQueryObject.</returns>
/// <summary>
/// Returns a new jQueryObject with descendents of each matched element filtered
/// by the specified matched set of elements.
/// This traverses down multiple levels of the tree.
/// </summary>
/// <param name="elements">The matched set of elements to lookup.</param>
/// <returns>The new jQueryObject.</returns>
/// <summary>
/// Returns a new jQueryObject with descendents of each matched element filtered
/// by the specified selector. This traverses down multiple levels of the tree.
/// </summary>
/// <param name="selector">The selector used to match elements.</param>
/// <returns>The new jQueryObject.</returns>
/// <summary>
/// Returns a new jQueryObject with the first matching element.
/// </summary>
/// <returns>The new jQueryObject.</returns>
/// <summary>
/// Triggers the focus event on each of the matched set of elements.
/// </summary>
/// <returns>The current jQueryObject</returns>
/// <summary>
/// Attaches a handler to the focus event on each of the matched set of elements.
/// </summary>
/// <param name="eventHandler">The event handler to be invoked.</param>
/// <returns>The current jQueryObject</returns>
/// <summary>
/// Attaches a handler to the focus event on each of the matched set of elements.
/// </summary>
/// <param name="eventData">Data to be passed in into the event handler.</param>
/// <param name="eventHandler">The event handler to be invoked.</param>
/// <returns>The current jQueryObject</returns>
/// <summary>
/// Attaches a handler to the focusin event on each of the matched set of elements.
/// </summary>
/// <param name="eventHandler">The event handler to be invoked.</param>
/// <returns>The current jQueryObject</returns>
/// <summary>
/// Attaches a handler to the focusin event on each of the matched set of elements.
/// </summary>
/// <param name="eventData">Data to be passed in into the event handler.</param>
/// <param name="eventHandler">The event handler to be invoked.</param>
/// <returns>The current jQueryObject</returns>
/// <summary>
/// Attaches a handler to the focusout event on each of the matched set of elements.
/// </summary>
/// <param name="eventHandler">The event handler to be invoked.</param>
/// <returns>The current jQueryObject</returns>
/// <summary>
/// Attaches a handler to the focusout event on each of the matched set of elements.
/// </summary>
/// <param name="eventData">Data to be passed in into the event handler.</param>
/// <param name="eventHandler">The event handler to be invoked.</param>
/// <returns>The current jQueryObject</returns>
/// <summary>
/// Gets the value of the specified attribute.
/// </summary>
/// <param name="attributeName">The name of the attribute.</param>
/// <returns>The value of the specified attribute.</returns>
/// <summary>
/// Gets the value of the specified CSS attribute.
/// </summary>
/// <param name="attributeName">The name of the attribute.</param>
/// <returns>The value of the specified CSS attribute.</returns>
/// <summary>
/// Retrieves all data values associated with the element.
/// </summary>
/// <returns>All the data as name/value pairs.</returns>
/// <summary>
/// Retrieves the specific data value associated with the element.
/// </summary>
/// <param name="key">The key to lookup.</param>
/// <returns>The value set for the specified key.</returns>
/// <summary>
/// Returns the wrapped element at the specified index.
/// </summary>
/// <param name="index">The index to lookup.</param>
/// <returns>The element being wrapped.</returns>
/// <summary>
/// Returns the wrapped elements.
/// </summary>
/// <returns>An array containing the elements being wrapped.</returns>
/// <summary>
/// Gets the height of the first matched element.
/// </summary>
/// <returns>The current computed height of the element.</returns>
/// <summary>
/// Gets the HTML content of the first matched element.
/// </summary>
/// <returns>The HTML content within the element.</returns>
/// <summary>
/// Gets the height of the first matched element excluding borders.
/// </summary>
/// <returns>The current computed height of the element.</returns>
/// <summary>
/// Gets the width of the first matched element excluding borders.
/// </summary>
/// <returns>The current computed width of the element.</returns>
/// <summary>
/// Returns the wrapped items at the specified index.
/// </summary>
/// <param name="index">The index to lookup.</param>
/// <returns>The item being wrapped.</returns>
/// <summary>
/// Returns the wrapped items.
/// </summary>
/// <returns>An array containing the items being wrapped.</returns>
/// <summary>
/// Gets the position of the first matched element relative to the document.
/// </summary>
/// <returns>The position of the element.</returns>
/// <summary>
/// Gets the height of the first matched element including borders.
/// </summary>
/// <returns>The current computed height of the element.</returns>
/// <summary>
/// Gets the height of the first matched element including borders.
/// </summary>
/// <param name="includeMargins">Whether to include the margins.</param>
/// <returns>The current computed height of the element.</returns>
/// <summary>
/// Gets the width of the first matched element including borders.
/// </summary>
/// <returns>The current computed width of the element.</returns>
/// <summary>
/// Gets the width of the first matched element including borders.
/// </summary>
/// <param name="includeMargins">Whether to include the margins.</param>
/// <returns>The current computed width of the element.</returns>
/// <summary>
/// Gets the value of the specified property from the first of the matched
/// set of elements.
/// </summary>
/// <param name="propertyName">The name of the property.</param>
/// <returns>The value of the specified property.</returns>
/// <summary>
/// Gets the value of the specified property from the first of the matched
/// set of elements.
/// </summary>
/// <param name="propertyName">The name of the property.</param>
/// <returns>The value of the specified property.</returns>
/// <summary>
/// Gets the current horizontal scrollbar position of the first matched element.
/// </summary>
/// <returns>The horizontal scroll position of the element.</returns>
/// <summary>
/// Gets the current vertical scrollbar position of the first matched element.
/// </summary>
/// <returns>The vertical scroll position of the element.</returns>
/// <summary>
/// Gets the text content of the first matched element.
/// </summary>
/// <returns>The text content within the element.</returns>
/// <summary>
/// Gets the value attribute of the first matched element.
/// </summary>
/// <returns>The value attribute of the element.</returns>
/// <summary>
/// Gets the width of the first matched element.
/// </summary>
/// <returns>The current computed width of the element.</returns>
/// <summary>
/// Returns a new jQueryObject with elements that have a descendant matching
/// the specified selector.
/// </summary>
/// <param name="selector">The selector used to match elements.</param>
/// <returns>The new jQueryObject.</returns>
/// <summary>
/// Returns a new jQueryObject with elements that have the specified element
/// as a descendant.
/// </summary>
/// <param name="element">The element to check for.</param>
/// <returns>The new jQueryObject.</returns>
/// <summary>
/// Determine whether any of the matched elements are assigned the given class.
/// </summary>
/// <param name="className">The class name to search for.</param>
/// <returns>true if the class name is found; false otherwise.</returns>
/// <summary>
/// Sets the height of each of the matched elements.
/// </summary>
/// <param name="height">Thew new height.</param>
/// <returns>The current jQueryObject.</returns>
/// <summary>
/// Sets the height of each of the matched elements.
/// </summary>
/// <param name="height">Thew new height.</param>
/// <returns>The current jQueryObject.</returns>
/// <summary>
/// Hide the matched set of elements.
/// </summary>
/// <returns>The current jQueryObject.</returns>
/// <summary>
/// Hide the matched set of elements in an animated manner.
/// </summary>
/// <param name="duration">The duration in milliseconds of the animation.</param>
/// <returns>The current jQueryObject.</returns>
/// <summary>
/// Hide the matched set of elements in an animated manner.
/// </summary>
/// <param name="duration">The duration in milliseconds of the animation.</param>
/// <param name="callback">The callback to invoke once the animation is completed.</param>
/// <returns>The current jQueryObject.</returns>
/// <summary>
/// Hide the matched set of elements in an animated manner.
/// </summary>
/// <param name="duration">The duration in milliseconds of the animation.</param>
/// <param name="easing">The easing to use.</param>
/// <param name="callback">The callback to invoke once the animation is completed.</param>
/// <returns>The current jQueryObject.</returns>
/// <summary>
/// Hide the matched set of elements in an animated manner.
/// </summary>
/// <param name="duration">The duration of the animation.</param>
/// <returns>The current jQueryObject.</returns>
/// <summary>
/// Hide the matched set of elements in an animated manner.
/// </summary>
/// <param name="duration">The duration of the animation.</param>
/// <param name="callback">The callback to invoke once the animation is completed.</param>
/// <returns>The current jQueryObject.</returns>
/// <summary>
/// Hide the matched set of elements in an animated manner.
/// </summary>
/// <param name="duration">The duration of the animation.</param>
/// <param name="easing">The easing to use.</param>
/// <param name="callback">The callback to invoke once the animation is completed.</param>
/// <returns>The current jQueryObject.</returns>
/// <summary>
/// Sets the HTML content of the matched set of elements.
/// </summary>
/// <param name="html">The new HTML to set.</param>
/// <returns>The current jQueryObject.</returns>
/// <summary>
/// Sets the HTML content of the matched set of elements to the markup represented
/// by the specified element.
/// </summary>
/// <param name="html">The new HTML to set.</param>
/// <returns>The current jQueryObject.</returns>
/// <summary>
/// Sets the HTML content of the matched set of elements by calling the specified
/// function.
/// </summary>
/// <param name="htmlFunction">The function that returns the HTML content.</param>
/// <returns>The current jQueryObject.</returns>
/// <summary>
/// Sets the HTML content of the matched set of elements by calling the specified
/// function.
/// </summary>
/// <param name="htmlFunction">The function that returns the HTML content.</param>
/// <returns>The current jQueryObject.</returns>
/// <summary>
/// Gets the index of the first element in the matched set of elements relative to
/// its sibling elements.
/// </summary>
/// <returns>The index of the first matching element.</returns>
/// <summary>
/// Searches every matched element for the object and returns its 0-based index if found.
/// Returns -1 if the object wasn't found.
/// </summary>
/// <param name="element">The element to lookup.</param>
/// <returns>The index of the elment.</returns>
/// <summary>
/// Gets the index of the first element in the matched set of elements relative to
/// the set of elements matching the specified selector.
/// </summary>
/// <param name="selector">The selector used to match elements.</param>
/// <returns>The index of the first matching element.</returns>
/// <summary>
/// Insert every element of the matching set after the specified element.
/// </summary>
/// <param name="element">The element to insert after.</param>
/// <returns>The resulting jQuery object</returns>
/// <summary>
/// Insert every element of the matching set after the elements matching
/// the specified selector.
/// </summary>
/// <param name="selector">The elements to insert after.</param>
/// <returns>The resulting jQuery object</returns>
/// <summary>
/// Insert every element of the matching set after the specified matched elements.
/// </summary>
/// <param name="jQueryObject">The elements to insert after.</param>
/// <returns>The resulting jQuery object</returns>
/// <summary>
/// Insert every element of the matching set before the specified element.
/// </summary>
/// <param name="element">The element to insert before.</param>
/// <returns>The resulting jQuery object</returns>
/// <summary>
/// Insert every element of the matching set before the elements matching
/// the specified selector.
/// </summary>
/// <param name="selector">The elements to insert before.</param>
/// <returns>The resulting jQuery object</returns>
/// <summary>
/// Insert every element of the matching set before the specified matched elements.
/// </summary>
/// <param name="jQueryObject">The elements to insert before.</param>
/// <returns>The resulting jQuery object</returns>
/// <summary>
/// Gets whether the at least one of the matched set of elements matches the specified
/// filter function.
/// </summary>
/// <param name="filter">The filter function to invoke for each element.</param>
/// <returns>True if there is a matching element; false otherwise.</returns>
/// <summary>
/// Gets whether the at least one of the matched set of elements matches the specified
/// element.
/// </summary>
/// <param name="element">The element to compare against.</param>
/// <returns>True if there is a matching element; false otherwise.</returns>
/// <summary>
/// Gets whether the at least one of the matched set of elements matches the specified
/// matched set of elements.
/// </summary>
/// <param name="elements">The matched set of elements to compare against.</param>
/// <returns>True if there is a matching element; false otherwise.</returns>
/// <summary>
/// Gets whether the at least one of the matched set of elements matches the specified
/// selector.
/// </summary>
/// <param name="selector">The selector to check for.</param>
/// <returns>True if there is a matching element; false otherwise.</returns>
/// <summary>
/// Triggers the keydown event on each of the matched set of elements.
/// </summary>
/// <returns>The current jQueryObject</returns>
/// <summary>
/// Attaches a handler to the keydown event on each of the matched set of elements.
/// </summary>
/// <param name="eventHandler">The event handler to be invoked.</param>
/// <returns>The current jQueryObject</returns>
/// <summary>
/// Attaches a handler to the keydown event on each of the matched set of elements.
/// </summary>
/// <param name="eventData">Data to be passed in into the event handler.</param>
/// <param name="eventHandler">The event handler to be invoked.</param>
/// <returns>The current jQueryObject</returns>
/// <summary>
/// Triggers the keypress event on each of the matched set of elements.
/// </summary>
/// <returns>The current jQueryObject</returns>
/// <summary>
/// Attaches a handler to the keypress event on each of the matched set of elements.
/// </summary>
/// <param name="eventHandler">The event handler to be invoked.</param>
/// <returns>The current jQueryObject</returns>
/// <summary>
/// Attaches a handler to the keypress event on each of the matched set of elements.
/// </summary>
/// <param name="eventData">Data to be passed in into the event handler.</param>
/// <param name="eventHandler">The event handler to be invoked.</param>
/// <returns>The current jQueryObject</returns>
/// <summary>
/// Triggers the keyup event on each of the matched set of elements.
/// </summary>
/// <returns>The current jQueryObject</returns>
/// <summary>
/// Attaches a handler to the keyup event on each of the matched set of elements.
/// </summary>
/// <param name="eventHandler">The event handler to be invoked.</param>
/// <returns>The current jQueryObject</returns>
/// <summary>
/// Attaches a handler to the keyup event on each of the matched set of elements.
/// </summary>
/// <param name="eventData">Data to be passed in into the event handler.</param>
/// <param name="eventHandler">The event handler to be invoked.</param>
/// <returns>The current jQueryObject</returns>
/// <summary>
/// Returns a new jQueryObject with the last matching element.
/// </summary>
/// <returns>The new jQueryObject.</returns>
/// <summary>
/// Attaches a handler for handling the specified event on the matched set of elements,
/// as well as other elements matching the current selector in the future.
/// </summary>
/// <param name="eventName">The name of the event.</param>
/// <param name="eventHandler">The event handler to be invoked.</param>
/// <returns></returns>
/// <summary>
/// Attaches a handler for the specified event on the matched set of elements,
/// as well as other elements matching the current selector in the future.
/// </summary>
/// <param name="eventName">The name of the event.</param>
/// <param name="eventData">Any data that needs to be passed to the event handler.</param>
/// <param name="eventHandler">The event handler to be invoked.</param>
/// <returns></returns>
/// <summary>
/// Attaches a handler to the load event on each of the matched set of elements.
/// </summary>
/// <param name="eventHandler">The event handler to be invoked.</param>
/// <returns>The current jQueryObject</returns>
/// <summary>
/// Attaches a handler to the load event on each of the matched set of elements.
/// </summary>
/// <param name="eventData">Data to be passed in into the event handler.</param>
/// <param name="eventHandler">The event handler to be invoked.</param>
/// <returns>The current jQueryObject</returns>
/// <summary>
/// Load data from the specified URL and place the returned HTML into the matched
/// elements.
/// </summary>
/// <param name="url">The URL to request.</param>
/// <returns>The current jQueryObject.</returns>
/// <summary>
/// Load data from the specified URL and place the returned HTML into the matched
/// elements.
/// </summary>
/// <param name="url">The URL to request.</param>
/// <param name="data">The data to send with the request.</param>
/// <returns>The current jQueryObject.</returns>
/// <summary>
/// Load data from the specified URL and place the returned HTML into the matched
/// elements.
/// </summary>
/// <param name="url">The URL to request.</param>
/// <param name="data">The data to send with the request.</param>
/// <param name="callback">The callback to invoke upon completion.</param>
/// <returns>The current jQueryObject.</returns>
/// <summary>
/// Load data from the specified URL and place the returned HTML into the matched
/// elements.
/// </summary>
/// <param name="url">The URL to request.</param>
/// <param name="data">The data to send with the request.</param>
/// <param name="callback">The callback to invoke upon completion.</param>
/// <returns>The current jQueryObject.</returns>
/// <summary>
/// Maps each element of the matching set using the specified callback.
/// </summary>
/// <param name="callback">The callback that performs the mapping.</param>
/// <returns>A new jQueryObject containing the mapped results.</returns>
/// <summary>
/// Attaches a handler to the mousedown event on each of the matched set of elements.
/// </summary>
/// <param name="eventHandler">The event handler to be invoked.</param>
/// <returns>The current jQueryObject</returns>
/// <summary>
/// Attaches a handler to the mousedown event on each of the matched set of elements.
/// </summary>
/// <param name="eventData">Data to be passed in into the event handler.</param>
/// <param name="eventHandler">The event handler to be invoked.</param>
/// <returns>The current jQueryObject</returns>
/// <summary>
/// Attaches a handler to the mouseenter event on each of the matched set of elements.
/// </summary>
/// <param name="eventHandler">The event handler to be invoked.</param>
/// <returns>The current jQueryObject</returns>
/// <summary>
/// Attaches a handler to the mouseenter event on each of the matched set of elements.
/// </summary>
/// <param name="eventData">Data to be passed in into the event handler.</param>
/// <param name="eventHandler">The event handler to be invoked.</param>
/// <returns>The current jQueryObject</returns>
/// <summary>
/// Attaches a handler to the mouseleave event on each of the matched set of elements.
/// </summary>
/// <param name="eventHandler">The event handler to be invoked.</param>
/// <returns>The current jQueryObject</returns>
/// <summary>
/// Attaches a handler to the mouseleave event on each of the matched set of elements.
/// </summary>
/// <param name="eventData">Data to be passed in into the event handler.</param>
/// <param name="eventHandler">The event handler to be invoked.</param>
/// <returns>The current jQueryObject</returns>
/// <summary>
/// Attaches a handler to the mousemove event on each of the matched set of elements.
/// </summary>
/// <param name="eventHandler">The event handler to be invoked.</param>
/// <returns>The current jQueryObject</returns>
/// <summary>
/// Attaches a handler to the mousemove event on each of the matched set of elements.
/// </summary>
/// <param name="eventData">Data to be passed in into the event handler.</param>
/// <param name="eventHandler">The event handler to be invoked.</param>
/// <returns>The current jQueryObject</returns>
/// <summary>
/// Attaches a handler to the mouseout event on each of the matched set of elements.
/// </summary>
/// <param name="eventHandler">The event handler to be invoked.</param>
/// <returns>The current jQueryObject</returns>
/// <summary>
/// Attaches a handler to the mouseout event on each of the matched set of elements.
/// </summary>
/// <param name="eventData">Data to be passed in into the event handler.</param>
/// <param name="eventHandler">The event handler to be invoked.</param>
/// <returns>The current jQueryObject</returns>
/// <summary>
/// Attaches a handler to the mouseover event on each of the matched set of elements.
/// </summary>
/// <param name="eventHandler">The event handler to be invoked.</param>
/// <returns>The current jQueryObject</returns>
/// <summary>
/// Attaches a handler to the mouseover event on each of the matched set of elements.
/// </summary>
/// <param name="eventData">Data to be passed in into the event handler.</param>
/// <param name="eventHandler">The event handler to be invoked.</param>
/// <returns>The current jQueryObject</returns>
/// <summary>
/// Attaches a handler to the mouseup event on each of the matched set of elements.
/// </summary>
/// <param name="eventHandler">The event handler to be invoked.</param>
/// <returns>The current jQueryObject</returns>
/// <summary>
/// Attaches a handler to the mouseup event on each of the matched set of elements.
/// </summary>
/// <param name="eventData">Data to be passed in into the event handler.</param>
/// <param name="eventHandler">The event handler to be invoked.</param>
/// <returns>The current jQueryObject</returns>
/// <summary>
/// Gets a jQueryObject representing the immediate following sibling
/// element of the matched set of elements.
/// </summary>
/// <returns>The new jQueryObject.</returns>
/// <summary>
/// Gets a jQueryObject representing the immediate following sibling
/// element of the matched set of elements filtered by the specified selector.
/// </summary>
/// <param name="selector">The selector to match children against.</param>
/// <returns>The new jQueryObject.</returns>
/// <summary>
/// Gets a jQueryObject representing all the following sibling elements
/// of the matched set of elements.
/// </summary>
/// <returns>The new jQueryObject.</returns>
/// <summary>
/// Gets a jQueryObject representing all the following sibling elements
/// of the matched set of elements filtered by the specified selector.
/// </summary>
/// <param name="selector">The selector to match children against.</param>
/// <returns>The new jQueryObject.</returns>
/// <summary>
/// Gets a jQueryObject representing all the following sibling elements
/// of the matched set of elements while they match the specified selector.
/// </summary>
/// <param name="selector">The selector to match children against.</param>
/// <returns>The new jQueryObject.</returns>
/// <summary>
/// Returns a new jQueryObject with the specified element removed from the
/// current set of matching elements.
/// </summary>
/// <param name="element">The element to remove.</param>
/// <returns>The new jQueryObject.</returns>
/// <summary>
/// Returns a new jQueryObject with the specified elements removed from the
/// current set of matching elements.
/// </summary>
/// <param name="elements">The element to remove.</param>
/// <returns>The new jQueryObject.</returns>
/// <summary>
/// Returns a new jQueryObject with elements matching the specified selector
/// removed from the current set of matching elements.
/// </summary>
/// <param name="selector">The selector used to match elements to remove.</param>
/// <returns>The new jQueryObject.</returns>
/// <summary>
/// Returns a new jQueryObject with elements for which the specified filter
/// function return true removed from the matching set of elements.
/// </summary>
/// <param name="filterFunction">The function used to filter elements to remove.</param>
/// <returns>The new jQueryObject.</returns>
/// <summary>
/// Removes an event handler which has been created by called On()
/// </summary>
/// <param name="eventsMap">A dictionary in which the string keys represent the event names, and the values represent the handler which was previously attached to that event</param>
/// <returns>The current jQueryObject.</returns>
/// <summary>
/// Removes an event handler which has been created by called On()
/// </summary>
/// <param name="eventsMap">A dictionary in which the string keys represent the event names, and the values represent the handler which was previously attached to that event</param>
/// <param name="selector">A selector which should match the one originally passed to On()</param>
/// <returns>The current jQueryObject.</returns>
/// <summary>
/// Removes an event handler which has been created by called On()
/// </summary>
/// <param name="events">One or more space-separated event types and optional namespaces</param>
/// <returns>The current jQueryObject.</returns>
/// <summary>
/// Removes an event handler which has been created by called On()
/// </summary>
/// <param name="events">One or more space-separated event types and optional namespaces</param>
/// <param name="selector">A selector which should match the one originally passed to On()</param>
/// <returns>The current jQueryObject.</returns>
/// <summary>
/// Removes an event handler which has been created by called On()
/// </summary>
/// <param name="events">One or more space-separated event types and optional namespaces</param>
/// <param name="selector">A selector which should match the one originally passed to On()</param>
/// <param name="eventHandler">A handler function previously attached for the event(s)</param>
/// <returns>The current jQueryObject.</returns>
/// <summary>
/// Sets the position of the matched elements relative to the document.
/// </summary>
/// <param name="position">The coordinates to position the elements at.</param>
/// <returns>The current jQueryObject.</returns>
/// <summary>
/// Sets the position of the matched elements relative to the document using values
/// returned from the specified function.
/// </summary>
/// <param name="positionFunction">The function returning the position for an element.</param>
/// <returns>The current jQueryObject.</returns>
/// <summary>
/// Sets the position of the matched elements relative to the document using values
/// returned from the specified function.
/// </summary>
/// <param name="positionFunction">The function returning the position for an element.</param>
/// <returns>The current jQueryObject.</returns>
/// <summary>
/// Gets a new jQueryObject containing the closest ancestor element that is positioned.
/// </summary>
/// <returns>The new jQueryObject.</returns>
/// <summary>
/// Attaches an event handler function for one or more events to the selected elements.
/// </summary>
/// <param name="eventName">The name of the event</param>
/// <param name="eventHandler">The event handler to be invoked</param>
/// <returns>The current jQueryObject.</returns>
/// <summary>
/// Attaches an event handler function for one or more events to the selected elements.
/// </summary>
/// <param name="eventName">The name of the event</param>
/// <param name="selector">A selector string to filter the descendants of the selected elements that trigger the event.</param>
/// <param name="eventHandler">The event handler to be invoked</param>
/// <returns>The current jQueryObject.</returns>
/// <summary>
/// Attaches an event handler function for one or more events to the selected elements.
/// </summary>
/// <param name="eventName">The name of the event</param>
/// <param name="selector">A selector string to filter the descendants of the selected elements that trigger the event.</param>
/// <param name="data">A custom data structure to be passed to the handler</param>
/// <param name="eventHandler">The event handler to be invoked</param>
/// <returns>The current jQueryObject.</returns>
/// <summary>
/// Attaches an event handler function for one or more events to the selected elements.
/// </summary>
/// <param name="eventsMap">A dictionary in which the string keys represent the event names, and the values represent the handler for that event.</param>
/// <returns>The current jQueryObject</returns>
/// <summary>
/// Attaches an event handler function for one or more events to the selected elements.
/// </summary>
/// <param name="eventsMap">A dictionary in which the string keys represent the event names, and the values represent the handler for that event.</param>
/// <param name="selector">A selector string to filter the descendants of the selected elements that trigger the event.</param>
/// <returns>The current jQueryObject</returns>
/// <summary>
/// Attaches an event handler function for one or more events to the selected elements.
/// </summary>
/// <param name="eventsMap">A dictionary in which the string keys represent the event names, and the values represent the handler for that event.</param>
/// <param name="selector">A selector string to filter the descendants of the selected elements that trigger the event.</param>
/// <param name="data">A custom data structure to be passed to the handler</param>
/// <returns>The current jQueryObject</returns>
/// <summary>
/// Attaches a handler for the handling the specified event once on the matched
/// set of elements.
/// </summary>
/// <param name="eventName">The name of the event.</param>
/// <param name="eventHandler">The event handler to be invoked.</param>
/// <returns></returns>
/// <summary>
/// Attaches a handler for handling the specified event once on the matched set of elements.
/// </summary>
/// <param name="eventName">The name of the event.</param>
/// <param name="eventData">Any data that needs to be passed to the event handler.</param>
/// <param name="eventHandler">The event handler to be invoked.</param>
/// <returns></returns>
/// <summary>
/// Gets a new jQueryObject containing the parents of each of the matched elements.
/// </summary>
/// <returns>The new jQueryObject.</returns>
/// <summary>
/// Gets a new jQueryObject containing the parents of each of the matched elements,
/// filtered by the specified selector.
/// </summary>
/// <param name="selector">The selector to match elements.</param>
/// <returns>The new jQueryObject.</returns>
/// <summary>
/// Gets a new jQueryObject containing the ancestors of each of the matched elements.
/// </summary>
/// <returns>The new jQueryObject.</returns>
/// <summary>
/// Gets a new jQueryObject containing the ancestors of each of the matched elements,
/// filtered by the specified selector.
/// </summary>
/// <param name="selector">The selector to match elements.</param>
/// <returns>The new jQueryObject.</returns>
/// <summary>
/// Gets a new jQueryObject containing the ancestors of each of the matched elements,
/// up to but not including the element that matches the specified selector.
/// </summary>
/// <param name="selector">The selector to match elements.</param>
/// <returns>The new jQueryObject.</returns>
/// <summary>
/// Casts this jQueryObject to a derived jQueryObject to enable using
/// APIs defined on the jQuery object through an external jQuery plugin.
/// </summary>
/// <typeparam name="T">The type of jQueryObject that contains additional plugin APIs mixed in.</typeparam>
/// <returns>The specified type of jQueryObject.</returns>
/// <summary>
/// Gets the position of the first matched element relative to the first offset parent.
/// </summary>
/// <returns>The position of the element.</returns>
/// <summary>
/// Prepend content to the beginning of each element of the matching elements.
/// </summary>
/// <param name="content">The content to prepend.</param>
/// <returns>The current jQueryObject</returns>
/// <summary>
/// Prepend content to the beginning of each element of the matching elements.
/// </summary>
/// <param name="content">The DOM element to prepend.</param>
/// <returns>The current jQueryObject</returns>
/// <summary>
/// Prepend content to the beginning of each element of the matching elements.
/// </summary>
/// <param name="content">The DOM elements to prepend.</param>
/// <returns>The current jQueryObject</returns>
/// <summary>
/// Prepend content to the beginning of each element of the matching elements.
/// </summary>
/// <param name="content">The jQueryObject containing the content.</param>
/// <returns>The current jQueryObject</returns>
/// <summary>
/// Prepend content returned from the specified function to the beginning of each element
/// of the matching elements.
/// </summary>
/// <param name="contentFunction">The function that returns the content to prepend.</param>
/// <returns>The current jQueryObject</returns>
/// <summary>
/// Prepend content returned from the specified function to the beginning of each element
/// of the matching elements.
/// </summary>
/// <param name="contentFunction">The function that returns the content to prepend.</param>
/// <returns>The current jQueryObject</returns>
/// <summary>
/// Prepends every element of the matching set to the beginning of each element of the matching elements.
/// </summary>
/// <param name="target">The target to prepend to.</param>
/// <returns>The current jQueryObject</returns>
/// <summary>
/// Prepends every element of the matching set to the beginning of each element of the matching elements.
/// </summary>
/// <param name="target">The DOM element to prepend to.</param>
/// <returns>The current jQueryObject</returns>
/// <summary>
/// Prepends every element of the matching set to the beginning of each element of the matching elements.
/// </summary>
/// <param name="target">The jQueryObject to prepend to.</param>
/// <returns>The current jQueryObject</returns>
/// <summary>
/// Gets a jQueryObject representing the immediate preceeding sibling
/// element of the matched set of elements.
/// </summary>
/// <returns>The new jQueryObject.</returns>
/// <summary>
/// Gets a jQueryObject representing the immediate preceeding sibling
/// element of the matched set of elements filtered by the specified selector.
/// </summary>
/// <param name="selector">The selector to match children against.</param>
/// <returns>The new jQueryObject.</returns>
/// <summary>
/// Gets a jQueryObject representing all the preceeding sibling elements
/// of the matched set of elements.
/// </summary>
/// <returns>The new jQueryObject.</returns>
/// <summary>
/// Gets a jQueryObject representing all the preceeding sibling elements
/// of the matched set of elements filtered by the specified selector.
/// </summary>
/// <param name="selector">The selector to match children against.</param>
/// <returns>The new jQueryObject.</returns>
/// <summary>
/// Gets a jQueryObject representing all the preceeding sibling elements
/// of the matched set of elements while they match the specified selector.
/// </summary>
/// <param name="selector">The selector to match children against.</param>
/// <returns>The new jQueryObject.</returns>
/// <summary>
/// Creates a deferred object to observe when all animations are completed.
/// </summary>
/// <returns>A deferred object.</returns>
/// <summary>
/// Creates a deferred object to observe when all actions of the specified
/// type are completed.
/// </summary>
/// <param name="type">The type of actions to observe.</param>
/// <returns>A deferred object.</returns>
/// <summary>
/// Creates a deferred object to observe when all actions of the specified
/// type are completed. The specified target object is modified to contain
/// the deferred methods.
/// </summary>
/// <param name="type">The type of actions to observe.</param>
/// <param name="target">The target object to modify.</param>
/// <returns>The target object.</returns>
/// <summary>
/// Sets the value of the specified property to the specified value on
/// the matched set of elements.
/// </summary>
/// <param name="propertyName">The name of the property.</param>
/// <param name="value">The value to set the property to.</param>
/// <returns>The value of the specified property.</returns>
/// <summary>
/// Removes the matched elements from the DOM, and removes jQuery data from elements.
/// </summary>
/// <returns>The current jQueryObject.</returns>
/// <summary>
/// Removes the matching elements from the DOM, and removes jQuery data from elements.
/// </summary>
/// <param name="selector">The selector to use to filter the elements to remove.</param>
/// <returns>The current jQueryObject.</returns>
/// <summary>
/// Removes the specified attribute from each of the set of matched elements.
/// </summary>
/// <param name="attributeName">The attribute to remove.</param>
/// <returns>The current jQueryObject.</returns>
/// <summary>
/// Removes all classes from each of the set of matched elements.
/// </summary>
/// <returns>The current jQueryObject.</returns>
/// <summary>
/// Removes the CSS class returned by the specified function.
/// </summary>
/// <param name="className">The class or classes to remove.</param>
/// <returns>The current jQueryObject.</returns>
/// <summary>
/// Removes the class returned from the specified function for each of the set of matched elements.
/// </summary>
/// <param name="cssFunction">The function that returns the CSS class to remove.</param>
/// <returns>The current jQueryObject.</returns>
/// <summary>
/// Removes the class returned from the specified function for each of the set of matched elements.
/// </summary>
/// <param name="cssFunction">The function that returns the CSS class to remove.</param>
/// <returns>The current jQueryObject.</returns>
/// <summary>
/// Removes all the data from the matching set of elements.
/// </summary>
/// <returns>The current jQueryObject.</returns>
/// <summary>
/// Removes the specified data from the matching set of elements.
/// </summary>
/// <param name="key">The name of the value to remove.</param>
/// <returns>The current jQueryObject.</returns>
/// <summary>
/// Removes the specified property from the matching set of elements.
/// </summary>
/// <param name="propertyName">The name of the property to remove.</param>
/// <returns>The current jQueryObject.</returns>
/// <summary>
/// Replace each element matching the specified selector with the set of matched elements.
/// </summary>
/// <param name="selector">The selector to match elements to be replaced.</param>
/// <returns>The current jQueryObject.</returns>
/// <summary>
/// Replace each element in the set of matched elements with the provided new content.
/// </summary>
/// <param name="content">The HTML to wrap with.</param>
/// <returns>The current jQueryObject.</returns>
/// <summary>
/// Replace each element in the set of matched elements with the new content provided
/// by the specified element.
/// </summary>
/// <param name="content">The element containing the HTML to use.</param>
/// <returns>The current jQueryObject.</returns>
/// <summary>
/// Replace each element in the set of matched elements with the new content provided
/// by the specified set of matched elements.
/// </summary>
/// <param name="content">The object containing the HTML to use.</param>
/// <returns>The current jQueryObject.</returns>
/// <summary>
/// Replace each element in the set of matched elements with the content returned from
/// the specified function.
/// </summary>
/// <param name="contetntFunction">The functio returning the HTML to replace with.</param>
/// <returns>The current jQueryObject.</returns>
/// <summary>
/// Attaches a handler to the resize event on each of the matched set of elements.
/// </summary>
/// <param name="eventHandler">The event handler to be invoked.</param>
/// <returns>The current jQueryObject</returns>
/// <summary>
/// Attaches a handler to the resize event on each of the matched set of elements.
/// </summary>
/// <param name="eventData">Data to be passed in into the event handler.</param>
/// <param name="eventHandler">The event handler to be invoked.</param>
/// <returns>The current jQueryObject</returns>
/// <summary>
/// Attaches a handler to the scroll event on each of the matched set of elements.
/// </summary>
/// <param name="eventHandler">The event handler to be invoked.</param>
/// <returns>The current jQueryObject</returns>
/// <summary>
/// Attaches a handler to the scroll event on each of the matched set of elements.
/// </summary>
/// <param name="eventData">Data to be passed in into the event handler.</param>
/// <param name="eventHandler">The event handler to be invoked.</param>
/// <returns>The current jQueryObject</returns>
/// <summary>
/// Sets the current horizontal scrollbar position of the matched elements.
/// </summary>
/// <param name="position">The horizontal scroll position.</param>
/// <returns>The current jQueryObject.</returns>
/// <summary>
/// Sets the current vertical scrollbar position of the matched elements.
/// </summary>
/// <param name="position">The vertical scroll position.</param>
/// <returns>The current jQueryObject.</returns>
/// <summary>
/// Triggers the select event on each of the matched set of elements.
/// </summary>
/// <returns>The current jQueryObject</returns>
/// <summary>
/// Attaches a handler to the select event on each of the matched set of elements.
/// </summary>
/// <param name="eventHandler">The event handler to be invoked.</param>
/// <returns>The current jQueryObject</returns>
/// <summary>
/// Attaches a handler to the select event on each of the matched set of elements.
/// </summary>
/// <param name="eventData">Data to be passed to the event handler.</param>
/// <param name="eventHandler">The event handler to be invoked.</param>
/// <returns>The current jQueryObject</returns>
/// <summary>
/// Serializes the name/value pairs for the matching set of form elements into
/// a URL-encoded string suitable for posting/submitting.
/// </summary>
/// <returns>The serialized representation of form name/value pairs.</returns>
/// <summary>
/// Serializes the name/value pairs for the matching set of form elements.
/// </summary>
/// <returns>The form name/value pairs.</returns>
/// <summary>
/// Show the matched set of elements.
/// </summary>
/// <returns>The current jQueryObject.</returns>
/// <summary>
/// Show the matched set of elements in an animated manner.
/// </summary>
/// <param name="duration">The duration in milliseconds of the animation.</param>
/// <returns>The current jQueryObject.</returns>
/// <summary>
/// Show the matched set of elements in an animated manner.
/// </summary>
/// <param name="duration">The duration in milliseconds of the animation.</param>
/// <param name="callback">The callback to invoke once the animation is completed.</param>
/// <returns>The current jQueryObject.</returns>
/// <summary>
/// Show the matched set of elements in an animated manner.
/// </summary>
/// <param name="duration">The duration in milliseconds of the animation.</param>
/// <param name="easing">The easing to use.</param>
/// <param name="callback">The callback to invoke once the animation is completed.</param>
/// <returns>The current jQueryObject.</returns>
/// <summary>
/// Show the matched set of elements in an animated manner.
/// </summary>
/// <param name="duration">The duration of the animation.</param>
/// <returns>The current jQueryObject.</returns>
/// <summary>
/// Show the matched set of elements in an animated manner.
/// </summary>
/// <param name="duration">The duration of the animation.</param>
/// <param name="callback">The callback to invoke once the animation is completed.</param>
/// <returns>The current jQueryObject.</returns>
/// <summary>
/// Show the matched set of elements in an animated manner.
/// </summary>
/// <param name="duration">The duration of the animation.</param>
/// <param name="easing">The easing to use.</param>
/// <param name="callback">The callback to invoke once the animation is completed.</param>
/// <returns>The current jQueryObject.</returns>
/// <summary>
/// Gets a new jQueryObject containing the siblings of each of the matched elements.
/// </summary>
/// <returns>The new jQueryObject.</returns>
/// <summary>
/// Gets a new jQueryObject containing the siblings of each of the matched elements,
/// filtered by the specified selector.
/// </summary>
/// <param name="selector">The selector to match elements.</param>
/// <returns>The new jQueryObject.</returns>
/// <summary>
/// Gets the number of matched elements. <seealso cref="Length" /> is slightly faster.
/// </summary>
/// <returns>The number of elements represented by this jQueryObject.</returns>
/// <summary>
/// Returns a new jQueryObject with the specified range of elements within the
/// matching set of elements.
/// </summary>
/// <param name="startIndex">The index of starting point of the range. Negative to indicate offset from end.</param>
/// <returns>The new jQueryObject.</returns>
/// <summary>
/// Returns a new jQueryObject with the specified range of elements within the
/// matching set of elements.
/// </summary>
/// <param name="startIndex">The index of starting point of the range. Negative to indicate offset from end.</param>
/// <param name="endIndex">The index of ending point of the range. Negative to indicate offset from end.</param>
/// <returns>The new jQueryObject.</returns>
/// <summary>
/// Slides down the matching set of elements using a default duration of 400ms.
/// </summary>
/// <returns>The current jQueryObject.</returns>
/// <summary>
/// Slides down the matching set of elements using a the specified duration.
/// </summary>
/// <param name="duration">The duration in milliseconds for the effect.</param>
/// <returns>The current jQueryObject.</returns>
/// <summary>
/// Slides down the matching set of elements using a the specified duration.
/// </summary>
/// <param name="duration">The duration in milliseconds for the effect.</param>
/// <param name="callback">The callback to invoke upon completion.</param>
/// <returns>The current jQueryObject.</returns>
/// <summary>
/// Slides down the matching set of elements using a the specified duration.
/// </summary>
/// <param name="duration">The duration in milliseconds for the effect.</param>
/// <param name="easing">The easing to use.</param>
/// <param name="callback">The callback to invoke upon completion.</param>
/// <returns>The current jQueryObject.</returns>
/// <summary>
/// Slides down the matching set of elements using a the specified duration.
/// </summary>
/// <param name="duration">The duration for the effect.</param>
/// <returns>The current jQueryObject.</returns>
/// <summary>
/// Slides down the matching set of elements using a the specified duration.
/// </summary>
/// <param name="duration">The duration for the effect.</param>
/// <param name="callback">The callback to invoke upon completion.</param>
/// <returns>The current jQueryObject.</returns>
/// <summary>
/// Slides down the matching set of elements using a the specified duration.
/// </summary>
/// <param name="duration">The duration for the effect.</param>
/// <param name="easing">The easing to use.</param>
/// <param name="callback">The callback to invoke upon completion.</param>
/// <returns>The current jQueryObject.</returns>
/// <summary>
/// Toggles the visibility of the matching set of elements by sliding them
/// using a default duration of 400ms.
/// </summary>
/// <returns>The current jQueryObject.</returns>
/// <summary>
/// Toggles the visibility of the matching set of elements by sliding them
/// using the specified duration.
/// </summary>
/// <param name="duration">The duration in milliseconds for the effect.</param>
/// <returns>The current jQueryObject.</returns>
/// <summary>
/// Toggles the visibility of the matching set of elements by sliding them
/// using the specified duration.
/// </summary>
/// <param name="duration">The duration in milliseconds for the effect.</param>
/// <param name="callback">The callback to invoke upon completion.</param>
/// <returns>The current jQueryObject.</returns>
/// <summary>
/// Toggles the visibility of the matching set of elements by sliding them
/// using the specified duration.
/// </summary>
/// <param name="duration">The duration in milliseconds for the effect.</param>
/// <param name="easing">The easing to use.</param>
/// <param name="callback">The callback to invoke upon completion.</param>
/// <returns>The current jQueryObject.</returns>
/// <summary>
/// Toggles the visibility of the matching set of elements by sliding them
/// using the specified duration.
/// </summary>
/// <param name="duration">The duration for the effect.</param>
/// <returns>The current jQueryObject.</returns>
/// <summary>
/// Toggles the visibility of the matching set of elements by sliding them
/// using the specified duration.
/// </summary>
/// <param name="duration">The duration for the effect.</param>
/// <param name="callback">The callback to invoke upon completion.</param>
/// <returns>The current jQueryObject.</returns>
/// <summary>
/// Slides up the matching set of elements using a default duration of 400ms.
/// </summary>
/// <returns>The current jQueryObject.</returns>
/// <summary>
/// Slides up the matching set of elements using a the specified duration.
/// </summary>
/// <param name="duration">The duration in milliseconds for the effect.</param>
/// <returns>The current jQueryObject.</returns>
/// <summary>
/// Slides up the matching set of elements using a the specified duration.
/// </summary>
/// <param name="duration">The duration in milliseconds for the effect.</param>
/// <param name="callback">The callback to invoke upon completion.</param>
/// <returns>The current jQueryObject.</returns>
/// <summary>
/// Slides up the matching set of elements using a the specified duration.
/// </summary>
/// <param name="duration">The duration in milliseconds for the effect.</param>
/// <param name="easing">The easing to use.</param>
/// <param name="callback">The callback to invoke upon completion.</param>
/// <returns>The current jQueryObject.</returns>
/// <summary>
/// Slides up the matching set of elements using a the specified duration.
/// </summary>
/// <param name="duration">The duration for the effect.</param>
/// <returns>The current jQueryObject.</returns>
/// <summary>
/// Slides up the matching set of elements using a the specified duration.
/// </summary>
/// <param name="duration">The duration for the effect.</param>
/// <param name="callback">The callback to invoke upon completion.</param>
/// <returns>The current jQueryObject.</returns>
/// <summary>
/// Slides up the matching set of elements using a the specified duration.
/// </summary>
/// <param name="duration">The duration for the effect.</param>
/// <param name="easing">The easing to use.</param>
/// <param name="callback">The callback to invoke upon completion.</param>
/// <returns>The current jQueryObject.</returns>
/// <summary>
/// Stops the current animation associated with the matched elements.
/// </summary>
/// <returns>The current jQueryObject.</returns>
/// <summary>
/// Stops the current animation associated with the matched elements.
/// </summary>
/// <param name="clearQueue">Whether to clear the queue of animations not started yet.</param>
/// <returns>The current jQueryObject.</returns>
/// <summary>
/// Stops the current animation associated with the matched elements.
/// </summary>
/// <param name="clearQueue">Whether to clear the queue of animations not started yet.</param>
/// <param name="gotoEnd">Whether to immediately complete the current animation.</param>
/// <returns>The current jQueryObject.</returns>
/// <summary>
/// Triggers the submit event on each of the matched set of elements.
/// </summary>
/// <returns>The current jQueryObject</returns>
/// <summary>
/// Attaches a handler to the submit event on each of the matched set of elements.
/// </summary>
/// <param name="eventHandler">The event handler to be invoked.</param>
/// <returns>The current jQueryObject</returns>
/// <summary>
/// Attaches a handler to the submit event on each of the matched set of elements.
/// </summary>
/// <param name="eventData">Data to be passed to the event handler.</param>
/// <param name="eventHandler">The event handler to be invoked.</param>
/// <returns>The current jQueryObject</returns>
/// <summary>
/// Adds or removes the specified class from each of the set of matched elements.
/// </summary>
/// <param name="className">The class to toggle.</param>
/// <param name="add">true if the class should be added; false otherwise.</param>
/// <returns>The current jQueryObject.</returns>
/// <summary>
/// Adds or removes the class returned from the function for the set of matched elements.
/// </summary>
/// <param name="cssFunction">The function returning the class to toggle.</param>
/// <param name="add">true if the class should be added; false otherwise.</param>
/// <returns>The current jQueryObject.</returns>
/// <summary>
/// Adds or removes the class returned from the function for the set of matched elements.
/// </summary>
/// <param name="cssFunction">The function returning the class to toggle.</param>
/// <param name="add">true if the class should be added; false otherwise.</param>
/// <returns>The current jQueryObject.</returns>
/// <summary>
/// Sets the text content of the matched set of elements.
/// </summary>
/// <param name="text">The new text to set.</param>
/// <returns>The current jQueryObject.</returns>
/// <summary>
/// Sets the text content of the matched set of elements by calling the specified
/// function.
/// </summary>
/// <param name="textFunction">The function that returns the text content.</param>
/// <returns>The current jQueryObject.</returns>
/// <summary>
/// Sets the text content of the matched set of elements by calling the specified
/// function.
/// </summary>
/// <param name="textFunction">The function that returns the text content.</param>
/// <returns>The current jQueryObject.</returns>
/// <summary>
/// Returns the matching set of elements as an array.
/// </summary>
/// <returns>An array containing the matched elements.</returns>
/// <summary>
/// Toggles visibility of the matched set of elements.
/// </summary>
/// <returns>The current jQueryObject.</returns>
/// <summary>
/// Toggles visibility of the matched set of elements.
/// </summary>
/// <param name="showOrHide">True to show; false to hide.</param>
/// <returns>The current jQueryObject.</returns>
/// <summary>
/// Toggle the visibility of the set of matched elements in an animated manner.
/// </summary>
/// <param name="duration">The duration in milliseconds of the animation.</param>
/// <returns>The current jQueryObject.</returns>
/// <summary>
/// Toggle the visibility of the set of matched elements in an animated manner.
/// </summary>
/// <param name="duration">The duration in milliseconds of the animation.</param>
/// <param name="callback">The callback to invoke once the animation is completed.</param>
/// <returns>The current jQueryObject.</returns>
/// <summary>
/// Toggle the visibility of the set of matched elements in an animated manner.
/// </summary>
/// <param name="duration">The duration in milliseconds of the animation.</param>
/// <param name="easing">The easing to use.</param>
/// <param name="callback">The callback to invoke once the animation is completed.</param>
/// <returns>The current jQueryObject.</returns>
/// <summary>
/// Toggle the visibility of the set of matched elements in an animated manner.
/// </summary>
/// <param name="duration">The duration of the animation.</param>
/// <returns>The current jQueryObject.</returns>
/// <summary>
/// Toggle the visibility of the set of matched elements in an animated manner.
/// </summary>
/// <param name="duration">The duration of the animation.</param>
/// <param name="callback">The callback to invoke once the animation is completed.</param>
/// <returns>The current jQueryObject.</returns>
/// <summary>
/// Toggle the visibility of the set of matched elements in an animated manner.
/// </summary>
/// <param name="duration">The duration of the animation.</param>
/// <param name="easing">The easing to use.</param>
/// <param name="callback">The callback to invoke once the animation is completed.</param>
/// <returns>The current jQueryObject.</returns>
/// <summary>
/// Bind two or more handlers to the matched elements, to be executed on alternate clicks.
/// </summary>
/// <param name="evenEventHandler">A function to execute every even time the element is clicked.</param>
/// <param name="oddEventHandler">A function to execute every odd time the element is clicked.</param>
/// <returns>The current jQueryObject.</returns>
/// <summary>
/// Bind two or more handlers to the matched elements, to be executed on alternate clicks.
/// </summary>
/// <param name="evenEventHandler">A function to execute every even time the element is clicked.</param>
/// <param name="oddEventHandler">A function to execute every odd time the element is clicked.</param>
/// <param name="eventHandlers">Additional handlers to cycle through after clicks.</param>
/// <returns>The current jQueryObject.</returns>
/// <summary>
/// Toggles the specified class from each of the set of matched elements.
/// </summary>
/// <param name="className">The class to toggle.</param>
/// <returns>The current jQueryObject.</returns>
/// <summary>
/// Toggles the class returned from the function for the set of matched elements.
/// </summary>
/// <param name="cssFunction">The function returning the class to toggle.</param>
/// <returns>The current jQueryObject.</returns>
/// <summary>
/// Toggles the class returned from the function for the set of matched elements.
/// </summary>
/// <param name="cssFunction">The function returning the class to toggle.</param>
/// <returns>The current jQueryObject.</returns>
/// <summary>
/// Triggers the event handlers attached for the specified event on the
/// matched set of elements.
/// </summary>
/// <param name="eventName">The event to trigger.</param>
/// <returns>The current jQueryObject.</returns>
/// <summary>
/// Triggers the event handlers attached for the specified event on the
/// matched set of elements.
/// </summary>
/// <param name="eventName">The event to trigger.</param>
/// <param name="eventParameters">Additional parameters for the event handler.</param>
/// <returns>The current jQueryObject.</returns>
/// <summary>
/// Triggers the first event handler attached for the first matched element.
/// This does not trigger the default DOM behavior of the event.
/// </summary>
/// <param name="eventName">The event to trigger.</param>
/// <returns>The result of the event handler.</returns>
/// <summary>
/// Triggers the first event handler attached for the first matched element.
/// This does not trigger the default DOM behavior of the event.
/// </summary>
/// <param name="eventName">The event to trigger.</param>
/// <param name="eventParameters">Additional parameters for the event handler.</param>
/// <returns>The result of the event handler.</returns>
/// <summary>
/// Removes all event handlers attached to the matched set of elements
/// </summary>
/// <returns>The current jQueryObject.</returns>
/// <summary>
/// Detaches a handler for the specified event on the matched set of elements.
/// </summary>
/// <param name="eventName">The event to detach handlers for.</param>
/// <returns>The current jQueryObject.</returns>
/// <summary>
/// Detaches a handler for the specified event on the matched set of elements.
/// </summary>
/// <param name="e">The event passed in into an event handler.</param>
/// <returns>The current jQueryObject.</returns>
/// <summary>
/// Detaches a handler for the specified event on the matched set of elements.
/// </summary>
/// <param name="eventName">The name of the event.</param>
/// <param name="eventHandler">The event handler to be detached.</param>
/// <returns>The current jQueryObject.</returns>
/// <summary>
/// Detaches the "return false" handler that was bound earlier.
/// </summary>
/// <param name="eventName">The name of the event.</param>
/// <param name="result">Should be false.</param>
/// <returns>The current jQueryObject.</returns>
/// <summary>
/// Detaches all handlers from matching the specified namespace
/// from the matched set of elements.
/// </summary>
/// <param name="namespaceName">The namespace of the handler.</param>
/// <returns>The current jQueryObject.</returns>
/// <summary>
/// Detaches all handlers from handling the specified event on elements matching the
/// specified selector within the matched set of elements.
/// </summary>
/// <param name="selector">The selector to match elements.</param>
/// <param name="eventName">The name of the event.</param>
/// <returns>The current jQueryObject.</returns>
/// <summary>
/// Detaches the specified handler from handling the specified event on elements matching the
/// specified selector within the matched set of elements.
/// </summary>
/// <param name="selector">The selector to match elements.</param>
/// <param name="eventName">The name of the event.</param>
/// <param name="eventHandler">The event handler to be invoked.</param>
/// <returns>The current jQueryObject.</returns>
/// <summary>
/// Sorts an array of DOM elements, in place, with the duplicates removed.
/// </summary>
/// <param name="elements">The original list of elements</param>
/// <returns>The unique list of elements.</returns>
/// <summary>
/// Attaches a handler to the unload event on each of the matched set of elements.
/// </summary>
/// <param name="eventHandler">The event handler to be invoked.</param>
/// <returns>The current jQueryObject</returns>
/// <summary>
/// Attaches a handler to the unload event on each of the matched set of elements.
/// </summary>
/// <param name="eventData">Data to be passed to the event handler.</param>
/// <param name="eventHandler">The event handler to be invoked.</param>
/// <returns>The current jQueryObject</returns>
/// <summary>
/// Remove the parents of the set of matched elements from the DOM, leaving the
/// matched elements in their place.
/// </summary>
/// <returns>The current jQueryObject.</returns>
/// <summary>
/// Sets the value attribute of the matched set of elements.
/// </summary>
/// <param name="value">The new value to set.</param>
/// <returns>The current jQueryObject.</returns>
/// <summary>
/// Sets the value attribute of the matched set of elements using values returned
/// from the specified function.
/// </summary>
/// <param name="valueFunction">The function returning the values to set.</param>
/// <returns>The current jQueryObject.</returns>
/// <summary>
/// Sets the value attribute of the matched set of elements using values returned
/// from the specified function.
/// </summary>
/// <param name="valueFunction">The function returning the values to set.</param>
/// <returns>The current jQueryObject.</returns>
/// <summary>
/// Sets the width of each of the matched elements.
/// </summary>
/// <param name="width">Thew new width.</param>
/// <returns>The current jQueryObject.</returns>
/// <summary>
/// Sets the width of each of the matched elements.
/// </summary>
/// <param name="width">Thew new width.</param>
/// <returns>The current jQueryObject.</returns>
/// <summary>
/// Wraps an HTML structure around each of the matched set of elements.
/// </summary>
/// <param name="htmlSnippet">The HTML to wrap with.</param>
/// <returns>The current jQueryObject.</returns>
/// <summary>
/// Wraps a DOM element around each of the matched set of elements.
/// </summary>
/// <param name="element">A DOM element specifying the structure.</param>
/// <returns>The current jQueryObject.</returns>
/// <summary>
/// Wraps a jQueryObject around each of the matched set of elements.
/// </summary>
/// <param name="element">A jQueryObject specifying the structure.</param>
/// <returns>The current jQueryObject.</returns>
/// <summary>
/// Wraps an HTML structure around each of the matched set of elements as
/// returned from the specified wrapping function.
/// </summary>
/// <param name="wrappingFunction">The functio returning the HTML to wrap with.</param>
/// <returns>The current jQueryObject.</returns>
/// <summary>
/// Wraps an HTML structure around all elements in the set of matched elements.
/// </summary>
/// <param name="htmlSnippet">The HTML to wrap with.</param>
/// <returns>The current jQueryObject.</returns>
/// <summary>
/// Wraps an HTML structure around all elements in the set of matched elements.
/// </summary>
/// <param name="element">A DOM element specifying the structure.</param>
/// <returns>The current jQueryObject.</returns>
/// <summary>
/// Wraps an HTML structure around all elements in the set of matched elements.
/// </summary>
/// <param name="element">A jQueryObject specifying the structure.</param>
/// <returns>The current jQueryObject.</returns>
/// <summary>
/// Wraps an HTML structure around the content of each of the matched set of elements.
/// </summary>
/// <param name="htmlSnippet">The HTML to wrap with.</param>
/// <returns>The current jQueryObject.</returns>
/// <summary>
/// Wraps a DOM element around the content of each of the matched set of elements.
/// </summary>
/// <param name="element">A DOM element specifying the structure.</param>
/// <returns>The current jQueryObject.</returns>
/// <summary>
/// Wraps a jQueryObject around the content of each of the matched set of elements.
/// </summary>
/// <param name="element">A jQueryObject specifying the structure.</param>
/// <returns>The current jQueryObject.</returns>
/// <summary>
/// Wraps an HTML structure around the content of each of the matched set of elements as
/// returned from the specified wrapping function.
/// </summary>
/// <param name="wrappingFunction">The functio returning the HTML to wrap with.</param>
/// <returns>The current jQueryObject.</returns>
// jQueryPosition.cs
// Script#/Libraries/jQuery/Core
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// Provides information about the position of an element.
/// </summary>
/// <summary>
/// Gets the left coordinate.
/// </summary>
/// <summary>
/// Gets the top coordinate.
/// </summary>
// jQueryObject.cs
// Script#/Libraries/jQuery/Core
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// Represents the properties that indicate existence of browser features
/// and bugs.
/// </summary>
/// <summary>
/// This is equal to true if the page and browser are rendered according to the
/// W3C CSS Box Model.
/// </summary>
/// <summary>
/// True if the browser supports cross origin requests.
/// </summary>
/// <summary>
/// True if cssFloat is the name of the float CSS property. False if it is styleFloat.
/// </summary>
/// <summary>
/// True if the browser leaves URLs returned from getAttribute("href") intact.
/// </summary>
/// <summary>
/// True is the browser properly serializes link elements when innerHTML is used.
/// </summary>
/// <summary>
/// True if the browser preserves leading whitespace when innerHTML is used.
/// </summary>
/// <summary>
/// True if the browser does not copy over the checked expando when elements are cloned.
/// </summary>
/// <summary>
/// True if the browser does not clone event handlers when elements are cloned.
/// </summary>
/// <summary>
/// True if doing getElementsByTagName('*') on an object element returns all descendant elements.
/// </summary>
/// <summary>
/// True if a browser can properly interpret the opacity style property.
/// </summary>
/// <summary>
/// True if using appendChild/createTextNode to inject inline scripts executes them.
/// </summary>
/// <summary>
/// True if getAttribute("style") is able to return the inline style specified by an element.
/// </summary>
/// <summary>
/// True if the browser allows table elements without tbody elements.
/// </summary>
// jQueryXmlHttpRequest.cs
// Script#/Libraries/jQuery/Core
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// Represents an XMLHttpRequest object as a deferred object.
/// </summary>
/// <summary>
/// The ready state property of the XmlHttpRequest object.
/// </summary>
/// <summary>
/// The XML document for an XML response.
/// </summary>
/// <summary>
/// The text of the response.
/// </summary>
/// <summary>
/// The status code associated with the response.
/// </summary>
/// <summary>
/// The status text of the response.
/// </summary>
/// <summary>
/// Aborts the request.
/// </summary>
/// <summary>
/// Add handlers to be called when the request completes or fails.
/// </summary>
/// <param name="callbacks">The callbacks to invoke (in order).</param>
/// <returns>The current request object.</returns>
/// <summary>
/// Add handlers to be called when the request completes or fails.
/// </summary>
/// <param name="callbacks">The callbacks to invoke (in order).</param>
/// <returns>The current request object.</returns>
/// <summary>
/// Adds a callback to handle completion of the request.
/// </summary>
/// <param name="callback">The callback to invoke.</param>
/// <returns>The current request object.</returns>
/// <summary>
/// Add handlers to be called when the request is successfully completed. If the
/// request is already completed, the handlers are still invoked.
/// </summary>
/// <param name="doneCallbacks">The callbacks to invoke (in order).</param>
/// <returns>The current request object.</returns>
/// <summary>
/// Add handlers to be called when the request is successfully completed. If the
/// request is already completed, the handlers are still invoked.
/// </summary>
/// <param name="doneCallbacks">The callbacks to invoke (in order).</param>
/// <returns>The current request object.</returns>
/// <summary>
/// Adds a callback to handle an error completing the request.
/// </summary>
/// <param name="callback">The callback to invoke.</param>
/// <returns>The current request object.</returns>
/// <summary>
/// Add handlers to be called when the request errors. If the
/// request is already completed, the handlers are still invoked.
/// </summary>
/// <param name="failCallbacks">The callbacks to invoke (in order).</param>
/// <returns>The current request object.</returns>
/// <summary>
/// Add handlers to be called when the request errors. If the
/// request is already completed, the handlers are still invoked.
/// </summary>
/// <param name="failCallbacks">The callbacks to invoke (in order).</param>
/// <returns>The current request object.</returns>
/// <summary>
/// Gets the response headers associated with the request.
/// </summary>
/// <returns>The response headers.</returns>
/// <summary>
/// Gets a specific response header associated with the request.
/// </summary>
/// <param name="name">The name of the response header.</param>
/// <returns>The response header value.</returns>
/// <summary>
/// Sets the mime type on the request.
/// </summary>
/// <param name="type">The mime type to use.</param>
/// <summary>
/// Filters or chains the result of the request.
/// </summary>
/// <param name="successFilter">The filter to invoke when the request successfully completes.</param>
/// <returns>The current request object.</returns>
/// <summary>
/// Filters or chains the result of the request.
/// </summary>
/// <param name="successFilter">The filter to invoke when the request successfully completes.</param>
/// <param name="failFilter">The filter to invoke when the request fails.</param>
/// <returns>The current request object.</returns>
/// <summary>
/// Sets a request header value.
/// </summary>
/// <param name="name">The name of the request header.</param>
/// <param name="value">The value of the request header.</param>
/// <summary>
/// Adds a callback to handle a successful completion of the request.
/// </summary>
/// <param name="callback">The callback to invoke.</param>
/// <returns>The current request object.</returns>
/// <summary>
/// Adds a callback to handle a successful completion of the request.
/// </summary>
/// <param name="callback">The callback to invoke.</param>
/// <returns>The current request object.</returns>
/// <summary>
/// Add handlers to be called when the request is completed. If the
/// request is already completed, the handlers are still invoked.
/// </summary>
/// <param name="doneCallback">The callback to invoke when the request completes successfully.</param>
/// <param name="failCallback">The callback to invoke when the request completes with an error.</param>
/// <returns>The current request object.</returns>
/// <summary>
/// Add handlers to be called when the request is completed. If the
/// request is already completed, the handlers are still invoked.
/// </summary>
/// <param name="doneCallback">The callback to invoke when the request completes successfully.</param>
/// <param name="failCallback">The callback to invoke when the request completes with an error.</param>
/// <returns>The current request object.</returns>
/// <summary>
/// Add handlers to be called when the request is completed. If the
/// request is already completed, the handlers are still invoked.
/// </summary>
/// <param name="doneCallbacks">The callbacks to invoke when the request completes successfully.</param>
/// <param name="failCallbacks">The callbacks to invoke when the request completes with an error.</param>
/// <returns>The current deferred object.</returns>
/// <summary>
/// Add handlers to be called when the request is completed. If the
/// request is already completed, the handlers are still invoked.
/// </summary>
/// <param name="doneCallbacks">The callbacks to invoke when the request completes successfully.</param>
/// <param name="failCallbacks">The callbacks to invoke when the request completes with an error.</param>
/// <returns>The current deferred object.</returns>
// ObjectIterationCallback.cs
// Script#/Libraries/jQuery/Core
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// A callback to be invoked for each property in an object being iterated.
/// </summary>
/// <param name="name">The name of the property.</param>
/// <param name="value">The value of the property.</param>
/// <summary>
/// A callback to be invoked for each property in an object being iterated.
/// </summary>
/// <param name="name">The name of the property.</param>
/// <param name="value">The value of the property.</param>
/// <returns>false if the iteration is to be stopped; true otherwise.</returns>
// ObjectMapCallback.cs
// Script#/Libraries/jQuery/Core
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// A callback to be invoked for each item in an object being mapped.
/// </summary>
/// <param name="item">The item within the object.</param>
/// <param name="key">The key of the item.</param>
/// <returns>The value that the item was mapped to.</returns>
// PositionFunction.cs
// Script#/Libraries/jQuery/Core
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// A callback that returns a value for the element at the specified index.
/// </summary>
/// <param name="index">The index of the element in the set.</param>
/// <summary>
/// A callback that returns a value for the element at the specified index.
/// </summary>
/// <param name="index">The index of the element in the set.</param>
/// <param name="currentValue">The current value.</param>
// StringFunction.cs
// Script#/Libraries/jQuery/Core
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// A callback that returns a value for the element at the specified index.
/// </summary>
/// <param name="index">The index of the element in the set.</param>
/// <summary>
/// A callback that returns a value for the element at the specified index.
/// </summary>
/// <param name="index">The index of the element in the set.</param>
/// <param name="currentValue">The current value.</param>
// AssemblyInfo.cs
// Script#/Libraries/jQuery/Core
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// jQueryHistory.cs
// Script#/Libraries/jQuery/History
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// Provides access to jQuery history and back button management APIs.
/// </summary>
/// <summary>
/// Retrieves the current state from the browser.
/// </summary>
/// <returns>An object that contains the current state.</returns>
/// <summary>
/// Retrieves the current state for the specified key from the browser.
/// </summary>
/// <param name="key">The state key to lookup.</param>
/// <returns>The state value for the specified key.</returns>
/// <summary>
/// Retrieves the current state for the specified key from the browser.
/// </summary>
/// <param name="key">The state key to lookup.</param>
/// <param name="coerce">true if numeric, boolean, undefined values should be coerced from their string representation.</param>
/// <returns>The state value for the specified key.</returns>
/// <summary>
/// Adds state to the browser.
/// </summary>
/// <param name="state">The object containing state key/value pairs to be merged.</param>
/// <summary>
/// Adds state to the browser.
/// </summary>
/// <param name="state">The object containing state key/value pairs to be merged.</param>
/// <param name="mergeMode">Specifies how the new state should be merged into the current state.</param>
/// <summary>
/// Clears all the state from the browser.
/// </summary>
/// <returns></returns>
/// <summary>
/// Removes the specified key(s) from the current state in the browser.
/// </summary>
/// <param name="key">The keys to be removed.</param>
// StateMergeMode.cs
// Script#/Libraries/jQuery/History
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// Specifies how new state is merged into the current state.
/// </summary>
/// <summary>
/// Merge new values from the specified state, and override any current
/// state values.
/// </summary>
/// <summary>
/// Merge new values from the specified state, but keep current state values
/// </summary>
/// <summary>
/// Replace the current state with the specified state.
/// </summary>
// AssemblyInfo.cs
// Script#/Libraries/jQuery/History
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// jQueryTemplate.cs
// Script#/Libraries/jQuery/Templating
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// Represents a jQuery template that has been parsed and can
/// be used to generate HTML.
/// </summary>
// jQueryTemplateInstance.cs
// Script#/Libraries/jQuery/Templating
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// Represents an instantiated jQuery template.
/// </summary>
/// <summary>
/// Gets the data that this instance is based on.
/// </summary>
/// <summary>
/// Gets the elements that this template instance represents.
/// </summary>
/// <summary>
/// Gets or sets the template that this instance is based on.
/// </summary>
/// <summary>
/// Updates the rendering once an update template has been set.
/// </summary>
// jQueryTemplateObject.cs
// Script#/Libraries/jQuery/Templating
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// Represents a jQuery result that wraps a set of elements, with templating
/// APIs added.
/// </summary>
/// <summary>
/// Creates a template based on the first element of the matched set.
/// </summary>
/// <returns>A compiled template.</returns>
/// <summary>
/// Creates a named template based on the first element of the matched set.
/// </summary>
/// <param name="name">The name of the template.</param>
/// <returns>A compiled template.</returns>
/// <summary>
/// Gets the template instance that the matched element is based on.
/// </summary>
/// <returns>The template instance.</returns>
/// <summary>
/// Creates a template based on the first element of the matched set
/// and instantiates it using the specified data.
/// </summary>
/// <param name="data">The data associated with the template instance.</param>
/// <returns>The resulting elements from instantiating the template.</returns>
/// <summary>
/// Creates a template based on the first element of the matched set
/// and instantiates it using the specified data.
/// </summary>
/// <param name="data">The data associated with the template instance.</param>
/// <param name="item">An object for use inside the template as $item.</param>
/// <returns>The resulting elements from instantiating the template.</returns>
// jQueryTemplating.cs
// Script#/Libraries/jQuery/Templating
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// Provides access to jQuery Templating APIs.
/// </summary>
/// <summary>
/// Creates a template based on the specified template markup.
/// </summary>
/// <param name="template">The template markup.</param>
/// <returns>A compiled template.</returns>
/// <summary>
/// Creates a template based on the specified template markup.
/// </summary>
/// <param name="templateName">The name to assign to the template.</param>
/// <param name="template">The template markup.</param>
/// <returns>A compiled template.</returns>
/// <summary>
/// Creates a template based on the content of the specified element.
/// </summary>
/// <param name="templateElement">The element containing the template markup.</param>
/// <returns>A compiled template.</returns>
/// <summary>
/// Creates a template based on the content of the specified element.
/// </summary>
/// <param name="templateName">The name to assign to the template.</param>
/// <param name="templateElement">The element containing the template markup.</param>
/// <returns>A compiled template.</returns>
/// <summary>
/// Creates a template based on the first element of the matched set.
/// </summary>
/// <param name="o">The jQueryObject representing the element whose content is to be used as a template.</param>
/// <returns>A compiled template.</returns>
/// <summary>
/// Creates a template based on the first element of the matched set.
/// </summary>
/// <param name="templateName">The name to assign to the template.</param>
/// <param name="template">The jQueryObject representing the element whose content is to be used as a template.</param>
/// <returns>A compiled template.</returns>
/// <summary>
/// Gets the template by name, previously created using CreateTemplate.
/// </summary>
/// <param name="templateName">The template name.</param>
/// <returns>A compiled template.</returns>
/// <summary>
/// Gets the template instance associated with the specified element.
/// </summary>
/// <param name="element">The element associated with a template.</param>
/// <returns>The associated template instance if one exists.</returns>
/// <summary>
/// Gets the template instance associated with the specified jQueryObject.
/// </summary>
/// <param name="o">The jQueryObject associated with a template.</param>
/// <returns>The associated template instance if one exists.</returns>
/// <summary>
/// Creates a template based on the first element of the matched set
/// and instantiates it using the specified data.
/// </summary>
/// <param name="template">The name of a template or markup to use.</param>
/// <param name="data">The data associated with the template instance.</param>
/// <returns>The resulting elements from instantiating the template.</returns>
/// <summary>
/// Creates a template based on the first element of the matched set
/// and instantiates it using the specified data.
/// </summary>
/// <param name="template">The name of a template or markup to use.</param>
/// <param name="data">The data associated with the template instance.</param>
/// <param name="item">An object for use inside the template as $item.</param>
/// <returns>The resulting elements from instantiating the template.</returns>
/// <summary>
/// Creates a template based on the first element of the matched set
/// and instantiates it using the specified data.
/// </summary>
/// <param name="templateElement">The element whose content is to be used as a template.</param>
/// <param name="data">The data associated with the template instance.</param>
/// <returns>The resulting elements from instantiating the template.</returns>
/// <summary>
/// Creates a template based on the first element of the matched set
/// and instantiates it using the specified data.
/// </summary>
/// <param name="templateElement">The element whose content is to be used as a template.</param>
/// <param name="data">The data associated with the template instance.</param>
/// <param name="item">An object for use inside the template as $item.</param>
/// <returns>The resulting elements from instantiating the template.</returns>
/// <summary>
/// Creates a template based on the first element of the matched set
/// and instantiates it using the specified data.
/// </summary>
/// <param name="template">The jQueryObject representing the element whose content is to be used as a template.</param>
/// <param name="data">The data associated with the template instance.</param>
/// <returns>The resulting elements from instantiating the template.</returns>
/// <summary>
/// Creates a template based on the first element of the matched set
/// and instantiates it using the specified data.
/// </summary>
/// <param name="template">The jQueryObject representing the element whose content is to be used as a template.</param>
/// <param name="data">The data associated with the template instance.</param>
/// <param name="item">An object for use inside the template as $item.</param>
/// <returns>The resulting elements from instantiating the template.</returns>
/// <summary>
/// Creates a template based on the first element of the matched set
/// and instantiates it using the specified data.
/// </summary>
/// <param name="template">The template to use.</param>
/// <param name="data">The data associated with the template instance.</param>
/// <returns>The resulting elements from instantiating the template.</returns>
/// <summary>
/// Creates a template based on the first element of the matched set
/// and instantiates it using the specified data.
/// </summary>
/// <param name="template">The template to use.</param>
/// <param name="data">The data associated with the template instance.</param>
/// <param name="item">An object for use inside the template as $item.</param>
/// <returns>The resulting elements from instantiating the template.</returns>
// AssemblyInfo.cs
// Script#/Libraries/jQuery/Templating
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// jQueryUI.cs
// Script#/Libraries/jQuery/UI
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// Top-level jQueryUI methods.
/// </summary>
/// <summary>
/// Exposes the widget with the specified name on the top-level jQuery API.
/// </summary>
/// <param name="name">The name of the widget.</param>
/// <param name="widget">The widget object.</param>
/// <summary>
/// Create stateful jQuery plugins using the same abstraction that all jQuery UI widgets.
/// </summary>
/// <param name="name">The name of the widget.</param>
/// <param name="widget">The widget object.</param>
/// <summary>
/// Create stateful jQuery plugins using the same abstraction that all jQuery UI widgets.
/// </summary>
/// <param name="name">The name of the widget.</param>
/// <param name="baseWidgetType">The widget type to inherit from.</param>
/// <param name="widget">The widget object.</param>
/// <summary>
/// Create stateful jQuery plugins using the same abstraction that all jQuery UI widgets.
/// </summary>
/// <param name="name">The name of the widget.</param>
/// <param name="baseWidgetType">The widget type to inherit from.</param>
/// <param name="widget">The widget object.</param>
// jQueryUIEventHandler.cs
// Script#/Libraries/jQuery/UI
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// Handles a widget event.
/// </summary>
/// <typeparam name="T">The type of the widget event object.</typeparam>
/// <param name="e">The associated jQuery event object.</param>
/// <param name="uiEvent">The widget event information.</param>
// jQueryUIMethod.cs
// Script#/Libraries/jQuery/UI
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// Operations supported by jQueryUI.
/// </summary>
// jQueryUIObject.cs
// Script#/Libraries/jQuery/UI
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// PositionObject.cs
// Script#/Libraries/jQuery/UI
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// Place an element relative to another
/// </summary>
/// <remarks>
/// <para>Utility script for positioning any widget relative to the window, document, a particular element, or the cursor/mouse.</para><para><em>Note: jQuery UI does not support positioning hidden elements.</em></para><para>This is a standalone jQuery plugin and has no dependencies on other jQuery UI components.</para><para>This plugin extends jQuery's built-in position getter method. If you forget to include this plugin, code calling position() won't fail directly, as the method still exists. But it'll just retrieve the position instead of setting it.</para>
/// </remarks>
// PositionOption.cs
// Script#/Libraries/jQuery/UI
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// Options for use with Position.
/// </summary>
/// <summary>
/// Defines which position <strong>on the target element</strong> to align the positioned element against: "horizontal vertical" alignment. A single value such as "right" will default to "right center", "top" will default to "center top" (following CSS convention). Acceptable values: "top", "center", "bottom", "left", "right". Example: "left top" or "center center". Each dimension can also contains offsets, in pixels or percent, e.g. `right+10 top-25%`. A perecentage is relative to the target element.
/// </summary>
/// <summary>
/// <para>When the positioned element overflows the window in some direction, move it to an alternative position. Similar to my and at, this accepts a single value or a pair for horizontal/vertical, eg. "flip", "fit", "fit flip", "fit none".</para><ul><li><b>flip</b>: to the opposite side and the collision detection is run again to see if it will fit. Whichever side allows more of the element to be visible will be used.</li><li><b>fit</b>: so the element keeps in the desired direction, but is re-positioned so it fits.</li><li><b>flipfit</b>: apply both flip and fit. If flip works out, fit won't do anything, if flip gives up, fit should help.</li><li><b>none</b>: no collision detection.</li></ul>
/// </summary>
/// <summary>
/// Defines which position <strong>on the element being positioned</strong> to align with the target element: "horizontal vertical" alignment. A single value such as "right" will default to "right center", "top" will default to "center top" (following CSS convention). Acceptable values: "top", "center", "bottom", "left", "right". Example: "left top" or "center center". Each dimension can also contains offsets, in pixels or percent, e.g. `right+10 top-25%`. A perecentage is relative to the element being positioned.
/// </summary>
/// <summary>
/// Element to position against. If you provide a selector or jQuery object, the first matching element will be used. If you provide an event object, the pageX and pageY properties will be used. Example: "#top-menu"
/// </summary>
/// <summary>
/// Add these left-top values to the calculated position, eg. "50 50" (left top) A single value such as "50" will apply to both.
/// </summary>
/// <summary>
/// When specified the actual property setting is delegated to this callback. Receives two parameters: The first is a hash of top and left values for the position that should be set and can be forwarded to offset() or animate() calls.<para>The second provides feedback about the position and dimensions of both elements, as well as calculations to their relative position. Both `target` and `element` have these properties: element, left, top, width, height. In addition, there's `horizontal`, `vertical` and `important`, giving you twelve potential directions like { horizontal: "center", vertical: "left", important: "horizontal" }.</para>
/// </summary>
// PositionOptions.cs
// Script#/Libraries/jQuery/UI
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// Options used to initialize or customize Position.
/// </summary>
/// <summary>
/// Defines which position <strong>on the target element</strong> to align the positioned element against: "horizontal vertical" alignment. A single value such as "right" will default to "right center", "top" will default to "center top" (following CSS convention). Acceptable values: "top", "center", "bottom", "left", "right". Example: "left top" or "center center". Each dimension can also contains offsets, in pixels or percent, e.g. `right+10 top-25%`. A perecentage is relative to the target element.
/// </summary>
/// <summary>
/// <para>When the positioned element overflows the window in some direction, move it to an alternative position. Similar to my and at, this accepts a single value or a pair for horizontal/vertical, eg. "flip", "fit", "fit flip", "fit none".</para><ul><li><b>flip</b>: to the opposite side and the collision detection is run again to see if it will fit. Whichever side allows more of the element to be visible will be used.</li><li><b>fit</b>: so the element keeps in the desired direction, but is re-positioned so it fits.</li><li><b>flipfit</b>: apply both flip and fit. If flip works out, fit won't do anything, if flip gives up, fit should help.</li><li><b>none</b>: no collision detection.</li></ul>
/// </summary>
/// <summary>
/// Defines which position <strong>on the element being positioned</strong> to align with the target element: "horizontal vertical" alignment. A single value such as "right" will default to "right center", "top" will default to "center top" (following CSS convention). Acceptable values: "top", "center", "bottom", "left", "right". Example: "left top" or "center center". Each dimension can also contains offsets, in pixels or percent, e.g. `right+10 top-25%`. A perecentage is relative to the element being positioned.
/// </summary>
/// <summary>
/// Element to position against. If you provide a selector or jQuery object, the first matching element will be used. If you provide an event object, the pageX and pageY properties will be used. Example: "#top-menu"
/// </summary>
/// <summary>
/// Add these left-top values to the calculated position, eg. "50 50" (left top) A single value such as "50" will apply to both.
/// </summary>
/// <summary>
/// When specified the actual property setting is delegated to this callback. Receives two parameters: The first is a hash of top and left values for the position that should be set and can be forwarded to offset() or animate() calls.<para>The second provides feedback about the position and dimensions of both elements, as well as calculations to their relative position. Both `target` and `element` have these properties: element, left, top, width, height. In addition, there's `horizontal`, `vertical` and `important`, giving you twelve potential directions like { horizontal: "center", vertical: "left", important: "horizontal" }.</para>
/// </summary>
// WidgetEvents.cs
// Script#/Libraries/jQuery/UI
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// Events raised by Widget.
/// </summary>
/// <summary>
/// This event is triggered when the widget is created.
/// </summary>
// WidgetMethod.cs
// Script#/Libraries/jQuery/UI
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// Operations supported by Widget.
/// </summary>
/// <summary>
/// This is the widget's constructor.
/// </summary>
/// <summary>
/// Widgets have the concept of initialization that is distinct from creation. Any time the plugin is called with no arguments or with only an option hash, the widget is initialized; this includes when the widget is created.<para>Initialization should only be handled if there is a logical action to perform on successive calls to the widget with no arguments.</para>
/// </summary>
/// <summary>
/// Called from <code>_setOptions()</code> for each individual option.<para>Widget state should be updated based on changes.</para>
/// </summary>
/// <summary>
/// Called with a hash of key/value pairs to set whenever the <code>option()</code> method is called, regardless of the form in which option() was called.<para>Overriding this is useful if you can defer processor-intensive changes for multiple option changes.</para>
/// </summary>
/// <summary>
/// Triggers an event and its associated callback.<para>The option with the name equal to type is invoked as the callback.</para><para>The event name is the widget name + type.</para>
/// </summary>
/// <summary>
/// The <code>destroy()</code> method cleans up all common data, events, etc. and then delegates out to <code>_destroy()</code> for custom cleanup.
/// </summary>
// WidgetObject.cs
// Script#/Libraries/jQuery/UI
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// Create stateful jQuery plugins using the same abstraction that all jQuery UI widgets.
/// </summary>
/// <remarks>
/// <para>You can create new widgets from scratch, using just the <code>$.Widget</code> object as base to inherit from, or you can explicitly inherit from existing jQuery UI or third-party widgets. Defining a widget with the same name as you inherit from even allows you to extend widgets in place.</para><para>For now, more details can be found at <a href="https://github.com/scottgonzalez/widget-factory-docs/">github.com/scottgonzalez/widget-factory-docs/</a></para>
/// </remarks>
/// <summary>
/// This is the widget's constructor.
/// </summary>
/// <summary>
/// 
/// </summary>
/// <summary>
/// 
/// </summary>
/// <summary>
/// Widgets have the concept of initialization that is distinct from creation. Any time the plugin is called with no arguments or with only an option hash, the widget is initialized; this includes when the widget is created.<para>Initialization should only be handled if there is a logical action to perform on successive calls to the widget with no arguments.</para>
/// </summary>
/// <summary>
/// Triggers an event and its associated callback.<para>The option with the name equal to type is invoked as the callback.</para><para>The event name is the widget name + type.</para>
/// </summary>
/// <summary>
/// The <code>destroy()</code> method cleans up all common data, events, etc. and then delegates out to <code>_destroy()</code> for custom cleanup.
/// </summary>
/// <summary>
/// 
/// </summary>
/// <summary>
/// 
/// </summary>
/// <summary>
/// 
/// </summary>
/// <summary>
/// 
/// </summary>
/// <summary>
/// 
/// </summary>
// WidgetOption.cs
// Script#/Libraries/jQuery/UI
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// Options for use with Widget.
/// </summary>
/// <summary>
/// Disables the widget if set to true.
/// </summary>
// WidgetOptions.cs
// Script#/Libraries/jQuery/UI
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// Options used to initialize or customize Widget.
/// </summary>
/// <summary>
/// This event is triggered when the widget is created.
/// </summary>
/// <summary>
/// Disables the widget if set to true.
/// </summary>
// WidgetType.cs
// Script#/Libraries/jQuery/UI
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// The default widgets that are part of jQueryUI.
/// </summary>
// BlindObject.cs
// Script#/Libraries/jQuery/UI
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// The blind effect hides or shows an element by wrapping the element in a container, and "pulling the blinds"
/// </summary>
/// <remarks>
/// The container has <code>overflow:hidden</code> applied, so height changes affect what's visible.
/// </remarks>
// BlindOption.cs
// Script#/Libraries/jQuery/UI
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// Options for use with Blind.
/// </summary>
/// <summary>
/// A callback function, executed when the effect completes
/// </summary>
/// <summary>
/// <para>The direction the blind will be pulled to "hide" the element., or the direction from which the element will be revealed.</para><para>Possible Values</para><dl><dt>up</dt><dt>down</dt><dt>left</dt><dt>right</dt><dt>vertical</dt><dt>horizontal</dt></dl>
/// </summary>
/// <summary>
/// The number of ms the animation will run for
/// </summary>
/// <summary>
/// The easing function to use
/// </summary>
/// <summary>
/// <para>UI Effect Mode</para><para>Possible Values: </para><dl><dt>hide</dt><dd>Hides the element by pulling a blind in the direction</dd><dt>show</dt><dd>Shows the element by pulling a blind from the direction. This seems inverted from the hide.</dd><dt>toggle</dt><dd>Will use <code>hide</code> or <code>show</code> depending on the current visibility of the element</dd></dl>
/// </summary>
// BlindOptions.cs
// Script#/Libraries/jQuery/UI
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// Options used to initialize or customize Blind.
/// </summary>
/// <summary>
/// A callback function, executed when the effect completes
/// </summary>
/// <summary>
/// <para>The direction the blind will be pulled to "hide" the element., or the direction from which the element will be revealed.</para><para>Possible Values</para><dl><dt>up</dt><dt>down</dt><dt>left</dt><dt>right</dt><dt>vertical</dt><dt>horizontal</dt></dl>
/// </summary>
/// <summary>
/// The number of ms the animation will run for
/// </summary>
/// <summary>
/// The easing function to use
/// </summary>
/// <summary>
/// <para>UI Effect Mode</para><para>Possible Values: </para><dl><dt>hide</dt><dd>Hides the element by pulling a blind in the direction</dd><dt>show</dt><dd>Shows the element by pulling a blind from the direction. This seems inverted from the hide.</dd><dt>toggle</dt><dd>Will use <code>hide</code> or <code>show</code> depending on the current visibility of the element</dd></dl>
/// </summary>
// BounceObject.cs
// Script#/Libraries/jQuery/UI
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// The bounce effect bounces an element.  When used with hide or show, the last or first bounce will also fade in/out.
/// </summary>
/// <remarks>
/// 
/// </remarks>
// BounceOption.cs
// Script#/Libraries/jQuery/UI
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// Options for use with Bounce.
/// </summary>
/// <summary>
/// A callback function, executed when the effect completes
/// </summary>
/// <summary>
/// <para>The direction the blind will be pulled to "hide" the element., or the direction from which the element will be revealed.</para><para>Possible Values</para><dl><dt>up</dt><dt>down</dt><dt>left</dt><dt>right</dt></dl>
/// </summary>
/// <summary>
/// The distance of the largest "bounce" in pixels
/// </summary>
/// <summary>
/// The number of ms the animation will run for
/// </summary>
/// <summary>
/// The easing function to use
/// </summary>
/// <summary>
/// <para>UI Effect Mode</para><para>Possible Values: </para><dl><dt>hide</dt><dd>Hides the element by pulling a bouncing out the direction and fading out on the last half bounce</dd><dt>show</dt><dd>Shows the element by pulling a bouncing in from the direction fading in on the the first half bounce.</dd><dt>toggle</dt><dd>Will use <code>hide</code> or <code>show</code> depending on the current visibility of the element</dd><dt>effect</dt><dd>Just bounces the element, doesn't hide or show.</dd></dl>
/// </summary>
/// <summary>
/// The number of times the element will bounce.  When used with hide or show, there is an extra "half" bounce for the fade in/out
/// </summary>
// BounceOptions.cs
// Script#/Libraries/jQuery/UI
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// Options used to initialize or customize Bounce.
/// </summary>
/// <summary>
/// A callback function, executed when the effect completes
/// </summary>
/// <summary>
/// <para>The direction the blind will be pulled to "hide" the element., or the direction from which the element will be revealed.</para><para>Possible Values</para><dl><dt>up</dt><dt>down</dt><dt>left</dt><dt>right</dt></dl>
/// </summary>
/// <summary>
/// The distance of the largest "bounce" in pixels
/// </summary>
/// <summary>
/// The number of ms the animation will run for
/// </summary>
/// <summary>
/// The easing function to use
/// </summary>
/// <summary>
/// <para>UI Effect Mode</para><para>Possible Values: </para><dl><dt>hide</dt><dd>Hides the element by pulling a bouncing out the direction and fading out on the last half bounce</dd><dt>show</dt><dd>Shows the element by pulling a bouncing in from the direction fading in on the the first half bounce.</dd><dt>toggle</dt><dd>Will use <code>hide</code> or <code>show</code> depending on the current visibility of the element</dd><dt>effect</dt><dd>Just bounces the element, doesn't hide or show.</dd></dl>
/// </summary>
/// <summary>
/// The number of times the element will bounce.  When used with hide or show, there is an extra "half" bounce for the fade in/out
/// </summary>
// ClipObject.cs
// Script#/Libraries/jQuery/UI
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// The clip effect will hide or show an element by clipping the element vertically or horizontally
/// </summary>
/// <remarks>
/// 
/// </remarks>
// ClipOption.cs
// Script#/Libraries/jQuery/UI
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// Options for use with Clip.
/// </summary>
/// <summary>
/// A callback function, executed when the effect completes
/// </summary>
/// <summary>
/// <para>The plane in which the clip effect will hide or show its element</para><para>Possible Values</para><dl><dt>vertical</dt><dd>Uses top &amp; bottom edges</dd><dt>horizontal</dt><dd>Uses left &amp; right edges</dd></dl>
/// </summary>
/// <summary>
/// The number of ms the animation will run for
/// </summary>
/// <summary>
/// The easing function to use
/// </summary>
/// <summary>
/// <para>UI Effect Mode</para><para>Possible Values: </para><dl><dt>hide</dt><dd>Hides the element</dd><dt>show</dt><dd>Shows the element.</dd><dt>toggle</dt><dd>Will use <code>hide</code> or <code>show</code> depending on the current visibility of the element</dd></dl>
/// </summary>
// ClipOptions.cs
// Script#/Libraries/jQuery/UI
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// Options used to initialize or customize Clip.
/// </summary>
/// <summary>
/// A callback function, executed when the effect completes
/// </summary>
/// <summary>
/// <para>The plane in which the clip effect will hide or show its element</para><para>Possible Values</para><dl><dt>vertical</dt><dd>Uses top &amp; bottom edges</dd><dt>horizontal</dt><dd>Uses left &amp; right edges</dd></dl>
/// </summary>
/// <summary>
/// The number of ms the animation will run for
/// </summary>
/// <summary>
/// The easing function to use
/// </summary>
/// <summary>
/// <para>UI Effect Mode</para><para>Possible Values: </para><dl><dt>hide</dt><dd>Hides the element</dd><dt>show</dt><dd>Shows the element.</dd><dt>toggle</dt><dd>Will use <code>hide</code> or <code>show</code> depending on the current visibility of the element</dd></dl>
/// </summary>
// DropObject.cs
// Script#/Libraries/jQuery/UI
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// The drop effect hides or shows an element fading in/out and sliding in a direction.
/// </summary>
/// <remarks>
/// 
/// </remarks>
// DropOption.cs
// Script#/Libraries/jQuery/UI
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// Options for use with Drop.
/// </summary>
/// <summary>
/// A callback function, executed when the effect completes
/// </summary>
/// <summary>
/// <para>The direction the element will fall to "hide" the element, or the direction from which the element will be revealed.</para><para>Possible Values</para><dl><dt>up</dt><dt>down</dt><dt>left</dt><dt>right</dt></dl>
/// </summary>
/// <summary>
/// The number of ms the animation will run for
/// </summary>
/// <summary>
/// The easing function to use
/// </summary>
/// <summary>
/// <para>UI Effect Mode</para><para>Possible Values: </para><dl><dt>hide</dt><dd>Hides the element by dropping in the direction</dd><dt>show</dt><dd>Shows the element by undropping from the direction. This seems inverted from the hide.</dd><dt>toggle</dt><dd>Will use <code>hide</code> or <code>show</code> depending on the current visibility of the element</dd></dl>
/// </summary>
// DropOptions.cs
// Script#/Libraries/jQuery/UI
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// Options used to initialize or customize Drop.
/// </summary>
/// <summary>
/// A callback function, executed when the effect completes
/// </summary>
/// <summary>
/// <para>The direction the element will fall to "hide" the element, or the direction from which the element will be revealed.</para><para>Possible Values</para><dl><dt>up</dt><dt>down</dt><dt>left</dt><dt>right</dt></dl>
/// </summary>
/// <summary>
/// The number of ms the animation will run for
/// </summary>
/// <summary>
/// The easing function to use
/// </summary>
/// <summary>
/// <para>UI Effect Mode</para><para>Possible Values: </para><dl><dt>hide</dt><dd>Hides the element by dropping in the direction</dd><dt>show</dt><dd>Shows the element by undropping from the direction. This seems inverted from the hide.</dd><dt>toggle</dt><dd>Will use <code>hide</code> or <code>show</code> depending on the current visibility of the element</dd></dl>
/// </summary>
// EffectMethod.cs
// Script#/Libraries/jQuery/UI
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// Operations supported by Effect.
/// </summary>
// EffectObject.cs
// Script#/Libraries/jQuery/UI
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// 
/// </summary>
/// <remarks>
/// 
/// </remarks>
/// <summary>
/// 
/// </summary>
/// <summary>
/// 
/// </summary>
/// <summary>
/// 
/// </summary>
/// <summary>
/// 
/// </summary>
/// <summary>
/// 
/// </summary>
/// <summary>
/// 
/// </summary>
/// <summary>
/// 
/// </summary>
/// <summary>
/// 
/// </summary>
/// <summary>
/// 
/// </summary>
/// <summary>
/// 
/// </summary>
/// <summary>
/// 
/// </summary>
/// <summary>
/// 
/// </summary>
/// <summary>
/// 
/// </summary>
/// <summary>
/// 
/// </summary>
// ExplodeObject.cs
// Script#/Libraries/jQuery/UI
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// The explode effect hides or shows an element by splitting it into pieces.
/// </summary>
/// <remarks>
/// 
/// </remarks>
// ExplodeOption.cs
// Script#/Libraries/jQuery/UI
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// Options for use with Explode.
/// </summary>
/// <summary>
/// A callback function, executed when the effect completes
/// </summary>
/// <summary>
/// The number of ms the animation will run for
/// </summary>
/// <summary>
/// The easing function to use
/// </summary>
/// <summary>
/// <para>UI Effect Mode</para><para>Possible Values: </para><dl><dt>hide</dt><dd>Hides the element.</dd><dt>show</dt><dd>Shows the element.</dd><dt>toggle</dt><dd>Will use <code>hide</code> or <code>show</code> depending on the current visibility of the element</dd></dl>
/// </summary>
/// <summary>
/// The number of pieces to explode, should be a perfect square, any other values are rounded to the nearest square.
/// </summary>
// ExplodeOptions.cs
// Script#/Libraries/jQuery/UI
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// Options used to initialize or customize Explode.
/// </summary>
/// <summary>
/// A callback function, executed when the effect completes
/// </summary>
/// <summary>
/// The number of ms the animation will run for
/// </summary>
/// <summary>
/// The easing function to use
/// </summary>
/// <summary>
/// <para>UI Effect Mode</para><para>Possible Values: </para><dl><dt>hide</dt><dd>Hides the element.</dd><dt>show</dt><dd>Shows the element.</dd><dt>toggle</dt><dd>Will use <code>hide</code> or <code>show</code> depending on the current visibility of the element</dd></dl>
/// </summary>
/// <summary>
/// The number of pieces to explode, should be a perfect square, any other values are rounded to the nearest square.
/// </summary>
// FadeObject.cs
// Script#/Libraries/jQuery/UI
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// The fade effect hides or shows an element by fading it.
/// </summary>
/// <remarks>
/// 
/// </remarks>
// FadeOption.cs
// Script#/Libraries/jQuery/UI
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// Options for use with Fade.
/// </summary>
/// <summary>
/// A callback function, executed when the effect completes
/// </summary>
/// <summary>
/// The number of ms the animation will run for
/// </summary>
/// <summary>
/// The easing function to use
/// </summary>
/// <summary>
/// <para>UI Effect Mode</para><para>Possible Values: </para><dl><dt>hide</dt><dd>Hides the element.</dd><dt>show</dt><dd>Shows the element.</dd><dt>toggle</dt><dd>Will use <code>hide</code> or <code>show</code> depending on the current visibility of the element</dd></dl>
/// </summary>
// FadeOptions.cs
// Script#/Libraries/jQuery/UI
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// Options used to initialize or customize Fade.
/// </summary>
/// <summary>
/// A callback function, executed when the effect completes
/// </summary>
/// <summary>
/// The number of ms the animation will run for
/// </summary>
/// <summary>
/// The easing function to use
/// </summary>
/// <summary>
/// <para>UI Effect Mode</para><para>Possible Values: </para><dl><dt>hide</dt><dd>Hides the element.</dd><dt>show</dt><dd>Shows the element.</dd><dt>toggle</dt><dd>Will use <code>hide</code> or <code>show</code> depending on the current visibility of the element</dd></dl>
/// </summary>
// FoldObject.cs
// Script#/Libraries/jQuery/UI
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// The fold effect hides or shows an element by folding it.
/// </summary>
/// <remarks>
/// 
/// </remarks>
// FoldOption.cs
// Script#/Libraries/jQuery/UI
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// Options for use with Fold.
/// </summary>
/// <summary>
/// A callback function, executed when the effect completes
/// </summary>
/// <summary>
/// The number of ms the animation will run for
/// </summary>
/// <summary>
/// The easing function to use
/// </summary>
/// <summary>
/// If the horizontal direction happens first when hiding. Remember, showing inverts hiding.
/// </summary>
/// <summary>
/// <para>UI Effect Mode</para><para>Possible Values: </para><dl><dt>hide</dt><dd>Hides the element.</dd><dt>show</dt><dd>Shows the element.</dd><dt>toggle</dt><dd>Will use <code>hide</code> or <code>show</code> depending on the current visibility of the element</dd></dl>
/// </summary>
/// <summary>
/// The size of the "folded" element, can be a number representing px, or a string containing a percentage I.E. "50%"
/// </summary>
// FoldOptions.cs
// Script#/Libraries/jQuery/UI
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// Options used to initialize or customize Fold.
/// </summary>
/// <summary>
/// A callback function, executed when the effect completes
/// </summary>
/// <summary>
/// The number of ms the animation will run for
/// </summary>
/// <summary>
/// The easing function to use
/// </summary>
/// <summary>
/// If the horizontal direction happens first when hiding. Remember, showing inverts hiding.
/// </summary>
/// <summary>
/// <para>UI Effect Mode</para><para>Possible Values: </para><dl><dt>hide</dt><dd>Hides the element.</dd><dt>show</dt><dd>Shows the element.</dd><dt>toggle</dt><dd>Will use <code>hide</code> or <code>show</code> depending on the current visibility of the element</dd></dl>
/// </summary>
/// <summary>
/// The size of the "folded" element, can be a number representing px, or a string containing a percentage I.E. "50%"
/// </summary>
// HighlightObject.cs
// Script#/Libraries/jQuery/UI
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// The highlight effect hides or shows an element by animating its background color first.
/// </summary>
/// <remarks>
/// 
/// </remarks>
// HighlightOption.cs
// Script#/Libraries/jQuery/UI
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// Options for use with Highlight.
/// </summary>
/// <summary>
/// The background color used during the animation
/// </summary>
/// <summary>
/// A callback function, executed when the effect completes
/// </summary>
/// <summary>
/// The number of ms the animation will run for
/// </summary>
/// <summary>
/// The easing function to use
/// </summary>
/// <summary>
/// <para>UI Effect Mode</para><para>Possible Values: </para><dl><dt>hide</dt><dd>Hides the element.</dd><dt>show</dt><dd>Shows the element.</dd><dt>toggle</dt><dd>Will use <code>hide</code> or <code>show</code> depending on the current visibility of the element</dd></dl>
/// </summary>
// HighlightOptions.cs
// Script#/Libraries/jQuery/UI
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// Options used to initialize or customize Highlight.
/// </summary>
/// <summary>
/// The background color used during the animation
/// </summary>
/// <summary>
/// A callback function, executed when the effect completes
/// </summary>
/// <summary>
/// The number of ms the animation will run for
/// </summary>
/// <summary>
/// The easing function to use
/// </summary>
/// <summary>
/// <para>UI Effect Mode</para><para>Possible Values: </para><dl><dt>hide</dt><dd>Hides the element.</dd><dt>show</dt><dd>Shows the element.</dd><dt>toggle</dt><dd>Will use <code>hide</code> or <code>show</code> depending on the current visibility of the element</dd></dl>
/// </summary>
// PuffObject.cs
// Script#/Libraries/jQuery/UI
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// Creates a puff effect by scaling the element up and hiding it at the same time.
/// </summary>
/// <remarks>
/// This is the only effect without a separate file, it shares a file with the scale effect.
/// </remarks>
// PuffOption.cs
// Script#/Libraries/jQuery/UI
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// Options for use with Puff.
/// </summary>
/// <summary>
/// A callback function, executed when the effect completes
/// </summary>
/// <summary>
/// The number of ms the animation will run for
/// </summary>
/// <summary>
/// The easing function to use
/// </summary>
/// <summary>
/// The mode of the effect. Can be "show" or "hide"
/// </summary>
/// <summary>
/// The percentage to scale to.
/// </summary>
// PuffOptions.cs
// Script#/Libraries/jQuery/UI
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// Options used to initialize or customize Puff.
/// </summary>
/// <summary>
/// A callback function, executed when the effect completes
/// </summary>
/// <summary>
/// The number of ms the animation will run for
/// </summary>
/// <summary>
/// The easing function to use
/// </summary>
/// <summary>
/// The mode of the effect. Can be "show" or "hide"
/// </summary>
/// <summary>
/// The percentage to scale to.
/// </summary>
// PulsateObject.cs
// Script#/Libraries/jQuery/UI
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// The pulsate effect hides or shows an element by pulsing it in or out.
/// </summary>
/// <remarks>
/// 
/// </remarks>
// PulsateOption.cs
// Script#/Libraries/jQuery/UI
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// Options for use with Pulsate.
/// </summary>
/// <summary>
/// A callback function, executed when the effect completes
/// </summary>
/// <summary>
/// The number of ms the animation will run for
/// </summary>
/// <summary>
/// The easing function to use
/// </summary>
/// <summary>
/// <para>UI Effect Mode</para><para>Possible Values: </para><dl><dt>hide</dt><dd>Hides the element.</dd><dt>show</dt><dd>Shows the element.</dd><dt>toggle</dt><dd>Will use <code>hide</code> or <code>show</code> depending on the current visibility of the element</dd><dt>effect</dt><dd>Just pulsates.</dd></dl>
/// </summary>
/// <summary>
/// The number of times the element should pulse.  An extra half pulse is added for hide/show
/// </summary>
// PulsateOptions.cs
// Script#/Libraries/jQuery/UI
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// Options used to initialize or customize Pulsate.
/// </summary>
/// <summary>
/// A callback function, executed when the effect completes
/// </summary>
/// <summary>
/// The number of ms the animation will run for
/// </summary>
/// <summary>
/// The easing function to use
/// </summary>
/// <summary>
/// <para>UI Effect Mode</para><para>Possible Values: </para><dl><dt>hide</dt><dd>Hides the element.</dd><dt>show</dt><dd>Shows the element.</dd><dt>toggle</dt><dd>Will use <code>hide</code> or <code>show</code> depending on the current visibility of the element</dd><dt>effect</dt><dd>Just pulsates.</dd></dl>
/// </summary>
/// <summary>
/// The number of times the element should pulse.  An extra half pulse is added for hide/show
/// </summary>
// ScaleObject.cs
// Script#/Libraries/jQuery/UI
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// Shrink or grow an element by a percentage factor.
/// </summary>
/// <remarks>
/// 
/// </remarks>
// ScaleOption.cs
// Script#/Libraries/jQuery/UI
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// Options for use with Scale.
/// </summary>
/// <summary>
/// A callback function, executed when the effect completes
/// </summary>
/// <summary>
/// The direction of the effect. Can be "both", "vertical" or "horizontal".
/// </summary>
/// <summary>
/// The number of ms the animation will run for
/// </summary>
/// <summary>
/// The easing function to use
/// </summary>
/// <summary>
/// The vanishing point, default for show/hide.
/// </summary>
/// <summary>
/// The percentage to scale to.
/// </summary>
/// <summary>
/// Which areas of the element will be resized: 'both', 'box', 'content' Box resizes the border and padding of the element Content resizes any content inside of the element
/// </summary>
// ScaleOptions.cs
// Script#/Libraries/jQuery/UI
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// Options used to initialize or customize Scale.
/// </summary>
/// <summary>
/// A callback function, executed when the effect completes
/// </summary>
/// <summary>
/// The direction of the effect. Can be "both", "vertical" or "horizontal".
/// </summary>
/// <summary>
/// The number of ms the animation will run for
/// </summary>
/// <summary>
/// The easing function to use
/// </summary>
/// <summary>
/// The vanishing point, default for show/hide.
/// </summary>
/// <summary>
/// The percentage to scale to.
/// </summary>
/// <summary>
/// Which areas of the element will be resized: 'both', 'box', 'content' Box resizes the border and padding of the element Content resizes any content inside of the element
/// </summary>
// ShakeObject.cs
// Script#/Libraries/jQuery/UI
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// Shakes the element multiple times, vertically or horizontally.
/// </summary>
/// <remarks>
/// 
/// </remarks>
// ShakeOption.cs
// Script#/Libraries/jQuery/UI
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// Options for use with Shake.
/// </summary>
/// <summary>
/// A callback function, executed when the effect completes
/// </summary>
/// <summary>
/// The direction of the effect. Can be "left", "right", "up", "down".
/// </summary>
/// <summary>
/// Distance to shake.
/// </summary>
/// <summary>
/// The number of ms the animation will run for
/// </summary>
/// <summary>
/// The easing function to use
/// </summary>
/// <summary>
/// Times to shake.
/// </summary>
// ShakeOptions.cs
// Script#/Libraries/jQuery/UI
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// Options used to initialize or customize Shake.
/// </summary>
/// <summary>
/// A callback function, executed when the effect completes
/// </summary>
/// <summary>
/// The direction of the effect. Can be "left", "right", "up", "down".
/// </summary>
/// <summary>
/// Distance to shake.
/// </summary>
/// <summary>
/// The number of ms the animation will run for
/// </summary>
/// <summary>
/// The easing function to use
/// </summary>
/// <summary>
/// Times to shake.
/// </summary>
// SizeObject.cs
// Script#/Libraries/jQuery/UI
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// Resize an element to a specified width and height.
/// </summary>
/// <remarks>
/// 
/// </remarks>
// SizeOption.cs
// Script#/Libraries/jQuery/UI
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// Options for use with Size.
/// </summary>
/// <summary>
/// A callback function, executed when the effect completes
/// </summary>
/// <summary>
/// The number of ms the animation will run for
/// </summary>
/// <summary>
/// The easing function to use
/// </summary>
/// <summary>
/// The vanishing point, default for show/hide.
/// </summary>
/// <summary>
/// Which areas of the element will be resized: 'both', 'box', 'content' Box resizes the border and padding of the element Content resizes any content inside of the element.
/// </summary>
/// <summary>
/// Height and width to resize to.{ height: .., width: .. }
/// </summary>
// SizeOptions.cs
// Script#/Libraries/jQuery/UI
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// Options used to initialize or customize Size.
/// </summary>
/// <summary>
/// A callback function, executed when the effect completes
/// </summary>
/// <summary>
/// The number of ms the animation will run for
/// </summary>
/// <summary>
/// The easing function to use
/// </summary>
/// <summary>
/// The vanishing point, default for show/hide.
/// </summary>
/// <summary>
/// Which areas of the element will be resized: 'both', 'box', 'content' Box resizes the border and padding of the element Content resizes any content inside of the element.
/// </summary>
/// <summary>
/// Height and width to resize to.{ height: .., width: .. }
/// </summary>
// SlideObject.cs
// Script#/Libraries/jQuery/UI
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// Slides the element out of the viewport.
/// </summary>
/// <remarks>
/// 
/// </remarks>
// SlideOption.cs
// Script#/Libraries/jQuery/UI
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// Options for use with Slide.
/// </summary>
/// <summary>
/// A callback function, executed when the effect completes
/// </summary>
/// <summary>
/// The direction of the effect. Can be "left", "right", "up", "down".
/// </summary>
/// <summary>
/// The distance of the effect. Is set to either the height or width of the elemenet depending on the direction option. Can be set to any integer less than the width/height of the element.
/// </summary>
/// <summary>
/// The number of ms the animation will run for
/// </summary>
/// <summary>
/// The easing function to use
/// </summary>
/// <summary>
/// The mode of the effect. Can be "show" or "hide"
/// </summary>
// SlideOptions.cs
// Script#/Libraries/jQuery/UI
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// Options used to initialize or customize Slide.
/// </summary>
/// <summary>
/// A callback function, executed when the effect completes
/// </summary>
/// <summary>
/// The direction of the effect. Can be "left", "right", "up", "down".
/// </summary>
/// <summary>
/// The distance of the effect. Is set to either the height or width of the elemenet depending on the direction option. Can be set to any integer less than the width/height of the element.
/// </summary>
/// <summary>
/// The number of ms the animation will run for
/// </summary>
/// <summary>
/// The easing function to use
/// </summary>
/// <summary>
/// The mode of the effect. Can be "show" or "hide"
/// </summary>
// TransferObject.cs
// Script#/Libraries/jQuery/UI
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// Transfers the outline of an element to another element
/// </summary>
/// <remarks>
/// Very useful when trying to visualize interaction between two elements.<para>The transfer element iself has the class name "ui-effects-transfer", and needs to be styled by you, for example by adding a background or border.</para>
/// </remarks>
// TransferOption.cs
// Script#/Libraries/jQuery/UI
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// Options for use with Transfer.
/// </summary>
/// <summary>
/// Optional class name the transfer element will receive.
/// </summary>
/// <summary>
/// A callback function, executed when the effect completes
/// </summary>
/// <summary>
/// The number of ms the animation will run for
/// </summary>
/// <summary>
/// The easing function to use
/// </summary>
/// <summary>
/// jQuery selector, the element to transfer to.
/// </summary>
// TransferOptions.cs
// Script#/Libraries/jQuery/UI
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// Options used to initialize or customize Transfer.
/// </summary>
/// <summary>
/// Optional class name the transfer element will receive.
/// </summary>
/// <summary>
/// A callback function, executed when the effect completes
/// </summary>
/// <summary>
/// The number of ms the animation will run for
/// </summary>
/// <summary>
/// The easing function to use
/// </summary>
/// <summary>
/// jQuery selector, the element to transfer to.
/// </summary>
// DragEvent.cs
// Script#/Libraries/jQuery/UI
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// DraggableEvents.cs
// Script#/Libraries/jQuery/UI
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// Events raised by Draggable.
/// </summary>
/// <summary>
/// This event is triggered when the draggable is created.
/// </summary>
/// <summary>
/// This event is triggered when the mouse is moved during the dragging.
/// </summary>
/// <summary>
/// This event is triggered when dragging starts.
/// </summary>
/// <summary>
/// This event is triggered when dragging stops.
/// </summary>
// DraggableObject.cs
// Script#/Libraries/jQuery/UI
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// Allow mouse interactions with elements, moving them around
/// </summary>
/// <remarks>
/// <para>The jQuery UI Draggable plugin makes selected elements draggable by mouse.</para><para>Draggable elements gets a class of <code>ui-draggable</code>. During drag the element also gets a class of <code>ui-draggable-dragging</code>. If you want not just drag, but drag-and-drop, see the jQuery UI Droppable plugin, which provides a drop target for draggables.</para>
/// </remarks>
// DraggableOption.cs
// Script#/Libraries/jQuery/UI
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// Options for use with Draggable.
/// </summary>
/// <summary>
/// If set to false, will prevent the <code>ui-draggable</code> class from being added. This may be desired as a performance optimization when calling <code>.draggable()</code> init on many hundreds of elements.
/// </summary>
/// <summary>
/// The element passed to or selected by the <code>appendTo</code> option will be used as the draggable helper's container during dragging. By default, the helper is appended to the same container as the draggable.
/// </summary>
/// <summary>
/// Constrains dragging to either the horizontal (x) or vertical (y) axis. Possible values: 'x', 'y'.
/// </summary>
/// <summary>
/// Prevents dragging from starting on specified elements.
/// </summary>
/// <summary>
/// Allows the draggable to be dropped onto the specified sortables. If this option is used (<code>helper</code> must be set to 'clone' in order to work flawlessly), a draggable can be dropped onto a sortable list and then becomes part of it.
/// </summary>
/// <summary>
/// Constrains dragging to within the bounds of the specified element or region. Possible string values: 'parent', 'document', 'window', [x1, y1, x2, y2].
/// </summary>
/// <summary>
/// The css cursor during the drag operation.
/// </summary>
/// <summary>
/// Sets the offset of the dragging helper relative to the mouse cursor. Coordinates can be given as a hash using a combination of one or two keys: <code>{ top, left, right, bottom }</code>.
/// </summary>
/// <summary>
/// Time in milliseconds after mousedown until dragging should start. This option can be used to prevent unwanted drags when clicking on an element.
/// </summary>
/// <summary>
/// Disables the draggable if set to true.
/// </summary>
/// <summary>
/// Distance in pixels after mousedown the mouse must move before dragging should start. This option can be used to prevent unwanted drags when clicking on an element.
/// </summary>
/// <summary>
/// Snaps the dragging helper to a grid, every x and y pixels. Array values: [x, y]
/// </summary>
/// <summary>
/// If specified, restricts drag start click to the specified element(s).
/// </summary>
/// <summary>
/// Allows for a helper element to be used for dragging display. Possible values: 'original', 'clone', Function. If a function is specified, it must return a DOMElement.
/// </summary>
/// <summary>
/// Prevent iframes from capturing the mousemove events during a drag. Useful in combination with cursorAt, or in any case, if the mouse cursor is not over the helper. If set to true, transparent overlays will be placed over all iframes on the page. If a selector is supplied, the matched iframes will have an overlay placed over them.
/// </summary>
/// <summary>
/// Opacity for the helper while being dragged.
/// </summary>
/// <summary>
/// If set to true, all droppable positions are calculated on every mousemove. Caution: This solves issues on highly dynamic pages, but dramatically decreases performance.
/// </summary>
/// <summary>
/// If set to true, the element will return to its start position when dragging stops. Possible string values: 'valid', 'invalid'. If set to invalid, revert will only occur if the draggable has not been dropped on a droppable. For valid, it's the other way around.
/// </summary>
/// <summary>
/// The duration of the revert animation, in milliseconds. Ignored if revert is false.
/// </summary>
/// <summary>
/// Used to group sets of draggable and droppable items, in addition to droppable's accept option. A draggable with the same scope value as a droppable will be accepted by the droppable.
/// </summary>
/// <summary>
/// If set to true, container auto-scrolls while dragging.
/// </summary>
/// <summary>
/// Distance in pixels from the edge of the viewport after which the viewport should scroll. Distance is relative to pointer, not the draggable.
/// </summary>
/// <summary>
/// The speed at which the window should scroll once the mouse pointer gets within the <code>scrollSensitivity</code> distance.
/// </summary>
/// <summary>
/// If set to a selector or to true (equivalent to '.ui-draggable'), the draggable will snap to the edges of the selected elements when near an edge of the element.
/// </summary>
/// <summary>
/// Determines which edges of snap elements the draggable will snap to. Ignored if snap is false. Possible values: 'inner', 'outer', 'both'
/// </summary>
/// <summary>
/// The distance in pixels from the snap element edges at which snapping should occur. Ignored if snap is false.
/// </summary>
/// <summary>
/// Controls the z-Index of the set of elements that match the selector, always brings to front the dragged item. Very useful in things like window managers.
/// </summary>
/// <summary>
/// z-index for the helper while being dragged.
/// </summary>
// DraggableOptions.cs
// Script#/Libraries/jQuery/UI
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// Options used to initialize or customize Draggable.
/// </summary>
/// <summary>
/// This event is triggered when the draggable is created.
/// </summary>
/// <summary>
/// This event is triggered when the mouse is moved during the dragging.
/// </summary>
/// <summary>
/// This event is triggered when dragging starts.
/// </summary>
/// <summary>
/// This event is triggered when dragging stops.
/// </summary>
/// <summary>
/// If set to false, will prevent the <code>ui-draggable</code> class from being added. This may be desired as a performance optimization when calling <code>.draggable()</code> init on many hundreds of elements.
/// </summary>
/// <summary>
/// The element passed to or selected by the <code>appendTo</code> option will be used as the draggable helper's container during dragging. By default, the helper is appended to the same container as the draggable.
/// </summary>
/// <summary>
/// Constrains dragging to either the horizontal (x) or vertical (y) axis. Possible values: 'x', 'y'.
/// </summary>
/// <summary>
/// Prevents dragging from starting on specified elements.
/// </summary>
/// <summary>
/// Allows the draggable to be dropped onto the specified sortables. If this option is used (<code>helper</code> must be set to 'clone' in order to work flawlessly), a draggable can be dropped onto a sortable list and then becomes part of it.
/// </summary>
/// <summary>
/// Constrains dragging to within the bounds of the specified element or region. Possible string values: 'parent', 'document', 'window', [x1, y1, x2, y2].
/// </summary>
/// <summary>
/// The css cursor during the drag operation.
/// </summary>
/// <summary>
/// Sets the offset of the dragging helper relative to the mouse cursor. Coordinates can be given as a hash using a combination of one or two keys: <code>{ top, left, right, bottom }</code>.
/// </summary>
/// <summary>
/// Time in milliseconds after mousedown until dragging should start. This option can be used to prevent unwanted drags when clicking on an element.
/// </summary>
/// <summary>
/// Disables the draggable if set to true.
/// </summary>
/// <summary>
/// Distance in pixels after mousedown the mouse must move before dragging should start. This option can be used to prevent unwanted drags when clicking on an element.
/// </summary>
/// <summary>
/// Snaps the dragging helper to a grid, every x and y pixels. Array values: [x, y]
/// </summary>
/// <summary>
/// If specified, restricts drag start click to the specified element(s).
/// </summary>
/// <summary>
/// Allows for a helper element to be used for dragging display. Possible values: 'original', 'clone', Function. If a function is specified, it must return a DOMElement.
/// </summary>
/// <summary>
/// Prevent iframes from capturing the mousemove events during a drag. Useful in combination with cursorAt, or in any case, if the mouse cursor is not over the helper. If set to true, transparent overlays will be placed over all iframes on the page. If a selector is supplied, the matched iframes will have an overlay placed over them.
/// </summary>
/// <summary>
/// Opacity for the helper while being dragged.
/// </summary>
/// <summary>
/// If set to true, all droppable positions are calculated on every mousemove. Caution: This solves issues on highly dynamic pages, but dramatically decreases performance.
/// </summary>
/// <summary>
/// If set to true, the element will return to its start position when dragging stops. Possible string values: 'valid', 'invalid'. If set to invalid, revert will only occur if the draggable has not been dropped on a droppable. For valid, it's the other way around.
/// </summary>
/// <summary>
/// The duration of the revert animation, in milliseconds. Ignored if revert is false.
/// </summary>
/// <summary>
/// Used to group sets of draggable and droppable items, in addition to droppable's accept option. A draggable with the same scope value as a droppable will be accepted by the droppable.
/// </summary>
/// <summary>
/// If set to true, container auto-scrolls while dragging.
/// </summary>
/// <summary>
/// Distance in pixels from the edge of the viewport after which the viewport should scroll. Distance is relative to pointer, not the draggable.
/// </summary>
/// <summary>
/// The speed at which the window should scroll once the mouse pointer gets within the <code>scrollSensitivity</code> distance.
/// </summary>
/// <summary>
/// If set to a selector or to true (equivalent to '.ui-draggable'), the draggable will snap to the edges of the selected elements when near an edge of the element.
/// </summary>
/// <summary>
/// Determines which edges of snap elements the draggable will snap to. Ignored if snap is false. Possible values: 'inner', 'outer', 'both'
/// </summary>
/// <summary>
/// The distance in pixels from the snap element edges at which snapping should occur. Ignored if snap is false.
/// </summary>
/// <summary>
/// Controls the z-Index of the set of elements that match the selector, always brings to front the dragged item. Very useful in things like window managers.
/// </summary>
/// <summary>
/// z-index for the helper while being dragged.
/// </summary>
// DragStartEvent.cs
// Script#/Libraries/jQuery/UI
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// DragStopEvent.cs
// Script#/Libraries/jQuery/UI
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// DropActivateEvent.cs
// Script#/Libraries/jQuery/UI
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// DropDeactivateEvent.cs
// Script#/Libraries/jQuery/UI
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// DropEvent.cs
// Script#/Libraries/jQuery/UI
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// DropOverEvent.cs
// Script#/Libraries/jQuery/UI
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// DroppableEvents.cs
// Script#/Libraries/jQuery/UI
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// Events raised by Droppable.
/// </summary>
/// <summary>
/// This event is triggered any time an accepted draggable starts dragging. This can be useful if you want to make the droppable 'light up' when it can be dropped on.
/// </summary>
/// <summary>
/// This event is triggered when the droppable is created.
/// </summary>
/// <summary>
/// This event is triggered any time an accepted draggable stops dragging.
/// </summary>
/// <summary>
/// This event is triggered when an accepted draggable is dropped 'over' (within the tolerance of) this droppable. In the callback, $(this) represents the droppable the draggable is dropped on.ui.draggable represents the draggable.
/// </summary>
/// <summary>
/// This event is triggered when an accepted draggable is dragged out (within the tolerance of) this droppable.
/// </summary>
/// <summary>
/// This event is triggered as an accepted draggable is dragged 'over' (within the tolerance of) this droppable.
/// </summary>
// DroppableObject.cs
// Script#/Libraries/jQuery/UI
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// Create targets for draggable elements
/// </summary>
/// <remarks>
/// <para>The jQuery UI Droppable plugin makes selected elements droppable (meaning they accept being dropped on by draggables). You can specify which (individually) or which kind of draggables each will accept.</para>
/// </remarks>
// DroppableOption.cs
// Script#/Libraries/jQuery/UI
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// Options for use with Droppable.
/// </summary>
/// <summary>
/// All draggables that match the selector will be accepted. If a function is specified, the function will be called for each draggable on the page (passed as the first argument to the function), to provide a custom filter. The function should return true if the draggable should be accepted.
/// </summary>
/// <summary>
/// If specified, the class will be added to the droppable while an acceptable draggable is being dragged.
/// </summary>
/// <summary>
/// If set to false, will prevent the ui-droppable class from being added. This may be desired as a performance optimization when calling .droppable() init on many hundreds of elements.
/// </summary>
/// <summary>
/// Disables the droppable if set to true.
/// </summary>
/// <summary>
/// If true, will prevent event propagation on nested droppables.
/// </summary>
/// <summary>
/// If specified, the class will be added to the droppable while an acceptable draggable is being hovered.
/// </summary>
/// <summary>
/// Used to group sets of draggable and droppable items, in addition to droppable's accept option. A draggable with the same scope value as a droppable will be accepted.
/// </summary>
/// <summary>
/// Specifies which mode to use for testing whether a draggable is 'over' a droppable. Possible values: 'fit', 'intersect', 'pointer', 'touch'.<ul><li>'''fit''': draggable overlaps the droppable entirely</li><li>'''intersect''': draggable overlaps the droppable at least 50%</li><li>'''pointer''': mouse pointer overlaps the droppable</li><li>'''touch''': draggable overlaps the droppable any amount</li></ul>
/// </summary>
// DroppableOptions.cs
// Script#/Libraries/jQuery/UI
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// Options used to initialize or customize Droppable.
/// </summary>
/// <summary>
/// This event is triggered any time an accepted draggable starts dragging. This can be useful if you want to make the droppable 'light up' when it can be dropped on.
/// </summary>
/// <summary>
/// This event is triggered when the droppable is created.
/// </summary>
/// <summary>
/// This event is triggered any time an accepted draggable stops dragging.
/// </summary>
/// <summary>
/// This event is triggered when an accepted draggable is dropped 'over' (within the tolerance of) this droppable. In the callback, $(this) represents the droppable the draggable is dropped on.ui.draggable represents the draggable.
/// </summary>
/// <summary>
/// This event is triggered when an accepted draggable is dragged out (within the tolerance of) this droppable.
/// </summary>
/// <summary>
/// This event is triggered as an accepted draggable is dragged 'over' (within the tolerance of) this droppable.
/// </summary>
/// <summary>
/// All draggables that match the selector will be accepted. If a function is specified, the function will be called for each draggable on the page (passed as the first argument to the function), to provide a custom filter. The function should return true if the draggable should be accepted.
/// </summary>
/// <summary>
/// If specified, the class will be added to the droppable while an acceptable draggable is being dragged.
/// </summary>
/// <summary>
/// If set to false, will prevent the ui-droppable class from being added. This may be desired as a performance optimization when calling .droppable() init on many hundreds of elements.
/// </summary>
/// <summary>
/// Disables the droppable if set to true.
/// </summary>
/// <summary>
/// If true, will prevent event propagation on nested droppables.
/// </summary>
/// <summary>
/// If specified, the class will be added to the droppable while an acceptable draggable is being hovered.
/// </summary>
/// <summary>
/// Used to group sets of draggable and droppable items, in addition to droppable's accept option. A draggable with the same scope value as a droppable will be accepted.
/// </summary>
/// <summary>
/// Specifies which mode to use for testing whether a draggable is 'over' a droppable. Possible values: 'fit', 'intersect', 'pointer', 'touch'.<ul><li>'''fit''': draggable overlaps the droppable entirely</li><li>'''intersect''': draggable overlaps the droppable at least 50%</li><li>'''pointer''': mouse pointer overlaps the droppable</li><li>'''touch''': draggable overlaps the droppable any amount</li></ul>
/// </summary>
// ResizableEvents.cs
// Script#/Libraries/jQuery/UI
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// Events raised by Resizable.
/// </summary>
/// <summary>
/// This event is triggered when the resizable is created.
/// </summary>
/// <summary>
/// This event is triggered during the resize, on the drag of the resize handler.
/// </summary>
/// <summary>
/// This event is triggered at the start of a resize operation.
/// </summary>
/// <summary>
/// This event is triggered at the end of a resize operation.
/// </summary>
// ResizableObject.cs
// Script#/Libraries/jQuery/UI
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// Change the size of an element using the mouse
/// </summary>
/// <remarks>
/// <para>The jQuery UI Resizable plugin makes selected elements resizable (meaning they have draggable resize handles). You can specify one or more handles as well as min and max width and height.</para><para>All callbacks (start,stop,resize) receive two arguments: The original browser event and a prepared ui object.</para><para>This interaction requires some functional CSS, otherwise it won't work. If you build a custom theme, use the interaction's specific CSS file as a starting point.</para>
/// </remarks>
// ResizableOption.cs
// Script#/Libraries/jQuery/UI
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// Options for use with Resizable.
/// </summary>
/// <summary>
/// Resize these elements synchronous when resizing.
/// </summary>
/// <summary>
/// Animates to the final size after resizing.
/// </summary>
/// <summary>
/// Duration time for animating, in milliseconds. Other possible values: 'slow', 'normal', 'fast'.
/// </summary>
/// <summary>
/// Easing effect for animating.
/// </summary>
/// <summary>
/// If set to true, resizing is constrained by the original aspect ratio. Otherwise a custom aspect ratio can be specified, such as 9 / 16, or 0.5.
/// </summary>
/// <summary>
/// If set to true, automatically hides the handles except when the mouse hovers over the element.
/// </summary>
/// <summary>
/// Prevents resizing if you start on elements matching the selector.
/// </summary>
/// <summary>
/// Constrains resizing to within the bounds of the specified element. Possible values: 'parent', 'document', a DOMElement, or a Selector.
/// </summary>
/// <summary>
/// Tolerance, in milliseconds, for when resizing should start. If specified, resizing will not start until after mouse is moved beyond duration. This can help prevent unintended resizing when clicking on an element.
/// </summary>
/// <summary>
/// Disables the resizable if set to true.
/// </summary>
/// <summary>
/// Tolerance, in pixels, for when resizing should start. If specified, resizing will not start until after mouse is moved beyond distance. This can help prevent unintended resizing when clicking on an element.
/// </summary>
/// <summary>
/// If set to true, a semi-transparent helper element is shown for resizing.
/// </summary>
/// <summary>
/// Snaps the resizing element to a grid, every x and y pixels. Array values: [x, y]
/// </summary>
/// <summary>
/// If specified as a string, should be a comma-split list of any of the following: 'n, e, s, w, ne, se, sw, nw, all'. The necessary handles will be auto-generated by the plugin.<para>If specified as an object, the following keys are supported: { n, e, s, w, ne, se, sw, nw }. The value of any specified should be a jQuery selector matching the child element of the resizable to use as that handle. If the handle is not a child of the resizable, you can pass in the DOMElement or a valid jQuery object directly.</para>
/// </summary>
/// <summary>
/// This is the css class that will be added to a proxy element to outline the resize during the drag of the resize handle. Once the resize is complete, the original element is sized.
/// </summary>
/// <summary>
/// This is the maximum height the resizable should be allowed to resize to.
/// </summary>
/// <summary>
/// This is the maximum width the resizable should be allowed to resize to.
/// </summary>
/// <summary>
/// This is the minimum height the resizable should be allowed to resize to.
/// </summary>
/// <summary>
/// This is the minimum width the resizable should be allowed to resize to.
/// </summary>
// ResizableOptions.cs
// Script#/Libraries/jQuery/UI
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// Options used to initialize or customize Resizable.
/// </summary>
/// <summary>
/// This event is triggered when the resizable is created.
/// </summary>
/// <summary>
/// This event is triggered during the resize, on the drag of the resize handler.
/// </summary>
/// <summary>
/// This event is triggered at the start of a resize operation.
/// </summary>
/// <summary>
/// This event is triggered at the end of a resize operation.
/// </summary>
/// <summary>
/// Resize these elements synchronous when resizing.
/// </summary>
/// <summary>
/// Animates to the final size after resizing.
/// </summary>
/// <summary>
/// Duration time for animating, in milliseconds. Other possible values: 'slow', 'normal', 'fast'.
/// </summary>
/// <summary>
/// Easing effect for animating.
/// </summary>
/// <summary>
/// If set to true, resizing is constrained by the original aspect ratio. Otherwise a custom aspect ratio can be specified, such as 9 / 16, or 0.5.
/// </summary>
/// <summary>
/// If set to true, automatically hides the handles except when the mouse hovers over the element.
/// </summary>
/// <summary>
/// Prevents resizing if you start on elements matching the selector.
/// </summary>
/// <summary>
/// Constrains resizing to within the bounds of the specified element. Possible values: 'parent', 'document', a DOMElement, or a Selector.
/// </summary>
/// <summary>
/// Tolerance, in milliseconds, for when resizing should start. If specified, resizing will not start until after mouse is moved beyond duration. This can help prevent unintended resizing when clicking on an element.
/// </summary>
/// <summary>
/// Disables the resizable if set to true.
/// </summary>
/// <summary>
/// Tolerance, in pixels, for when resizing should start. If specified, resizing will not start until after mouse is moved beyond distance. This can help prevent unintended resizing when clicking on an element.
/// </summary>
/// <summary>
/// If set to true, a semi-transparent helper element is shown for resizing.
/// </summary>
/// <summary>
/// Snaps the resizing element to a grid, every x and y pixels. Array values: [x, y]
/// </summary>
/// <summary>
/// If specified as a string, should be a comma-split list of any of the following: 'n, e, s, w, ne, se, sw, nw, all'. The necessary handles will be auto-generated by the plugin.<para>If specified as an object, the following keys are supported: { n, e, s, w, ne, se, sw, nw }. The value of any specified should be a jQuery selector matching the child element of the resizable to use as that handle. If the handle is not a child of the resizable, you can pass in the DOMElement or a valid jQuery object directly.</para>
/// </summary>
/// <summary>
/// This is the css class that will be added to a proxy element to outline the resize during the drag of the resize handle. Once the resize is complete, the original element is sized.
/// </summary>
/// <summary>
/// This is the maximum height the resizable should be allowed to resize to.
/// </summary>
/// <summary>
/// This is the maximum width the resizable should be allowed to resize to.
/// </summary>
/// <summary>
/// This is the minimum height the resizable should be allowed to resize to.
/// </summary>
/// <summary>
/// This is the minimum width the resizable should be allowed to resize to.
/// </summary>
// ResizeEvent.cs
// Script#/Libraries/jQuery/UI
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// ResizeStartEvent.cs
// Script#/Libraries/jQuery/UI
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// ResizeStopEvent.cs
// Script#/Libraries/jQuery/UI
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// SelectableEvents.cs
// Script#/Libraries/jQuery/UI
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// Events raised by Selectable.
/// </summary>
/// <summary>
/// This event is triggered when the selectable is created.
/// </summary>
/// <summary>
/// This event is triggered at the end of the select operation, on each element added to the selection.
/// </summary>
/// <summary>
/// This event is triggered during the select operation, on each element added to the selection.
/// </summary>
/// <summary>
/// This event is triggered at the beginning of the select operation.
/// </summary>
/// <summary>
/// This event is triggered at the end of the select operation.
/// </summary>
/// <summary>
/// This event is triggered at the end of the select operation, on each element removed from the selection.
/// </summary>
/// <summary>
/// This event is triggered during the select operation, on each element removed from the selection.
/// </summary>
// SelectableMethod.cs
// Script#/Libraries/jQuery/UI
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// Operations supported by Selectable.
/// </summary>
/// <summary>
/// The <code>destroy()</code> method cleans up all common data, events, etc. and then delegates out to <code>_destroy()</code> for custom cleanup.
/// </summary>
/// <summary>
/// Refresh the position and size of each selectee element. This method can be used to manually recalculate the position and size of each selectee element. Very useful if autoRefresh is set to false.
/// </summary>
// SelectableObject.cs
// Script#/Libraries/jQuery/UI
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// Use the mouse to select individual or a group of elements
/// </summary>
/// <remarks>
/// <para>The jQuery UI Selectable plugin allows for elements to be selected by dragging a box (sometimes called a lasso) with the mouse over the elements. Also, elements can be selected by click or drag while holding the Ctrl/Meta key, allowing for multiple (non-contiguous) selections.</para><para>This interaction requires some functional CSS, otherwise it won't work. If you build a custom theme, use the interaction's specific CSS file as a starting point.</para>
/// </remarks>
/// <summary>
/// Refresh the position and size of each selectee element. This method can be used to manually recalculate the position and size of each selectee element. Very useful if autoRefresh is set to false.
/// </summary>
// SelectableOption.cs
// Script#/Libraries/jQuery/UI
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// Options for use with Selectable.
/// </summary>
/// <summary>
/// This determines whether to refresh (recalculate) the position and size of each selectee at the beginning of each select operation. If you have many many items, you may want to set this to false and call the refresh method manually.
/// </summary>
/// <summary>
/// Prevents selecting if you start on elements matching the selector.
/// </summary>
/// <summary>
/// Time in milliseconds to define when the selecting should start. It helps preventing unwanted selections when clicking on an element.
/// </summary>
/// <summary>
/// Disables the selectable if set to true.
/// </summary>
/// <summary>
/// Tolerance, in pixels, for when selecting should start. If specified, selecting will not start until after mouse is dragged beyond distance.
/// </summary>
/// <summary>
/// The matching child elements will be made selectees (able to be selected).
/// </summary>
/// <summary>
/// Possible values: 'touch', 'fit'.<ul><li>'''fit''': draggable overlaps the droppable entirely</li><li>'''touch''': draggable overlaps the droppable any amount</li></ul>
/// </summary>
// SelectableOptions.cs
// Script#/Libraries/jQuery/UI
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// Options used to initialize or customize Selectable.
/// </summary>
/// <summary>
/// This event is triggered when the selectable is created.
/// </summary>
/// <summary>
/// This event is triggered at the end of the select operation, on each element added to the selection.
/// </summary>
/// <summary>
/// This event is triggered during the select operation, on each element added to the selection.
/// </summary>
/// <summary>
/// This event is triggered at the beginning of the select operation.
/// </summary>
/// <summary>
/// This event is triggered at the end of the select operation.
/// </summary>
/// <summary>
/// This event is triggered at the end of the select operation, on each element removed from the selection.
/// </summary>
/// <summary>
/// This event is triggered during the select operation, on each element removed from the selection.
/// </summary>
/// <summary>
/// This determines whether to refresh (recalculate) the position and size of each selectee at the beginning of each select operation. If you have many many items, you may want to set this to false and call the refresh method manually.
/// </summary>
/// <summary>
/// Prevents selecting if you start on elements matching the selector.
/// </summary>
/// <summary>
/// Time in milliseconds to define when the selecting should start. It helps preventing unwanted selections when clicking on an element.
/// </summary>
/// <summary>
/// Disables the selectable if set to true.
/// </summary>
/// <summary>
/// Tolerance, in pixels, for when selecting should start. If specified, selecting will not start until after mouse is dragged beyond distance.
/// </summary>
/// <summary>
/// The matching child elements will be made selectees (able to be selected).
/// </summary>
/// <summary>
/// Possible values: 'touch', 'fit'.<ul><li>'''fit''': draggable overlaps the droppable entirely</li><li>'''touch''': draggable overlaps the droppable any amount</li></ul>
/// </summary>
// SelectableSelectedEvent.cs
// Script#/Libraries/jQuery/UI
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// SelectableSelectingEvent.cs
// Script#/Libraries/jQuery/UI
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// SelectableUnselectedEvent.cs
// Script#/Libraries/jQuery/UI
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// SelectableUnselectingEvent.cs
// Script#/Libraries/jQuery/UI
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// SortableEvents.cs
// Script#/Libraries/jQuery/UI
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// Events raised by Sortable.
/// </summary>
/// <summary>
/// This event is triggered when using connected lists, every connected list on drag start receives it.
/// </summary>
/// <summary>
/// This event is triggered when sorting stops, but when the placeholder/helper is still available.
/// </summary>
/// <summary>
/// This event is triggered during sorting, but only when the DOM position has changed.
/// </summary>
/// <summary>
/// This event is triggered when the sortable is created.
/// </summary>
/// <summary>
/// This event is triggered when sorting was stopped, is propagated to all possible connected lists.
/// </summary>
/// <summary>
/// This event is triggered when a sortable item is moved away from a connected list.
/// </summary>
/// <summary>
/// This event is triggered when a sortable item is moved into a connected list.
/// </summary>
/// <summary>
/// This event is triggered when a connected sortable list has received an item from another list.
/// </summary>
/// <summary>
/// This event is triggered when a sortable item has been dragged out from the list and into another.
/// </summary>
/// <summary>
/// This event is triggered during sorting.
/// </summary>
/// <summary>
/// This event is triggered when sorting starts.
/// </summary>
/// <summary>
/// This event is triggered when sorting has stopped.
/// </summary>
/// <summary>
/// This event is triggered when the user stopped sorting and the DOM position has changed.
/// </summary>
// SortableMethod.cs
// Script#/Libraries/jQuery/UI
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// Operations supported by Sortable.
/// </summary>
/// <summary>
/// Cancels a change in the current sortable and reverts it to the state prior to when the current sort was started. Useful in the stop and receive callback functions.<para>If the sortable item is not being moved from one connected sortable to another:</para><c>$(this).sortable('cancel');</c>will cancel the change.<para>If the sortable item is being moved from one connected sortable to another:</para><c>$(ui.sender).sortable('cancel');</c>will cancel the change. Useful in the 'receive' callback.
/// </summary>
/// <summary>
/// The <code>destroy()</code> method cleans up all common data, events, etc. and then delegates out to <code>_destroy()</code> for custom cleanup.
/// </summary>
/// <summary>
/// Refresh the sortable items. Custom trigger the reloading of all sortable items, causing new items to be recognized.
/// </summary>
/// <summary>
/// Refresh the cached positions of the sortables' items. Calling this method refreshes the cached item positions of all sortables. This is usually done automatically by the script and slows down performance. Use wisely.
/// </summary>
/// <summary>
/// Serializes the sortable's item id's into a form/ajax submittable string. Calling this method produces a hash that can be appended to any url to easily submit a new item order back to the server.<para>It works by default by looking at the id of each item in the format 'setname_number', and it spits out a hash like "setname[]=number&amp;setname[]=number".</para><para>You can also give in a option hash as second argument to custom define how the function works. The possible options are: 'key' (replaces part1[] with whatever you want), 'attribute' (test another attribute than 'id') and 'expression' (use your own regexp).</para><para>If serialize returns an empty string, make sure the id attributes include an underscore.  They must be in the form: "set_number" For example, a 3 element list with id attributes foo_1, foo_5, foo_2 will serialize to foo[]=1&amp;foo[]=5&amp;foo[]=2. You can use an underscore, equal sign or hyphen to separate the set and number.  For example foo=1 or foo-1 or foo_1 all serialize to foo[]=1.</para>
/// </summary>
// SortableObject.cs
// Script#/Libraries/jQuery/UI
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// Reorder elements in a list or grid using the mouse
/// </summary>
/// <remarks>
/// <para>The jQuery UI Sortable plugin makes selected elements sortable by dragging with the mouse.</para><para>All callbacks receive two arguments: The original browser event and a prepared ui object.</para>
/// </remarks>
/// <summary>
/// Cancels a change in the current sortable and reverts it to the state prior to when the current sort was started. Useful in the stop and receive callback functions.<para>If the sortable item is not being moved from one connected sortable to another:</para><c>$(this).sortable('cancel');</c>will cancel the change.<para>If the sortable item is being moved from one connected sortable to another:</para><c>$(ui.sender).sortable('cancel');</c>will cancel the change. Useful in the 'receive' callback.
/// </summary>
/// <summary>
/// Refresh the sortable items. Custom trigger the reloading of all sortable items, causing new items to be recognized.
/// </summary>
/// <summary>
/// Refresh the cached positions of the sortables' items. Calling this method refreshes the cached item positions of all sortables. This is usually done automatically by the script and slows down performance. Use wisely.
/// </summary>
/// <summary>
/// Serializes the sortable's item id's into a form/ajax submittable string. Calling this method produces a hash that can be appended to any url to easily submit a new item order back to the server.<para>It works by default by looking at the id of each item in the format 'setname_number', and it spits out a hash like "setname[]=number&amp;setname[]=number".</para><para>You can also give in a option hash as second argument to custom define how the function works. The possible options are: 'key' (replaces part1[] with whatever you want), 'attribute' (test another attribute than 'id') and 'expression' (use your own regexp).</para><para>If serialize returns an empty string, make sure the id attributes include an underscore.  They must be in the form: "set_number" For example, a 3 element list with id attributes foo_1, foo_5, foo_2 will serialize to foo[]=1&amp;foo[]=5&amp;foo[]=2. You can use an underscore, equal sign or hyphen to separate the set and number.  For example foo=1 or foo-1 or foo_1 all serialize to foo[]=1.</para>
/// </summary>
// SortableOption.cs
// Script#/Libraries/jQuery/UI
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// Options for use with Sortable.
/// </summary>
/// <summary>
/// Defines where the helper that moves with the mouse is being appended to during the drag (for example, to resolve overlap/zIndex issues).
/// </summary>
/// <summary>
/// If defined, the items can be dragged only horizontally or vertically. Possible values:'x', 'y'.
/// </summary>
/// <summary>
/// Prevents sorting if you start on elements matching the selector.
/// </summary>
/// <summary>
/// Takes a jQuery selector with items that also have sortables applied. If used, the sortable is now connected to the other one-way, so you can drag from this sortable to the other.
/// </summary>
/// <summary>
/// Constrains dragging to within the bounds of the specified element - can be a DOM element, 'parent', 'document', 'window', or a jQuery selector.<para>Note: the element specified for containment must have a calculated width and height (though it need not be explicit), so for example, if you have float:left sortable children and specify containment:'parent' be sure to have float:left on the sortable/parent container as well or it will have height: 0, causing undefined behavior.</para>
/// </summary>
/// <summary>
/// Defines the cursor that is being shown while sorting.
/// </summary>
/// <summary>
/// Moves the sorting element or helper so the cursor always appears to drag from the same position. Coordinates can be given as a hash using a combination of one or two keys: <code>{ top, left, right, bottom }</code>.
/// </summary>
/// <summary>
/// Time in milliseconds to define when the sorting should start. It helps preventing unwanted drags when clicking on an element.
/// </summary>
/// <summary>
/// Disables the sortable if set to true.
/// </summary>
/// <summary>
/// Tolerance, in pixels, for when sorting should start. If specified, sorting will not start until after mouse is dragged beyond distance. Can be used to allow for clicks on elements within a handle.
/// </summary>
/// <summary>
/// If false items from this sortable can't be dropped to an empty linked sortable.
/// </summary>
/// <summary>
/// If true, forces the helper to have a size.
/// </summary>
/// <summary>
/// If true, forces the placeholder to have a size.
/// </summary>
/// <summary>
/// Snaps the sorting element or helper to a grid, every x and y pixels. Array values: [x, y]
/// </summary>
/// <summary>
/// Restricts sort start click to the specified element.
/// </summary>
/// <summary>
/// Allows for a helper element to be used for dragging display. The supplied function receives the event and the element being sorted, and should return a DOMElement to be used as a custom proxy helper. Possible values: 'original', 'clone'
/// </summary>
/// <summary>
/// Specifies which items inside the element should be sortable.
/// </summary>
/// <summary>
/// Defines the opacity of the helper while sorting. From 0.01 to 1
/// </summary>
/// <summary>
/// Class that gets applied to the otherwise white space.
/// </summary>
/// <summary>
/// If set to true, the item will be reverted to its new DOM position with a smooth animation. Optionally, it can also be set to a number that controls the duration of the animation in ms.
/// </summary>
/// <summary>
/// If set to true, the page scrolls when coming to an edge.
/// </summary>
/// <summary>
/// Defines how near the mouse must be to an edge to start scrolling.
/// </summary>
/// <summary>
/// The speed at which the window should scroll once the mouse pointer gets within the scrollSensitivity distance.
/// </summary>
/// <summary>
/// This is the way the reordering behaves during drag. Possible values: 'intersect', 'pointer'. In some setups, 'pointer' is more natural.<ul><li>'''intersect''': draggable overlaps the droppable at least 50%</li><li>'''pointer''': mouse pointer overlaps the droppable</li></ul>
/// </summary>
/// <summary>
/// Z-index for element/helper while being sorted.
/// </summary>
// SortableOptions.cs
// Script#/Libraries/jQuery/UI
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// Options used to initialize or customize Sortable.
/// </summary>
/// <summary>
/// This event is triggered when using connected lists, every connected list on drag start receives it.
/// </summary>
/// <summary>
/// This event is triggered when sorting stops, but when the placeholder/helper is still available.
/// </summary>
/// <summary>
/// This event is triggered during sorting, but only when the DOM position has changed.
/// </summary>
/// <summary>
/// This event is triggered when the sortable is created.
/// </summary>
/// <summary>
/// This event is triggered when sorting was stopped, is propagated to all possible connected lists.
/// </summary>
/// <summary>
/// This event is triggered when a sortable item is moved away from a connected list.
/// </summary>
/// <summary>
/// This event is triggered when a sortable item is moved into a connected list.
/// </summary>
/// <summary>
/// This event is triggered when a connected sortable list has received an item from another list.
/// </summary>
/// <summary>
/// This event is triggered when a sortable item has been dragged out from the list and into another.
/// </summary>
/// <summary>
/// This event is triggered during sorting.
/// </summary>
/// <summary>
/// This event is triggered when sorting starts.
/// </summary>
/// <summary>
/// This event is triggered when sorting has stopped.
/// </summary>
/// <summary>
/// This event is triggered when the user stopped sorting and the DOM position has changed.
/// </summary>
/// <summary>
/// Defines where the helper that moves with the mouse is being appended to during the drag (for example, to resolve overlap/zIndex issues).
/// </summary>
/// <summary>
/// If defined, the items can be dragged only horizontally or vertically. Possible values:'x', 'y'.
/// </summary>
/// <summary>
/// Prevents sorting if you start on elements matching the selector.
/// </summary>
/// <summary>
/// Takes a jQuery selector with items that also have sortables applied. If used, the sortable is now connected to the other one-way, so you can drag from this sortable to the other.
/// </summary>
/// <summary>
/// Constrains dragging to within the bounds of the specified element - can be a DOM element, 'parent', 'document', 'window', or a jQuery selector.<para>Note: the element specified for containment must have a calculated width and height (though it need not be explicit), so for example, if you have float:left sortable children and specify containment:'parent' be sure to have float:left on the sortable/parent container as well or it will have height: 0, causing undefined behavior.</para>
/// </summary>
/// <summary>
/// Defines the cursor that is being shown while sorting.
/// </summary>
/// <summary>
/// Moves the sorting element or helper so the cursor always appears to drag from the same position. Coordinates can be given as a hash using a combination of one or two keys: <code>{ top, left, right, bottom }</code>.
/// </summary>
/// <summary>
/// Time in milliseconds to define when the sorting should start. It helps preventing unwanted drags when clicking on an element.
/// </summary>
/// <summary>
/// Disables the sortable if set to true.
/// </summary>
/// <summary>
/// Tolerance, in pixels, for when sorting should start. If specified, sorting will not start until after mouse is dragged beyond distance. Can be used to allow for clicks on elements within a handle.
/// </summary>
/// <summary>
/// If false items from this sortable can't be dropped to an empty linked sortable.
/// </summary>
/// <summary>
/// If true, forces the helper to have a size.
/// </summary>
/// <summary>
/// If true, forces the placeholder to have a size.
/// </summary>
/// <summary>
/// Snaps the sorting element or helper to a grid, every x and y pixels. Array values: [x, y]
/// </summary>
/// <summary>
/// Restricts sort start click to the specified element.
/// </summary>
/// <summary>
/// Allows for a helper element to be used for dragging display. The supplied function receives the event and the element being sorted, and should return a DOMElement to be used as a custom proxy helper. Possible values: 'original', 'clone'
/// </summary>
/// <summary>
/// Specifies which items inside the element should be sortable.
/// </summary>
/// <summary>
/// Defines the opacity of the helper while sorting. From 0.01 to 1
/// </summary>
/// <summary>
/// Class that gets applied to the otherwise white space.
/// </summary>
/// <summary>
/// If set to true, the item will be reverted to its new DOM position with a smooth animation. Optionally, it can also be set to a number that controls the duration of the animation in ms.
/// </summary>
/// <summary>
/// If set to true, the page scrolls when coming to an edge.
/// </summary>
/// <summary>
/// Defines how near the mouse must be to an edge to start scrolling.
/// </summary>
/// <summary>
/// The speed at which the window should scroll once the mouse pointer gets within the scrollSensitivity distance.
/// </summary>
/// <summary>
/// This is the way the reordering behaves during drag. Possible values: 'intersect', 'pointer'. In some setups, 'pointer' is more natural.<ul><li>'''intersect''': draggable overlaps the droppable at least 50%</li><li>'''pointer''': mouse pointer overlaps the droppable</li></ul>
/// </summary>
/// <summary>
/// Z-index for element/helper while being sorted.
/// </summary>
// SortActivateEvent.cs
// Script#/Libraries/jQuery/UI
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// SortBeforeStopEvent.cs
// Script#/Libraries/jQuery/UI
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// SortChangeEvent.cs
// Script#/Libraries/jQuery/UI
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// SortDeactivateEvent.cs
// Script#/Libraries/jQuery/UI
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// SortEvent.cs
// Script#/Libraries/jQuery/UI
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// SortOutEvent.cs
// Script#/Libraries/jQuery/UI
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// SortOverEvent.cs
// Script#/Libraries/jQuery/UI
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// SortReceiveEvent.cs
// Script#/Libraries/jQuery/UI
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// SortRemoveEvent.cs
// Script#/Libraries/jQuery/UI
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// SortStartEvent.cs
// Script#/Libraries/jQuery/UI
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// SortStopEvent.cs
// Script#/Libraries/jQuery/UI
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// SortUpdateEvent.cs
// Script#/Libraries/jQuery/UI
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// AssemblyInfo.cs
// Script#/Libraries/jQuery/UI
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// AccordionChangeEvent.cs
// Script#/Libraries/jQuery/UI
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// AccordionChangestartEvent.cs
// Script#/Libraries/jQuery/UI
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// AccordionEvents.cs
// Script#/Libraries/jQuery/UI
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// Events raised by Accordion.
/// </summary>
/// <summary>
/// This event is triggered every time the accordion changes. If the accordion is animated, the event will be triggered upon completion of the animation; otherwise, it is triggered immediately.
/// </summary>
/// <summary>
/// This event is triggered every time the accordion starts to change.
/// </summary>
/// <summary>
/// This event is triggered when the accordion is created.
/// </summary>
// AccordionMethod.cs
// Script#/Libraries/jQuery/UI
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// Operations supported by Accordion.
/// </summary>
/// <summary>
/// Activate a content part of the Accordion programmatically. The index can be a zero-indexed number to match the position of the header to close or a Selector matching an element.
/// </summary>
/// <summary>
/// The <code>destroy()</code> method cleans up all common data, events, etc. and then delegates out to <code>_destroy()</code> for custom cleanup.
/// </summary>
/// <summary>
/// Recompute heights of the accordion contents when using the fillSpace option and the container height changed. For example, when the container is a resizable, this method should be called by its resize-event.
/// </summary>
// AccordionObject.cs
// Script#/Libraries/jQuery/UI
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// Convert a pair of headers and content panels into an accordion.
/// </summary>
/// <remarks>
/// <para>Make the selected elements Accordion widgets.</para><para>The markup of your accordion container needs pairs of headers and content panels:</para><c><div id="accordion"><h3><a href="#">First header</a></h3><div>First content</div><h3><a href="#">Second header</a></h3><div>Second content</div></div></c><para>If you use a different element for the header, specify the header-option with an appropriate selector, eg. header: 'a.header'. The content element must be always next to its header.</para><para>If you have links inside a accordion panel and use a-elements as headers, add a class to them and use that as the header, eg. header: 'a.header'.</para><para>Use activate(Number) to change the active panel programmatically.</para><para>This widget requires some functional CSS, otherwise it won't work. If you build a custom theme, use the widget's specific CSS file as a starting point.</para>
/// </remarks>
/// <summary>
/// Activate a content part of the Accordion programmatically. The index can be a zero-indexed number to match the position of the header to close or a Selector matching an element.
/// </summary>
/// <summary>
/// Recompute heights of the accordion contents when using the fillSpace option and the container height changed. For example, when the container is a resizable, this method should be called by its resize-event.
/// </summary>
// AccordionOption.cs
// Script#/Libraries/jQuery/UI
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// Options for use with Accordion.
/// </summary>
/// <summary>
/// The zero-based index of the panel that is active (open). A negative value select panels going backward from the last panel.        <para>When collapsible is set to true, a false value closes the accordion, otherwise nothing happens</para>
/// </summary>
/// <summary>
/// Choose your favorite animation, or disable them (set to false). In addition to the default, 'bounceslide' and all defined easing methods are supported ('bounceslide' requires UI Effects Core).
/// </summary>
/// <summary>
/// If set, the highest content part is used as height reference for all other parts. Provides more consistent animations.
/// </summary>
/// <summary>
/// If set, clears height and overflow styles after finishing animations. This enables accordions to work with dynamic content. Won't work together with autoHeight.
/// </summary>
/// <summary>
/// Whether all the sections can be closed at once. Allows collapsing the active section.
/// </summary>
/// <summary>
/// Disables the accordion if set to true.
/// </summary>
/// <summary>
/// The event on which to trigger the accordion.
/// </summary>
/// <summary>
/// If set, the accordion completely fills the height of the parent element. Overrides autoheight.
/// </summary>
/// <summary>
/// Selector for the header element.        <para>Must be a selector that applies to the accordion container element, via .find()</para><para>The default covers both ul/li accordions, as well as flat structures like dl/dt/dd</para>
/// </summary>
/// <summary>
/// Icons to use for headers, matching an icon defined by the jQuery UI CSS Framework. Set to false to have no icons displayed.        <ul><li>header (string, default: "ui-icon-triangle-1-e")</li><li>activeHeader (string, default: "ui-icon-triangle-1-s")</li></ul>
/// </summary>
/// <summary>
/// If set, looks for the anchor that matches location.href and activates it. Great for href-based state-saving. Use navigationFilter to implement your own matcher.
/// </summary>
/// <summary>
/// Overwrite the default location.href-matching with your own matcher.
/// </summary>
// AccordionOptions.cs
// Script#/Libraries/jQuery/UI
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// Options used to initialize or customize Accordion.
/// </summary>
/// <summary>
/// This event is triggered every time the accordion changes. If the accordion is animated, the event will be triggered upon completion of the animation; otherwise, it is triggered immediately.
/// </summary>
/// <summary>
/// This event is triggered every time the accordion starts to change.
/// </summary>
/// <summary>
/// This event is triggered when the accordion is created.
/// </summary>
/// <summary>
/// The zero-based index of the panel that is active (open). A negative value select panels going backward from the last panel.        <para>When collapsible is set to true, a false value closes the accordion, otherwise nothing happens</para>
/// </summary>
/// <summary>
/// Choose your favorite animation, or disable them (set to false). In addition to the default, 'bounceslide' and all defined easing methods are supported ('bounceslide' requires UI Effects Core).
/// </summary>
/// <summary>
/// If set, the highest content part is used as height reference for all other parts. Provides more consistent animations.
/// </summary>
/// <summary>
/// If set, clears height and overflow styles after finishing animations. This enables accordions to work with dynamic content. Won't work together with autoHeight.
/// </summary>
/// <summary>
/// Whether all the sections can be closed at once. Allows collapsing the active section.
/// </summary>
/// <summary>
/// Disables the accordion if set to true.
/// </summary>
/// <summary>
/// The event on which to trigger the accordion.
/// </summary>
/// <summary>
/// If set, the accordion completely fills the height of the parent element. Overrides autoheight.
/// </summary>
/// <summary>
/// Selector for the header element.        <para>Must be a selector that applies to the accordion container element, via .find()</para><para>The default covers both ul/li accordions, as well as flat structures like dl/dt/dd</para>
/// </summary>
/// <summary>
/// Icons to use for headers, matching an icon defined by the jQuery UI CSS Framework. Set to false to have no icons displayed.        <ul><li>header (string, default: "ui-icon-triangle-1-e")</li><li>activeHeader (string, default: "ui-icon-triangle-1-s")</li></ul>
/// </summary>
/// <summary>
/// If set, looks for the anchor that matches location.href and activates it. Great for href-based state-saving. Use navigationFilter to implement your own matcher.
/// </summary>
/// <summary>
/// Overwrite the default location.href-matching with your own matcher.
/// </summary>
// AutoCompleteChangeEvent.cs
// Script#/Libraries/jQuery/UI
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// AutoCompleteEvents.cs
// Script#/Libraries/jQuery/UI
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// Events raised by AutoComplete.
/// </summary>
/// <summary>
/// Triggered when the field is blurred, if the value has changed; ui.item refers to the selected item.
/// </summary>
/// <summary>
/// When the list is hidden - doesn't have to occur together with a change.
/// </summary>
/// <summary>
/// This event is triggered when the autocomplete is created.
/// </summary>
/// <summary>
/// Before focus is moved to an item (not selecting), ui.item refers to the focused item. The default action of focus is to replace the text field's value with the value of the focused item, though only if the focus event was triggered by a keyboard interaction.<para>Canceling this event prevents the value from being updated, but does not prevent the menu item from being focused.</para>
/// </summary>
/// <summary>
/// Triggered when the suggestion menu is opened or updated.
/// </summary>
/// <summary>
/// Triggered after a request (source-option) completes, before the menu is shown. Useful for local manipulation of suggestion data, where a custom source-option callback is not required.
/// </summary>
/// <summary>
/// Before a request (source-option) is started, after minLength and delay are met. Can be canceled, then no request will be started and no items suggested.
/// </summary>
/// <summary>
/// Triggered when an item is selected from the menu; ui.item refers to the selected item. The default action of select is to replace the text field's value with the value of the selected item.<para>Canceling this event prevents the value from being updated, but does not prevent the menu from closing.</para>
/// </summary>
// AutoCompleteFocusEvent.cs
// Script#/Libraries/jQuery/UI
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// AutoCompleteMethod.cs
// Script#/Libraries/jQuery/UI
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// Operations supported by AutoComplete.
/// </summary>
/// <summary>
/// Close the Autocomplete menu. Useful in combination with the search method, to close the open menu.
/// </summary>
/// <summary>
/// The <code>destroy()</code> method cleans up all common data, events, etc. and then delegates out to <code>_destroy()</code> for custom cleanup.
/// </summary>
/// <summary>
/// Triggers a search event, which, when data is available, then will display the suggestions; can be used by a selectbox-like button to open the suggestions when clicked. If no value argument is specified, the current input's value is used. Can be called with an empty string and minLength: 0 to display all items.
/// </summary>
// AutoCompleteObject.cs
// Script#/Libraries/jQuery/UI
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// Autocomplete, when added to an input field, enables users to quickly find and select from a pre-populated list of values as they type, leveraging searching and filtering.
/// </summary>
/// <remarks>
/// <para>By giving an Autocomplete field focus or entering something into it, the plugin starts searching for entries that match and displays a list of values to choose from. By entering more characters, the user can filter down the list to better matches.</para><para>This can be used to enter previous selected values, for example you could use Autocomplete for entering tags, to complete an address, you could enter a city name and get the zip code, or maybe enter email addresses from an address book.</para><para>You can pull data in from a local and/or a remote source: Local is good for small data sets (like an address book with 50 entries), remote is necessary for big data sets, like a database with hundreds or millions of entries to select from.</para><para>Autocomplete can be customized to work with various data sources, by just specifying the source option.</para><para>This widget requires some functional CSS, otherwise it won't work. If you build a custom theme, use the widget's specific CSS file as a starting point.</para>
/// </remarks>
/// <summary>
/// Close the Autocomplete menu. Useful in combination with the search method, to close the open menu.
/// </summary>
/// <summary>
/// Triggers a search event, which, when data is available, then will display the suggestions; can be used by a selectbox-like button to open the suggestions when clicked. If no value argument is specified, the current input's value is used. Can be called with an empty string and minLength: 0 to display all items.
/// </summary>
// AutoCompleteOption.cs
// Script#/Libraries/jQuery/UI
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// Options for use with AutoComplete.
/// </summary>
/// <summary>
/// Which element the menu should be appended to. Override this when the autocomplete is inside a <code>position:fixed</code> element. Otherwise the popup menu would still scroll with the page.
/// </summary>
/// <summary>
/// If set to true the first item will be automatically focused.
/// </summary>
/// <summary>
/// The delay in milliseconds the Autocomplete waits after a keystroke to activate itself. A zero-delay makes sense for local data (more responsive), but can produce a lot of load for remote data, while being less responsive.
/// </summary>
/// <summary>
/// Disables the autocomplete if set to true.
/// </summary>
/// <summary>
/// The minimum number of characters a user has to type before the Autocomplete activates. Zero is useful for local data with just a few items. Should be increased when there are a lot of items, where a single character would match a few thousand items.
/// </summary>
/// <summary>
/// Identifies the position of the Autocomplete widget in relation to the associated input element. The "of" option defaults to the input element, but you can specify another element to position against. You can refer to the [http://docs.jquery.com/UI/Position jQuery UI Position] utility for more details about the various options.
/// </summary>
/// <summary>
/// Defines the data to use, must be specified.<para>Independent of the variant you use, the label is always treated as text. If you want the label to be treated as html you can use [https://github.com/scottgonzalez/jquery-ui-extensions/blob/master/autocomplete/jquery.ui.autocomplete.html.js Scott González' html extension]. The demos all focus on different variations of the source-option - look for the one that matches your use case, and take a look at the code.</para>
/// </summary>
// AutoCompleteOptions.cs
// Script#/Libraries/jQuery/UI
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// Options used to initialize or customize AutoComplete.
/// </summary>
/// <summary>
/// Triggered when the field is blurred, if the value has changed; ui.item refers to the selected item.
/// </summary>
/// <summary>
/// When the list is hidden - doesn't have to occur together with a change.
/// </summary>
/// <summary>
/// This event is triggered when the autocomplete is created.
/// </summary>
/// <summary>
/// Before focus is moved to an item (not selecting), ui.item refers to the focused item. The default action of focus is to replace the text field's value with the value of the focused item, though only if the focus event was triggered by a keyboard interaction.<para>Canceling this event prevents the value from being updated, but does not prevent the menu item from being focused.</para>
/// </summary>
/// <summary>
/// Triggered when the suggestion menu is opened or updated.
/// </summary>
/// <summary>
/// Triggered after a request (source-option) completes, before the menu is shown. Useful for local manipulation of suggestion data, where a custom source-option callback is not required.
/// </summary>
/// <summary>
/// Before a request (source-option) is started, after minLength and delay are met. Can be canceled, then no request will be started and no items suggested.
/// </summary>
/// <summary>
/// Triggered when an item is selected from the menu; ui.item refers to the selected item. The default action of select is to replace the text field's value with the value of the selected item.<para>Canceling this event prevents the value from being updated, but does not prevent the menu from closing.</para>
/// </summary>
/// <summary>
/// Which element the menu should be appended to. Override this when the autocomplete is inside a <code>position:fixed</code> element. Otherwise the popup menu would still scroll with the page.
/// </summary>
/// <summary>
/// If set to true the first item will be automatically focused.
/// </summary>
/// <summary>
/// The delay in milliseconds the Autocomplete waits after a keystroke to activate itself. A zero-delay makes sense for local data (more responsive), but can produce a lot of load for remote data, while being less responsive.
/// </summary>
/// <summary>
/// Disables the autocomplete if set to true.
/// </summary>
/// <summary>
/// The minimum number of characters a user has to type before the Autocomplete activates. Zero is useful for local data with just a few items. Should be increased when there are a lot of items, where a single character would match a few thousand items.
/// </summary>
/// <summary>
/// Identifies the position of the Autocomplete widget in relation to the associated input element. The "of" option defaults to the input element, but you can specify another element to position against. You can refer to the [http://docs.jquery.com/UI/Position jQuery UI Position] utility for more details about the various options.
/// </summary>
/// <summary>
/// Defines the data to use, must be specified.<para>Independent of the variant you use, the label is always treated as text. If you want the label to be treated as html you can use [https://github.com/scottgonzalez/jquery-ui-extensions/blob/master/autocomplete/jquery.ui.autocomplete.html.js Scott González' html extension]. The demos all focus on different variations of the source-option - look for the one that matches your use case, and take a look at the code.</para>
/// </summary>
// AutoCompleteResponseEvent.cs
// Script#/Libraries/jQuery/UI
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// AutoCompleteSelectEvent.cs
// Script#/Libraries/jQuery/UI
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// ButtonEvents.cs
// Script#/Libraries/jQuery/UI
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// Events raised by Button.
/// </summary>
/// <summary>
/// This event is triggered when the button is created.
/// </summary>
// ButtonMethod.cs
// Script#/Libraries/jQuery/UI
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// Operations supported by Button.
/// </summary>
/// <summary>
/// The <code>destroy()</code> method cleans up all common data, events, etc. and then delegates out to <code>_destroy()</code> for custom cleanup.
/// </summary>
/// <summary>
/// Refreshes the visual state of the button. Useful for updating button state after the native element's checked or disabled state is changed programatically.
/// </summary>
// ButtonObject.cs
// Script#/Libraries/jQuery/UI
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// Themable button and buttonsets
/// </summary>
/// <remarks>
/// <para>Button enhances standard form elements like button, input of type submit or reset or anchors to themable buttons with appropiate mouseover and active styles.</para><para>In addition to basic push buttons, radio buttons and checkboxes (inputs of type radio and checkbox) can be converted to buttons: Their associated label is styled to appear as the button, while the underlying input is updated on click.</para><para>In order to group radio buttons, Button also provides an additional widget-method, called buttonset. Its used by selecting a container element (which contains the radio buttons) and calling buttonset(). Buttonset will also provide visual grouping, and therefore should be used whenever you have a group of buttons. It works by selecting all descendents and applying button() to them. You can enable and disable a buttonset, which will enable and disable all contained buttons. Destroying a buttonset also calls each button's destroy method.</para><para>When using an input of type button, submit or reset, support is limited to plain text labels with no icons.</para><para>This widget requires some functional CSS, otherwise it won't work. If you build a custom theme, use the widget's specific CSS file as a starting point.</para>
/// </remarks>
/// <summary>
/// Refreshes the visual state of the button. Useful for updating button state after the native element's checked or disabled state is changed programatically.
/// </summary>
// ButtonOption.cs
// Script#/Libraries/jQuery/UI
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// Options for use with Button.
/// </summary>
/// <summary>
/// Disables the button if set to true.
/// </summary>
/// <summary>
/// Icons to display, with or without text (see text option). The primary icon is displayed by default on the left of the label text, the secondary by default is on the right. Value for the primary and secondary properties must be a classname (String), eg. "ui-icon-gear". For using only one icon: icons: {primary:'ui-icon-locked'}. For using two icons: icons: {primary:'ui-icon-gear',secondary:'ui-icon-triangle-1-s'}
/// </summary>
/// <summary>
/// Text to show on the button. When not specified (null), the element's html content is used, or its value attribute when it's an input element of type submit or reset; or the html content of the associated label element if its an input of type radio or checkbox
/// </summary>
/// <summary>
/// Whether to show any text - when set to false (display no text), icons (see icons option) must be enabled, otherwise it'll be ignored.
/// </summary>
// ButtonOptions.cs
// Script#/Libraries/jQuery/UI
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// Options used to initialize or customize Button.
/// </summary>
/// <summary>
/// This event is triggered when the button is created.
/// </summary>
/// <summary>
/// Disables the button if set to true.
/// </summary>
/// <summary>
/// Icons to display, with or without text (see text option). The primary icon is displayed by default on the left of the label text, the secondary by default is on the right. Value for the primary and secondary properties must be a classname (String), eg. "ui-icon-gear". For using only one icon: icons: {primary:'ui-icon-locked'}. For using two icons: icons: {primary:'ui-icon-gear',secondary:'ui-icon-triangle-1-s'}
/// </summary>
/// <summary>
/// Text to show on the button. When not specified (null), the element's html content is used, or its value attribute when it's an input element of type submit or reset; or the html content of the associated label element if its an input of type radio or checkbox
/// </summary>
/// <summary>
/// Whether to show any text - when set to false (display no text), icons (see icons option) must be enabled, otherwise it'll be ignored.
/// </summary>
// ButtonSetEvents.cs
// Script#/Libraries/jQuery/UI
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// Events raised by ButtonSet.
/// </summary>
/// <summary>
/// This event is triggered when the buttonset is created.
/// </summary>
// ButtonSetMethod.cs
// Script#/Libraries/jQuery/UI
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// Operations supported by ButtonSet.
/// </summary>
/// <summary>
/// The <code>destroy()</code> method cleans up all common data, events, etc. and then delegates out to <code>_destroy()</code> for custom cleanup.
/// </summary>
/// <summary>
/// Refreshes the visual state of the button. Useful for updating button state after the native element's checked or disabled state is changed programatically.
/// </summary>
// ButtonSetObject.cs
// Script#/Libraries/jQuery/UI
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// Themable buttonset
/// </summary>
/// <remarks>
/// <para>In order to group radio buttons, Button also provides an additional widget-method, called buttonset. Its used by selecting a container element (which contains the radio buttons) and calling buttonset(). Buttonset will also provide visual grouping, and therefore should be used whenever you have a group of buttons. It works by selecting all descendents and applying button() to them. You can enable and disable a buttonset, which will enable and disable all contained buttons. Destroying a buttonset also calls each button's destroy method.</para><para>When using an input of type button, submit or reset, support is limited to plain text labels with no icons.</para><para>This widget requires some functional CSS, otherwise it won't work. If you build a custom theme, use the widget's specific CSS file as a starting point.</para>
/// </remarks>
/// <summary>
/// Refreshes the visual state of the button. Useful for updating button state after the native element's checked or disabled state is changed programatically.
/// </summary>
// ButtonSetOption.cs
// Script#/Libraries/jQuery/UI
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// Options for use with ButtonSet.
/// </summary>
/// <summary>
/// Disables the widget if set to true.
/// </summary>
// ButtonSetOptions.cs
// Script#/Libraries/jQuery/UI
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// Options used to initialize or customize ButtonSet.
/// </summary>
/// <summary>
/// This event is triggered when the button is created.
/// </summary>
// DatePickerEvents.cs
// Script#/Libraries/jQuery/UI
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// Events raised by DatePicker.
/// </summary>
/// <summary>
/// Can be a function that takes an input field and current datepicker instance and returns an options object to update the datepicker with. It is called just before the datepicker is displayed.
/// </summary>
/// <summary>
/// The function takes a date as a parameter and must return an array with [0] equal to true/false indicating whether or not this date is selectable, [1] equal to a CSS class name(s) or "" for the default presentation, and [2] an optional popup tooltip for this date. It is called for each day in the datepicker before it is displayed.
/// </summary>
/// <summary>
/// This event is triggered when the datepicker is created.
/// </summary>
/// <summary>
/// Allows you to define your own event when the datepicker moves to a new month and/or year. The function receives the selected year, month (1-12), and the datepicker instance as parameters. <code>this</code> refers to the associated input field.
/// </summary>
/// <summary>
/// Allows you to define your own event when the datepicker is closed, whether or not a date is selected. The function receives the selected date as text ("" if none) and the datepicker instance as parameters. <code>this</code> refers to the associated input field.
/// </summary>
/// <summary>
/// Allows you to define your own event when the datepicker is selected. The function receives the selected date as text and the datepicker instance as parameters. <code>this</code> refers to the associated input field.
/// </summary>
// DatePickerMethod.cs
// Script#/Libraries/jQuery/UI
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// Operations supported by DatePicker.
/// </summary>
/// <summary>
/// The <code>destroy()</code> method cleans up all common data, events, etc. and then delegates out to <code>_destroy()</code> for custom cleanup.
/// </summary>
/// <summary>
/// Function
/// </summary>
/// <summary>
/// Returns the current date for the datepicker or null if no date has been selected.
/// </summary>
/// <summary>
/// Determine whether a date picker has been disabled.
/// </summary>
/// <summary>
/// Redraw a date picker, after having made some external modifications.
/// </summary>
/// <summary>
/// Sets the current date for the datepicker. The new date may be a Date object or a string in the current [[UI/Datepicker#option-dateFormat|date format]] (e.g. '01/26/2009'), a number of days from today (e.g. +7) or a string of values and periods ('y' for years, 'm' for months, 'w' for weeks, 'd' for days, e.g. '+1m +7d'), or null to clear the selected date.
/// </summary>
// DatePickerObject.cs
// Script#/Libraries/jQuery/UI
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// Select a date from a popup or inline calendar
/// </summary>
/// <remarks>
/// <para>The jQuery UI Datepicker is a highly configurable plugin that adds datepicker functionality to your pages. You can customize the date format and language, restrict the selectable date ranges and add in buttons and other navigation options easily.</para><para>By default, the datepicker calendar opens in a small overlay onFocus and closes automatically onBlur or when a date is selected. For an inline calendar, simply attach the datepicker to a div or span.</para><para>You can use keyboard shortcuts to drive the datepicker:</para><ul><li>page up/down - previous/next month</li><li>ctrl+page up/down - previous/next year</li><li>ctrl+home - current month or open when closed</li><li>ctrl+left/right - previous/next day</li><li>ctrl+up/down - previous/next week</li><li>enter - accept the selected date</li><li>ctrl+end - close and erase the date</li><li>escape - close the datepicker without selection</li></ul><h3 id="utility-functions">Utility functions</h3><ul><li>$.datepicker.setDefaults( settings ) - Set settings for all datepicker instances.</li><li>$.datepicker.formatDate( format, date, settings ) - Format a date into a string value with a specified format.</li><li>$.datepicker.parseDate( format, value, settings )  - Extract a date from a string value with a specified format.</li><li>$.datepicker.iso8601Week( date ) - Determine the week of the year for a given date: 1 to 53.</li><li>$.datepicker.noWeekends - Set as beforeShowDay function to prevent selection of weekends.</li></ul><h3>Localization</h3><para>Datepicker provides support for localizing its content to cater for different languagesand date formats. Each localization is contained within its own file with thelanguage code appended to the name, e.g. <code>jquery.ui.datepicker-fr.js</code> for French.The desired localization file should be included after the main datepicker code. They add their settings to the setof available localizations and automatically apply them as defaults for all instances.</para><para>The <code>$.datepicker.regional</code> attribute holds an array of localizations,indexed by language code, with "" referring to the default (English). Each entry isan object with the following attributes: <code>closeText</code>, <code>prevText</code>,<code>nextText</code>, <code>currentText</code>, <code>monthNames</code>,<code>monthNamesShort</code>, <code>dayNames</code>, <code>dayNamesShort</code>,<code>dayNamesMin</code>, <code>weekHeader</code>, <code>dateFormat</code>,<code>firstDay</code>, <code>isRTL</code>, <code>showMonthAfterYear</code>,and <code>yearSuffix</code>.</para><para>You can restore the default localizations with:</para><code>$.datepicker.setDefaults($.datepicker.regional[""]);</code><para>And can then override an individual datepicker for a specific locale:</para><code>$(selector).datepicker($.datepicker.regional['fr']);</code><para>This widget requires some functional CSS, otherwise it won't work. If you build a custom theme, use the widget's specific CSS file as a starting point.</para>
/// </remarks>
/// <summary>
/// Function
/// </summary>
/// <summary>
/// Returns the current date for the datepicker or null if no date has been selected.
/// </summary>
/// <summary>
/// Determine whether a date picker has been disabled.
/// </summary>
/// <summary>
/// Redraw a date picker, after having made some external modifications.
/// </summary>
/// <summary>
/// Sets the current date for the datepicker. The new date may be a Date object or a string in the current [[UI/Datepicker#option-dateFormat|date format]] (e.g. '01/26/2009'), a number of days from today (e.g. +7) or a string of values and periods ('y' for years, 'm' for months, 'w' for weeks, 'd' for days, e.g. '+1m +7d'), or null to clear the selected date.
/// </summary>
// DatePickerOption.cs
// Script#/Libraries/jQuery/UI
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// Options for use with DatePicker.
/// </summary>
/// <summary>
/// The jQuery selector for another field that is to be updated with the selected date from the datepicker. Use the <code>[[UI/Datepicker#option-altFormat|altFormat]]</code> setting to change the format of the date within this field. Leave as blank for no alternate field.
/// </summary>
/// <summary>
/// The <code>[[UI/Datepicker#option-dateFormat|dateFormat]]</code> to be used for the <code>[[UI/Datepicker#option-altField|altField]]</code> option. This allows one date format to be shown to the user for selection purposes, while a different format is actually sent behind the scenes. For a full list of the possible formats see the [[UI/Datepicker/formatDate|formatDate]] function
/// </summary>
/// <summary>
/// The text to display after each date field, e.g. to show the required format.
/// </summary>
/// <summary>
/// Set to true to automatically resize the input field to accommodate dates in the current <code>[[UI/Datepicker#option-dateFormat|dateFormat]]</code>.
/// </summary>
/// <summary>
/// The URL for the popup button image. If set, <code>[[UI/Datepicker#option-buttonText|buttonText]]</code> becomes the ''alt'' value and is not directly displayed.
/// </summary>
/// <summary>
/// Set to true to place an image after the field to use as the trigger without it appearing on a button.
/// </summary>
/// <summary>
/// The text to display on the trigger button. Use in conjunction with <code>[[UI/Datepicker#option-showOn|showOn]]</code> equal to 'button' or 'both'.
/// </summary>
/// <summary>
/// myWeekCalc
/// </summary>
/// <summary>
/// Allows you to change the month by selecting from a drop-down list. You can enable this feature by setting the attribute to true.
/// </summary>
/// <summary>
/// Allows you to change the year by selecting from a drop-down list. You can enable this feature by setting the attribute to true. Use the <code>[[UI/Datepicker#option-yearRange|yearRange]]</code> option to control which years are made available for selection.
/// </summary>
/// <summary>
/// The text to display for the close link. This attribute is one of the regionalisation attributes. Use the <code>[[UI/Datepicker#option-showButtonPanel|showButtonPanel]]</code> to display this button.
/// </summary>
/// <summary>
/// When true entry in the input field is constrained to those characters allowed by the current <code>[[UI/Datepicker#option-dateFormat|dateFormat]]</code>.
/// </summary>
/// <summary>
/// The text to display for the current day link. This attribute is one of the regionalisation attributes. Use the <code>[[UI/Datepicker#option-showButtonPanel|showButtonPanel]]</code> to display this button.
/// </summary>
/// <summary>
/// The format for parsed and displayed dates. This attribute is one of the regionalisation attributes. For a full list of the possible formats see the <code>[[UI/Datepicker/formatDate|formatDate]]</code> function.
/// </summary>
/// <summary>
/// The list of long day names, starting from Sunday, for use as requested via the <code>[[UI/Datepicker#option-dateFormat|dateFormat]]</code> setting. They also appear as popup hints when hovering over the corresponding column headings. This attribute is one of the regionalisation attributes.
/// </summary>
/// <summary>
/// The list of minimised day names, starting from Sunday, for use as column headers within the datepicker. This attribute is one of the regionalisation attributes.
/// </summary>
/// <summary>
/// The list of abbreviated day names, starting from Sunday, for use as requested via the <code>[[UI/Datepicker#option-dateFormat|dateFormat]]</code> setting. This attribute is one of the regionalisation attributes.
/// </summary>
/// <summary>
/// Set the date to highlight on first opening if the field is blank. Specify either an actual date via a Date object or as a string in the current <code>[[UI/Datepicker#option-dateFormat|dateFormat]]</code>, or a number of days from today (e.g. +7) or a string of values and periods ('y' for years, 'm' for months, 'w' for weeks, 'd' for days, e.g. '+1m +7d'), or null for today.
/// </summary>
/// <summary>
/// Disables the widget if set to true.
/// </summary>
/// <summary>
/// Control the speed at which the datepicker appears, it may be a time in milliseconds or a string representing one of the three predefined speeds ("slow", "normal", "fast").
/// </summary>
/// <summary>
/// Set the first day of the week: Sunday is 0, Monday is 1, ... This attribute is one of the regionalisation attributes.
/// </summary>
/// <summary>
/// When true the current day link moves to the currently selected date instead of today.
/// </summary>
/// <summary>
/// Normally the previous and next links are disabled when not applicable (see <code>[[UI/Datepicker#option-minDate|minDate]]</code>/<code>[[UI/Datepicker#option-maxDate|maxDate]]</code>). You can hide them altogether by setting this attribute to true.
/// </summary>
/// <summary>
/// True if the current language is drawn from right to left. This attribute is one of the regionalisation attributes.
/// </summary>
/// <summary>
/// Set a maximum selectable date via a Date object or as a string in the current <code>[[UI/Datepicker#option-dateFormat|dateFormat]]</code>, or a number of days from today (e.g. +7) or a string of values and periods ('y' for years, 'm' for months, 'w' for weeks, 'd' for days, e.g. '+1m +1w'), or null for no limit.
/// </summary>
/// <summary>
/// Set a minimum selectable date via a Date object or as a string in the current <code>[[UI/Datepicker#option-dateFormat|dateFormat]]</code>, or a number of days from today (e.g. +7) or a string of values and periods ('y' for years, 'm' for months, 'w' for weeks, 'd' for days, e.g. '-1y -1m'), or null for no limit.
/// </summary>
/// <summary>
/// The list of full month names, for use as requested via the <code>[[UI/Datepicker#option-dateFormat|dateFormat]]</code> setting. This attribute is one of the regionalisation attributes.
/// </summary>
/// <summary>
/// The list of abbreviated month names, as used in the month header on each datepicker and as requested via the <code>[[UI/Datepicker#option-dateFormat|dateFormat]]</code> setting. This attribute is one of the regionalisation attributes.
/// </summary>
/// <summary>
/// When true the <code>[[UI/Datepicker/formatDate|formatDate]]</code> function is applied to the <code>[[UI/Datepicker#option-prevText|prevText]]</code>, <code>[[UI/Datepicker#option-nextText|nextText]]</code>, and <code>[[UI/Datepicker#option-currentText|currentText]]</code> values before display, allowing them to display the target month names for example.
/// </summary>
/// <summary>
/// The text to display for the next month link. This attribute is one of the regionalisation attributes. With the standard ThemeRoller styling, this value is replaced by an icon.
/// </summary>
/// <summary>
/// Set how many months to show at once. The value can be a straight integer, or can be a two-element array to define the number of rows and columns to display.
/// </summary>
/// <summary>
/// The text to display for the previous month link. This attribute is one of the regionalisation attributes. With the standard ThemeRoller styling, this value is replaced by an icon.
/// </summary>
/// <summary>
/// When true days in other months shown before or after the current month are selectable. This only applies if <code>[[UI/Datepicker#option-showOtherMonths|showOtherMonths]]</code> is also true.
/// </summary>
/// <summary>
/// Set the cutoff year for determining the century for a date (used in conjunction with <code>[[UI/Datepicker#option-dateFormat|dateFormat]]</code> 'y'). If a numeric value (0-99) is provided then this value is used directly. If a string value is provided then it is converted to a number and added to the current year. Once the cutoff year is calculated, any dates entered with a year value less than or equal to it are considered to be in the current century, while those greater than it are deemed to be in the previous century.
/// </summary>
/// <summary>
/// Set the name of the animation used to show/hide the datepicker. Use 'show' (the default), 'slideDown', 'fadeIn', any of the show/hide [http://docs.jquery.com/UI/Effects jQuery UI effects], or "" for no animation.
/// </summary>
/// <summary>
/// Whether to show the button panel.
/// </summary>
/// <summary>
/// Specify where in a [[UI/Datepicker#option-numberOfMonths|multi-month]] display the current month shows, starting from 0 at the top/left.
/// </summary>
/// <summary>
/// Whether to show the month after the year in the header. This attribute is one of the regionalisation attributes.
/// </summary>
/// <summary>
/// Have the datepicker appear automatically when the field receives focus ("focus"), appear only when a button is clicked ("button"), or appear when either event taks place ("both").
/// </summary>
/// <summary>
/// If using one of the jQuery UI effects for <code>[[UI/Datepicker#option-showAnim|showAnim]]</code>, you can provide additional settings for that animation via this option.
/// </summary>
/// <summary>
/// Display dates in other months (non-selectable) at the start or end of the current month. To make these days selectable use <code>[[UI/Datepicker#option-selectOtherMonths|selectOtherMonths]]</code>.
/// </summary>
/// <summary>
/// When true a column is added to show the week of the year. The <code>[[UI/Datepicker#option-calculateWeek|calculateWeek]]</code> option determines how the week of the year is calculated. You may also want to change the <code>[[UI/Datepicker#option-firstDay|firstDay]]</code> option.
/// </summary>
/// <summary>
/// Set how many months to move when clicking the Previous/Next links.
/// </summary>
/// <summary>
/// The text to display for the week of the year column heading. This attribute is one of the regionalisation attributes. Use <code>[[UI/Datepicker#option-showWeek|showWeek]]</code> to display this column.
/// </summary>
/// <summary>
/// Control the range of years displayed in the year drop-down: either relative to today's year (-nn:+nn), relative to the currently selected year (c-nn:c+nn), absolute (nnnn:nnnn), or combinations of these formats (nnnn:-nn). Note that this option only affects what appears in the drop-down, to restrict which dates may be selected use the <code>[[UI/Datepicker#option-minDate|minDate]]</code> and/or <code>[[UI/Datepicker#option-maxDate|maxDate]]</code> options.
/// </summary>
/// <summary>
/// Additional text to display after the year in the month headers. This attribute is one of the regionalisation attributes.
/// </summary>
// DatePickerOptions.cs
// Script#/Libraries/jQuery/UI
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// Options used to initialize or customize DatePicker.
/// </summary>
/// <summary>
/// The jQuery selector for another field that is to be updated with the selected date from the datepicker. Use the <code>[[UI/Datepicker#option-altFormat|altFormat]]</code> setting to change the format of the date within this field. Leave as blank for no alternate field.
/// </summary>
/// <summary>
/// The <code>[[UI/Datepicker#option-dateFormat|dateFormat]]</code> to be used for the <code>[[UI/Datepicker#option-altField|altField]]</code> option. This allows one date format to be shown to the user for selection purposes, while a different format is actually sent behind the scenes. For a full list of the possible formats see the [[UI/Datepicker/formatDate|formatDate]] function
/// </summary>
/// <summary>
/// The text to display after each date field, e.g. to show the required format.
/// </summary>
/// <summary>
/// Set to true to automatically resize the input field to accommodate dates in the current <code>[[UI/Datepicker#option-dateFormat|dateFormat]]</code>.
/// </summary>
/// <summary>
/// The URL for the popup button image. If set, <code>[[UI/Datepicker#option-buttonText|buttonText]]</code> becomes the ''alt'' value and is not directly displayed.
/// </summary>
/// <summary>
/// Set to true to place an image after the field to use as the trigger without it appearing on a button.
/// </summary>
/// <summary>
/// The text to display on the trigger button. Use in conjunction with <code>[[UI/Datepicker#option-showOn|showOn]]</code> equal to 'button' or 'both'.
/// </summary>
/// <summary>
/// myWeekCalc
/// </summary>
/// <summary>
/// Allows you to change the month by selecting from a drop-down list. You can enable this feature by setting the attribute to true.
/// </summary>
/// <summary>
/// Allows you to change the year by selecting from a drop-down list. You can enable this feature by setting the attribute to true. Use the <code>[[UI/Datepicker#option-yearRange|yearRange]]</code> option to control which years are made available for selection.
/// </summary>
/// <summary>
/// The text to display for the close link. This attribute is one of the regionalisation attributes. Use the <code>[[UI/Datepicker#option-showButtonPanel|showButtonPanel]]</code> to display this button.
/// </summary>
/// <summary>
/// When true entry in the input field is constrained to those characters allowed by the current <code>[[UI/Datepicker#option-dateFormat|dateFormat]]</code>.
/// </summary>
/// <summary>
/// The text to display for the current day link. This attribute is one of the regionalisation attributes. Use the <code>[[UI/Datepicker#option-showButtonPanel|showButtonPanel]]</code> to display this button.
/// </summary>
/// <summary>
/// The format for parsed and displayed dates. This attribute is one of the regionalisation attributes. For a full list of the possible formats see the <code>[[UI/Datepicker/formatDate|formatDate]]</code> function.
/// </summary>
/// <summary>
/// The list of long day names, starting from Sunday, for use as requested via the <code>[[UI/Datepicker#option-dateFormat|dateFormat]]</code> setting. They also appear as popup hints when hovering over the corresponding column headings. This attribute is one of the regionalisation attributes.
/// </summary>
/// <summary>
/// The list of minimised day names, starting from Sunday, for use as column headers within the datepicker. This attribute is one of the regionalisation attributes.
/// </summary>
/// <summary>
/// The list of abbreviated day names, starting from Sunday, for use as requested via the <code>[[UI/Datepicker#option-dateFormat|dateFormat]]</code> setting. This attribute is one of the regionalisation attributes.
/// </summary>
/// <summary>
/// Set the date to highlight on first opening if the field is blank. Specify either an actual date via a Date object or as a string in the current <code>[[UI/Datepicker#option-dateFormat|dateFormat]]</code>, or a number of days from today (e.g. +7) or a string of values and periods ('y' for years, 'm' for months, 'w' for weeks, 'd' for days, e.g. '+1m +7d'), or null for today.
/// </summary>
/// <summary>
/// Control the speed at which the datepicker appears, it may be a time in milliseconds or a string representing one of the three predefined speeds ("slow", "normal", "fast").
/// </summary>
/// <summary>
/// Set the first day of the week: Sunday is 0, Monday is 1, ... This attribute is one of the regionalisation attributes.
/// </summary>
/// <summary>
/// When true the current day link moves to the currently selected date instead of today.
/// </summary>
/// <summary>
/// Normally the previous and next links are disabled when not applicable (see <code>[[UI/Datepicker#option-minDate|minDate]]</code>/<code>[[UI/Datepicker#option-maxDate|maxDate]]</code>). You can hide them altogether by setting this attribute to true.
/// </summary>
/// <summary>
/// True if the current language is drawn from right to left. This attribute is one of the regionalisation attributes.
/// </summary>
/// <summary>
/// Set a maximum selectable date via a Date object or as a string in the current <code>[[UI/Datepicker#option-dateFormat|dateFormat]]</code>, or a number of days from today (e.g. +7) or a string of values and periods ('y' for years, 'm' for months, 'w' for weeks, 'd' for days, e.g. '+1m +1w'), or null for no limit.
/// </summary>
/// <summary>
/// Set a minimum selectable date via a Date object or as a string in the current <code>[[UI/Datepicker#option-dateFormat|dateFormat]]</code>, or a number of days from today (e.g. +7) or a string of values and periods ('y' for years, 'm' for months, 'w' for weeks, 'd' for days, e.g. '-1y -1m'), or null for no limit.
/// </summary>
/// <summary>
/// The list of full month names, for use as requested via the <code>[[UI/Datepicker#option-dateFormat|dateFormat]]</code> setting. This attribute is one of the regionalisation attributes.
/// </summary>
/// <summary>
/// The list of abbreviated month names, as used in the month header on each datepicker and as requested via the <code>[[UI/Datepicker#option-dateFormat|dateFormat]]</code> setting. This attribute is one of the regionalisation attributes.
/// </summary>
/// <summary>
/// When true the <code>[[UI/Datepicker/formatDate|formatDate]]</code> function is applied to the <code>[[UI/Datepicker#option-prevText|prevText]]</code>, <code>[[UI/Datepicker#option-nextText|nextText]]</code>, and <code>[[UI/Datepicker#option-currentText|currentText]]</code> values before display, allowing them to display the target month names for example.
/// </summary>
/// <summary>
/// The text to display for the next month link. This attribute is one of the regionalisation attributes. With the standard ThemeRoller styling, this value is replaced by an icon.
/// </summary>
/// <summary>
/// Set how many months to show at once. The value can be a straight integer, or can be a two-element array to define the number of rows and columns to display.
/// </summary>
/// <summary>
/// The text to display for the previous month link. This attribute is one of the regionalisation attributes. With the standard ThemeRoller styling, this value is replaced by an icon.
/// </summary>
/// <summary>
/// When true days in other months shown before or after the current month are selectable. This only applies if <code>[[UI/Datepicker#option-showOtherMonths|showOtherMonths]]</code> is also true.
/// </summary>
/// <summary>
/// Set the cutoff year for determining the century for a date (used in conjunction with <code>[[UI/Datepicker#option-dateFormat|dateFormat]]</code> 'y'). If a numeric value (0-99) is provided then this value is used directly. If a string value is provided then it is converted to a number and added to the current year. Once the cutoff year is calculated, any dates entered with a year value less than or equal to it are considered to be in the current century, while those greater than it are deemed to be in the previous century.
/// </summary>
/// <summary>
/// Set the name of the animation used to show/hide the datepicker. Use 'show' (the default), 'slideDown', 'fadeIn', any of the show/hide [http://docs.jquery.com/UI/Effects jQuery UI effects], or "" for no animation.
/// </summary>
/// <summary>
/// Whether to show the button panel.
/// </summary>
/// <summary>
/// Specify where in a [[UI/Datepicker#option-numberOfMonths|multi-month]] display the current month shows, starting from 0 at the top/left.
/// </summary>
/// <summary>
/// Whether to show the month after the year in the header. This attribute is one of the regionalisation attributes.
/// </summary>
/// <summary>
/// Have the datepicker appear automatically when the field receives focus ("focus"), appear only when a button is clicked ("button"), or appear when either event taks place ("both").
/// </summary>
/// <summary>
/// If using one of the jQuery UI effects for <code>[[UI/Datepicker#option-showAnim|showAnim]]</code>, you can provide additional settings for that animation via this option.
/// </summary>
/// <summary>
/// Display dates in other months (non-selectable) at the start or end of the current month. To make these days selectable use <code>[[UI/Datepicker#option-selectOtherMonths|selectOtherMonths]]</code>.
/// </summary>
/// <summary>
/// When true a column is added to show the week of the year. The <code>[[UI/Datepicker#option-calculateWeek|calculateWeek]]</code> option determines how the week of the year is calculated. You may also want to change the <code>[[UI/Datepicker#option-firstDay|firstDay]]</code> option.
/// </summary>
/// <summary>
/// Set how many months to move when clicking the Previous/Next links.
/// </summary>
/// <summary>
/// The text to display for the week of the year column heading. This attribute is one of the regionalisation attributes. Use <code>[[UI/Datepicker#option-showWeek|showWeek]]</code> to display this column.
/// </summary>
/// <summary>
/// Control the range of years displayed in the year drop-down: either relative to today's year (-nn:+nn), relative to the currently selected year (c-nn:c+nn), absolute (nnnn:nnnn), or combinations of these formats (nnnn:-nn). Note that this option only affects what appears in the drop-down, to restrict which dates may be selected use the <code>[[UI/Datepicker#option-minDate|minDate]]</code> and/or <code>[[UI/Datepicker#option-maxDate|maxDate]]</code> options.
/// </summary>
/// <summary>
/// Additional text to display after the year in the month headers. This attribute is one of the regionalisation attributes.
/// </summary>
// DialogDragEvent.cs
// Script#/Libraries/jQuery/UI
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// DialogDragStartEvent.cs
// Script#/Libraries/jQuery/UI
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// DialogDragStopEvent.cs
// Script#/Libraries/jQuery/UI
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// DialogEvents.cs
// Script#/Libraries/jQuery/UI
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// Events raised by Dialog.
/// </summary>
/// <summary>
/// This event is triggered when a dialog attempts to close. If the beforeClose event handler (callback function) returns false, the close will be prevented.
/// </summary>
/// <summary>
/// This event is triggered when the dialog is closed.
/// </summary>
/// <summary>
/// This event is triggered when the dialog is created.
/// </summary>
/// <summary>
/// This event is triggered when the dialog is dragged.
/// </summary>
/// <summary>
/// This event is triggered at the beginning of the dialog being dragged.
/// </summary>
/// <summary>
/// This event is triggered after the dialog has been dragged.
/// </summary>
/// <summary>
/// This event is triggered when the dialog gains focus.
/// </summary>
/// <summary>
/// This event is triggered when dialog is opened.
/// </summary>
/// <summary>
/// This event is triggered when the dialog is resized.
/// </summary>
/// <summary>
/// This event is triggered at the beginning of the dialog being resized.
/// </summary>
/// <summary>
/// This event is triggered after the dialog has been resized.
/// </summary>
// DialogMethod.cs
// Script#/Libraries/jQuery/UI
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// Operations supported by Dialog.
/// </summary>
/// <summary>
/// Close the dialog.
/// </summary>
/// <summary>
/// The <code>destroy()</code> method cleans up all common data, events, etc. and then delegates out to <code>_destroy()</code> for custom cleanup.
/// </summary>
/// <summary>
/// Returns true if the dialog is currently open.
/// </summary>
/// <summary>
/// Move the dialog to the top of the dialogs stack.
/// </summary>
/// <summary>
/// Open the dialog.
/// </summary>
// DialogObject.cs
// Script#/Libraries/jQuery/UI
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// Open content in an interactive overlay
/// </summary>
/// <remarks>
/// <para>A dialog is a floating window that contains a title bar and a content area. The dialog window can be moved, resized and closed with the 'x' icon by default.</para><para>If the content length exceeds the maximum height, a scrollbar will automatically appear.</para><para>A bottom button bar and semi-transparent modal overlay layer are common options that can be added.</para><para>This widget requires some functional CSS, otherwise it won't work. If you build a custom theme, use the widget's specific CSS file as a starting point.</para>
/// </remarks>
/// <summary>
/// Close the dialog.
/// </summary>
/// <summary>
/// Returns true if the dialog is currently open.
/// </summary>
/// <summary>
/// Move the dialog to the top of the dialogs stack.
/// </summary>
/// <summary>
/// Open the dialog.
/// </summary>
// DialogOption.cs
// Script#/Libraries/jQuery/UI
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// Options for use with Dialog.
/// </summary>
/// <summary>
/// When ''autoOpen'' is ''true'' the dialog will open automatically when ''dialog'' is called. If ''false'' it will stay hidden until ''.dialog("open")'' is called on it.
/// </summary>
/// <summary>
/// Specifies which buttons should be displayed on the dialog. Each element of the array must be an Object defining the properties to set on the button.
/// </summary>
/// <summary>
/// Specifies whether the dialog should close when it has focus and the user presses the esacpe (ESC) key.
/// </summary>
/// <summary>
/// Specifies the text for the close button. Note that the close text is visibly hidden when using a standard theme.
/// </summary>
/// <summary>
/// The specified class name(s) will be added to the dialog, for additional theming.
/// </summary>
/// <summary>
/// Disables the dialog if set to true.
/// </summary>
/// <summary>
/// If set to true, the dialog will be draggable by the titlebar.
/// </summary>
/// <summary>
/// The height of the dialog, in pixels. Specifying 'auto' is also supported to make the dialog adjust based on its content.
/// </summary>
/// <summary>
/// The effect to be used when the dialog is closed.
/// </summary>
/// <summary>
/// The maximum height to which the dialog can be resized, in pixels.
/// </summary>
/// <summary>
/// The maximum width to which the dialog can be resized, in pixels.
/// </summary>
/// <summary>
/// The minimum height to which the dialog can be resized, in pixels.
/// </summary>
/// <summary>
/// The minimum width to which the dialog can be resized, in pixels.
/// </summary>
/// <summary>
/// If set to true, the dialog will have modal behavior; other items on the page will be disabled (i.e. cannot be interacted with). Modal dialogs create an overlay below the dialog but above other page elements.
/// </summary>
/// <summary>
/// Specifies where the dialog should be displayed. Possible values: <br />1) a single string representing position within viewport: 'center', 'left', 'right', 'top', 'bottom'. <br />2) an array containing an <em>x,y</em> coordinate pair in pixel offset from left, top corner of viewport (e.g. [350,100]) <br />3) an array containing <em>x,y</em> position string values (e.g. ['right','top'] for top right corner).
/// </summary>
/// <summary>
/// If set to true, the dialog will be resizable.
/// </summary>
/// <summary>
/// The effect to be used when the dialog is opened.
/// </summary>
/// <summary>
/// Specifies whether the dialog will stack on top of other dialogs. This will cause the dialog to move to the front of other dialogs when it gains focus.
/// </summary>
/// <summary>
/// Specifies the title of the dialog. Any valid HTML may be set as the title. The title can also be specified by the title attribute on the dialog source element.
/// </summary>
/// <summary>
/// The width of the dialog, in pixels.
/// </summary>
/// <summary>
/// The starting z-index for the dialog.
/// </summary>
// DialogOptions.cs
// Script#/Libraries/jQuery/UI
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// Options used to initialize or customize Dialog.
/// </summary>
/// <summary>
/// This event is triggered when a dialog attempts to close. If the beforeClose event handler (callback function) returns false, the close will be prevented.
/// </summary>
/// <summary>
/// This event is triggered when the dialog is closed.
/// </summary>
/// <summary>
/// This event is triggered when the dialog is created.
/// </summary>
/// <summary>
/// This event is triggered when the dialog is dragged.
/// </summary>
/// <summary>
/// This event is triggered at the beginning of the dialog being dragged.
/// </summary>
/// <summary>
/// This event is triggered after the dialog has been dragged.
/// </summary>
/// <summary>
/// This event is triggered when the dialog gains focus.
/// </summary>
/// <summary>
/// This event is triggered when dialog is opened.
/// </summary>
/// <summary>
/// This event is triggered when the dialog is resized.
/// </summary>
/// <summary>
/// This event is triggered at the beginning of the dialog being resized.
/// </summary>
/// <summary>
/// This event is triggered after the dialog has been resized.
/// </summary>
/// <summary>
/// When ''autoOpen'' is ''true'' the dialog will open automatically when ''dialog'' is called. If ''false'' it will stay hidden until ''.dialog("open")'' is called on it.
/// </summary>
/// <summary>
/// Specifies which buttons should be displayed on the dialog. Each element of the array must be an Object defining the properties to set on the button.
/// </summary>
/// <summary>
/// Specifies whether the dialog should close when it has focus and the user presses the esacpe (ESC) key.
/// </summary>
/// <summary>
/// Specifies the text for the close button. Note that the close text is visibly hidden when using a standard theme.
/// </summary>
/// <summary>
/// The specified class name(s) will be added to the dialog, for additional theming.
/// </summary>
/// <summary>
/// Disables the dialog if set to true.
/// </summary>
/// <summary>
/// If set to true, the dialog will be draggable by the titlebar.
/// </summary>
/// <summary>
/// The height of the dialog, in pixels. Specifying 'auto' is also supported to make the dialog adjust based on its content.
/// </summary>
/// <summary>
/// The effect to be used when the dialog is closed.
/// </summary>
/// <summary>
/// The maximum height to which the dialog can be resized, in pixels.
/// </summary>
/// <summary>
/// The maximum width to which the dialog can be resized, in pixels.
/// </summary>
/// <summary>
/// The minimum height to which the dialog can be resized, in pixels.
/// </summary>
/// <summary>
/// The minimum width to which the dialog can be resized, in pixels.
/// </summary>
/// <summary>
/// If set to true, the dialog will have modal behavior; other items on the page will be disabled (i.e. cannot be interacted with). Modal dialogs create an overlay below the dialog but above other page elements.
/// </summary>
/// <summary>
/// Specifies where the dialog should be displayed. Possible values: <br />1) a single string representing position within viewport: 'center', 'left', 'right', 'top', 'bottom'. <br />2) an array containing an <em>x,y</em> coordinate pair in pixel offset from left, top corner of viewport (e.g. [350,100]) <br />3) an array containing <em>x,y</em> position string values (e.g. ['right','top'] for top right corner).
/// </summary>
/// <summary>
/// If set to true, the dialog will be resizable.
/// </summary>
/// <summary>
/// The effect to be used when the dialog is opened.
/// </summary>
/// <summary>
/// Specifies whether the dialog will stack on top of other dialogs. This will cause the dialog to move to the front of other dialogs when it gains focus.
/// </summary>
/// <summary>
/// Specifies the title of the dialog. Any valid HTML may be set as the title. The title can also be specified by the title attribute on the dialog source element.
/// </summary>
/// <summary>
/// The width of the dialog, in pixels.
/// </summary>
/// <summary>
/// The starting z-index for the dialog.
/// </summary>
// DialogResizeEvent.cs
// Script#/Libraries/jQuery/UI
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// DialogResizeStartEvent.cs
// Script#/Libraries/jQuery/UI
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// DialogResizeStopEvent.cs
// Script#/Libraries/jQuery/UI
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// ProgressBarEvents.cs
// Script#/Libraries/jQuery/UI
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// Events raised by ProgressBar.
/// </summary>
/// <summary>
/// This event is triggered when the value of the progressbar changes.
/// </summary>
/// <summary>
/// This event is triggered when the value of the progressbar reaches the maximum value of 100.
/// </summary>
/// <summary>
/// This event is triggered when the progressbar is created.
/// </summary>
// ProgressBarMethod.cs
// Script#/Libraries/jQuery/UI
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// Operations supported by ProgressBar.
/// </summary>
/// <summary>
/// The <code>destroy()</code> method cleans up all common data, events, etc. and then delegates out to <code>_destroy()</code> for custom cleanup.
/// </summary>
/// <summary>
/// This method gets or sets the current value of the progressbar.
/// </summary>
// ProgressBarObject.cs
// Script#/Libraries/jQuery/UI
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// Display status of a determinate process
/// </summary>
/// <remarks>
/// <para>The progress bar is designed to simply display the current percent complete for a process. The bar is coded to be flexibly sized through CSS and will scale to fit inside it's parent container by default.</para><para>This is a determinate progress bar, meaning that it should only be used in situations where the system can accurately update the current status complete. A determinate progress bar should never fill from left to right, then loop back to empty for a single process -- if the actual percent complete status cannot be calculated, an indeterminate progress bar or spinner animation is a better way to provide user feedback.</para><para>This widget requires some functional CSS, otherwise it won't work. If you build a custom theme, use the widget's specific CSS file as a starting point.</para>
/// </remarks>
/// <summary>
/// This method gets or sets the current value of the progressbar.
/// </summary>
// ProgressBarOption.cs
// Script#/Libraries/jQuery/UI
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// Options for use with ProgressBar.
/// </summary>
/// <summary>
/// Disables the progressbar if set to true.
/// </summary>
/// <summary>
/// The value of the progressbar.
/// </summary>
// ProgressBarOptions.cs
// Script#/Libraries/jQuery/UI
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// Options used to initialize or customize ProgressBar.
/// </summary>
/// <summary>
/// This event is triggered when the value of the progressbar changes.
/// </summary>
/// <summary>
/// This event is triggered when the value of the progressbar reaches the maximum value of 100.
/// </summary>
/// <summary>
/// This event is triggered when the progressbar is created.
/// </summary>
/// <summary>
/// Disables the progressbar if set to true.
/// </summary>
/// <summary>
/// The value of the progressbar.
/// </summary>
// SlideChangeEvent.cs
// Script#/Libraries/jQuery/UI
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// SlideEvent.cs
// Script#/Libraries/jQuery/UI
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// SliderEvents.cs
// Script#/Libraries/jQuery/UI
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// Events raised by Slider.
/// </summary>
/// <summary>
/// This event is triggered on slide stop, or if the value is changed programmatically (by the <code>value</code> method).  Takes arguments event and ui.  Use event.originalEvent to detect whether the value changed by mouse, keyboard, or programmatically. Use ui.value (single-handled sliders) to obtain the value of the current handle, $(this).slider('values', index) to get another handle's value.
/// </summary>
/// <summary>
/// This event is triggered when the slider is created.
/// </summary>
/// <summary>
/// This event is triggered on every mouse move during slide. Use ui.value (single-handled sliders) to obtain the value of the current handle, $(..).slider('value', index) to get another handles' value.Return false in order to prevent a slide, based on ui.value.
/// </summary>
/// <summary>
/// This event is triggered when the user starts sliding.
/// </summary>
/// <summary>
/// This event is triggered when the user stops sliding.
/// </summary>
// SliderMethod.cs
// Script#/Libraries/jQuery/UI
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// Operations supported by Slider.
/// </summary>
/// <summary>
/// The <code>destroy()</code> method cleans up all common data, events, etc. and then delegates out to <code>_destroy()</code> for custom cleanup.
/// </summary>
/// <summary>
/// Gets or sets the value of the slider. For single handle sliders.
/// </summary>
/// <summary>
/// Number
/// </summary>
// SliderObject.cs
// Script#/Libraries/jQuery/UI
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// Drag a handle to select a numeric value
/// </summary>
/// <remarks>
/// <para>The jQuery UI Slider plugin makes selected elements into sliders. There are various options such as multiple handles, and ranges. The handle can be moved with the mouse or the arrow keys.</para>The start, slide, and stop callbacks receive two arguments: The original browser event and a prepared ui object, view below for a documentation of this object (if you name your second argument 'ui'):The slider widget will create handle elements with the class 'ui-slider-handle' on initialization. You can specify custom handle elements by creating and appending the elements and adding the 'ui-slider-handle' class before init. It will only create the number of handles needed to match the length of value/values. For example, if you specify 'values: [1, 5, 18]' and create one custom handle, the plugin will create the other two.<ul><li><b>ui.handle</b>: DOMElement - the current focused handle</li><li><b>ui.value</b>: Integer - the current handle's value</li></ul><para>This widget requires some functional CSS, otherwise it won't work. If you build a custom theme, use the widget's specific CSS file as a starting point.</para>
/// </remarks>
/// <summary>
/// Gets or sets the value of the slider. For single handle sliders.
/// </summary>
/// <summary>
/// Number
/// </summary>
// SliderOption.cs
// Script#/Libraries/jQuery/UI
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// Options for use with Slider.
/// </summary>
/// <summary>
/// Whether to slide handle smoothly when user click outside handle on the bar. Will also accept a string representing one of the three predefined speeds ("slow", "normal", or "fast") or the number of milliseconds to run the animation (e.g. 1000).
/// </summary>
/// <summary>
/// Disables the slider if set to true.
/// </summary>
/// <summary>
/// The maximum value of the slider.
/// </summary>
/// <summary>
/// The minimum value of the slider.
/// </summary>
/// <summary>
/// This option determines whether the slider has the min at the left, the max at the right or the min at the bottom, the max at the top. Possible values: 'horizontal', 'vertical'.
/// </summary>
/// <summary>
/// If set to true, the slider will detect if you have two handles and create a stylable range element between these two. Two other possible values are 'min' and 'max'. A min range goes from the slider min to one handle. A max range goes from one handle to the slider max.
/// </summary>
/// <summary>
/// Determines the size or amount of each interval or step the slider takes between min and max. The full specified value range of the slider (max - min) needs to be evenly divisible by the step.
/// </summary>
/// <summary>
/// Determines the value of the slider, if there's only one handle. If there is more than one handle, determines the value of the first handle.
/// </summary>
/// <summary>
/// This option can be used to specify multiple handles. If range is set to true, the length of 'values' should be 2.
/// </summary>
// SliderOptions.cs
// Script#/Libraries/jQuery/UI
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// Options used to initialize or customize Slider.
/// </summary>
/// <summary>
/// This event is triggered on slide stop, or if the value is changed programmatically (by the <code>value</code> method).  Takes arguments event and ui.  Use event.originalEvent to detect whether the value changed by mouse, keyboard, or programmatically. Use ui.value (single-handled sliders) to obtain the value of the current handle, $(this).slider('values', index) to get another handle's value.
/// </summary>
/// <summary>
/// This event is triggered when the slider is created.
/// </summary>
/// <summary>
/// This event is triggered on every mouse move during slide. Use ui.value (single-handled sliders) to obtain the value of the current handle, $(..).slider('value', index) to get another handles' value.Return false in order to prevent a slide, based on ui.value.
/// </summary>
/// <summary>
/// This event is triggered when the user starts sliding.
/// </summary>
/// <summary>
/// This event is triggered when the user stops sliding.
/// </summary>
/// <summary>
/// Whether to slide handle smoothly when user click outside handle on the bar. Will also accept a string representing one of the three predefined speeds ("slow", "normal", or "fast") or the number of milliseconds to run the animation (e.g. 1000).
/// </summary>
/// <summary>
/// Disables the slider if set to true.
/// </summary>
/// <summary>
/// The maximum value of the slider.
/// </summary>
/// <summary>
/// The minimum value of the slider.
/// </summary>
/// <summary>
/// This option determines whether the slider has the min at the left, the max at the right or the min at the bottom, the max at the top. Possible values: 'horizontal', 'vertical'.
/// </summary>
/// <summary>
/// If set to true, the slider will detect if you have two handles and create a stylable range element between these two. Two other possible values are 'min' and 'max'. A min range goes from the slider min to one handle. A max range goes from one handle to the slider max.
/// </summary>
/// <summary>
/// Determines the size or amount of each interval or step the slider takes between min and max. The full specified value range of the slider (max - min) needs to be evenly divisible by the step.
/// </summary>
/// <summary>
/// Determines the value of the slider, if there's only one handle. If there is more than one handle, determines the value of the first handle.
/// </summary>
/// <summary>
/// This option can be used to specify multiple handles. If range is set to true, the length of 'values' should be 2.
/// </summary>
// SlideStartEvent.cs
// Script#/Libraries/jQuery/UI
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// SlideStopEvent.cs
// Script#/Libraries/jQuery/UI
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// TabsAddEvent.cs
// Script#/Libraries/jQuery/UI
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// TabsDisableEvent.cs
// Script#/Libraries/jQuery/UI
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// TabsEnableEvent.cs
// Script#/Libraries/jQuery/UI
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// TabsEvents.cs
// Script#/Libraries/jQuery/UI
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// Events raised by Tabs.
/// </summary>
/// <summary>
/// Triggered after a new tab is added.
/// </summary>
/// <summary>
/// This event is triggered when the tabs is created.
/// </summary>
/// <summary>
/// Triggered after an enabled tab has been disabled.
/// </summary>
/// <summary>
/// Triggered after a disabled tab has been enabled.
/// </summary>
/// <summary>
/// Triggered after a remote tab has been loaded.
/// </summary>
/// <summary>
/// Triggered after a tab has been removed.
/// </summary>
/// <summary>
/// This event is triggered when clicking a tab.
/// </summary>
/// <summary>
/// Triggered after a tab has been shown.
/// </summary>
// TabsLoadEvent.cs
// Script#/Libraries/jQuery/UI
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// TabsMethod.cs
// Script#/Libraries/jQuery/UI
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// Operations supported by Tabs.
/// </summary>
/// <summary>
/// Terminate all running tab ajax requests and animations.
/// </summary>
/// <summary>
/// Add a new tab. The second argument is either a URL consisting of a fragment identifier only to create an in-page tab or a full url (relative or absolute, no cross-domain support) to turn the new tab into an Ajax (remote) tab. The third is the zero-based position where to insert the new tab. Optional, by default a new tab is appended at the end.
/// </summary>
/// <summary>
/// The <code>destroy()</code> method cleans up all common data, events, etc. and then delegates out to <code>_destroy()</code> for custom cleanup.
/// </summary>
/// <summary>
/// Retrieve the number of tabs of the first matched tab pane.
/// </summary>
/// <summary>
/// Load the panel content of a remote tab (specified by index)
/// </summary>
/// <summary>
/// Remove a tab. The second argument is the zero-based index of the tab to be removed. Instead of an index, the href of the tab may be passed.
/// </summary>
/// <summary>
/// Set up an automatic rotation through tabs of a tab pane. The second argument is an amount of time in milliseconds until the next tab in the cycle gets activated. Use 0 or null to stop the rotation. The third controls whether or not to continue the rotation after a tab has been selected by a user. Default: false.
/// </summary>
/// <summary>
/// Select a tab, as if it were clicked. The second argument is the zero-based index of the tab to be selected or the id selector of the panel the tab is associated with (the tab's href fragment identifier, e.g. hash, points to the panel's id).
/// </summary>
/// <summary>
/// Change the url from which an Ajax (remote) tab will be loaded. The specified URL will be used for subsequent loads. Note that you can not only change the URL for an existing remote tab with this method, but also turn an in-page tab into a remote tab. The second argument is the zero-based index of the tab of which its URL is to be updated. The third is a URL the content of the tab is loaded from.
/// </summary>
// TabsObject.cs
// Script#/Libraries/jQuery/UI
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// A single content area with multiple panels, each associated with a header in a list
/// </summary>
/// <remarks>
/// <para>Tabs are generally used to break content into multiple sections that can be swapped to save space, much like an accordion.</para><para>By default a tab widget will swap between tabbed sections on click, but the events can be changed to onHover through an option. Tab content can be loaded via Ajax by setting an href on a tab.</para><para>This widget requires some functional CSS, otherwise it won't work. If you build a custom theme, use the widget's specific CSS file as a starting point.</para>
/// </remarks>
/// <summary>
/// Terminate all running tab ajax requests and animations.
/// </summary>
/// <summary>
/// Add a new tab. The second argument is either a URL consisting of a fragment identifier only to create an in-page tab or a full url (relative or absolute, no cross-domain support) to turn the new tab into an Ajax (remote) tab. The third is the zero-based position where to insert the new tab. Optional, by default a new tab is appended at the end.
/// </summary>
/// <summary>
/// Disable a tab. The selected tab cannot be disabled. To disable more than one tab at once use: <code>$('#example').tabs("option","disabled", [1, 2, 3]);</code><para>The argument is the zero-based index of the tab to be disabled. Instead of an index, the href of the tab may be passed.</para>
/// </summary>
/// <summary>
/// Enable a disabled tab. To enable more than one tab at once reset the disabled property like: <code>$('#example').tabs("option","disabled",[]);</code>.<para>The argument is the zero-based index of the tab to be enabled. Instead of an index, the href of the tab may be passed.</para>
/// </summary>
/// <summary>
/// Retrieve the number of tabs of the first matched tab pane.
/// </summary>
/// <summary>
/// Load the panel content of a remote tab (specified by index)
/// </summary>
/// <summary>
/// Remove a tab. The second argument is the zero-based index of the tab to be removed. Instead of an index, the href of the tab may be passed.
/// </summary>
/// <summary>
/// Set up an automatic rotation through tabs of a tab pane. The second argument is an amount of time in milliseconds until the next tab in the cycle gets activated. Use 0 or null to stop the rotation. The third controls whether or not to continue the rotation after a tab has been selected by a user. Default: false.
/// </summary>
/// <summary>
/// Select a tab, as if it were clicked. The second argument is the zero-based index of the tab to be selected or the id selector of the panel the tab is associated with (the tab's href fragment identifier, e.g. hash, points to the panel's id).
/// </summary>
/// <summary>
/// Change the url from which an Ajax (remote) tab will be loaded. The specified URL will be used for subsequent loads. Note that you can not only change the URL for an existing remote tab with this method, but also turn an in-page tab into a remote tab. The second argument is the zero-based index of the tab of which its URL is to be updated. The third is a URL the content of the tab is loaded from.
/// </summary>
// TabsOption.cs
// Script#/Libraries/jQuery/UI
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// Options for use with Tabs.
/// </summary>
/// <summary>
/// The zero-based index of the panel that is active (open). A negative value select panels going backward from the last panel.<para>When collapsible is set to true, a false value closes the accordion, otherwise nothing happens</para>
/// </summary>
/// <summary>
/// Allow the active panel to be closed.
/// </summary>
/// <summary>
/// An array containing the position of the tabs (zero-based index) that should be disabled.
/// </summary>
/// <summary>
/// The type of event to be used for activating a tab. To activate on hover, use "mouseover".
/// </summary>
/// <summary>
/// Controls the height of the tabs widget and each panel. Possible values:<ul><li>auto: all panels will be set to the height of the tallest panel</li><li>fill: expand to the available height based on the tabs's parent height</li><li>content: each panel will be only as tall as its content</li></ul>
/// </summary>
/// <summary>
/// How to hide a panel.
/// </summary>
// TabsOptions.cs
// Script#/Libraries/jQuery/UI
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// Options used to initialize or customize Tabs.
/// </summary>
/// <summary>
/// Triggered after a new tab is added.
/// </summary>
/// <summary>
/// This event is triggered when the tabs widget is created.
/// </summary>
/// <summary>
/// Triggered after an enabled tab has been disabled.
/// </summary>
/// <summary>
/// Triggered after a disabled tab has been enabled.
/// </summary>
/// <summary>
/// Triggered after a remote tab has been loaded.
/// </summary>
/// <summary>
/// Triggered after a tab has been removed.
/// </summary>
/// <summary>
/// This event is triggered when clicking a tab.
/// </summary>
/// <summary>
/// Triggered after a tab has been shown.
/// </summary>
/// <summary>
/// The zero-based index of the panel that is active (open). A negative value select panels going backward from the last panel.<para>When collapsible is set to true, a false value closes the accordion, otherwise nothing happens</para>
/// </summary>
/// <summary>
/// Allow the active panel to be closed.
/// </summary>
/// <summary>
/// An array containing the position of the tabs (zero-based index) that should be disabled.
/// </summary>
/// <summary>
/// The type of event to be used for activating a tab. To activate on hover, use "mouseover".
/// </summary>
/// <summary>
/// Controls the height of the tabs widget and each panel. Possible values:<ul><li>auto: all panels will be set to the height of the tallest panel</li><li>fill: expand to the available height based on the tabs's parent height</li><li>content: each panel will be only as tall as its content</li></ul>
/// </summary>
/// <summary>
/// How to hide a panel.
/// </summary>
// TabsRemoveEvent.cs
// Script#/Libraries/jQuery/UI
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// TabsSelectEvent.cs
// Script#/Libraries/jQuery/UI
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// TabsShowEvent.cs
// Script#/Libraries/jQuery/UI
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// jQueryValidationHighlight.cs
// Script#/Libraries/jQuery/Validation
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// jQueryValidationMethod.cs
// Script#/Libraries/jQuery/Validation
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// jQueryValidation.cs
// Script#/Libraries/jQuery/Validation
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// Returns the validation rules for the first selected argument.
/// </summary>
/// <returns>The rules which have been assigned to the specified element.</returns>
/// <summary>
/// Removes the specified attributes from the first matched element
/// </summary>
/// <param name="attributes">The attribute names to remove</param>
/// <returns>The attributes which have been removed</returns>
/// <summary>
/// Adds or removes the specified rules to the first matched element. Requires that the parent form has 
/// been validated prior to the call.
/// </summary>
/// <param name="action">The action to perform. Should be 'add' or 'remove'</param>
/// <param name="rules">The rules to add or remove to the specified element.</param>
/// <returns>The current state of the rules collection for the first matched element.</returns>
/// <summary>
/// Checks whether the selected form is valid or whether all selected elements are valid.
/// </summary>
/// <returns>True if the form is valid, otherwise false.</returns>
/// <summary>
/// Validates the selected form.
/// </summary>
/// <returns>An instance of the validation controller for the specified form.</returns>
/// <summary>
/// Validates the selected form.
/// </summary>
/// <param name="options">The validation options</param>
/// <returns>An instance of the validation controller for the specified form.</returns>
// jQueryValidationRules.cs
// Script#/Libraries/jQuery/Validation
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// Makes the element require a certain file extension
/// </summary>
/// <summary>
/// Makes the element require a creditcard number
/// </summary>
/// <summary>
/// Makes the element require a date
/// </summary>
/// <summary>
/// Makes the element require a ISO date
/// </summary>
/// <summary>
/// Makes the element require digits only
/// </summary>
/// <summary>
/// Makes the element require a valid email address
/// </summary>
/// <summary>
/// Requires the element to be the same as another one
/// </summary>
/// <summary>
/// Makes the element require a given maximum
/// </summary>
/// <summary>
/// Makes the element require a given maximum length
/// </summary>
/// <summary>
/// Makes the element require given minimum
/// </summary>
/// <summary>
/// Makes the element require a given minimum length
/// </summary>
/// <summary>
/// Makes the element require a decimal number
/// </summary>
/// <summary>
/// Makes the value require a given value range
/// </summary>
/// <summary>
/// Makes the element require a given value range
/// </summary>
/// <summary>
/// Requests a resource to check the element for validity
/// </summary>
/// <summary>
/// Makes the element required, depending on the result of the given callback
/// </summary>
/// <summary>
/// Makes the element required, depending on the result of the given expression
/// </summary>
/// <summary>
/// Makes the element always required
/// </summary>
/// <summary>
/// Makes the element require a valid url
/// </summary>
// jQueryValidator.cs
// Script#/Libraries/jQuery/Validation
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// Add compound class methods
/// </summary>
/// <param name="rules">A map of class name - rules pairs.</param>
/// <summary>
/// Adds a compound class method
/// </summary>
/// <param name="name">The name of the class rule to add</param>
/// <param name="rules">The compound rules</param>
/// <summary>
/// Adds a custom validation method.
/// </summary>
/// <param name="name">The name of the method. Must be a valid Javascript identifier</param>
/// <param name="callback">The method callback to invoke during validation</param>
/// <summary>
/// Adds a custom validation method.
/// </summary>
/// <param name="name">The name of the method. Must be a valid Javascript identifier</param>
/// <param name="callback">The method callback to invoke during validation</param>
/// <param name="message">The default message to display for this method.</param>
/// <summary>
/// Formats a string, replacing {n} placeholders with arguments.
/// </summary>
/// <param name="template">The template string</param>
/// <param name="args">The arguments</param>
/// <returns>A formatted string where each placeholder has been replaced by its argument.</returns>
/// <summary>
/// Gets the number of invalid fields on the controlled form.
/// </summary>
/// <returns>The number of invalid fields</returns>
/// <summary>
/// Checks if the current element is optional.
/// </summary>
/// <param name="element">The element to validate</param>
/// <returns>True if the element is optional, otherwise returns false.</returns>
/// <summary>
/// Resets the controlled form
/// </summary>
/// <summary>
/// Sets the default settings for validation
/// </summary>
/// <param name="options">The validation options to by used by default during validation</param>
/// <summary>
/// Shows the specified errors messages.
/// </summary>
/// <param name="errors">Key/value pairs of error messages, where the keys relate to names of elements in the form, and
/// the values are the error messages to display for those elements.</param>
/// <summary>
/// Validates the specified element
/// </summary>
/// <param name="element">The element to validate</param>
/// <returns>True if the form is valid, otherwise returns false.</returns>
/// <summary>
/// Validates the controlled form
/// </summary>
/// <returns>True if the form is valid, otherwise returns false.</returns>
// jQueryValidatorOptions.cs
// Script#/Libraries/jQuery/Validation
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// AssemblyInfo.cs
// Script#/Libraries/jQuery/Validation
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// BindingContext.cs
// Script#/Libraries/Knockout
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// BindingHandler.cs
// Script#/Libraries/Knockout
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// Represents a custom binding handler in Knockout.
/// </summary>
/// <summary>
/// Performs one time initialization for a binding.
/// </summary>
/// <param name="element">The element involved in this binding.</param>
/// <param name="valueAccessor">A function which returns the model property that is involved in this binding.</param>
/// <param name="allBindingsAccessor">A function which returns all the model properties bound to this element.</param>
/// <param name="viewModel">The view model instance involved in this binding.</param>
/// <param name="context">The binding context involved in this binding.</param>
/// <summary>
/// Invoked whenever an observable associated with this binding changes.
/// </summary>
/// <param name="element">The element involved in this binding.</param>
/// <param name="valueAccessor">A function which returns the model property that is involved in this binding.</param>
/// <param name="allBindingsAccessor">A function which returns all the model properties bound to this element.</param>
/// <param name="viewModel">The view model instance involved in this binding.</param>
/// <param name="context">The binding context involved in this binding.</param>
// CompareResult.cs
// Script#/Libraries/Knockout
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// CompareResultStatus.cs
// Script#/Libraries/Knockout
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// ComputedObservable.cs
// Script#/Libraries/Knockout
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// Represents an object containing a computed value based on other observable values.
/// </summary>
/// <typeparam name="T">The type of the contained value.</typeparam>
/// <summary>
/// Gets the current computed value.
/// </summary>
/// <returns>The current value.</returns>
/// <summary>
/// Disposes this Subscribable
/// </summary>
/// <summary>
/// For computed observables, we throttle *evaluations* so that, no matter how fast its dependencies
/// notify updates, the target doesn't re-evaluate (and hence doesn't notify) faster than a certain rate
/// For writable targets (observables, or writable dependent observables), we throttle *writes*
/// so the target cannot change value synchronously or faster than a certain rate
/// </summary>
/// <param name="options"></param>
/// <returns>The current instance.</returns>
/// <summary>
/// Get Dependencies Count
/// </summary>
/// <returns>Returns the Number of Dependencies</returns>
/// <summary>
/// Sets the Value and Notifies all of the Subscribers
/// </summary>
/// <param name="value">The Value to be Set</param>
/// <summary>
/// Sets the Value and Notifies all of the Subscribers for the Specified Event
/// </summary>
/// <param name="value">The Value to be Set</param>
/// <param name="eventName">[Optional] Event Name</param>
/// <summary>
/// Subscribes to change notifications raised when the value changes.
/// </summary>
/// <param name="changeCallback">The callback to invoke.</param>
/// <returns>A subscription cookie that can be disposed to unsubscribe.</returns>
// ComputedObservableOptions.cs
// Script#/Libraries/Knockout
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// Provides advanced options for defining a dependent observable.
/// </summary>
/// <typeparam name="T">The type of the observable value.</typeparam>
/// <summary>
/// Gets or sets whether the evaluation should be deferred, i.e. not
/// performed when the observable is first created.
/// </summary>
/// <summary>
/// Pass in a function that evaluates when the Dependency can be disposed
/// </summary>
/// <summary>
/// "disposeWhenNodeIsRemoved" option both proactively disposes as soon as the node is removed using ko.removeNode(),    
/// plus adds a "disposeWhen" callback that, on each evaluation, disposes if the node was removed by some other means.
/// </summary>
/// <summary>
/// Gets or sets the function to compute the value.
/// </summary>
/// <summary>
/// Gets or sets the function to write the value.
/// </summary>
/// <summary>
/// Gets or sets the function to write the value.
/// </summary>
/// <summary>
/// Gets the model instance which acts as 'this' in the get value function.
/// </summary>
// Knockout.cs
// Script#/Libraries/Knockout
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// Provides Knockout functionality.
/// </summary>
/// <summary>
/// Provides access to the currently registered binding handlers.
/// </summary>
/// <summary>
/// Gets the mapping plugin which allows converting models to plain
/// objects and JSON and vice-versa.
/// </summary>
/// <summary>
/// Gets the current model.
/// </summary>
/// <returns>The object represented by 'this' within a handler.</returns>
/// <summary>
/// Sets up bindings using the specified model.
/// </summary>
/// <param name="model">The model.</param>
/// <summary>
/// Sets up bindings within the specified root element using the specified the model.
/// </summary>
/// <param name="model">The model.</param>
/// <param name="rootElement">The element to bind to.</param>
/// <summary>
/// Set up bindings on a single node without binding any of its descendents.
/// </summary>
/// <param name="node">The node to bind to.</param>
/// <param name="bindings">An optional dictionary of bindings, pass null to let Knockout gather them from the element.</param>
/// <param name="viewModel">The view model instance.</param>
/// <summary>
/// Set up bindings on a single node without binding any of its descendents.
/// </summary>
/// <param name="node">The node to bind to.</param>
/// <param name="bindings">An optional dictionary of bindings, pass null to let Knockout gather them from the element.</param>
/// <param name="viewModel">The view model instance.</param>
/// <param name="bindingAttributeName">The name of the attribute which has the binding definitions.</param>
/// <summary>
/// Set up bindings on a single node without binding any of its descendents.
/// </summary>
/// <param name="rootNode">The root node to bind to.</param>
/// <param name="bindings">An optional dictionary of bindings, pass null to let Knockout gather them from the element.</param>
/// <param name="viewModel">The view model instance.</param>
/// <param name="bindingAttributeName">The name of the attribute which has the binding definitions.</param>
/// <summary>
/// Removes all bindings from an Html Element.
/// </summary>
/// <param name="rootElement">The root node to clear all bindings from.</param>
/// <summary>
/// Creates an observable with a value computed from one or more other values.
/// </summary>
/// <typeparam name="T">The type of the observable value.</typeparam>
/// <param name="function">A function to compute the value.</param>
/// <returns>A new computed observable instance.</returns>
/// <summary>
/// Creates an observable with a value computed from one or more other values.
/// </summary>
/// <typeparam name="T">The type of the observable value.</typeparam>
/// <param name="options">Options for the computed observable.</param>
/// <summary>
/// Returns the entire binding context associated with the DOM element
/// </summary>
/// <param name="node"></param>
/// <summary>
/// Returns the data item associated with a particular DOM element
/// </summary>
/// <param name="node"></param>
/// <summary>
/// Returns true if the value is subscribable, false otherwise.
/// </summary>
/// <param name="value">The value to check.</param>
/// <summary>
/// Returns true if the value is an observable, false otherwise.
/// </summary>
/// <param name="value">The value to check.</param>
/// <summary>
/// Returns true if the value is an writable observable, false otherwise.
/// </summary>
/// <param name="value">The value to check.</param>
/// <summary>
/// Creates an subscribable value.
/// </summary>
/// <typeparam name="T">The type of the subscribable.</typeparam>
/// <returns>A new subscribable value instance.</returns>
/// <summary>
/// Creates an observable value.
/// </summary>
/// <typeparam name="T">The type of the observable.</typeparam>
/// <returns>A new observable value instance.</returns>
/// <summary>
/// Creates an observable with an initial value.
/// </summary>
/// <typeparam name="T">The type of the observable.</typeparam>
/// <param name="initialValue">The initial value.</param>
/// <returns>A new observable value instance.</returns>
/// <summary>
/// Creates an empty observable array.
/// </summary>
/// <returns>A new observable array.</returns>
/// <typeparam name="T">The type of items in the array.</typeparam>
/// <summary>
/// Creates an observable array with some initial items.
/// </summary>
/// <param name="initialItems">A sequence of initial items.</param>
/// <returns>A new observable array.</returns>
/// <typeparam name="T">The type of items in the array.</typeparam>
/// <summary>
/// Converts a model into the equivalent JSON representation.
/// </summary>
/// <param name="model">The model object to convert.</param>
/// <returns>The JSON string representing the model data.</returns>
/// <summary>
/// Converts a model into the equivalent vanilla script object.
/// </summary>
/// <param name="model">The model object to convert.</param>
/// <returns>The vanilla script object representing the model data.</returns>
/// <summary>
/// Converts a model into the equivalent vanilla script object.
/// </summary>
/// <param name="model">The model object to convert.</param>
/// <returns>The vanilla script object representing the model data.</returns>
/// <summary>
/// If the provided value is an observable, return its value, otherwise just pass it through.
/// </summary>
/// <param name="value">The value to unwrap.</param>
// KnockoutMapping.cs
// Script#/Libraries/Knockout
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// Provides functionality for mapping between knockout models and JSON or
/// vanilla script objects.
/// </summary>
/// <summary>
/// Creates a model instance from the specified JSON string.
/// </summary>
/// <typeparam name="TModel">The type of the model.</typeparam>
/// <param name="jsonData">The JSON data.</param>
/// <returns>A new instance of the model.</returns>
/// <summary>
/// Creates a model instance from the specified JSON string and a
/// custom mapping.
/// </summary>
/// <typeparam name="TModel">The type of the model.</typeparam>
/// <param name="jsonData">The JSON data.</param>
/// <param name="mapping">The mapping rules to apply.</param>
/// <returns>A new instance of the model.</returns>
/// <summary>
/// Creates a model array from the specified JSON string and a
/// custom mapping.
/// </summary>
/// <typeparam name="TModel">The type of the model.</typeparam>
/// <param name="jsonData">The JSON data.</param>
/// <param name="mapping">The mapping rules to apply.</param>
/// <returns>A new instance of the model.</returns>
/// <summary>
/// Creates a model instance from the specified script object.
/// </summary>
/// <typeparam name="TModel">The type of the model.</typeparam>
/// <param name="data">The vanilla script object.</param>
/// <returns>A new instance of the model.</returns>
/// <summary>
/// Creates a model instance from the specified script object and a
/// custom mapping.
/// </summary>
/// <typeparam name="TModel">The type of the model.</typeparam>
/// <param name="data">The vanilla script object.</param>
/// <param name="mapping">The mapping rules to apply.</param>
/// <returns>A new instance of the model.</returns>
/// <summary>
/// Creates a model array from the specified script object and a
/// custom mapping.
/// </summary>
/// <typeparam name="TModel">The type of the model.</typeparam>
/// <param name="data">The vanilla script object.</param>
/// <param name="mapping">The mapping rules to apply.</param>
/// <returns>A new instance of the model.</returns>
/// <summary>
/// Updates a model instance from the specified script object and a
/// custom mapping.
/// </summary>
/// <typeparam name="TModel">The type of the model.</typeparam>
/// <param name="data">The vanilla script object.</param>
/// <param name="mapping">The mapping rules to apply.</param>
/// <param name="target">The mapping rules to apply.</param>
/// <returns>A new instance of the model.</returns>
/// <summary>
/// Creates a model array from the specified script object and a
/// custom mapping.
/// </summary>
/// <typeparam name="TModel">The type of the model.</typeparam>
/// <param name="data">The vanilla script object.</param>
/// <param name="mapping">The mapping rules to apply.</param>
/// <param name="target">The mapping rules to apply.</param>
/// <returns>A new instance of the model.</returns>
/// <summary>
/// Unwraps the given view model
/// </summary>
/// <param name="model">The model to unwrap</param>
/// <returns>The unwrapped view model</returns>
/// <summary>
/// Unwraps the given view model
/// </summary>
/// <param name="model">The model to unwrap</param>
/// <returns>The unwrapped view model</returns>
/// <summary>
/// Updates the specified model with the specified JSON string.
/// </summary>
/// <typeparam name="TModel">The tyoe of the model.</typeparam>
/// <param name="model">The model to update.</param>
/// <param name="jsonData">The JSON string representing the new values.</param>
/// <summary>
/// Updates the specified model with the specified script object.
/// </summary>
/// <typeparam name="TModel">The tyoe of the model.</typeparam>
/// <param name="model">The model to update.</param>
/// <param name="data">The script object representing the new values.</param>
// KnockoutMappingArrayCreateOptions.cs
// Script#/Libraries/Knockout
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// KnockoutMappingArraySpecification.cs
// Script#/Libraries/Knockout
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// KnockoutMappingCreateOptions.cs
// Script#/Libraries/Knockout
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// KnockoutMappingPropertySpecification.cs
// Script#/Libraries/Knockout
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// KnockoutMappingSpecification.cs
// Script#/Libraries/Knockout
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// KnockoutMappingUpdateOptions.cs
// Script#/Libraries/Knockout
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// KnockoutApi.cs
// Script#/Libraries/Knockout
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// Returns the First Matching Item (predicate function) from the given array
/// </summary>
/// <summary>
/// Applies the predicate filter to the given array
/// Returns the matching items as a new array
/// </summary>
/// <summary>
/// Applies the Action to each item in the given array
/// </summary>
/// <summary>
/// Returns a new array containing distinct values only
/// </summary>
/// <summary>
/// Finds and Returns the Index of the item in the given array
/// </summary>
/// <returns>Returns the Index number of -1 if not found</returns>
/// <summary>
/// Processes each item in the given array and applies the mapping function
/// Returns the Mapping Results
/// </summary>
/// <summary>
/// Pushes each item into the given array
/// </summary>
/// <summary>
/// Removes the Specified item from the given array
/// </summary>
/// <summary>
/// Compares the changes between two arrays
/// </summary>
/// <summary>
/// Compares the changes between two arrays
/// </summary>
/// <summary>
/// Finds the Matching Field Elements (input) in the given Form Element and the given fieldName
/// </summary>
/// <summary>
/// Finds the Matching Field Elements (input) in the given Form Element and the given regular expression
/// </summary>
/// <summary>
/// Parses the Json String into a native javascript object
/// </summary>
/// <param name="jsonString"></param>
/// <summary>
/// Makes a Post Request to the specified url or using the specified Form element
/// </summary>
/// <param name="urlOrForm"></param>
/// <param name="data"></param>
/// <param name="options">{ "params": [], "includeFields": [], "submitter": [] }</param>
/// <summary>
/// Returns an Array of numbers starting from the specified minimum to the maximum
/// </summary>
/// <summary>
/// Returns an Array of numbers starting from the specified minimum to the maximum
/// </summary>
/// <summary>
/// Registers an Event Handler for the given element
/// </summary>
/// <summary>
/// Returns a json string from the specified object
/// Requires Native JSON support or json2.js
/// </summary>
/// <summary>
/// Triggers the specified event on the given element
/// i.e. produce a 'click' event on a input element
/// </summary>
/// <summary>
/// If the provided value is an observable, return its value, otherwise just pass it through.
/// </summary>
/// <param name="value">The value to unwrap.</param>
/// <summary>
/// If the provided value is an observable, return its value, otherwise just pass it through.
/// </summary>
/// <param name="value">The value to unwrap.</param>
/// <summary>
/// If the provided value is an observable, return its value, otherwise just pass it through.
/// </summary>
/// <param name="value">The value to unwrap.</param>
// Observable.cs
// Script#/Libraries/Knockout
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// Represents an object containing an observable value.
/// </summary>
/// <typeparam name="T">The type of the contained value.</typeparam>
/// <summary>
/// Gets the current value within the observable object.
/// </summary>
/// <returns>The current value.</returns>
/// <summary>
/// Sets the value within the observable object.
/// </summary>
/// <param name="value">The new value.</param>
/// <summary>
/// Notifies All Subscribers that the Value has Changed
/// Called internally with SetValue
/// </summary>
/// <summary>
/// Notifies All Subscribers BEFORE the Value has Changed
/// Called internally with SetValue
/// </summary>
/// <summary>
/// For Primitive Types ko will handle Equality internally
/// For complex types a supplied function can be assigned to improve
/// change (mutation) detection
/// </summary>
/// <summary>
/// For dependent observables, we throttle *evaluations* so that, no matter how fast its dependencies        
/// notify updates, the target doesn't re-evaluate (and hence doesn't notify) faster than a certain rate
/// For writable targets (observables, or writable dependent observables), we throttle *writes*        
/// so the target cannot change value synchronously or faster than a certain rate
/// </summary>
/// <param name="options"></param>
/// <returns>Returns 'this' inorder to support chaining methods</returns>
// ObservableArray.cs
// Script#/Libraries/Knockout
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// Represents an array of items that can be observed for changes to the set of
/// contained items.
/// </summary>
/// <typeparam name="T">The type of the contained values.</typeparam>
/// <summary>
/// Marks all values that match the given parameter as deleted.
/// </summary>
/// <param name="value">The value to mark as deleted.</param>
/// <summary>
/// Marks all values that satisfy the predicate as deleted.
/// </summary>
/// <param name="predicate">The predicate.</param>
/// <summary>
/// Marks all values that satisfy the given parameters as deleted.
/// </summary>
/// <param name="values">An array of items to destroy.</param>
/// <summary>
/// Gets the underlying items within the observable array.
/// This is a Copy of the Values in the Observable
/// </summary>
/// <returns>The collection of items.</returns>
/// <summary>
/// Sets the underlying items within the observable array.
/// </summary>
/// <summary>
/// Returns the index of the first array item that equals the value.
/// </summary>
/// <param name="value">The value to check.</param>
/// <returns>The index of the matching item; -1 if there is no match.</returns>
/// <summary>
/// Removes the last value from the array and returns it.
/// </summary>
/// <returns>The last value.</returns>
/// <summary>
/// Adds the value and notifies observers.
/// </summary>
/// <param name="value">The value to add.</param>
/// <summary>
/// Replaces the Specified Item with the NewItem
/// </summary>
/// <summary>
/// Removes all values that match the given parameter and returns them.
/// </summary>
/// <param name="value">The value to remove.</param>
/// <returns>The removed values.</returns>
/// <summary>
/// Removes all values that satisfy the predicate and returns them.
/// </summary>
/// <param name="predicate">The removal predicate.</param>
/// <returns>The removed values.</returns>
/// <summary>
/// Removes all values from the array.
/// </summary>
/// <returns>The removed values</returns>
/// <summary>
/// Removes all values that satisfy the given parameters and returns them.
/// </summary>
/// <param name="values">An array of items to remove.</param>
/// <returns>The removed values.</returns>
/// <summary>
/// Reverses the order of the array.
/// </summary>
/// <summary>
/// Removes the first value from the array and returns it
/// </summary>
/// <returns>The removed value.</returns>
/// <summary>
/// Native Javascript Splice Function
/// Modifies the Existing Sequence
/// </summary>
/// <param name="index">Required. An integer that specifies at what position to add/remove elements</param>
/// <param name="howmany">Required. The number of elements to be removed. If set to 0, no elements will be removed</param>
/// <param name="args">Optional. The new element(s) to be added to the array</param>
/// <summary>
/// Returns elements from start index to the end of the array.
/// </summary>
/// <param name="start">Starting point of the sequence, if negative then it starts from the end.</param>
/// <returns>The matched items.</returns>
/// <summary>
/// Returns elements from start index to end index.
/// </summary>
/// <param name="start">Starting point of the sequence, if negative then it starts from the end.</param>
/// <param name="end">End point of the sequence.</param>
/// <returns>The matched items.</returns>
/// <summary>
/// Performs a default alphanumeric sort on the elements of the array.
/// </summary>
/// <summary>
/// Performs a sort using the comparator function.
/// </summary>
/// <param name="comparator">The comparing function.</param>
/// <summary>
/// Inserts the value at the beginning of the array.
/// </summary>
/// <param name="value">The value to insert.</param>
/// <summary>
/// For dependent observables, we throttle *evaluations* so that, no matter how fast its dependencies
/// notify updates, the target doesn't re-evaluate (and hence doesn't notify) faster than a certain rate
/// For writable targets (observables, or writable dependent observables), we throttle *writes*
/// so the target cannot change value synchronously or faster than a certain rate
/// </summary>
/// <param name="options"></param>
/// <returns>Extend is Chainable</returns>
// BindingHandler.cs
// Script#/Libraries/Knockout
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// Represents an object containing an subscribable value.
/// </summary>
/// <typeparam name="T">The type of the contained value.</typeparam>
/// <summary>
/// Disposes this Subscribable
/// </summary>
/// <summary>
/// For dependent observables, we throttle *evaluations* so that, no matter how fast its dependencies
/// notify updates, the target doesn't re-evaluate (and hence doesn't notify) faster than a certain rate
/// For writable targets (observables, or writable dependent observables), we throttle *writes*
/// so the target cannot change value synchronously or faster than a certain rate
/// </summary>
/// <param name="options"></param>
/// <returns>Extend is Chainable</returns>
/// <summary>
/// Get Subscription Count
/// </summary>
/// <returns>Returns the Number of Subscribers</returns>
/// <summary>
/// Sets the Value and Notifies all of the Subscribers
/// </summary>
/// <param name="value">The Value to be Set</param>
/// <summary>
/// Sets the Value and Notifies all of the Subscribers for the Specified Event
/// </summary>
/// <param name="value">The Value to be Set</param>
/// <param name="eventName">[Optional] Event Name</param>
/// <summary>
/// Subscribes to change notifications raised when the value changes.
/// </summary>
/// <param name="changeCallback">The callback to invoke.</param>
/// <returns>A subscription cookie that can be disposed to unsubscribe.</returns>
/// <summary>
/// Subscribes to change notifications raised when the value changes.
/// </summary>
/// <param name="changeCallback">The callback to invoke.</param>
/// <param name="callBackTarget">callback target</param>
/// <returns>A subscription cookie that can be disposed to unsubscribe.</returns>
/// <summary>
/// Subscribes to change notifications raised when the value changes.
/// </summary>
/// <param name="changeCallback">The callback to invoke.</param>
/// <param name="callBackTarget">callback target</param>
/// <param name="eventName">event registration</param>
/// <returns>A subscription cookie that can be disposed to unsubscribe.</returns>
// AssemblyInfo.cs
// Script#/Libraries/Knockout
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// Map.cs
// Script#/Libraries/Microsoft/BingMaps
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// MapAltitudeMode.cs
// Script#/Libraries/Microsoft/BingMaps
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// MapAnimationVisibility.cs
// Script#/Libraries/Microsoft/BingMaps
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// MapBounds.cs
// Script#/Libraries/Microsoft/BingMaps
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// MapColor.cs
// Script#/Libraries/Microsoft/BingMaps
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// TODO: Members
// MapEntity.cs
// Script#/Libraries/Microsoft/BingMaps
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// MapEntityCollection.cs
// Script#/Libraries/Microsoft/BingMaps
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// MapEntityCollectionEventArgs.cs
// Script#/Libraries/Microsoft/BingMaps
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// TODO: Make properties
// MapEntityCollectionOptions.cs
// Script#/Libraries/Microsoft/BingMaps
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// MapEntityEventArgs.cs
// Script#/Libraries/Microsoft/BingMaps
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// TODO: Make properties
// MapEventArgs.cs
// Script#/Libraries/Microsoft/BingMaps
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// TODO: Make properties
// MapEvents.cs
// Script#/Libraries/Microsoft/BingMaps
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// MapEventTarget.cs
// Script#/Libraries/Microsoft/BingMaps
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// TODO: Make properties
// MapInfobox.cs
// Script#/Libraries/Microsoft/BingMaps
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// TODO: Other members
// MapInfoboxAction.cs
// Script#/Libraries/Microsoft/BingMaps
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// TODO: Make properties
// MapInfoboxOptions.cs
// Script#/Libraries/Microsoft/BingMaps
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// TODO: Make properties
// MapKeyEventArgs.cs
// Script#/Libraries/Microsoft/BingMaps
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// TODO: Make properties
// MapLabelOverlay.cs
// Script#/Libraries/Microsoft/BingMaps
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// TODO: Make properties
// MapLocation.cs
// Script#/Libraries/Microsoft/BingMaps
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// MapModule.cs
// Script#/Libraries/Microsoft/BingMaps
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// MapModuleOptions.cs
// Script#/Libraries/Microsoft/BingMaps
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// MapMouseEventArgs.cs
// Script#/Libraries/Microsoft/BingMaps
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// TODO: Make properties
// MapOptions.cs
// Script#/Libraries/Microsoft/BingMaps
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// TODO: Make properties
// MapPoint.cs
// Script#/Libraries/Microsoft/BingMaps
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// MapPointReference.cs
// Script#/Libraries/Microsoft/BingMaps
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// MapPolygon.cs
// Script#/Libraries/Microsoft/BingMaps
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// TODO: Other members
// MapPolygonOptions.cs
// Script#/Libraries/Microsoft/BingMaps
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// TODO: Make properties
// MapPolyline.cs
// Script#/Libraries/Microsoft/BingMaps
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// TODO: Other members
// MapPolylineOptions.cs
// Script#/Libraries/Microsoft/BingMaps
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// TODO: Make properties
// MapPushpin.cs
// Script#/Libraries/Microsoft/BingMaps
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// TODO: Other members
// MapPushpinOptions.cs
// Script#/Libraries/Microsoft/BingMaps
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// TODO: Make properties
// MapEntity.cs
// Script#/Libraries/Microsoft/BingMaps
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// MapTile.cs
// Script#/Libraries/Microsoft/BingMaps
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// TODO: Make properties
// MapTileLayer.cs
// Script#/Libraries/Microsoft/BingMaps
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// TODO: Other members
// MapTileLayerOptions.cs
// Script#/Libraries/Microsoft/BingMaps
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// TODO: Make properties
// MapTileSource.cs
// Script#/Libraries/Microsoft/BingMaps
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// TODO: Other members
// MapTileSourceOptions.cs
// Script#/Libraries/Microsoft/BingMaps
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// TODO: Make properties
// MapTileUriGenerator.cs
// Script#/Libraries/Microsoft/BingMaps
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// MapType.cs
// Script#/Libraries/Microsoft/BingMaps
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// MapViewOptions.cs
// Script#/Libraries/Microsoft/BingMaps
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// TODO: Make properties
// MapZoomRange.cs
// Script#/Libraries/Microsoft/BingMaps
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// GeoLocation.cs
// Script#/Libraries/Microsoft/BingMaps
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// GeoLocationCircleOptions.cs
// Script#/Libraries/Microsoft/BingMaps
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// TODO: Make properties
// GeoLocationError.cs
// Script#/Libraries/Microsoft/BingMaps
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// GeoLocationOptions.cs
// Script#/Libraries/Microsoft/BingMaps
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// TODO: Make properties
// GeoLocationProvider.cs
// Script#/Libraries/Microsoft/BingMaps
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// AssemblyInfo.cs
// Script#/Libraries/Microsoft/BingMaps
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// TrafficLayer.cs
// Script#/Libraries/Microsoft/BingMaps
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// Venue.cs
// Script#/Libraries/Microsoft/BingMaps
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// VenueEntity.cs
// Script#/Libraries/Microsoft/BingMaps
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// VenueEntityPolygon.cs
// Script#/Libraries/Microsoft/BingMaps
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// VenueFloor.cs
// Script#/Libraries/Microsoft/BingMaps
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// VenueFootprint.cs
// Script#/Libraries/Microsoft/BingMaps
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// VenueMap.cs
// Script#/Libraries/Microsoft/BingMaps
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// VenueMapErrorCallback.cs
// Script#/Libraries/Microsoft/BingMaps
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// VenueMapFactory.cs
// Script#/Libraries/Microsoft/BingMaps
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// VenueMapOptions.cs
// Script#/Libraries/Microsoft/BingMaps
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// TODO: Make properties
// VenueMapSearchCallback.cs
// Script#/Libraries/Microsoft/BingMaps
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// VenueMapSearchOptions.cs
// Script#/Libraries/Microsoft/BingMaps
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// TODO: Make properties
// VenueMapSuccessCallback.cs
// Script#/Libraries/Microsoft/BingMaps
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// VenueMapOptions.cs
// Script#/Libraries/Microsoft/BingMaps
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// VenueType.cs
// Script#/Libraries/Microsoft/BingMaps
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// Azure.cs
// Script#/Libraries/Node/Azure
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// The root Azure services API.
/// </summary>
// AssemblyInfo.cs
// Script#/Libraries/Node/Azure
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// Role.cs
// Script#/Libraries/Node/Azure
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// RoleEnvironment.cs
// Script#/Libraries/Node/Azure
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// RoleEvent.cs
// Script#/Libraries/Node/Azure
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// RoleEventType.cs
// Script#/Libraries/Node/Azure
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// RoleInstance.cs
// Script#/Libraries/Node/Azure
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// RoleStatus.cs
// Script#/Libraries/Node/Azure
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// CloudBlob.cs
// Script#/Libraries/Node/Azure
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// CloudBlobContainer.cs
// Script#/Libraries/Node/Azure
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// CloudBlobContainerListContinuation.cs
// Script#/Libraries/Node/Azure
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// CloudBlobLease.cs
// Script#/Libraries/Node/Azure
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// CloudBlobListContinuation.cs
// Script#/Libraries/Node/Azure
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// CloudBlobService.cs
// Script#/Libraries/Node/Azure
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// TODO: ACLs
// TODO: Page blobs
// TODO: Shared access signatures
// TODO: Metadata/properties
// CloudBlockBlob.cs
// Script#/Libraries/Node/Azure
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// CloudQueue.cs
// Script#/Libraries/Node/Azure
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// CloudQueueListContinuation.cs
// Script#/Libraries/Node/Azure
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// CloudQueueMessage.cs
// Script#/Libraries/Node/Azure
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// CloudQueueService.cs
// Script#/Libraries/Node/Azure
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// TODO: Properties, metadata related APIs
// TODO: Does azure sdk support shared access signature functionality for tables?
// CloudTable.cs
// Script#/Libraries/Node/Azure
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// CloudTableEntity.cs
// Script#/Libraries/Node/Azure
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// CloudTableListContinuation.cs
// Script#/Libraries/Node/Azure
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// CloudTableQuery.cs
// Script#/Libraries/Node/Azure
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// CloudTableQueryContinuation.cs
// Script#/Libraries/Node/Azure
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// CloudTableService.cs
// Script#/Libraries/Node/Azure
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// TODO: Properties, metadata related APIs
// TODO: Does azure sdk support shared access signature functionality for tables?
// AsyncCallback.cs
// Script#/Libraries/Node/Core
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// IEventEmitter.cs
// Script#/Libraries/Node/Core
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// Node.cs
// Script#/Libraries/Node/Core
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// The global Node object.
/// </summary>
// Process.cs
// Script#/Libraries/Node/Core
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// Process.cs
// Script#/Libraries/Node/Core
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// Process.cs
// Script#/Libraries/Node/Core
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// ScriptContext.cs
// Script#/Libraries/Node/Core
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// ScriptEngine.cs
// Script#/Libraries/Node/Core
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// ScriptInstance.cs
// Script#/Libraries/Node/Core
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// Buffer.cs
// Script#/Libraries/Node/Core
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// Console.cs
// Script#/Libraries/Node/Core
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// Buffer.cs
// Script#/Libraries/Node/Core
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// Buffer.cs
// Script#/Libraries/Node/Core
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// FileDescriptor.cs
// Script#/Libraries/Node/Core
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// FileStats.cs
// Script#/Libraries/Node/Core
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// FileSystem.cs
// Script#/Libraries/Node/Core
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// FileSystemChange.cs
// Script#/Libraries/Node/Core
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// FileSystemListener.cs
// Script#/Libraries/Node/Core
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// FileSystemWatcher.cs
// Script#/Libraries/Node/Core
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// FileSystemWatchOptions.cs
// Script#/Libraries/Node/Core
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// LineReader.cs
// Script#/Libraries/Node/Core
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// LineReaderOptions.cs
// Script#/Libraries/Node/Core
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// Path.cs
// Script#/Libraries/Node/Core
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// ReadableStream.cs
// Script#/Libraries/Node/Core
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// ReadStream.cs
// Script#/Libraries/Node/Core
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// ReadStreamOptions.cs
// Script#/Libraries/Node/Core
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// REPL.cs
// Script#/Libraries/Node/Core
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// REPLEvaluator.cs
// Script#/Libraries/Node/Core
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// REPLOptions.cs
// Script#/Libraries/Node/Core
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// WritableStream.cs
// Script#/Libraries/Node/Core
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// WriteStream.cs
// Script#/Libraries/Node/Core
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// WriteStreamOptions.cs
// Script#/Libraries/Node/Core
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// Http.cs
// Script#/Libraries/Node/Core
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// HttpClientOptions.cs
// Script#/Libraries/Node/Core
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// HttpClientRequest.cs
// Script#/Libraries/Node/Core
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// HttpClientResponse.cs
// Script#/Libraries/Node/Core
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// HttpListener.cs
// Script#/Libraries/Node/Core
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// Http.cs
// Script#/Libraries/Node/Core
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// HttpServer.cs
// Script#/Libraries/Node/Core
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// HttpServerRequest.cs
// Script#/Libraries/Node/Core
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// HttpServerResponse.cs
// Script#/Libraries/Node/Core
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// HttpStatus.cs
// Script#/Libraries/Node/Core
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// HttpStatusCode.cs
// Script#/Libraries/Node/Core
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// IPAddressType.cs
// Script#/Libraries/Node/Core
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// IPAddressType.cs
// Script#/Libraries/Node/Core
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// Socket.cs
// Script#/Libraries/Node/Core
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// Url.cs
// Script#/Libraries/Node/Core
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// Socket.cs
// Script#/Libraries/Node/Core
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// Url.cs
// Script#/Libraries/Node/Core
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// Url.cs
// Script#/Libraries/Node/Core
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// AssemblyInfo.cs
// Script#/Libraries/Node/Core
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// Express.cs
// Script#/Libraries/Node/Express
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// ExpressApplication.cs
// Script#/Libraries/Node/Express
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// ExpressChain.cs
// Script#/Libraries/Node/Express
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// TODO: Fix this...
// ExpressCookieOptions.cs
// Script#/Libraries/Node/Express
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// ExpressErrorHandler.cs
// Script#/Libraries/Node/Express
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// ExpressHandler.cs
// Script#/Libraries/Node/Express
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// ExpressMiddleware.cs
// Script#/Libraries/Node/Express
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// TODO: Fix this...
// ExpressParameterHandler.cs
// Script#/Libraries/Node/Express
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// TODO: Fix this...
// ExpressRoute.cs
// Script#/Libraries/Node/Express
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// ExpressServerRequest.cs
// Script#/Libraries/Node/Express
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// ExpressServerResponse.cs
// Script#/Libraries/Node/Express
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// ExpressSettings.cs
// Script#/Libraries/Node/Express
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// ExpressTemplateEngine.cs
// Script#/Libraries/Node/Express
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// AssemblyInfo.cs
// Script#/Libraries/Node/Express
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// MongoClient.cs
// Script#/Libraries/Node/Mongo
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// MongoCollection.cs
// Script#/Libraries/Node/Mongo
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// MongoConnector.cs
// Script#/Libraries/Node/Mongo
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// MongoCursor.cs
// Script#/Libraries/Node/Mongo
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// MongoDatabase.cs
// Script#/Libraries/Node/Mongo
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// MongoServer.cs
// Script#/Libraries/Node/Mongo
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// AssemblyInfo.cs
// Script#/Libraries/Node/Mongo
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// GraphDatabase.cs
// Script#/Libraries/Node/Neo4J
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// The class corresponding to a Neo4j graph database. Start here.
/// </summary>
/// <summary>
/// Construct a new client for the Neo4j graph database available at the given (root) URL.
/// </summary>
/// <param name="url">The root URL where the Neo4j graph database is available, e.g. 'http://localhost:7474/'. This URL should include HTTP Basic Authentication info if needed, e.g. 'http://user:password@example.com/'.</param>
/// <example><code>Graph db = new Graph("http://localhost:7474");</code></example>
/// <summary>
/// Construct a new client for the Neo4j graph database available at the given (root) URL. 
/// </summary>
/// <param name="opts">
/// <para>url</para>: The root URL where the Neo4j graph database is available, e.g. 'http://localhost:7474/'. This URL should include HTTP Basic Authentication info if needed, e.g. 'http://user:password@example.com/'.
/// <para>proxy</para>: An optional proxy URL for all requests.
/// </param>
/// <example><code>Graph db = new Graph(new Dictionary("url", "http://localhost:7474"));</code></example>
/// <summary>
/// Create and immediately return a new, unsaved node with the given properties.
/// Note: This node will not be persisted to the database until and unless its save() method is called.
/// </summary>
/// <param name="data">The properties this new node should have.</param>
/// <returns>Node</returns>
/// <summary>
/// Execute and "return" (via callback) the results of the given Gremlin script, optionally passing along the given script parameters 
/// (recommended to avoid Gremlin injection security vulnerabilities). Any values in the returned results that represent nodes, relationships 
/// or paths are returned as <see cref="GraphNode"/>, <see cref="GraphRelationship"/> or <see cref="GraphPath"/> instances.
/// </summary>
/// <param name="script">The Gremlin script. Can be multi-line.</param>
/// <param name="parameters">A map of parameters for the Gremlin script.</param>
/// <param name="callback">Returns List&lt;object&gt;</param>
/// <example>
/// <code>
///     var script = "g.v(userId).out('likes')";
///
///     var params = {
///       userId: currentUser.id
///     };
///
///     db.execute(script, params, function (err, likes) {
///       if (err) throw err;
///       likes.forEach(function (node) {
///         // ...
///        });
///     });
/// </code>
/// </example>
/// <summary>
/// Fetch and "return" (via callback) the node indexed under the given property and value in the given index. If none exists, returns undefined.
/// Note: With this method, at most one node is returned. See <see cref="GetIndexedNodes"/> for returning multiple nodes.
/// </summary>
/// <param name="index">The name of the index, e.g. 'node_auto_index'.</param>
/// <param name="property">The name of the property, e.g. 'username'.</param>
/// <param name="value">The value of the property, e.g. 'aseemk'.</param>
/// <param name="callback">Returns Node</param>
/// <summary>
/// Fetch and "return" (via callback) the nodes indexed under the given property and value in the given index. If no such nodes exist, an empty array is returned.
/// Note: This method will return multiple nodes if there are multiple hits. See #getIndexedNode for returning at most one node.
/// </summary>
/// <param name="index">The name of the index, e.g. 'node_auto_index'.</param>
/// <param name="property">The name of the property, e.g. 'platform'.</param>
/// <param name="value">The value of the property, e.g. 'xbox'.</param>
/// <param name="callback">Returns List&lt;Node&gt;</param>
/// <summary>
/// Fetch and "return" (via callback) the relationship indexed under the given property and value in the given index. If none exists, returns undefined.
/// Note: With this method, at most one relationship is returned. See <see cref="GetIndexedRelationships"/> for returning multiple relationships.
/// </summary>
/// <param name="index">The name of the index, e.g. 'relationship_auto_index'.</param>
/// <param name="property">The name of the property, e.g. 'created'.</param>
/// <param name="value">The value of the property, e.g. 1346713658393.</param>
/// <param name="callback">Returns Relationship</param>
/// <summary>
/// Fetch and "return" (via callback) the relationships indexed under the given property and value in the given index. If no such 
/// relationships exist, an empty array is returned.
/// Note: This method will return multiple relationships if there are multiple hits. See <see cref="GetIndexedRelationship"/> for returning at most one relationship.
/// </summary>
/// <param name="index">The name of the index, e.g. 'relationship_auto_index'.</param>
/// <param name="property">The name of the property, e.g. 'favorite'.</param>
/// <param name="value">The value of the property, e.g. true.</param>
/// <param name="callback">Returns List&lt;Relationship&gt;</param>
/// <summary>
/// Fetch and "return" (via callback) the node with the given Neo4j ID.
/// </summary>
/// <param name="id">The integer ID of the node: <example>1234</example></param>
/// <param name="callback">Returns Node</param>
/// <exception>If no node exists with this ID.</exception>
/// <summary>
/// Fetch and "return" (via callback) the relationship with the given Neo4j ID.
/// </summary>
/// <param name="id">The integer ID of the relationship, e.g. 1234.</param>
/// <param name="callback">Returns Relationship</param>
/// <summary>
/// Fetch and "return" (via callback) the Neo4j version as a float.
/// </summary>
/// <param name="callback">Returns Number</param>
/// <summary>
/// Fetch and "return" (via callback) the results of the given Cypher query, optionally passing along the given query parameters 
/// (recommended to avoid Cypher injection security vulnerabilities). The returned results are an array of "rows" (matches), 
/// where each row is a map from key name (as given in the query) to value. Any values that represent nodes, relationships or 
/// paths are returned as <see cref="GraphNode"/>, <see cref="GraphRelationship"/> or <see cref="GraphPath"/> instances.
/// </summary>
/// <param name="query">The Cypher query. Can be multi-line.</param>
/// <param name="parameters">A map of parameters for the Cypher query.</param>
/// <param name="callback">Returns List&lt;object&gt;</param>
/// <example>
/// <code>
///      var query = [
///       'START user=node({userId})',
///       'MATCH (user) -[:likes]-> (other)',
///       'RETURN other'
///     ].join('\n');
///     
///     var params = {
///       userId: currentUser.id
///     };
///     
///     db.query(query, params, function (err, results) {
///       if (err) throw err;
///       var likes = results.map(function (result) {
///         return result['other'];
///       });
///       // ...
///     });
/// </code>
/// </example>
/// <summary>
/// Fetch and "return" (via callback) the nodes matching the given query (in Lucene syntax) from the given index. If no such nodes exist, an empty array is returned.
/// </summary>
/// <param name="index">The name of the index, e.g. node_auto_index.</param>
/// <param name="query">The Lucene query, e.g. foo:bar AND hello:world.</param>
/// <param name="callback">Returns List&lt;Node&gt;</param>
// GraphNode.cs
// Script#/Libraries/Node/Neo4J
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// The class corresponding to a Neo4j node.
/// </summary>
/// <summary>
/// Persist or update this node in the database.
/// </summary>
/// <param name="callback">Returns (via callback) this same Node instance after the save.</param>
/// <summary>
/// Delete this node from the database. This will throw an error if this node has any relationships on it, unless the 
/// force flag is passed in, in which case those relationships are also deleted.
/// </summary>
/// <param name="callback"></param>
/// <param name="force">If this node has any relationships on it, whether those relationships should be deleted as well. Note: For safety, it's recommended to not pass the force flag and instead manually and explicitly delete known relationships beforehand.</param>
/// <summary>
/// Add this node to the given index under the given key-value pair.
/// </summary>
/// <param name="index">The name of the index, e.g. 'users'.</param>
/// <param name="key">The key to index under, e.g. 'username'</param>
/// <param name="value">The value to index under, e.g. 'aseemk'.</param>
/// <param name="callback"></param>
/// <summary>
/// Create and "return" (via callback) a relationship of the given type and with the given properties from this node to another node.
/// </summary>
/// <param name="otherNode">Node to create a relationship to</param>
/// <param name="type">Type of relationship</param>
/// <param name="data">The properties this relationship should have.</param>
/// <param name="callback">Returns a Relationship</param>
/// <summary>
/// Create and "return" (via callback) a relationship of the given type and with the given properties from another node to this node.
/// </summary>
/// <param name="otherNode">Node to create a relationship to</param>
/// <param name="type">Type of relationship</param>
/// <param name="data">The properties this relationship should have.</param>
/// <param name="callback">Returns a Relationship</param>
/// <returns></returns>
/// <summary>
/// Fetch and "return" (via callback) the relationships of the given type or types from or to this node.
/// </summary>
/// <param name="types">The types of Relationships to return</param>
/// <param name="callback">Returns a list of Relationships</param>
/// <returns></returns>
/// <summary>
/// Fetch and "return" (via callback) the relationships of the given type or types from this node.
/// </summary>
/// <param name="types">The types of outgoing Relationships</param>
/// <param name="callback">Returns a list of Relationships</param>
/// <returns></returns>
/// <summary>
/// Fetch and "return" (via callback) the Relationships of the given type or types to this node.
/// </summary>
/// <param name="types">The types of incoming Relationships</param>
/// <param name="callback">Returns a list of Relationships</param>
/// <returns></returns>
/// <summary>
/// Fetch and "return" (via callback) the Relationships of the given type or types from or to this node.
/// </summary>
/// <param name="types">The types of incoming or outgoing Relationships</param>
/// <param name="callback">Returns a list of Relationships</param>
/// <summary>
/// Fetch and "return" (via callback) the nodes adjacent to this one following only relationships of the given type(s) and/or direction(s).
/// </summary>
/// <param name="rels">It can be an array of string types, e.g. ['likes', 'loves'].</param>
/// <param name="callback">Returns a list of Nodes</param>
/// <summary>
/// Fetch and "return" (via callback) the shortest path, if there is one, from this node to the given node. Returns null if no path exists.
/// </summary>
/// <param name="to">Destination node to find the shortest path to</param>
/// <param name="type">The type of relationship to follow.</param>
/// <param name="direction">One of 'in', 'out', or 'all'.</param>
/// <param name="maxDepth">The maximum number of relationships to follow when searching for paths. The default is 1.</param>
/// <param name="algorithm">This needs to be 'shortestPath' for now.</param>
/// <param name="callback">Returns a <see cref="Path"/></param>
// GraphPath.cs
// Script#/Libraries/Node/Neo4J
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// The class corresponding to a Neo4j path.
/// </summary>
/// <summary>
/// The node that this path ends at.
/// </summary>
/// <summary>
/// The length of this path
/// </summary>
/// <summary>
/// The nodes that make up this path.
/// </summary>
/// <summary>
/// The relationships that make up this path.
/// </summary>
/// <summary>
/// The node that this path starts at.
/// </summary>
// GraphPropertyContainer.cs
// Script#/Libraries/Node/Neo4J
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// The abstract class corresponding to a Neo4j property container.
/// </summary>
/// <summary>
/// Whether this property container exists in (has been persisted to) the Neo4j database.
/// </summary>
/// <summary>
/// This property container's properties. This is a map of key-value pairs.
/// </summary>
/// <summary>
/// If this property container exists, its Neo4j integer ID.
/// </summary>
/// <summary>
/// The URL of this property container.
/// </summary>
/// <summary>
/// Delete this property container from the database.
/// </summary>
/// <param name="callback">Callback function to execute when the delete operation is complete</param>
/// <summary>
/// Test whether the given object represents the same property container as this one. They can be separate instances with separate data.
/// </summary>
/// <param name="other">Object to compare for equality</param>
/// <returns>True if equal</returns>
// GraphRelationship.cs
// Script#/Libraries/Node/Neo4J
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// The class corresponding to a Neo4j relationship.
/// </summary>
/// <summary>
/// The node this relationship goes to.
/// </summary>
/// <summary>
/// The node this relationship goes from.
/// </summary>
/// <summary>
/// This relationship's type.
/// </summary>
/// <summary>
/// Add this relationship to the given relationship index under the given property key and value.
/// </summary>
/// <param name="index">The name of the index, e.g. 'likes'.</param>
/// <param name="key">The property key to index under, e.g. 'created'.</param>
/// <param name="value">The property value to index under, e.g. 1346713658393.</param>
/// <param name="callback"></param>
/// <summary>
/// Persist or update this relationship in the database. "Returns" (via callback) this same instance after the save.
/// </summary>
/// <param name="callback">Returns a Relationship</param>
// AssemblyInfo.cs
// Script#/Libraries/Node/Neo4J
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// Restify.cs
// Script#/Libraries/Node/Restify
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// RestifyCallback.cs
// Script#/Libraries/Node/Restify
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// RestifyChain.cs
// Script#/Libraries/Node/Restify
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// RestifyError.cs
// Script#/Libraries/Node/Restify
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// RestifyHandler.cs
// Script#/Libraries/Node/Restify
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// RestifyHttpClient.cs
// Script#/Libraries/Node/Restify
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// RestifyJsonClient.cs
// Script#/Libraries/Node/Restify
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// sends and expects application/json
/// </summary>
// RestifyJsonClientOptions.cs
// Script#/Libraries/Node/Restify
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// Accept header to send
/// </summary>
/// <summary>
/// Amount of time to wait for a socket
/// </summary>
/// <summary>
/// node-dtrace-provider handle
/// </summary>
/// <summary>
/// Will compress data when sent using content-encoding: gzip
/// </summary>
/// <summary>
/// HTTP headers to set in all requests
/// </summary>
/// <summary>
/// bunyan instance
/// </summary>
/// <summary>
/// options to provide to node-retry; defaults to 3 retries
/// </summary>
/// <summary>
/// synchronous callback for interposing headers before request is sent
/// </summary>
/// <summary>
/// Fully-qualified URL to connect to
/// </summary>
/// <summary>
/// user-agent string to use; restify inserts one, but you can override it
/// </summary>
/// <summary>
/// semver string to set the accept-version
/// </summary>
// BunyanLogger.cs
// Script#/Libraries/Node/Restify
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// RestifyRequest.cs
// Script#/Libraries/Node/Restify
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// short hand for the header content-length
/// </summary>
/// <summary>
/// short hand for the header content-type
/// </summary>
/// <summary>
/// url.parse(req.url) href
/// </summary>
/// <summary>
/// A unique request id (x-request-id)
/// </summary>
/// <summary>
/// bunyan logger you can piggyback on
/// </summary>
/// <summary>
/// cleaned up URL path
/// </summary>
/// <summary>
/// the query string only
/// </summary>
/// <summary>
/// Whether this was an SSL request
/// </summary>
/// <summary>
/// the time when this request arrived (ms since epoch)
/// </summary>
/// <summary>
/// Check if the Accept header is present, and includes the given type.
/// </summary>
/// <param name="type"></param>
/// <returns></returns>
/// <summary>
/// Check if the Accept header is present, and includes the given types.
/// </summary>
/// <param name="types"></param>
/// <returns></returns>
/// <summary>
/// Shorthand to grab a new bunyan instance that is a child component of the one restify has:
/// </summary>
/// <param name="name"></param>
/// <returns></returns>
/// <summary>
/// Check if the incoming request contains the Content-Type header field, and it contains the give mime type.
/// </summary>
/// <param name="type"></param>
/// <returns></returns>
// RestifyResponse.cs
// Script#/Libraries/Node/Restify
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// In conjunction with contentType, you can explicitly set the charSet to be written in the content-type header
/// </summary>
/// <summary>
/// short hand for the header content-length
/// </summary>
/// <summary>
/// short hand for the header content-type
/// </summary>
/// <summary>
/// response headers
/// </summary>
/// <summary>
/// HTTP status code
/// </summary>
/// <summary>
/// A unique request id (x-request-id)
/// </summary>
/// <summary>
/// Short-hand for:
/// res.contentType = 'json';
/// res.send({hello: 'world'});
/// </summary>
/// <param name="code">Status code</param>
/// <param name="body">content</param>
/// <summary>
/// Sets the cache-control header. 
/// </summary>
/// <param name="type">type defaults to _public_</param>
/// <param name="options">options currently only takes maxAge.</param>
/// <summary>
/// Sets the response statusCode.
/// </summary>
/// <param name="code">Status code</param>
/// <summary>
/// You can use send() to wrap up all the usual writeHead(), write(), end() calls on the HTTP API of node. 
/// When you call send(), restify figures out how to format the response (see content-negotiation, above), and does that.
/// </summary>
/// <param name="code">Status Code</param>
/// <param name="body">body can be an Object, a Buffer, or an Error. </param>
// RestifyRoute.cs
// Script#/Libraries/Node/Restify
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// RestifyServer.cs
// Script#/Libraries/Node/Restify
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// list of content-types this server can respond with
/// </summary>
/// <summary>
/// bunyan instance
/// </summary>
/// <summary>
/// name of the server
/// </summary>
/// <summary>
/// Once listen() is called, this will be filled in with where the server is running
/// </summary>
/// <summary>
/// default version to use in all routes
/// </summary>
/// <summary>
/// Emitted after a route has finished all the handlers you registered.
/// You can use this to write audit logs, etc. The route parameter will be the Route object that ran.
/// Note that when you are using the default 404/405/BadVersion handlers, this event will still be fired,
/// but route will be null. If you have registered your own listeners for those, this event will not be fired
/// unless you invoke the cb argument that is provided with them.
/// </summary>
/// <summary>
/// When a client request is sent for a URL that does exist, but you have not registered a route for that HTTP verb,
/// restify will emit this event. Note that restify checks for listeners on this event, and if there are none,
/// responds with a default 405 handler. It is expected that if you listen for this event, you respond to the client.
/// </summary>
/// <summary>
/// When a client request is sent for a URL that does not exist, restify will emit this event.
/// Note that restify checks for listeners on this event, and if there are none, responds with a default 404 handler.
/// It is expected that if you listen for this event, you respond to the client.
/// </summary>
/// <summary>
/// Emitted when some handler throws an uncaughtException somewhere in the chain.
/// The default behavior is to just call res.send(error), and let the built-ins in restify handle transforming,
/// but you can override to whatever you want here.
/// </summary>
/// <summary>
/// When a client request is sent for a route that exist, but has a content-type mismatch, restify will emit this event.
/// Note that restify checks for listeners on this event, and if there are none, responds with a default 415 handler.
/// It is expected that if you listen for this event, you respond to the client.
/// </summary>
/// <summary>
/// When a client request is sent for a route that exists, but does not match the version(s) on those routes,
/// restify will emit this event. Note that restify checks for listeners on this event, and if there are none,
/// responds with a default 400 handler. It is expected that if you listen for this event, you respond to the client.
/// </summary>
/// <summary>
/// Restify runs handlers in the order they are registered on a server, 
/// so if you want some common handlers to run before any of your routes, 
/// issue calls to use() before defining routes.
/// </summary>
// RestifyServerGetOptions.cs
// Script#/Libraries/Node/Restify
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// RestifyServerOptions.cs
// Script#/Libraries/Node/Restify
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// If you want to create an HTTPS server, pass in the PEM-encoded certificate and key
/// </summary>
/// <summary>
/// Custom response formatters for res.send()
/// </summary>
/// <summary>
/// If you want to create an HTTPS server, pass in the PEM-encoded certificate and key
/// </summary>
/// <summary>
/// You can optionally pass in a bunyan (https://github.com/trentm/node-bunyan) instance; not required
/// </summary>
/// <summary>
/// By default, this will be set in the Server response header, default is restify
/// </summary>
/// <summary>
/// Any options accepted by node-spdy (https://github.com/indutny/node-spdy)
/// </summary>
/// <summary>
/// Allows you to apply formatting to the value of the header. 
/// The duration is passed as an argument in number of milliseconds to execute.
/// </summary>
/// 
/// <example>
///     app = module.exports = restify.createServer({
///             name: 'restify',
///             version: '1.0.0',
///             responseTimeHeader: 'X-Runtime',
///             responseTimeFormatter: function(durationInMilliseconds) {
///             return durationInMilliseconds / 1000;
///         }
///     });
/// </example>
/// <summary>
/// By default, this will be X-Response-Time
/// </summary>
/// <summary>
/// A default version to set for all routes
/// </summary>
// RestifyStringClient.cs
// Script#/Libraries/Node/Restify
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// del doesn't take content, since you know, it should't:
/// </summary>
/// <summary>
/// Performs an HTTP get; if no payload was returned, obj defaults to {} for you (so you don't get a bunch of null pointer errors).
/// </summary>
/// <param name="path"></param>
/// <param name="callback"></param>
/// <summary>
/// Just like get, but without obj:
/// </summary>
/// <param name="path"></param>
/// <param name="callback"></param>
/// <summary>
/// Takes a complete object to serialize and send to the server.
/// </summary>
/// <param name="path"></param>
/// <param name="content"></param>
/// <param name="callback"></param>
/// <summary>
/// Just like post:
/// </summary>
// RestifyThrottleOptions.cs
// Script#/Libraries/Node/Restify
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// If available, the amount of requests to burst to
/// </summary>
/// <summary>
/// Do throttling on a /32 (source IP)
/// </summary>
/// <summary>
/// If using the built-in storage table, the maximum distinct throttling keys to allow at a time
/// </summary>
/// <summary>
/// Per "key" overrides
/// </summary>
/// <summary>
/// Storage engine; must support put/get
/// </summary>
/// <summary>
/// Do throttling on req.username
/// </summary>
/// <summary>
/// Do throttling on a /32 (X-Forwarded-For)
/// </summary>
// AssemblyInfo.cs
// Script#/Libraries/Node/Restify
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// ActiveXObject.cs
// Script#/Libraries/Web
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// AnchorElement.cs
// Script#/Libraries/Web
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// AreaElement.cs
// Script#/Libraries/Web
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// AudioElement.cs
// Script#/Libraries/Web
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// CanvasElement.cs
// Script#/Libraries/Web
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// CheckBoxElement.cs
// Script#/Libraries/Web
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// ClientRect.cs
// Script#/Libraries/Web
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// ClientRectList.cs
// Script#/Libraries/Web
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// CustomEvent.cs
// Script#/Libraries/Web
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// DataFormat.cs
// Script#/Libraries/Web
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// DataTransfer.cs
// Script#/Libraries/Web
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// DivElement.cs
// Script#/Libraries/Web
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// Document.cs
// Script#/Libraries/Web
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// Adds a listener for the specified event.
/// </summary>
/// <param name="eventName">The name of the event such as 'load'.</param>
/// <param name="listener">The listener to be invoked in response to the event.</param>
/// <summary>
/// Adds a listener for the specified event.
/// </summary>
/// <param name="eventName">The name of the event such as 'load'.</param>
/// <param name="listener">The listener to be invoked in response to the event.</param>
/// <param name="useCapture">Whether the listener wants to initiate capturing the event.</param>
/// <summary>
/// Creates an Attr of the given name. Note that the Attr instance can then be set on an 
/// Element using the setAttributeNode method. To create an attribute with a qualified name 
/// and namespace URI, use the CreateAttributeNS method.
/// </summary>
/// <param name="name">The name of the attribute.</param>
/// <returns>A new Attr object with the nodeName attribute set to name, and localName, prefix, 
/// and namespaceURI set to null. The value of the attribute is the empty string.</returns>
/// <summary>
/// Creates an attribute of the given qualified name and namespace URI.
/// </summary>
/// <param name="namespaceURI">The namespace URI of the attribute to create.</param>
/// <param name="qualifiedName">The qualified name of the attribute to instantiate.</param>
/// <returns>A new Attr object with the given namespace and qualified name.</returns>
/// <summary>
/// Creates an element of the type specified. 
/// To create an element with a qualified name and namespace URI, use the CreateElementNS method.
/// </summary>
/// <param name="tagName">The name of the element type to instantiate.</param>
/// <returns>A new Element object with the nodeName attribute set to tagName, and localName, 
/// prefix, and namespaceURI set to null.</returns>
/// <summary>
/// Creates an element of the given qualified name and namespace URI. 
/// </summary>
/// <param name="namespaceURI">The namespace URI of the element to create.</param>
/// <param name="qualifiedName">The qualified name of the element type to instantiate.</param>
/// <returns>A new Element object with the given namespace and qualified name.</returns>
/// <summary>
/// Returns a NodeList of all the Elements with a given local name and namespace URI in the order in which they are encountered in a preorder traversal of the Document tree.
/// </summary>
/// <param name="namespaceURI">The namespace URI of the elements to match on. The special value "*" matches all namespaces.</param>
/// <param name="localName">The local name of the elements to match on. The special value "*" matches all local names.</param>
/// <returns>A new NodeList object containing all the matched Elements.</returns>
/// <summary>
/// Removes a listener for the specified event.
/// </summary>
/// <param name="eventName">The name of the event such as 'load'.</param>
/// <param name="listener">The listener to be invoked in response to the event.</param>
/// <summary>
/// Removes a listener for the specified event.
/// </summary>
/// <param name="eventName">The name of the event such as 'load'.</param>
/// <param name="listener">The listener to be invoked in response to the event.</param>
/// <param name="useCapture">Whether the listener wants to initiate capturing the event.</param>
// DOMDocumentFragment.cs
// Script#/Libraries/Web
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// DocumentImplementation.cs
// Script#/Libraries/Web
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// DocumentInstance.cs
// Script#/Libraries/Web
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// Adds a listener for the specified event.
/// </summary>
/// <param name="eventName">The name of the event such as 'load'.</param>
/// <param name="listener">The listener to be invoked in response to the event.</param>
/// <summary>
/// Adds a listener for the specified event.
/// </summary>
/// <param name="eventName">The name of the event such as 'load'.</param>
/// <param name="listener">The listener to be invoked in response to the event.</param>
/// <param name="useCapture">Whether the listener wants to initiate capturing the event.</param>
/// <summary>
/// Removes a listener for the specified event.
/// </summary>
/// <param name="eventName">The name of the event such as 'load'.</param>
/// <param name="listener">The listener to be invoked in response to the event.</param>
/// <summary>
/// Removes a listener for the specified event.
/// </summary>
/// <param name="eventName">The name of the event such as 'load'.</param>
/// <param name="listener">The listener to be invoked in response to the event.</param>
/// <param name="useCapture">Whether the listener wants to initiate capturing the event.</param>
// DropEffect.cs
// Script#/Libraries/Web
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// DropEffects.cs
// Script#/Libraries/Web
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// Element.cs
// Script#/Libraries/Web
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// TODO: Is this on Element or just some types of elements?
/// <summary>
/// Adds a listener for the specified event.
/// </summary>
/// <param name="eventName">The name of the event such as 'load'.</param>
/// <param name="listener">The listener to be invoked in response to the event.</param>
/// <param name="useCapture">Whether the listener wants to initiate capturing the event.</param>
/// <summary>
/// Adds a listener for the specified event.
/// </summary>
/// <param name="eventName">The name of the event such as 'load'.</param>
/// <param name="handler">The handler to be invoked in response to the event.</param>
/// <param name="useCapture">Whether the handler wants to initiate capturing the event.</param>
/// <summary>
/// Removes a listener for the specified event.
/// </summary>
/// <param name="eventName">The name of the event such as 'load'.</param>
/// <param name="listener">The listener to be invoked in response to the event.</param>
/// <param name="useCapture">Whether the listener wants to initiate capturing the event.</param>
/// <summary>
/// Removes a listener for the specified event.
/// </summary>
/// <param name="eventName">The name of the event such as 'load'.</param>
/// <param name="handler">The handler to be invoked in response to the event.</param>
/// <param name="useCapture">Whether the handler wants to initiate capturing the event.</param>
// ElementAttribute.cs
// Script#/Libraries/Web
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// ElementAttributeCollection.cs
// Script#/Libraries/Web
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// ElementAttributeName.cs
// Script#/Libraries/Web
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// TODO: Complete this enumeration
// ElementCollection.cs
// Script#/Libraries/Web
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// ElementEvent.cs
// Script#/Libraries/Web
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// ElementEventHandler.cs
// Script#/Libraries/Web
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// ElementEventListener.cs
// Script#/Libraries/Web
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// ElementType.cs
// Script#/Libraries/Web
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// ErrorHandler.cs
// Script#/Libraries/Web
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// Delegate for the window unhandled exception handler.
/// </summary>
/// <param name="message">The error message.</param>
/// <param name="url">The URL of the script where the error occurred.</param>
/// <param name="line">The line number where the error occurred.</param>
/// <returns>true if the error was handled; false otherwise.</returns>
// FileInputElement.cs
// Script#/Libraries/Web
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// FormElement.cs
// Script#/Libraries/Web
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// GestureEvent.cs
// Script#/Libraries/Web
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// History.cs
// Script#/Libraries/Web
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// Retrieves the number of elements in the history list.
/// </summary>
/// <summary>
/// Retrieves the current state object.
/// </summary>
/// <summary>
/// Navigates to the previous page in history.
/// </summary>
/// <summary>
/// Navigates to the next page in history.
/// </summary>
/// <summary>
/// Navigates to a page in history relative to the current page.
/// </summary>
/// <param name="delta">The number of pages in history to go back (negative) or forward (positive).</param>
/// <summary>
/// Pushes the given data onto the session history stack.
/// </summary>
/// <param name="data">The data to serialize into JSON format.</param>
/// <param name="title">The title to place into history.</param>
/// <summary>
/// Pushes the given data onto the session history stack.
/// </summary>
/// <param name="data">The data to serialize into JSON format.</param>
/// <param name="title">The title to place into history.</param>
/// <param name="url">The URL to place into history.</param>
/// <summary>
/// Updates the most recent entry on the history stack.
/// </summary>
/// <param name="data">The data to serialize into JSON format.</param>
/// <param name="title">The title to place into history.</param>
/// <summary>
/// Updates the most recent entry on the history stack.
/// </summary>
/// <param name="data">The data to serialize into JSON format.</param>
/// <param name="title">The title to place into history.</param>
/// <param name="url">The URL to place into history.</param>
// IElementEventHandler.cs
// Script#/Libraries/Web
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// IFrameElement.cs
// Script#/Libraries/Web
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// ImageElement.cs
// Script#/Libraries/Web
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// InputElement.cs
// Script#/Libraries/Web
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// LinkElement.cs
// Script#/Libraries/Web
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// Location.cs
// Script#/Libraries/Web
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// Navigates the window to a new location and updates the browser's history.
/// </summary>
/// <param name="url">The URL to navigate to.</param>
/// <summary>
/// Reload the current document.
/// </summary>
/// <summary>
/// Reload the current document.
/// </summary>
/// <param name="forceGet">If true, the document will be reloaded from the server, otherwise it may be loaded from the browser's cache.</param>
/// <summary>
/// Navigates the window to a new location without updating the browser's history.
/// </summary>
/// <param name="url">The URL to navigate to.</param>
// MapElement.cs
// Script#/Libraries/Web
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// MessageEvent.cs
// Script#/Libraries/Web
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// MutableEvent.cs
// Script#/Libraries/Web
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// Navigator.cs
// Script#/Libraries/Web
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// Returns the name of the browser.
/// </summary>
/// <summary>
/// Returns the version of the browser.
/// </summary>
/// <summary>
/// Retrieves the current language (applies to IE and Opera).
/// </summary>
/// <summary>
/// Returns a string representing the language of the browser (applies to Gecko, Opera, and WebKit).
/// </summary>
/// <summary>
/// Retrieves the default language used by the operating system (applies to IE).
/// </summary>
/// <summary>
/// Retrieves the operating system's natural language setting (applies to IE and Opera).
/// </summary>
/// <summary>
/// Returns the name of the platform.
/// </summary>
/// <summary>
/// Returns a PluginArray object, listing the plugins installed in the application.
/// </summary>
/// <summary>
/// Returns the complete User-Agent header.
/// </summary>
// OptionElement.cs
// Script#/Libraries/Web
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// Orientation.cs
// Script#/Libraries/Web
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// Plugin.cs
// Script#/Libraries/Web
// This source code is subject to terms and conditions of the Microsoft
// Public License. A copy of the license can be found in License.txt.
//
/// <summary>
/// A human readable description of the plugin.
/// </summary>
/// <summary>
/// The filename of the plugin file.
/// </summary>
/// <summary>
/// The name of the plugin.
/// </summary>
/// <summary>
/// The plugin's version number string.
/// </summary>
// PluginArray.cs
// Script#/Libraries/Web
// This source code is subject to terms and conditions of the Microsoft
// Public License. A copy of the license can be found in License.txt.
//
/// <summary>
/// The number of plugins in the array.
/// </summary>
/// <summary>
/// Returns the Plugin at the specified index into the array.
/// </summary>
/// <summary>
/// Returns the Plugin with the specified name.
/// </summary>
/// <param name="name"></param>
/// <returns></returns>
/// <summary>
/// Returns the Plugin at the specified index into the array.
/// </summary>
/// <summary>
/// Returns the Plugin with the specified name.
/// </summary>
// Screen.cs
// Script#/Libraries/Web
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// The screen object represents information about the current desktop.
/// </summary>
// ScriptElement.cs
// Script#/Libraries/Web
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// SelectElement.cs
// Script#/Libraries/Web
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// Adds an element to the end of the <see cref="Options"/> collection.
/// </summary>
/// <param name="option">Element to add to the <see cref="Options"/> collection.</param>
/// <summary>
/// Adds an element to the <see cref="Options"/> collection (IE only).
/// </summary>
/// <param name="option">Element to add to the <see cref="Options"/> collection.</param>
/// <param name="index">Specifies the index position in the collection where the element is placed.</param>
/// <summary>
/// Adds an element to the <see cref="Options"/> collection (Firefox only).
/// </summary>
/// <param name="option">Element to add to the <see cref="Options"/> collection.</param>
/// <param name="before">The element before which to add <paramref name="option"/>.</param>
/// <summary>
/// Removes an <see cref="OptionElement"/> from the <see cref="Options"/> collection.
/// </summary>
/// <param name="index"></param>
// Style.cs
// Script#/Libraries/Web
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>Whether the object contains an accelerator key.</summary>
/// <summary>The background properties of an object.</summary>
/// <summary>How the background image is attached to the object within the document.</summary>
/// <summary>The color behind the content of the object.</summary>
/// <summary>The background image of the object.</summary>
/// <summary>The position of the background of the object.</summary>
/// <summary>The x-coordinate of the backgroundPosition property.</summary>
/// <summary>The y-coordinate of the backgroundPosition property.</summary>
/// <summary>How the background of the object is tiled.</summary>
/// <summary>The properties to draw a border around the object.</summary>
/// <summary>The properties of the bottom border of the object.</summary>
/// <summary>The color of the bottom border of the object.</summary>
/// <summary>The style of the bottom border of the object.</summary>
/// <summary>The width of the bottom border of the object.</summary>
/// <summary>Whether the row and cell borders of a table are joined in a single border or detached.</summary>
/// <summary>The border color of the object.</summary>
/// <summary>The properties of the left border of the object.</summary>
/// <summary>The color of the left border of the object.</summary>
/// <summary>The style of the left border of the object.</summary>
/// <summary>The width of the left border of the object.</summary>
/// <summary>The properties of the right border of the object.</summary>
/// <summary>The color of the right border of the object.</summary>
/// <summary>The style of the right border of the object.</summary>
/// <summary>The width of the right border of the object.</summary>
/// <summary>The style of the borders of the object.</summary>
/// <summary>The properties of the top border of the object.</summary>
/// <summary>The color of the top border of the object.</summary>
/// <summary>The style of the top border of the object.</summary>
/// <summary>The width of the top border of the object.</summary>
/// <summary>The width of the borders of the object.</summary>
/// <summary>The bottom position of the object in relation to the bottom of the next positioned object.</summary>
/// <summary>Whether the object allows floating objects on its left side, right side, or both, so that the next text displays past the floating objects.</summary>
/// <summary>Which part of a positioned object is visible.</summary>
/// <summary>The color of the text of the object.</summary>
/// <summary>The side of the object the text will flow.</summary>
/// <summary>The persisted representation of this style.</summary>
/// <summary>The type of cursor to display as the mouse pointer moves over the object.</summary>
/// <summary>The reading order of content within the object.</summary>
/// <summary>Whether the object is rendered.</summary>
/// <summary>The collection of filters applied to an object. (Specific to Internet Explorer)</summary>
/// <summary>The font properties of the object or one or more of six user-preference fonts.</summary>
/// <summary>The name of the font used for text in the object.</summary>
/// <summary>The font size used for text in the object.</summary>
/// <summary>The font style of the object as italic, normal, or oblique.</summary>
/// <summary>Whether the text of the object is in small capital letters.</summary>
/// <summary>The weight of the font of the object.</summary>
/// <summary>The height of the object.</summary>
/// <summary>The position of the object relative to the left edge of the next positioned object in the document hierarchy.</summary>
/// <summary>The amount of additional space between letters in the object.</summary>
/// <summary>The distance between lines in the object.</summary>
/// <summary>The listStyle properties of the object.</summary>
/// <summary>The image to use as a list-item marker for the object.</summary>
/// <summary>SHow the list-item marker is drawn relative to the content of the object.</summary>
/// <summary>The type of the list-item marker for the object.</summary>
/// <summary>The width of the top, right, bottom, and left margins of the object.</summary>
/// <summary>The height of the bottom margin of the object.</summary>
/// <summary>The width of the left margin of the object.</summary>
/// <summary>The width of the right margin of the object.</summary>
/// <summary>The height of the top margin of the object.</summary>
/// <summary>The maximum height for displayable block level elements.</summary>
/// <summary>The maximum width for displayable block level elements.</summary>
/// <summary>The minimum height for an element.</summary>
/// <summary>The minimum width for displayable block level element.</summary>
/// <summary>The interpolation (resampling) method used to stretch images. (Specific to Internet Explorer)</summary>
/// <summary>How to blend the object into the rendering.</summary>
/// <summary>How to manage the content of the object when the content exceeds the height or width of the object.</summary>
/// <summary>How to manage the content of the object when the content exceeds the width of the object.</summary>
/// <summary>How to manage the content of the object when the content exceeds the height of the object.</summary>
/// <summary>The amount of space to insert between the object and its margin or, if there is a border, between the object and its border.</summary>
/// <summary>The amount of space to insert between the bottom border of the object and the content.</summary>
/// <summary>The amount of space to insert between the left border of the object and the content.</summary>
/// <summary>The amount of space to insert between the right border of the object and the content.</summary>
/// <summary>The amount of space to insert between the top border of the object and the content.</summary>
/// <summary>Whether a page break occurs after the object.</summary>
/// <summary>Whether a page break occurs before the object.</summary>
/// <summary>The bottom position of the object.</summary>
/// <summary>The height of the object.</summary>
/// <summary>The left position of the object.</summary>
/// <summary>The right position of the object.</summary>
/// <summary>The top position of the object.</summary>
/// <summary>The width of the object.</summary>
/// <summary>The bottom position of the object in the units specified by the bottom attribute.</summary>
/// <summary>The height of the object in the units specified by the height attribute.</summary>
/// <summary>The type of positioning used for the object.</summary>
/// <summary>The left position of the object in the units specified by the left attribute.</summary>
/// <summary>The right position of the object in the units specified by the right attribute.</summary>
/// <summary>The top position of the object in the units specified by the top attribute.</summary>
/// <summary>The width of the object in the units specified by the width attribute.</summary>
/// <summary>The position of the object relative to the right edge of the next positioned object in the document hierarchy.</summary>
/// <summary>The side of the object the text will flow.</summary>
/// <summary>Whether the table layout is fixed.</summary>
/// <summary>Whether The text in the object is left-aligned, right-aligned, centered, or justified.</summary>
/// <summary>Indicates whether the text in the object has blink, line-through, overline, or underline decorations.</summary>
/// <summary>Whether the object's text "blinks."</summary>
/// <summary>Whether the text in the object has a line drawn through it.</summary>
/// <summary>Whether the textDecoration property for the object has been set to none.</summary>
/// <summary>Whether the text in the object has a line drawn over it.</summary>
/// <summary>Whether the text in the object is underlined.</summary>
/// <summary>The indentation of the first line of text in the object.</summary>
/// <summary>The type of alignment used to justify text in the object.</summary>
/// <summary>Indicates whether to render ellipses(...) to indicate text overflow.</summary>
/// <summary>The rendering of the text in the object.</summary>
/// <summary>The position of the object relative to the top of the next positioned object in the document hierarchy.</summary>
/// <summary>The vertical alignment of the object.</summary>
/// <summary>Whether the content of the object is displayed.</summary>
/// <summary>Indicates whether lines are automatically broken inside the object.</summary>
/// <summary>The width of the object.</summary>
/// <summary>The amount of additional space between words in the object.</summary>
/// <summary>Whether to break words when the content exceeds the boundaries of its container.</summary>
/// <summary>The direction and flow of the content in the object.</summary>
/// <summary>The stacking order of positioned objects.</summary>
/// <summary>The magnification scale of the object.</summary>
// TableCellElement.cs
// Script#/Libraries/Web
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// TableElement.cs
// Script#/Libraries/Web
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// TableRowElement.cs
// Script#/Libraries/Web
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// TableSectionElement.cs
// Script#/Libraries/Web
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// TextAreaElement.cs
// Script#/Libraries/Web
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// InputElement.cs
// Script#/Libraries/Web
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// TokenList.cs
// Script#/Libraries/Web
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// TouchEvent.cs
// Script#/Libraries/Web
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// TouchInfo.cs
// Script#/Libraries/Web
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// Window.cs
// Script#/Libraries/Web
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// The window object represents the current browser window, and is the top-level
/// scripting object.
/// </summary>
/// <summary>
/// IE only.
/// </summary>
/// <summary>
/// Provides information about the current event being handled.
/// </summary>
/// <summary>
/// Adds a listener for the specified event.
/// </summary>
/// <param name="eventName">The name of the event such as 'load'.</param>
/// <param name="listener">The listener to be invoked in response to the event.</param>
/// <summary>
/// Adds a listener for the specified event.
/// </summary>
/// <param name="eventName">The name of the event such as 'load'.</param>
/// <param name="listener">The listener to be invoked in response to the event.</param>
/// <param name="useCapture">Whether the listener wants to initiate capturing the event.</param>
/// <summary>
/// Displays a message box containing the specified message text.
/// </summary>
/// <param name="message">The text of the message.</param>
/// <summary>
/// Displays a message box containing the specified value converted
/// into a string.
/// </summary>
/// <param name="b">The boolean to display.</param>
/// <summary>
/// Displays a message box containing the specified value converted
/// into a string.
/// </summary>
/// <param name="d">The date to display.</param>
/// <summary>
/// Displays a message box containing the specified value converted
/// into a string.
/// </summary>
/// <param name="n">The number to display.</param>
/// <summary>
/// Displays a message box containing the specified value converted
/// into a string.
/// </summary>
/// <param name="o">The object to display.</param>
/// <summary>
/// Decodes a string of data which has been encoded using base-64 encoding.
/// For use with Unicode or UTF-8 strings.
/// </summary>
/// <param name="base64EncodedData">Base64 encoded string</param>
/// <returns>String of Binary data</returns>
/// <summary>
/// Creates a base-64 encoded ASCII string from a "string" of binary data.
/// Please note that this is not suitable for raw Unicode strings!
/// </summary>
/// <param name="stringToEncode">String of binary data</param>
/// <returns>Base64 string</returns>
/// <summary>
/// Prompts the user with a yes/no question.
/// </summary>
/// <param name="message">The text of the question.</param>
/// <returns>true if the user chooses yes; false otherwise.</returns>
/// <summary>
/// Prompts the user to enter a value.
/// </summary>
/// <param name="message">The text of the prompt.</param>
/// <returns>The value entered by the user.</returns>
/// <summary>
/// Prompts the user to enter a value.
/// </summary>
/// <param name="message">The text of the prompt.</param>
/// <param name="defaultValue">The default value for the prompt.</param>
/// <returns>The value entered by the user.</returns>
/// <summary>
/// Removes a listener for the specified event.
/// </summary>
/// <param name="eventName">The name of the event such as 'load'.</param>
/// <param name="listener">The listener to be invoked in response to the event.</param>
/// <summary>
/// Removes a listener for the specified event.
/// </summary>
/// <param name="eventName">The name of the event such as 'load'.</param>
/// <param name="listener">The listener to be invoked in response to the event.</param>
/// <param name="useCapture">Whether the listener wants to initiate capturing the event.</param>
/// <summary>
/// Delegate that indicates the ability of the browser
/// to show a modal dialog.
/// </summary>
/// <remarks>
/// Not all browsers support this function, so code using
/// this needs to check for existence of the feature or the browser.
/// </remarks>
// WindowInstance.cs
// Script#/Libraries/Web
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// The window object represents the current browser window, and is the top-level
/// scripting object.
/// </summary>
/// <summary>
/// Adds a listener for the specified event.
/// </summary>
/// <param name="eventName">The name of the event such as 'load'.</param>
/// <param name="listener">The listener to be invoked in response to the event.</param>
/// <summary>
/// Adds a listener for the specified event.
/// </summary>
/// <param name="eventName">The name of the event such as 'load'.</param>
/// <param name="listener">The listener to be invoked in response to the event.</param>
/// <param name="useCapture">Whether the listener wants to initiate capturing the event.</param>
/// <summary>
/// Removes a listener for the specified event.
/// </summary>
/// <param name="eventName">The name of the event such as 'load'.</param>
/// <param name="listener">The listener to be invoked in response to the event.</param>
/// <summary>
/// Removes a listener for the specified event.
/// </summary>
/// <param name="eventName">The name of the event such as 'load'.</param>
/// <param name="listener">The listener to be invoked in response to the event.</param>
/// <param name="useCapture">Whether the listener wants to initiate capturing the event.</param>
// ApplicationCache.cs
// Script#/Libraries/Web
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// Gets the current status of the application cache.
/// </summary>
/// <summary>
/// Replaces the active cache with the latest version.
/// </summary>
/// <summary>
/// Manually triggers the update process.
/// </summary>
// ApplicationCacheEvent.cs
// Script#/Libraries/Web
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// Represents an event raised by the Application Cache.
/// </summary>
/// <summary>
/// Raised when the update process finishes for the first time
/// </summary>
/// <summary>
/// Raised when the cache update process begins.
/// </summary>
/// <summary>
/// Raised when the update process begins downloading resources
/// in the manifest file.
/// </summary>
/// <summary>
/// Raised when an error occurs.
/// </summary>
/// <summary>
/// Raised when the update process finishes but the manifest
/// file does not change.
/// </summary>
/// <summary>
/// Raised when each resource in the manifest file begins to download.
/// </summary>
/// <summary>
/// Raised when there is an existing application cache,
/// the update process finishes, and there is a new application
/// cache ready for use.
/// </summary>
// ApplicationCacheStatus.cs
// Script#/Libraries/Web
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// Indicates the status of the application cache.
/// </summary>
/// <summary>
/// The object isnt associated with an application cache.
/// </summary>
/// <summary>
/// The cache is idle, i.e. there are no outstanding checks or
/// downloads in progress.
/// </summary>
/// <summary>
/// The update has started but the resources are not downloaded yet.
/// </summary>
/// <summary>
/// The resources are being downloaded into the cache.
/// </summary>
/// <summary>
/// Resources have finished downloading and the new cache
/// is ready to be used.
/// </summary>
/// <summary>
/// Resources hare finished downloading, but are obsolete.
/// </summary>
// Storage.cs
// Script#/Libraries/Web
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// Blob.cs
// Script#/Libraries/Web
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// File.cs
// Script#/Libraries/Web
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// FileError.cs
// Script#/Libraries/Web
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// FileList.cs
// Script#/Libraries/Web
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// FileProgressEvent.cs
// Script#/Libraries/Web
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// FileReader.cs
// Script#/Libraries/Web
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// Indicates the state of the FileReader. This will be one of the State constants. Read only.
/// </summary>
// File or Blob data
/// <summary>
/// Adds a listener for the specified event.
/// </summary>
/// <param name="eventName">The name of the event such as 'load'.</param>
/// <param name="listener">The listener to be invoked in response to the event.</param>
/// <param name="useCapture">Whether the listener wants to initiate capturing the event.</param>
/// <summary>
///     Adds a listener for the specified event.
/// </summary>
/// <param name="eventName">The name of the event such as 'load'.</param>
/// <param name="handler">The handler to be invoked in response to the event.</param>
/// <param name="useCapture">Whether the handler wants to initiate capturing the event.</param>
/// <summary>
/// Removes a listener for the specified event.
/// </summary>
/// <param name="eventName">The name of the event such as 'load'.</param>
/// <param name="listener">The listener to be invoked in response to the event.</param>
/// <param name="useCapture">Whether the listener wants to initiate capturing the event.</param>
/// <summary>
/// Removes a listener for the specified event.
/// </summary>
/// <param name="eventName">The name of the event such as 'load'.</param>
/// <param name="handler">The handler to be invoked in response to the event.</param>
/// <param name="useCapture">Whether the handler wants to initiate capturing the event.</param>
// FileReader.cs
// Script#/Libraries/Web
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// FileReadyState.cs
// Script#/Libraries/Web
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// DBCursor.cs
// Script#/Libraries/Web
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// DBCursorWithValue.cs
// Script#/Libraries/Web
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// DBDatabase.cs
// Script#/Libraries/Web
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// DBEvent.cs
// Script#/Libraries/Web
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// DBEventTarget.cs
// Script#/Libraries/Web
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// DBFactory.cs
// Script#/Libraries/Web
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// DBIndex.cs
// Script#/Libraries/Web
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// DBIndexParameters.cs
// Script#/Libraries/Web
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// DBObjectStore.cs
// Script#/Libraries/Web
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// DBObjectStoreParameters.cs
// Script#/Libraries/Web
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// DBOpenDBRequest.cs
// Script#/Libraries/Web
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// DBRequest.cs
// Script#/Libraries/Web
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// DBTransaction.cs
// Script#/Libraries/Web
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// DBVersionChangeEvent.cs
// Script#/Libraries/Web
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// SqlDatabase.cs
// Script#/Libraries/Web
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// SqlError.cs
// Script#/Libraries/Web
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// SqlResultSet.cs
// Script#/Libraries/Web
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// SqlResultSetRow.cs
// Script#/Libraries/Web
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// SqlResultSetRowList.cs
// Script#/Libraries/Web
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// SqlTransaction.cs
// Script#/Libraries/Web
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// ControlRange.cs
// Script#/Libraries/Web
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// Range.cs
// Script#/Libraries/Web
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// Selection.cs
// Script#/Libraries/Web
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// Represents the active selection, which is a highlighted block of text, and/or other elements in the document on which a user or a script
/// can carry out some action.
/// </summary>
// TextRange.cs
// Script#/Libraries/Web
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// VisualFilter.cs
// Script#/Libraries/Web
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// VisualFilterCollection.cs
// Script#/Libraries/Web
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// VisualTransition.cs
// Script#/Libraries/Web
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// VisualTransitionState.cs
// Script#/Libraries/Web
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// CanvasContext.cs
// Script#/Libraries/Web
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// CanvasContext2D.cs
// Script#/Libraries/Web
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// CompositeOperation.cs
// Script#/Libraries/Web
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// A (B is ignored). Display the source image instead of the destination image.
/// </summary>
/// <summary>
/// B atop A. Display the destination image wherever both images are opaque.
/// Display the source image wherever the source image is opaque but the
/// destination image is transparent. Display transparency elsewhere.
/// </summary>
/// <summary>
/// B in A. Display the destination image wherever both the destination image and
/// source image are opaque. Display transparency elsewhere.
/// </summary>
/// <summary>
/// B out A. Display the destination image wherever the destination image is opaque
/// and the source image is transparent. Display transparency elsewhere.
/// </summary>
/// <summary>
/// B over A. Display the destination image wherever the destination image is opaque.
/// Display the source image elsewhere. 
/// </summary>
/// <summary>
/// A plus B. Display the sum of the source image and destination image, with color
/// values approaching 1 as a limit.
/// </summary>
/// <summary>
/// A atop B. Display the source image wherever both images are opaque. Display the
/// destination image wherever the destination image is opaque but the source image
/// is transparent. Display transparency elsewhere.
/// </summary>
/// <summary>
/// A in B. Display the source image wherever both the source image and destination
/// image are opaque. Display transparency elsewhere.
/// </summary>
/// <summary>
/// A out B. Display the source image wherever the source image is opaque and the
/// destination image is transparent. Display transparency elsewhere.
/// </summary>
/// <summary>
/// A over B. Display the source image wherever the source image is opaque. Display the
/// destination image elsewhere. This is the default option.
/// </summary>
/// <summary>
/// A xor B. Exclusive OR of the source image and destination image.
/// </summary>
// Gradient.cs
// Script#/Libraries/Web
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// ImageData.cs
// Script#/Libraries/Web
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// LineCap.cs
// Script#/Libraries/Web
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// LineJoin.cs
// Script#/Libraries/Web
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// Pattern.cs
// Script#/Libraries/Web
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// PixelArray.cs
// Script#/Libraries/Web
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// Rendering.cs
// Script#/Libraries/Web
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// TextAlign.cs
// Script#/Libraries/Web
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// TextBaseline.cs
// Script#/Libraries/Web
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// TextMetrics.cs
// Script#/Libraries/Web
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// GeoCoordinates.cs
// Script#/Libraries/Web
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// Geolocation.cs
// Script#/Libraries/Web
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// GeolocationError.cs
// Script#/Libraries/Web
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// GeolocationErrorCode.cs
// Script#/Libraries/Web
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// GeolocationOptions.cs
// Script#/Libraries/Web
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// GeolocationService.cs
// Script#/Libraries/Web
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// StyleCharsetRule.cs
// Script#/Libraries/Web
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// StyleCSSRule.cs
// Script#/Libraries/Web
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// StyleFontFaceRule.cs
// Script#/Libraries/Web
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// StyleImportRule.cs
// Script#/Libraries/Web
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// StyleMediaList.cs
// Script#/Libraries/Web
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// StyleMediaRule.cs
// Script#/Libraries/Web
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// StylePageRule.cs
// Script#/Libraries/Web
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// StyleRule.cs
// Script#/Libraries/Web
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// StyleRuleList.cs
// Script#/Libraries/Web
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// StyleRule.cs
// Script#/Libraries/Web
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// StyleSheet.cs
// Script#/Libraries/Web
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// StyleSheetList.cs
// Script#/Libraries/Web
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// HttpVerb.cs
// Script#/Libraries/Web
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// ReadyState.cs
// Script#/Libraries/Web
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// XMLHttpRequest.cs
// Script#/Libraries/Web
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// AssemblyInfo.cs
// Script#/Libraries/Web
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// XmlAttribute.cs
// Script#/Libraries/Web
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// XmlDocument.cs
// Script#/Libraries/Web
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// Represents the hierarchy of node objects parsed from XML markup.
/// </summary>
// XmlDocumentParser.cs
// Script#/Libraries/Web
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// XmlNamedNodeMap.cs
// Script#/Libraries/Web
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// XmlNode.cs
// Script#/Libraries/Web
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// XmlNodeList.cs
// Script#/Libraries/Web
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// XmlNodeType.cs
// Script#/Libraries/Web
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// XmlSerializer.cs
// Script#/Libraries/Web
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// XmlText.cs
// Script#/Libraries/Web
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// ScriptDeployTask.cs
// Script#/Core/Build
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// If the file already exists, make sure it is not read-only, so
// it can be overrwritten.
/* overwrite */ true);
// Copy the file, and then make sure it is not read-only (for example, if the
// source file for a referenced script is read-only).
// AssemblyInfo.cs
// Script#/Common
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// ScriptAvoidEval.cs
// Script#/Tools/FxCop
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// ScriptAvoidLiteralScript.cs
// Script#/Tools/FxCop
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// ScriptInvalidSelector.cs
// Script#/Tools/FxCop
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// If the declaring type has [Imported] applied, we have no choice but to allow the field to exist
// If the type is a ScriptObject, allow the field to exist
// AssemblyInfo.cs
// Script#/Tools/FxCop
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// WebBrowser.cs
// Script#/Tools/Testing
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// WebTest.cs
// Script#/Tools/Testing
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/* initialSignaledState */ false);
/* succeeded */ false, String.Empty);
// WebTestResult.cs
// Script#/Tools/Testing
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// AssemblyInfo.cs
// Script#/Tools/Testing
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// HttpMessage.cs
// Script#/Tools/Testing
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// 10MB
// Finished reading headers
// Strip any spaces
// HttpServer.cs
// Script#/Tools/Testing
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// WebTestHttpServer.cs
// Script#/Tools/Testing
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
//localhost/", UriKind.Absolute);
// Get the cleaned up path with the leading slash trimmed off
// WebTestLogEventArgs.cs
// Script#/Tools/Testing
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// $safeitemrootname$.cs
//
// $safeitemrootname$.cs
//
// Add script that runs once the document is ready for being
// consumed by script.
// $safeitemname$Plugin.cs
//
/* name/value pairs corresponding to default options */);
// TODO: Consume the matched elements
// TODO: Replace with fields corresponding to options for the plugin
// This class allows calling into the plugin from an application or another plugin.
// $safeitemrootname$.cs
//
// Add script that runs on startup as the script is loaded into
// the page
// $safeitemrootname$.cs
//
// TODO: Uncomment and specify n to indicate the number of
//       asserts that will be invoked.
// Assert.ExpectAsserts(n);
// TODO: Uncomment and specify n to indicate the number of
//       asserts that will be invoked.
// Assert.ExpectAsserts(n);
// TODO: Start async work
// TODO: From within the async callback
// TestEngine.ResumeOnAsyncCompleted();
// AssemblyInfo.cs
//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
// A script template using an AMD pattern for declaring dependencies consumed
// by the generated script.
/*! {name}.js {version}
// Page.cs
//
// TODO: Implement your startup code here
//       You can add other classes within your project for functionality
//       making up your application.
// AssemblyInfo.cs
//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
// A script template providing an AMD pattern-based structure around
// the generated script.
/*! {name}.js {version}
// Class1.cs
//
// AssemblyInfo.cs
//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
// Class1.cs
//
// AssemblyInfo.cs
//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
// A script template using an AMD pattern for declaring dependencies consumed
// by the generated script.
/*! {name}.js {version}
// Page.cs
//
// TODO: Add script that runs once the document is ready for being
//       consumed by script.
//       You can also add other classes comprising your application
//       to the project.
// AssemblyInfo.cs
//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
// A script template allows customization of the generated script.
/*! {name}.js {version}
// $safeprojectname$Plugin.cs
//
/* name/value pairs corresponding to default options */);
// TODO: Consume the matched elements
// TODO: Replace with fields corresponding to options for the plugin
// This class allows calling into the plugin from an application or another plugin.
// AssemblyInfo.cs
//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
// A script template allows customization of the generated script.
// {name}.js {version}
// Class1.cs
//
// A basic Hello-World app. Replace with your own application...
//127.0.0.1:1337/");
// AssemblyInfo.cs
//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
// A script template providing a CommonJS module structure around
// the generated script.
// {name}.js {version}
// {description}
// Class1.cs
//
// AssemblyInfo.cs
//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
// TestClass1.cs
//
// TODO: Add other deployment items that are needed for the test, to be
//       placed within the web site created for the test.
//       For example, mscorlib scripts, test scripts and dependencies
//       The first parameter to DeploymentItem is a solution-relative
//       path to the file, and the 2nd parameter is to deployment directory
//       relative to the test output directory.
// This starts the web server rooted at the specified directory
// on http://localhost:<port>
// Use TestInitialize to run code before running each test 
// [TestInitialize()]
// public void OnTestInitialize() {
// }
//
// Use TestCleanup to run code after each test has run
// [TestCleanup()]
// public void OnTestCleanup() {
// }
//
// TestClass1.htm is in the Web directory, and gets deployed along with all
// content of the Web directory per the metadata on the class.
// You need to edit it to include HTML content and scripts you need to run
// the test.
// Alternatively you can also use _webTest.CreatePage to register some
// content you create dynamically in the test for serving from the web server.
// BasicTests.cs
// Script#/Tests/ScriptSharp
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// ExpressionTests.cs
// Script#/Tests/ScriptSharp
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// LibraryTests.cs
// Script#/Tests/ScriptSharp
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// MemberTests.cs
// Script#/Tests/ScriptSharp
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// TypeSystemTests.cs
// Script#/Tests
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// StatementTests.cs
// Script#/Tests/ScriptSharp
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// TypeTests.cs
// Script#/Tests/ScriptSharp
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// ValidationTests.cs
// Script#/Tests/ScriptSharp
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// BrowserTest.cs
// Script#/Tests
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// Compilation.cs
// Script#/Tests/ScriptSharp
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// CompilationInput.cs
// Script#/Tests/ScriptSharp
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// CompilationOutput.cs
// Script#/Tests/ScriptSharp
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// CompilationTest.cs
// Script#/Tests/ScriptSharp
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// Get the path to the ScriptSharp build output folder
// Get the path to the test cases folder
// Files within the test cases folder are organized into a two level folder
// structure ... group\test
// where group is mapped to the test class name, and test is mapped to the test name.
// Get the path to the tools folder
// File.WriteAllText(baselinePath, output);
// SimpleCompilation.cs
// Script#/Tests
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// AssemblyInfo.cs
// Script#/Tests/ScriptSharp
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// Represents a card suit.
/// </summary>
/// <summary>
/// The hearts.
/// </summary>
/// <summary>
/// The spades.
/// </summary>
/// <summary>
/// The clubs.
/// </summary>
/// <summary>
/// The diamonds.
/// </summary>
/// <summary>
/// Represents a color.
/// </summary>
/// <summary>
/// The color green.
/// </summary>
/// <summary>
/// Represents a base class.
/// </summary>
/// <summary>
/// A constant field.
/// </summary>
/// <summary>
/// A static field.
/// </summary>
/// <summary>
/// An instance field.
/// </summary>
/// <summary>
/// A private field.
/// </summary>
/// <summary>
/// Initializes a new instance of the BaseClass class.
/// </summary>
/// <param name="domElement">The parent element.</param>
/// <param name="name">The name.</param>
/// <param name="count">The count.</param>
/// <summary>
/// Gets or sets the name.
/// </summary>
/// <summary>
/// Gets or sets the element.
/// </summary>
/// <summary>
/// Gets the count.
/// </summary>
/// <summary>
/// Gets the private name.
/// </summary>
/// <summary>
/// Gets the total count.
/// </summary>
/// <summary>
/// Adds or removes a delegate for the Initialized event.
/// </summary>
/// <summary>
/// Gets item by identifiers.
/// </summary>
/// <param name="ids">The identifiers.</param>
/// <returns>The item.</returns>
/// <summary>
/// Empty method.
/// </summary>
/// <summary>
/// Method with return value.
/// </summary>
/// <returns>The string.</returns>
/// <summary>
/// Method with params.
/// </summary>
/// <param name="first">The first name.</param>
/// <param name="last">The last name.</param>
/// <summary>
/// Method with both params and return value.
/// </summary>
/// <param name="count">The count.</param>
/// <returns>The set of names.</returns>
/// <summary>
/// Raises the Initialized event.
/// </summary>
/// <summary>
/// Private method.
/// </summary>
/// <param name="count">The count.</param>
/// <summary>
/// A static method.
/// </summary>
/// <param name="length">The length.</param>
/// <summary>
/// Represents a derived class.
/// </summary>
/// <summary>
/// Internal constructor.
/// </summary>
/// <summary>
/// Overriden method with params.
/// </summary>
/// <param name="first">The first name.</param>
/// <param name="last">The last name.</param>
/// <summary>
/// An internal class.
/// </summary>
/// <summary>
/// Represents a record.
/// </summary>
/// <summary>
/// Gets or sets a count.
/// </summary>
/// <summary>
/// Initializes a new instance of the RecordClass class.
/// </summary>
/// <param name="count">A count.</param>
/// <summary>
/// Represents an interface.
/// </summary>
/// <summary>
/// Executes code.
/// </summary>
/// <summary>
/// Class with extension methods.
/// </summary>
/// <summary>
/// Runs.
/// </summary>
// Code.cs
//
// {name}.js
// {name}.js {version}
//
// Code.cs
//
// {name}.js {version}
// {description}
// {copyright}
//
// Generated with Script# {compiler}
// {name}.js
// Sample script...
//example.com").Success(delegate(string html) {
// {name}.js
//
// A series of classes with different combinations of overrides at different
// levels in the class hierarchy. Tests issues #379, #384 as applied to properties,
// methods, and index operators.
// intentionally skip this generation of overrides
// Test getter, method, and index (should accumulate outward through bases)
// Test property setter (should accumulate inward and outward through bases)
// Test index setter (should accumulate inward and outward through bases)
// Application.cs
// Script#/Tools/Preprocessor
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
//projects.nikhilk.net/ScriptSharp.
// CommandLine.cs
// Script#/Tools/Preprocessor
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// FileInputStreamSource.cs
// Script#/Tools/Preprocessor
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// FileOutputStreamSource.cs
// Script#/Tools/Preprocessor
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// IErrorHandler.cs
// Script#/Tools/Preprocessor
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// IStreamResolver.cs
// Script#/Tools/Preprocessor
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// IStreamSource.cs
// Script#/Tools/Preprocessor
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// PreprocessorOptions.cs
// Script#/Tools/Preprocessor
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
/// <summary>
/// Script# pre-processor options.
/// </summary>
// ScriptSharpPreprocessor.cs
// Script#/Tools/Preprocessor
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// CondenserTextReader.cs
// Script#/Tools/Preprocessor
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// Process single line comment to strip it out, unless the
// comment is significant, i.e., //!
// First consume the peeked '/', and then read until we see a new line
// or end of input itself.
// Process multiline comment to strip it out.
// First consume the peeked '*', and then read until we see the
// */ comment terminator.
// PreprocessorException.cs
// Script#/Tools/Preprocessor
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// PreprocessorTextReader.cs
// Script#/Tools/Preprocessor
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
// already seen #else
// #else should be active if no other block was activated
// already seen #else
// duplicate use of same variable
// no longer active
// variable is defined, so the block becomes activated
// AssemblyInfo.cs
// Script#/Tools/Preprocessor
// This source code is subject to terms and conditions of the Apache License, Version 2.0.
//
//www.scriptsharp.com")]
/*
/// <summary>
/// Create a zip file with the files specified.
/// </summary>
/// <example>Create a zip file
/// <code><![CDATA[
/// <ItemGroup>
///     <ZipFiles Include="**\*.*" Exclude="*.zip" />
/// </ItemGroup>
/// <Target Name="Zip">
///     <Zip Files="@(ZipFiles)" 
///         ZipFileName="MSBuild.Community.Tasks.zip" />
/// </Target>
/// ]]></code>
/// Create a zip file using a working directory.
/// <code><![CDATA[
/// <ItemGroup>
///     <RepoFiles Include="D:\svn\repo\**\*.*" />
/// </ItemGroup>
/// <Target Name="Zip">
///     <Zip Files="@(RepoFiles)" 
///         WorkingDirectory="D:\svn\repo" 
///         ZipFileName="D:\svn\repo.zip" />
/// </Target>
/// ]]></code>
/// </example>
/// <summary>
/// Initializes a new instance of the <see cref="T:Zip"/> class.
/// </summary>
/// <summary>
/// Gets or sets the name of the zip file.
/// </summary>
/// <value>The name of the zip file.</value>
/// <summary>
/// Gets or sets the zip level.
/// </summary>
/// <value>The zip level.</value>
/// <remarks>0 - store only to 9 - means best compression</remarks>
/// <summary>
/// Gets or sets the files to zip.
/// </summary>
/// <value>The files to zip.</value>
/// <summary>
/// Gets or sets a value indicating whether this <see cref="T:Zip"/> is flatten.
/// </summary>
/// <value><c>true</c> if flatten; otherwise, <c>false</c>.</value>
/// <remarks>
/// Flattening the zip means that all directories will be removed 
/// and the files will be place at the root of the zip file
/// </remarks>
/// <summary>
/// Gets or sets the comment.
/// </summary>
/// <value>The comment.</value>
/// <summary>
/// Gets or sets the working directory for the zip file.
/// </summary>
/// <value>The working directory.</value>
/// <remarks>
/// The working directory is the base of the zip file.  
/// All files will be made relative from the working directory.
/// </remarks>
/// <summary>
/// When overridden in a derived class, executes the task.
/// </summary>
/// <returns>
/// true if the task successfully executed; otherwise, false.
/// </returns>
// make sure level in range
// add files to zip
// clean up name
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
// Setting ComVisible to false makes the types in this assembly not visible 
// to COM components.  If you need to access a type in this assembly from 
// COM, set the ComVisible attribute to true on that type.
// The following GUID is for the ID of the typelib if this project is exposed to COM
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Build and Revision Numbers 
// by using the '*' as shown below:
// [assembly: AssemblyVersion("1.0.*")]
