________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\BuildScript\BuildScript.cs
////.DependsOn(packageWebApiWin);
//www.nuget.org/api/v2/package")
//www.nuget.org/api/v2/package")
//www.nuget.org/api/v2/package")
//www.nuget.org/api/v2/package")
//www.nuget.org/api/v2/package")
//www.nuget.org/api/v2/package")
//www.nuget.org/api/v2/package")
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\BuildScript\DeploymentScript.cs
//#ass  .\lib\netstandard.dll
//#ass  .\lib\System.Reflection.TypeExtensions.dll
//#ass .\FlubuCore.WebApi\FlubuCore.WebApi.dll
//#ass .\FlubuCore.WebApi\FlubuCore.WebApi.Model.dll
//#ass .\lib\Newtonsoft.Json.dll
//#ass .\lib\LiteDB.dll
//#ass .\lib\System.Security.Cryptography.Algorithms.dll
////Delete old db file if it exists so it doesnt rewrite database at deployed location.
////Delete old db file if it exists so it doesnt rewrite database at deployed location.
// Guid.NewGuid and System.Random are not particularly random. By using a
// cryptographically-secure random number generator, the caller is always
// protected, regardless of use.
// Divide the byte into allowedCharSet-sized groups. If the
// random value falls into the last group and the last group is
// too small to choose from the entire allowedCharSet, ignore
// the value in order to avoid biasing the result.
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\BuildScript\DeployScript.cs
//#ass  .\lib\netstandard.dll
//#ass  .\lib\System.Reflection.TypeExtensions.dll
//#ass .\FlubuCore.WebApi\FlubuCore.WebApi.exe
//#ass .\FlubuCore.WebApi\FlubuCore.WebApi.Model.dll
//#ass .\lib\Newtonsoft.Json.dll
//#ass .\lib\LiteDB.dll
//#ass .\lib\System.Security.Cryptography.Algorithms.dll
/// <summary>
/// For webapi .net462
/// </summary>
////Delete old db file if it exists so it doesnt rewrite database at deployed location.
////Delete old db file if it exists so it doesnt rewrite database at deployed location.
// Guid.NewGuid and System.Random are not particularly random. By using a
// cryptographically-secure random number generator, the caller is always
// protected, regardless of use.
// Divide the byte into allowedCharSet-sized groups. If the
// random value falls into the last group and the last group is
// too small to choose from the entire allowedCharSet, ignore
// the value in order to avoid biasing the result.
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\dotnet-flubu\Program.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\dotnet-flubu\Commanding\FlubuConfigurationProvider.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\dotnet-flubu\Infrastructure\FlubuLoggerProvider.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\dotnet-flubu\Infrastructure\InstallerExtensions.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\dotnet-flubu\Properties\AssemblyInfo.cs
//// General Information about an assembly is controlled through the following
//// set of attributes. Change these attribute values to modify the information
//// associated with an assembly.
//// Setting ComVisible to false makes the types in this assembly not visible
//// to COM components.  If you need to access a type in this assembly from
//// COM, set the ComVisible attribute to true on that type.
//// The following GUID is for the ID of the typelib if this project is exposed to COM
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\Flubu.VisualStudio\VSPackage.cs
//------------------------------------------------------------------------------
// <copyright file="VSPackage.cs" company="Company">
//     Copyright (c) Company.  All rights reserved.
// </copyright>
//------------------------------------------------------------------------------
/// <summary>
/// This is the class that implements the package exposed by this assembly.
/// </summary>
/// <remarks>
/// <para>
/// The minimum requirement for a class to be considered a valid package for Visual Studio
/// is to implement the IVsPackage interface and register itself with the shell.
/// This package uses the helper classes defined inside the Managed Package Framework (MPF)
/// to do it: it derives from the Package class that provides the implementation of the
/// IVsPackage interface and uses the registration attributes defined in the framework to
/// register itself and its components with the shell. These attributes tell the pkgdef creation
/// utility what data to put into .pkgdef file.
/// </para>
/// <para>
/// To get loaded into VS, the package must be referred by &lt;Asset Type="Microsoft.VisualStudio.VsPackage" ...&gt; in .vsixmanifest file.
/// </para>
/// </remarks>
// Info on this package for Help/About
/// <summary>
/// VSPackage GUID string.
/// </summary>
/// <summary>
/// Initializes a new instance of the <see cref="VSPackage"/> class.
/// </summary>
// Inside this method you can place any initialization code that does not require
// any Visual Studio service because at this point the package object is created but
// not sited yet inside Visual Studio environment. The place to do all the other
// initialization is the Initialize method.
/// <summary>
/// Initialization of the package; this method is called right after the package is sited, so this is the place
/// where you can put all the initialization code that rely on services provided by VisualStudio.
/// </summary>
//base.Initialize();
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\Flubu.VisualStudio\VSPackage.Designer.cs
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
/// <summary>
///    A strongly-typed resource class, for looking up localized strings, etc.
/// </summary>
// This class was auto-generated by the StronglyTypedResourceBuilder
// class via a tool like ResGen or Visual Studio.
// To add or remove a member, edit your .ResX file then rerun ResGen
// with the /str option, or rebuild your VS project.
/// <summary>
///    Returns the cached ResourceManager instance used by this class.
/// </summary>
/// <summary>
///    Overrides the current thread's CurrentUICulture property for all
///    resource lookups using this strongly typed resource class.
/// </summary>
/// <summary>
///    Looks up a localized string similar to VSPackage Extension.
/// </summary>
/// <summary>
///    Looks up a localized string similar to VSPackage Visual Studio Extension Detailed Info.
/// </summary>
/// <summary>
///    Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\Flubu.VisualStudio\Base\TaskRunner\BindingsPersister.cs
//We passed the line we want to be on, so back up
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\Flubu.VisualStudio\Base\TaskRunner\FileTextUtil.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\Flubu.VisualStudio\Base\TaskRunner\ITextUtil.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\Flubu.VisualStudio\Base\TaskRunner\LineRange.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\Flubu.VisualStudio\Base\TaskRunner\Range.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\Flubu.VisualStudio\Base\TaskRunner\TaskRunnerConfig.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\Flubu.VisualStudio\Base\TaskRunner\TaskRunnerConfigBase.cs
/// <summary>
/// TaskRunner icon
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\Flubu.VisualStudio\Base\TaskRunner\TaskRunnerOption.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\Flubu.VisualStudio\Base\TaskRunner\TextUtilExtensions.cs
//Deletes the current bindings elements and move it to the top of the file
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\Flubu.VisualStudio\Base\TaskRunner\TextViewUtil.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\Flubu.VisualStudio\Base\TaskRunner\VsTextViewTextUtil.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\Flubu.VisualStudio\Properties\AssemblyInfo.cs
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
// Setting ComVisible to false makes the types in this assembly not visible 
// to COM components.  If you need to access a type in this assembly from 
// COM, set the ComVisible attribute to true on that type.
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Build and Revision Numbers 
// by using the '*' as shown below:
// [assembly: AssemblyVersion("1.0.*")]
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\Flubu.VisualStudio\TaskRunner\CommandTask.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\Flubu.VisualStudio\TaskRunner\TaskRunnerProvider.cs
//application:,,,/CommandTaskRunner;component/Resources/project.png"));
// Add zero width space
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\Flubu.VisualStudio\TaskRunner\TrimmingStringComparer.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\BuildScript.cs
/// <summary>
/// Build script template.
/// </summary>
//// Adds some default targets like compile etc. Set To None if u don't want default targets.
// Add custom targets to build and dependencies to default target if needed.
//////// fetch.build.version and compile are default Dotnet targets.
////session.GetTarget("fetch.build.version");
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\FlubuException.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\MethodParameterModifier.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\StatusCodes.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Commanding\CommandExecutor.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Commanding\FlubuCommandParser.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Commanding\FlubuConfigurationException.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Commanding\ICommandExecutor.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Commanding\IFlubuCommandParser.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Commanding\IFlubuConfigurationProvider.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Context\BuildPropertiesContext.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Context\BuildPropertiesSession.cs
/// <summary>
/// Used for storing task context properties into session.
/// </summary>
/// <summary>
/// name value dictionary used for storing differend task context properties.
/// </summary>
/// <summary>
/// Property indexer.
/// </summary>
/// <param name="propertyName"></param>
/// <returns></returns>
/// <summary>
/// Get's the property by property name.
/// </summary>
/// <typeparam name="T">Type of returned property</typeparam>
/// <param name="propertyName">The property name</param>
/// <param name="ignoreCase">if true key is not case sensitive. Otherwise it is.</param>
/// <param name="memberName"></param>
/// <returns>The property</returns>
/// <summary>
/// Get's the property by property name.
/// </summary>
/// <typeparam name="T">Type of returned property</typeparam>
/// <param name="propertyName">The property name</param>
/// <param name="defaultValue">Returned value if property is not set in session.</param>
/// <returns>The property</returns>
/// <summary>
/// Checks by property name if property is stored in session.
/// </summary>
/// <param name="propertyName"></param>
/// <returns></returns>
/// <summary>
/// Enumerates all properties
/// </summary>
/// <returns>Enumareted properties.</returns>
/// <summary>
/// Set's property in session.
/// </summary>
/// <typeparam name="T">Type of property.</typeparam>
/// <param name="propertyName">The property name.</param>
/// <param name="propertyValue">The propery value.</param>
/// <summary>
/// Clear all properties from session.
/// </summary>
/// <summary>
/// Removes the specified property from session.
/// </summary>
/// <param name="propertyName">The name of property to be removed.</param>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Context\BuildProps.cs
/// <summary>
/// Build version quality (build version suffix)
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Context\BuildSystem.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Context\BuildSystemType.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Context\CleanUpStore.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Context\DefaultTargets.cs
/// <summary>
/// Target to be added
/// </summary>
/// <summary>
/// Noone of the tearges are added
/// </summary>
/// <summary>
/// Default dotnet target are added (compile...)
/// </summary>
/// <summary>
/// Default dotnet core targets are added
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Context\FlubuSession.cs
/// <summary>
///     Marks the runner as having completed its work successfully. This is the last method
///     that should be called on the runner before it gets disposed.
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Context\FlubuSessionFactory.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Context\FromArgAttribute.cs
/// <summary>
/// FromArg is used to pass command line arguments, settings from json configuration file or environment variables to script.
/// </summary>
/// <summary>
/// FromArg is used to pass command line arguments, settings from json configuration file or environment variables to script.
/// </summary>
/// <param name="argKey">The argument key.</param>
/// <param name="help">Argument help displayed in FlubuCore tool.</param>
/// <param name="seperator">Value separator when passing lists.</param>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Context\IBuildPropertiesContext.cs
/// <summary>
///     Build properties stored in session
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Context\IBuildPropertiesSession.cs
/// <summary>
/// Property indexer.
/// </summary>
/// <param name="propertyName"></param>
/// <returns></returns>
/// <summary>
/// Get's the property by property name.
/// </summary>
/// <typeparam name="T">Type of returned property</typeparam>
/// <param name="propertyName">The property name</param>
/// <param name="memberName">Leave it empty! Property is auto assigned by FlubuCore.</param>
/// <returns>The property</returns>
/// <summary>
/// Get's the property that predefined by flubu by property name. All properties can also be overriden
/// </summary>
/// <typeparam name="T">Type of returned property</typeparam>
/// <param name="propertyName">The property name</param>
/// <returns>The property</returns>
/// <summary>
/// Get's the property by property name. If it doesn't exist null is returned.
/// </summary>
/// <typeparam name="T">Type of returned property</typeparam>
/// <param name="propertyName">The property name</param>
/// <param name="memberName">Leave it empty! Property is auto assigned by FlubuCore.</param>
/// <returns>The property</returns>
/// <summary>
/// Get's the property by property name.
/// </summary>
/// <typeparam name="T">Type of returned property</typeparam>
/// <param name="propertyName">The property name</param>
/// <param name="defaultValue">Returned value if property is not set in session.</param>
/// <param name="memberName">Leave it empty! Property is auto assigned by FlubuCore.</param>
/// <returns>The property</returns>
/// <summary>
/// Checks by property name if property is stored in session.
/// </summary>
/// <param name="propertyName"></param>
/// <returns></returns>
/// <summary>
/// Enumerates all properties
/// </summary>
/// <returns>Enumareted properties.</returns>
/// <summary>
/// Set's property in session.
/// </summary>
/// <typeparam name="T">Type of property.</typeparam>
/// <param name="propertyName">The property name.</param>
/// <param name="propertyValue">The propery value.</param>
/// <summary>
/// Clear all properties from session.
/// </summary>
/// <summary>
/// Removes the specified property from session.
/// </summary>
/// <param name="propertyName">The name of property to be removed.</param>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Context\IBuildSystem.cs
/// <summary>
/// If <c>true</c> build is local. Otherwise it is running on known build server. See <see cref="BuildSystemType"/> for known build servers.
/// </summary>
/// <summary>
/// Gets a value on which type of build server the build is running.
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Context\IFlubuSession.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Context\IFlubuSessionFactory.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Context\ITaskContext.cs
/// <summary>
/// Fluent interface for creating .net core tasks.
/// </summary>
/// <returns></returns>
/// <summary>
/// Fluent interface for creating tasks.
/// </summary>
/// <returns></returns>
/// <summary>
/// Fluent interface for target creation. It creates The target and Add's it to the TargetTree.
/// </summary>
/// <param name="name">The target name.</param>
/// <returns></returns>
/// <summary>
/// Interaction with various build systems.
/// </summary>
/// <returns></returns>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Context\ITaskContextInternal.cs
/// <summary>
/// The <see cref="TargetTree"/>
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Context\PredefinedBuildProperties.cs
/// <summary>
///     All build properties that are predefined by flubu.
/// </summary>
/// <summary>
///     Current OS platform.
/// </summary>
/// <summary>
///     Path to dotnet executable cli tool
/// </summary>
/// <summary>
///     Path to user profile folder.
/// </summary>
/// <summary>
///     Folder where flubu stores outputs by default.
/// </summary>
/// <summary>
///     Root folder of the product / solution.
/// </summary>
/// <summary>
/// If <c>true</c> script is executed through flubu we api. Otherwise not.
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Context\ScriptProperties.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Context\TaskContext.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Context\TaskContextInternal.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Context\TaskExecutionException.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Context\BuildServers\AppVeyor.cs
/// <summary>
/// Indicates whether build is running on AppVeyor build server.
/// </summary>
/// <summary>
/// Gets the build id.
/// </summary>
/// <summary>
/// Gets the build number.
/// </summary>
/// <summary>
/// Get's the build folder.
/// </summary>
/// <summary>
/// Get's the commit id.
/// </summary>
/// <summary>
/// Get's the commit author.
/// </summary>
/// <summary>
/// Get's the commit timestamp.
/// </summary>
/// <summary>
/// Get's the commit message.
/// </summary>
/// <summary>
/// Get's the commit message.
/// </summary>
/// <summary>
/// Get's the current branch.
/// </summary>
/// <summary>
/// Get's the current branch name.
/// </summary>
/// <summary>
///  If <c>true</c> build was started by pushed tag. Otherwise not.
/// </summary>
/// <summary>
/// Gets the name of the tag.
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Context\BuildServers\AzurePipelines.cs
/// <summary>
/// Indicates whether build is running on Team foundation server.
/// </summary>
/// <summary>
/// Gets the build number.
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Context\BuildServers\Bamboo.cs
/// <summary>
/// Indicates whether build is running on Bamboo build server.
/// </summary>
/// <summary>
/// Gets the build id.
/// </summary>
/// <summary>
/// Gets the build number.
/// </summary>
/// <summary>
/// Get's the build folder.
/// </summary>
/// <summary>
/// Get's the commit id.
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Context\BuildServers\BitRise.cs
/// <summary>
/// Indicates whether build is running on Bitrise build server.
/// </summary>
/// <summary>
/// Gets the build number.
/// </summary>
/// <summary>
/// Get's the commit id.
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Context\BuildServers\ContinuaCl.cs
/// <summary>
/// Indicates whether build is running on ContinuaCL build server.
/// </summary>
/// <summary>
/// Get's the commit id.
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Context\BuildServers\GitHubActions.cs
/// <summary>
/// Indicates whether build is running on Travis build server.
/// </summary>
/// <summary>
/// The path to the GitHub home directory used to store user data.
/// </summary>
/// <summary>
/// The name of the workflow.
/// </summary>
/// <summary>
/// The name of the action.
/// </summary>
/// <summary>
/// The name of the person or app that initiated the workflow.
/// </summary>
/// <summary>
/// The owner and repository name.
/// </summary>
/// <summary>
/// The GitHub workspace directory path. The workspace directory contains a subdirectory with a copy of your repository if your workflow uses the <code>actions/checkout</code> action. If you don't use the <code>actions/checkout</code> action, the directory will be empty.
/// For example, <code>/home/runner/work/my-repo-name/my-repo-name</code>.
/// </summary>
/// <summary>
/// The name of the webhook event that triggered the workflow.
/// </summary>
/// <summary>
/// The path of the file with the complete webhook event payload.
/// </summary>
/// <summary>
/// The commit id (SHA) that triggered the workflow.
/// </summary>
/// <summary>
/// The branch or tag ref that triggered the workflow.
/// </summary>
/// <summary>
/// Only set for forked repositories. The branch of the head repository.
/// </summary>
/// <summary>
/// Only set for forked repositories. The branch of the base repository.
/// </summary>
/// <summary>
/// The git hub token.
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Context\BuildServers\GitLab.cs
/// <summary>
/// Indicates whether build is running on GitLab Ci.
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Context\BuildServers\GoCD.cs
/// <summary>
/// Indicates whether build is running on GoCd build server.
/// </summary>
/// <summary>
/// The commitId
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Context\BuildServers\Jenkins.cs
/// <summary>
/// Indicates whether build is running on Jenkins build server.
/// </summary>
/// <summary>
/// Gets the build number which is identical to build id.
/// </summary>
/// <summary>
/// The build tag which is a string of "jenkins-${JOB_NAME}-${BUILD_NUMBER}".
/// </summary>
/// <summary>
/// The name of the node this build is running on, such as "master".
/// </summary>
/// <summary>
/// The base name of the job.
/// </summary>
/// <summary>
/// Gets the name of the job.
/// </summary>
/// <value>
/// The name of the job.
/// </value>
/// <summary>
/// The Node labels.
/// </summary>
/// <summary>
/// Gets the Git commit id (hash).
/// </summary>
/// <summary>
/// Last successful commit id (hash).
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Context\BuildServers\MyGet.cs
/// <summary>
/// Indicates whether build is running on MyGet
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Context\BuildServers\TeamCity.cs
/// <summary>
/// Indicates whether build is running on TeamCity build server.
/// </summary>
/// <summary>
/// Gets the build number.
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Context\BuildServers\TeamFoundation.cs
/// <summary>
/// Indicates whether build is running on Team foundation server.
/// </summary>
/// <summary>
/// Gets the build number.
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Context\BuildServers\Travis.cs
/// <summary>
/// Indicates whether build is running on Travis build server.
/// </summary>
/// <summary>
/// Build id of the current build.
/// </summary>
/// <summary>
/// Build number of the current build.
/// </summary>
/// <summary>
/// Get's the build folder.
/// </summary>
/// <summary>
/// Get's the commit id.
/// </summary>
/// <summary>
/// The commit message.
/// </summary>
/// <summary>
/// Branch of the current build.
/// </summary>
/// <summary>
/// Branch of the current build.
/// </summary>
/// <summary>
/// The tag name of the current build.
/// </summary>
/// <summary>
/// The job identifier for the current job.
/// </summary>
/// <summary>
/// Job number for the current job.
/// </summary>
/// <summary>
/// The Name of the operating system for the current job.
/// </summary>
/// <summary>
/// Pull request id.
/// </summary>
/// <summary>
/// The pull request commit id (hash) of the pull request.
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Context\Extensions\ContextBaseExtensions.cs
/// <summary>
/// Get's Visual studio solution information. if <see cref="solutionFileName"/> is not specified solution file name is readed from <see cref="IBuildPropertiesContext"/> property <see cref="BuildProps.SolutionFileName"/>
/// </summary>
/// <param name="context"></param>
/// <param name="solutionFileName"></param>
/// <returns></returns>
/// <summary>
/// Gets all files matching glob pattern.
/// See: https://github.com/kthompson/glob for supported pattern expressions and use cases.
/// </summary>
/// <param name="context"></param>
/// <param name="directory"></param>
/// <param name="globPattern"></param>
/// <returns></returns>
/// <summary>
/// Gets all files matching glob pattern.
/// See: https://github.com/kthompson/glob for supported pattern expressions and use cases.
/// </summary>
/// <param name="context"></param>
/// <param name="directory"></param>
/// <param name="globPattern"></param>
/// <returns></returns>
/// <summary>
/// Gets all directories matching glob pattern.
/// </summary>
/// <param name="context"></param>
/// <param name="directory"></param>
/// <param name="globPattern"></param>
/// <returns></returns>
/// <summary>
/// Gets all directories matching glob pattern.
/// </summary>
/// <param name="context"></param>
/// <param name="directory"></param>
/// <param name="globPattern"></param>
/// <returns></returns>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Context\Extensions\ContextPropertiesExtensions.cs
/// <summary>
/// Get's the build version quality (e.g. version suffix).
/// </summary>
/// <param name="context"></param>
/// <returns></returns>
/// <summary>
/// Set's the build version quality (e.g. version suffix)
/// </summary>
/// <param name="context"></param>
/// <returns></returns>
/// <summary>
/// Set's the build version with quality (e.g. version suffix)
/// </summary>
/// <param name="context"></param>
/// <returns></returns>
/// <summary>
///     Get the context variable for SqlCmd executable
/// </summary>
/// <param name="context"></param>
/// <returns></returns>
/// <summary>
///     Set the context variable for SqlCmd executable
/// </summary>
/// <param name="context"></param>
/// <param name="fullPath"></param>
/// <returns></returns>
/// <summary>
/// Gets Visual studio solution information. if <see cref="solutionFileName"/> is not specified solution file name is readed from <see cref="IBuildPropertiesContext"/> property <see cref="BuildProps.SolutionFileName"/>
/// </summary>
/// <param name="context"></param>
/// <param name="solutionFileName"></param>
/// <returns></returns>
/// <summary>
/// Gets all files matching glob pattern.
/// See: https://github.com/kthompson/glob for supported pattern expressions and use cases.
/// </summary>
/// <param name="context"></param>
/// <param name="directory"></param>
/// <param name="globPattern"></param>
/// <returns></returns>
/// <summary>
/// Gets all files matching glob pattern.
/// See: https://github.com/kthompson/glob for supported pattern expressions and use cases.
/// </summary>
/// <param name="context"></param>
/// <param name="directory"></param>
/// <param name="globPattern"></param>
/// <returns></returns>
/// <summary>
/// Gets all directories matching glob pattern.
/// </summary>
/// <param name="context"></param>
/// <param name="directory"></param>
/// <param name="globPattern"></param>
/// <returns></returns>
/// <summary>
/// Gets all directories matching glob pattern.
/// </summary>
/// <param name="context"></param>
/// <param name="directory"></param>
/// <param name="globPattern"></param>
/// <returns></returns>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Context\Extensions\GitExtensions.cs
/// <summary>
/// Name of the current selected branch.
/// </summary>
/// <returns></returns>
/// <summary>
///  root directory of the current git repository
/// </summary>
/// <returns></returns>
/// <summary>
/// Remote url of the git repository.
/// </summary>
/// <returns></returns>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Context\Extensions\TaskContextExtensions.cs
/// <summary>
/// Local git repository information.
/// </summary>
/// <param name="context"></param>
/// <returns></returns>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Context\FluentInterface\CoreTaskFluentInterface.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Context\FluentInterface\DockerFluentInterface.cs
//-----------------------------------------------------------------------
// <auto-generated />
//-----------------------------------------------------------------------
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Context\FluentInterface\FluentInterfaceFactory.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Context\FluentInterface\GitFluentInterface.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Context\FluentInterface\IFluentInterfaceFactory.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Context\FluentInterface\IisTaskFluentInterface.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Context\FluentInterface\LinuxTaskFluentInterface.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Context\FluentInterface\TargetBaseFluentInterface.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Context\FluentInterface\TargetFluentInterface.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Context\FluentInterface\TaskFluentInterface.cs
/// <inheritdoc />
/// <inheritdoc />
/// <summary>
/// Get or set <see cref="TaskContext"/> for fluent interface.
/// </summary>
/// <inheritdoc />
/// <inheritdoc />
/// <summary>
///     Initializes a new instance of the <see cref="M:FlubuCore.Context.FluentInterface.TaskFluentInterface.CopyDirectoryStructureTask(System.String,System.String,System.Boolean)" /> class
///     using a specified source and destination path and an indicator whether to overwrite existing files.
/// </summary>
/// <param name="sourcePath">The source path.</param>
/// <param name="destinationPath">The destination path.</param>
/// <param name="overwriteExisting">if set to <c>true</c> the task will overwrite existing destination files.</param>
/// <inheritdoc />
/// <inheritdoc />
/// <inheritdoc />
/// <inheritdoc />
/// <inheritdoc />
/// <inheritdoc />
/// <inheritdoc />
/// <inheritdoc />
/// <summary>
/// Initializes NunitTask with default command line options for nunit V3.
/// </summary>
/// <param name="projectName">Unit test project name.</param>
/// <returns>New instance of nunit task</returns>
/// <inheritdoc />
/// <summary>
/// Initializes NunitTask with default command line options for nunit V2.
/// </summary>
/// <param name="projectName">Unit test project name.</param>
/// <returns>New instance of nunit task</returns>
/// <inheritdoc />
/// <inheritdoc />
/// <inheritdoc />
/// <inheritdoc />
/// <inheritdoc />
/// <inheritdoc />
/// <inheritdoc />
/// <inheritdoc />
/// <inheritdoc />
/// <inheritdoc />
/// <inheritdoc />
/// <inheritdoc />
/// <inheritdoc />
/// <inheritdoc />
/// <inheritdoc />
/// <inheritdoc />
/// <inheritdoc />
/// <inheritdoc />
/// <inheritdoc />
/// <inheritdoc />
/// <inheritdoc />
/// <inheritdoc />
/// <inheritdoc />
/// <inheritdoc />
/// <inheritdoc />
/// <inheritdoc />
/// <inheritdoc />
/// <inheritdoc />
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Context\FluentInterface\ToolsFluentInterface.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Context\FluentInterface\WebApiFluentInterface.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Context\FluentInterface\Docker\Builder.cs
//-----------------------------------------------------------------------
// <auto-generated />
//-----------------------------------------------------------------------
/// <summary>
/// Build an image from a Dockerfile
/// </summary>
/// <summary>
/// Remove build cache
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Context\FluentInterface\Docker\Checkpoint.cs
//-----------------------------------------------------------------------
// <auto-generated />
//-----------------------------------------------------------------------
/// <summary>
/// Create a checkpoint from a running container
/// </summary>
/// <summary>
/// List checkpoints for a container
/// </summary>
/// <summary>
/// Remove a checkpoint
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Context\FluentInterface\Docker\Config.cs
//-----------------------------------------------------------------------
// <auto-generated />
//-----------------------------------------------------------------------
/// <summary>
/// Create a config from a file or STDIN
/// </summary>
/// <summary>
/// Display detailed information on one or more configs
/// </summary>
/// <summary>
/// List configs
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Context\FluentInterface\Docker\Container.cs
//-----------------------------------------------------------------------
// <auto-generated />
//-----------------------------------------------------------------------
/// <summary>
/// Attach local standard input, output, and error streams to a running container
/// </summary>
/// <summary>
/// Create a new image from a container's changes
/// </summary>
/// <summary>
/// Create a new container
/// </summary>
/// <summary>
/// Run a command in a running container
/// </summary>
/// <summary>
/// Export a container's filesystem as a tar archive
/// </summary>
/// <summary>
/// Display detailed information on one or more containers
/// </summary>
/// <summary>
/// Kill one or more running containers
/// </summary>
/// <summary>
/// Fetch the logs of a container
/// </summary>
/// <summary>
/// List containers
/// </summary>
/// <summary>
/// Remove all stopped containers
/// </summary>
/// <summary>
/// Restart one or more containers
/// </summary>
/// <summary>
/// Remove one or more containers
/// </summary>
/// <summary>
/// Run a command in a new container
/// </summary>
/// <summary>
/// Start one or more stopped containers
/// </summary>
/// <summary>
/// Display a live stream of container(s) resource usage statistics
/// </summary>
/// <summary>
/// Stop one or more running containers
/// </summary>
/// <summary>
/// Update configuration of one or more containers
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Context\FluentInterface\Docker\Context.cs
//-----------------------------------------------------------------------
// <auto-generated />
//-----------------------------------------------------------------------
/// <summary>
/// Create a context
/// </summary>
/// <summary>
/// Export a context to a tar or kubeconfig file
/// </summary>
/// <summary>
/// Display detailed information on one or more contexts
/// </summary>
/// <summary>
/// List contexts
/// </summary>
/// <summary>
/// Remove one or more contexts
/// </summary>
/// <summary>
/// Update a context
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Context\FluentInterface\Docker\Engine.cs
//-----------------------------------------------------------------------
// <auto-generated />
//-----------------------------------------------------------------------
/// <summary>
/// Activate Enterprise Edition
/// </summary>
/// <summary>
/// Check for available engine updates
/// </summary>
/// <summary>
/// Update a local engine
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Context\FluentInterface\Docker\Image.cs
//-----------------------------------------------------------------------
// <auto-generated />
//-----------------------------------------------------------------------
/// <summary>
/// Build an image from a Dockerfile
/// </summary>
/// <summary>
/// Show the history of an image
/// </summary>
/// <summary>
/// Import the contents from a tarball to create a filesystem image
/// </summary>
/// <summary>
/// Display detailed information on one or more images
/// </summary>
/// <summary>
/// Load an image from a tar archive or STDIN
/// </summary>
/// <summary>
/// List images
/// </summary>
/// <summary>
/// Remove unused images
/// </summary>
/// <summary>
/// Pull an image or a repository from a registry
/// </summary>
/// <summary>
/// Push an image or a repository to a registry
/// </summary>
/// <summary>
/// Remove one or more images
/// </summary>
/// <summary>
/// Save one or more images to a tar archive (streamed to STDOUT by default)
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Context\FluentInterface\Docker\Manifest.cs
//-----------------------------------------------------------------------
// <auto-generated />
//-----------------------------------------------------------------------
/// <summary>
/// Add additional information to a local image manifest
/// </summary>
/// <summary>
/// Create a local manifest list for annotating and pushing to a registry
/// </summary>
/// <summary>
/// Display an image manifest, or manifest list
/// </summary>
/// <summary>
/// Push a manifest list to a repository
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Context\FluentInterface\Docker\Network.cs
//-----------------------------------------------------------------------
// <auto-generated />
//-----------------------------------------------------------------------
/// <summary>
/// Connect a container to a network
/// </summary>
/// <summary>
/// Create a network
/// </summary>
/// <summary>
/// Disconnect a container from a network
/// </summary>
/// <summary>
/// Display detailed information on one or more networks
/// </summary>
/// <summary>
/// List networks
/// </summary>
/// <summary>
/// Remove all unused networks
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Context\FluentInterface\Docker\Node.cs
//-----------------------------------------------------------------------
// <auto-generated />
//-----------------------------------------------------------------------
/// <summary>
/// Display detailed information on one or more nodes
/// </summary>
/// <summary>
/// List nodes in the swarm
/// </summary>
/// <summary>
/// List tasks running on one or more nodes, defaults to current node
/// </summary>
/// <summary>
/// Remove one or more nodes from the swarm
/// </summary>
/// <summary>
/// Update a node
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Context\FluentInterface\Docker\Plugin.cs
//-----------------------------------------------------------------------
// <auto-generated />
//-----------------------------------------------------------------------
/// <summary>
/// Create a plugin from a rootfs and configuration. Plugin data directory must contain config.json and rootfs directory.
/// </summary>
/// <summary>
/// Disable a plugin
/// </summary>
/// <summary>
/// Enable a plugin
/// </summary>
/// <summary>
/// Display detailed information on one or more plugins
/// </summary>
/// <summary>
/// Install a plugin
/// </summary>
/// <summary>
/// List plugins
/// </summary>
/// <summary>
/// Push a plugin to a registry
/// </summary>
/// <summary>
/// Remove one or more plugins
/// </summary>
/// <summary>
/// Upgrade an existing plugin
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Context\FluentInterface\Docker\Secret.cs
//-----------------------------------------------------------------------
// <auto-generated />
//-----------------------------------------------------------------------
/// <summary>
/// Create a secret from a file or STDIN as content
/// </summary>
/// <summary>
/// Display detailed information on one or more secrets
/// </summary>
/// <summary>
/// List secrets
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Context\FluentInterface\Docker\Service.cs
//-----------------------------------------------------------------------
// <auto-generated />
//-----------------------------------------------------------------------
/// <summary>
/// Create a new service
/// </summary>
/// <summary>
/// Display detailed information on one or more services
/// </summary>
/// <summary>
/// Fetch the logs of a service or task
/// </summary>
/// <summary>
/// List services
/// </summary>
/// <summary>
/// List the tasks of one or more services
/// </summary>
/// <summary>
/// Revert changes to a service's configuration
/// </summary>
/// <summary>
/// Scale one or multiple replicated services
/// </summary>
/// <summary>
/// Update a service
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Context\FluentInterface\Docker\Stack.cs
//-----------------------------------------------------------------------
// <auto-generated />
//-----------------------------------------------------------------------
/// <summary>
/// Deploy a new stack or update an existing stack
/// </summary>
/// <summary>
/// List stacks
/// </summary>
/// <summary>
/// List the tasks in the stack
/// </summary>
/// <summary>
/// Remove one or more stacks
/// </summary>
/// <summary>
/// List the services in the stack
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Context\FluentInterface\Docker\Swarm.cs
//-----------------------------------------------------------------------
// <auto-generated />
//-----------------------------------------------------------------------
/// <summary>
/// Display and rotate the root CA
/// </summary>
/// <summary>
/// Initialize a swarm
/// </summary>
/// <summary>
/// Manage join tokens
/// </summary>
/// <summary>
/// Join a swarm as a node and/or manager
/// </summary>
/// <summary>
/// Leave the swarm
/// </summary>
/// <summary>
/// Manage the unlock key
/// </summary>
/// <summary>
/// Update the swarm
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Context\FluentInterface\Docker\System.cs
//-----------------------------------------------------------------------
// <auto-generated />
//-----------------------------------------------------------------------
/// <summary>
/// Show docker disk usage
/// </summary>
/// <summary>
/// Get real time events from the server
/// </summary>
/// <summary>
/// Display system-wide information
/// </summary>
/// <summary>
/// Remove unused data
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Context\FluentInterface\Docker\Trust.cs
//-----------------------------------------------------------------------
// <auto-generated />
//-----------------------------------------------------------------------
/// <summary>
/// Return low-level information about keys and signatures
/// </summary>
/// <summary>
/// Generate and load a signing key-pair
/// </summary>
/// <summary>
/// Load a private key file for signing
/// </summary>
/// <summary>
/// Remove trust for an image
/// </summary>
/// <summary>
/// Sign an image
/// </summary>
/// <summary>
/// Add a signer
/// </summary>
/// <summary>
/// Remove a signer
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Context\FluentInterface\Docker\Volume.cs
//-----------------------------------------------------------------------
// <auto-generated />
//-----------------------------------------------------------------------
/// <summary>
/// Create a volume
/// </summary>
/// <summary>
/// Display detailed information on one or more volumes
/// </summary>
/// <summary>
/// List volumes
/// </summary>
/// <summary>
/// Remove all unused local volumes
/// </summary>
/// <summary>
/// Remove one or more volumes
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Context\FluentInterface\Interfaces\ICoreTaskFluentInterface.cs
/// <summary>
/// Task specific for Linux operating system.
/// </summary>
/// <returns></returns>
/// <summary>
/// Executes specified dotnet command.
/// </summary>
/// <param name="command">Commdand to execute</param>
/// <returns></returns>
/// <summary>
/// Executes specified dotnet command.
/// </summary>
/// <param name="command">Commdand to execute.</param>
/// <returns></returns>
/// <summary>
/// Updates the version in csproj or project.json file
/// </summary>
/// <param name="files">The project files to update.</param>
/// <returns></returns>
/// <summary>
/// Restores the dependencies and tools for a given application / project.
/// </summary>
/// <param name="projectName"></param>
/// <param name="workingFolder"></param>
/// <returns></returns>
/// <summary>
/// compiles the application, reads through its dependencies specified in the project file and publishes the resulting set of files to a directory.
/// </summary>
/// <param name="projectName"></param>
/// <param name="workingFolder"></param>
/// <param name="configuration"></param>
/// <returns></returns>
/// <summary>
/// Builds a project and all of its dependencies
/// </summary>
/// <param name="projectName"></param>
/// <param name="workingFolder"></param>
/// <returns></returns>
/// <summary>
/// command builds the project and creates NuGet packages. The result of this command is a NuGet package.
/// </summary>
/// <returns></returns>
/// <summary>
/// Runs tests using a test runner specified in the project.json / csproj.
/// </summary>
/// <returns></returns>
/// <summary>
/// Cleans the output of a project.
/// </summary>
/// <returns></returns>
/// <summary>
/// Builds the specified targets in the project file.
/// </summary>
/// <returns></returns>
/// <summary>
/// Pushes the nuget package to nuget server.
/// </summary>
/// <param name="packagePath">Path to .nupkg file</param>
/// <returns></returns>
/// <summary>
/// Coverlet is a cross platform code coverage library for .NET Core, with support for line, branch and method coverage.
/// more info at: https://github.com/tonerdo/coverlet
/// </summary>
/// <param name="assembly">Path to the test assembly.</param>
/// <returns></returns>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Context\FluentInterface\Interfaces\IGitFluentInterface.cs
/// <summary>
/// Incorporates changes from a remote repository into the current branch.
/// </summary>
/// <returns></returns>
/// <summary>
/// Stores the current contents of the index in a new commit along with a log message from the user describing the changes.
/// </summary>
/// <returns></returns>
/// <summary>
/// Updates remote refs using local refs, while sending objects necessary to complete the given refs.
/// </summary>
/// <returns></returns>
/// <summary>
/// Clones specified existring git repository into specified directory.
/// </summary>
/// <param name="repository">Url of the repository to clone.</param>
/// <param name="directory">Directory where reposiotry will be cloned to.</param>
/// <returns></returns>
/// <summary>
/// Checkout specified branch.
/// </summary>
/// <param name="branch">Branch to checkout.</param>
/// <returns></returns>
/// <summary>
/// This command updates the index using the current content found in the working tree, to prepare the content staged for the next commit.
/// </summary>
/// <returns></returns>
/// <summary>
/// Add a tag reference in refs/tags/, unless -d/-l/-v is given to delete, list or verify tags.
/// </summary>
/// <param name="name"></param>
/// <returns></returns>
/// <summary>
/// git-branch - List, create, or delete branches.
/// </summary>
/// <returns></returns>
/// <summary>
/// Join two or more development histories together.
/// </summary>
/// <returns></returns>
/// <summary>
/// Remove files from the index, or from the working tree and the index. git rm will not remove a file from just your working directory.
/// </summary>
/// <param name="file">Files to remove. Fileglobs (e.g. *.c) can be given to remove all matching files.</param>
/// <returns></returns>
/// <summary>
/// Create raw submodule GIT command.
/// </summary>
/// <returns></returns>
/// <summary>
/// Create submodules init task with --init and --recursive arguments.
/// </summary>
/// <returns></returns>
/// <summary>
/// Create submodules pull task with --remote and --merge arguments.
/// </summary>
/// <returns></returns>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Context\FluentInterface\Interfaces\IIisTaskFluentInterface.cs
/// <summary>
/// Task creates new web site in iis.
/// </summary>
/// <returns></returns>
/// <summary>
/// Task created new web application on the specified web site in iis
/// </summary>
/// <returns></returns>
/// <summary>
/// Task creates new application pool in iis.
/// </summary>
/// <returns></returns>
/// <summary>
/// Task delentes specified Application pool.
/// </summary>
/// <returns></returns>
/// <summary>
/// /Task for controlling the application pool (start, stop)
/// </summary>
/// <returns></returns>
/// <summary>
/// Task adds binding to existing web site.
/// </summary>
/// <returns></returns>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Context\FluentInterface\Interfaces\ILinuxTaskFluentInterface.cs
/// <summary>
/// Run's system ctl.
/// </summary>
/// <param name="command"></param>
/// <param name="service"></param>
/// <returns></returns>
/// <summary>
/// Run specified command on the remote host.
/// </summary>
/// <param name="host"></param>
/// <param name="username"></param>
/// <param name="password"></param>
/// <returns></returns>
/// <summary>
/// Run specified command on the remote host.
/// </summary>
/// <param name="host"></param>
/// <param name="username"></param>
/// <returns></returns>
/// <summary>
/// Copy projects/files to the remote host.
/// </summary>
/// <param name="host"></param>
/// <param name="username"></param>
/// <param name="password"></param>
/// <returns></returns>
/// <summary>
/// Copy projects/files to the remote host.
/// </summary>
/// <param name="host"></param>
/// <param name="username"></param>
/// <returns></returns>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Context\FluentInterface\Interfaces\ITarget.cs
/// <summary>
/// Add multiple tasks to the target.
/// </summary>
/// <param name="tasks">Array of <see cref="ITargetInternal"/> to add.</param>
/// <returns>This same instance of <see cref="FlubuCore.Targeting" />.</returns>
/// <summary>
/// Add's the specified task to the target.
/// </summary>
/// <param name="task">The task to be added</param>
/// <returns>This same instance of <see cref="ITargetInternal" />.</returns>
/// <summary>
/// Add's the specified .net core task to the target.
/// </summary>
/// <param name="task">The .net core task to be added</param>
/// <returns>This same instance of <see cref="ITargetInternal" />.</returns>
/// <summary>
/// Add's the specified task to the target that will be run asynchronous with other tasks.
/// </summary>
/// <param name="task">The task to be added</param>
/// <returns>This same instance of <see cref="ITargetInternal" />.</returns>
/// <summary>
/// Add's the specified .net core task to the target that will be run asynchronous with other tasks.
/// </summary>
/// <param name="task">The task to be added</param>
/// <returns>This same instance of <see cref="ITargetInternal" />.</returns>
/// <summary>
/// Execute custom code in script. U can invoke base task actions through optional parameter.
/// </summary>
/// <param name="doAction">Action to execute.</param>
/// <returns>This same instance of <see cref="ITargetInternal" />.</returns>
/// <summary>
/// Execute custom code in script. . U can invoke base task actions through optional parameter.
/// </summary>
/// <param name="doAction">Action to execute.</param>
/// <returns>This same instance of <see cref="ITargetInternal" />.</returns>
/// <summary>
/// Execute custom code in script. U can invoke base task actions through optional parameter.
/// </summary>
/// <param name="doAction">Action to execute.</param>
/// <returns>This same instance of <see cref="ITargetInternal" />.</returns>
/// <summary>
/// Execute custom code in script. U can invoke base task actions through optional parameters.
/// </summary>
/// <param name="doAction">Action to execute.</param>
/// <returns>This same instance of <see cref="ITargetInternal" />.</returns>
/// <summary>
/// Execute custom code in script. U can invoke base task actions through optional parameters.
/// </summary>
/// <param name="doAction">Action to execute.</param>
/// <returns>This same instance of <see cref="ITargetInternal" />.</returns>
/// <summary>
/// Execute custom code in script. U can invoke base task actions through optional parameters.
/// </summary>
/// <param name="doAction">Action to execute.</param>
/// <returns>This same instance of <see cref="ITargetInternal" />.</returns>
/// <summary>
/// Execute custom code in script asynchronous. U can invoke base task actions through optional parameters.
/// </summary>
/// <param name="doAction">Action to execute.</param>
/// <returns>This same instance of <see cref="ITargetInternal" />.</returns>
/// <summary>
/// Execute custom code in script asynchronous. U can invoke base task actions through optional parameters.
/// </summary>
/// <param name="doAction">Action to execute.</param>
/// <returns>This same instance of <see cref="ITargetInternal" />.</returns>
/// <summary>
/// Execute custom code in script asynchronous. U can invoke base task actions through optional parameters.
/// </summary>
/// <param name="doAction">Action to execute.</param>
/// <returns>This same instance of <see cref="ITargetInternal" />.</returns>
/// <summary>
/// Execute custom code in script asynchronous. U can invoke base task actions through optional parameters.
/// </summary>
/// <param name="doAction">Action to execute.</param>
/// <returns>This same instance of <see cref="ITargetInternal" />.</returns>
/// <summary>
/// Execute custom code in script asynchronous. U can invoke base task actions through optional parameters.
/// </summary>
/// <param name="doAction">Action to execute.</param>
/// <returns>This same instance of <see cref="ITargetInternal" />.</returns>
/// <summary>
/// Execute custom code in script asynchronous. U can invoke base task actions through optional parameters.
/// </summary>
/// <param name="doAction">Action to execute.</param>
/// <returns>This same instance of <see cref="ITargetInternal" />.</returns>
/// <summary>
/// Execute custom code in script asynchronous. U can invoke base task actions through optional parameters.
/// </summary>
/// <param name="doAction">Action to execute.</param>
/// <returns>This same instance of <see cref="ITargetInternal" />.</returns>
/// <summary>
/// Execute custom code in script asynchronous. U can invoke base task actions through optional parameters.
/// </summary>
/// <param name="doAction">Action to execute.</param>
/// <returns>This same instance of <see cref="ITargetInternal" />.</returns>
/// <summary>
/// Execute custom code in script asynchronous. U can invoke base task actions through optional parameters.
/// </summary>
/// <param name="doAction">Action to execute.</param>
/// <returns>This same instance of <see cref="ITargetInternal" />.</returns>
/// <summary>
/// Execute custom code in script asynchronous. U can invoke base task actions through optional parameters.
/// </summary>
/// <param name="doAction">Action to execute.</param>
/// <returns>This same instance of <see cref="ITargetInternal" />.</returns>
/// <summary>
/// Execute custom code in script asynchronous. U can invoke base task actions through optional parameters.
/// </summary>
/// <param name="doAction">Action to execute.</param>
/// <returns>This same instance of <see cref="ITargetInternal" />.</returns>
/// <summary>
/// Execute custom code in script asynchronous. U can invoke base task actions through optional parameters.
/// </summary>
/// <param name="doAction">Action to execute.</param>
/// <returns>This same instance of <see cref="ITargetInternal" />.</returns>
/// <summary>
///     Specifies targets on which this target depends on.
/// </summary>
/// <param name="targetNames">The dependency target names.</param>
/// <returns>This same instance of <see cref="ITargetInternal" />.</returns>
/// <summary>
///     Specifies targets on which this target depends on. Execution of dependant targets is synchronus.
/// </summary>
/// <param name="targets">The dependency target names.</param>
/// <returns>This same instance of <see cref="ITargetInternal" />.</returns>
/// <summary>
///     Specifies targets on which this target depends on. Execution of dependant targets is asynchronus.
/// </summary>
/// <param name="targets">The dependency target names.</param>
/// <returns>This same instance of <see cref="ITargetInternal" />.</returns>
/// <summary>
///     Specifies targets on which this target depends on.
/// </summary>
/// <param name="targets">The dependency target names.</param>
/// <returns>This same instance of <see cref="ITargetInternal" />.</returns>
/// <summary>
/// Specifies targets on which this target depends on. Execution of dependant targets is asynchronus.
/// </summary>
/// <param name="targets">The dependency target names.</param>
/// <returns>This same instance of <see cref="ITargetInternal" />.</returns>
/// <summary>
///     Sets the target as the default target for the runner.
/// </summary>
/// <returns>This same instance of <see cref="ITargetInternal" />.</returns>
/// <summary>
///     Sets the target as hidden. Hidden targets will not be
///     visible in the list of targets displayed to the user as help.
/// </summary>
/// <returns>This same instance of <see cref="ITargetInternal" />.</returns>
/// <summary>
/// Adds set of tasks to target.
/// </summary>
/// <param name="action">Define tasks to be added to target.</param>
/// <returns></returns>
/// <summary>
/// Adds set of tasks to target.
/// </summary>
/// <param name="action">Define tasks to be added to target.</param>
/// <returns></returns>
/// <summary>
/// Adds set of tasks to target.
/// </summary>
/// <param name="action">Define tasks to be added to target.</param>
/// <returns></returns>
/// <summary>
/// Adds set of tasks to target.
/// </summary>
/// <param name="action">Define tasks to be added to target.</param>
/// <returns></returns>
/// <summary>
/// Adds set of tasks to target.
/// </summary>
/// <param name="action">Define tasks to be added to target.</param>
/// <returns></returns>
/// <summary>
/// Adds set of tasks to target.
/// </summary>
/// <param name="action">Define tasks to be added to target.</param>
/// <returns></returns>
/// <summary>
/// Adds set of tasks to target.
/// </summary>
/// <param name="action">Define tasks to be added to target.</param>
/// <returns></returns>
/// <summary>
/// Adds set of tasks to target.
/// </summary>
/// <param name="action">Define tasks to be added to target.</param>
/// <returns></returns>
/// <summary>
/// Adds set of tasks to target.
/// </summary>
/// <param name="action">Define tasks to be added to target.</param>
/// <returns></returns>
/// <summary>
/// Group tasks and perform various actions(onFinally, onError, when) on tasks.
/// </summary>
/// <param name="targetAction">specify tasks to add in target action.</param>
/// <param name="onFinally">action that will be taken when all task finish or when error occures.</param>
/// <param name="onError">action that will be taken on any task actions</param>
/// <param name="when">Tasks will be added only if specified condition is meet.</param>
/// <returns></returns>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Context\FluentInterface\Interfaces\ITargetBaseFluentInterface.cs
/// <summary>
/// Add multiple tasks to the target.
/// </summary>
/// <param name="tasks">Array of <see cref="ITargetInternal"/> to add.</param>
/// <returns>This same instance of <see cref="FlubuCore.Targeting" />.</returns>
/// <summary>
/// Add's the specified task to the target.
/// </summary>
/// <param name="task">The task to be added</param>
/// <returns>This same instance of <see cref="ITargetInternal" />.</returns>
/// <summary>
/// Add's the specified .net core task to the target.
/// </summary>
/// <param name="task">The .net core task to be added</param>
/// <returns>This same instance of <see cref="ITargetInternal" />.</returns>
/// <summary>
/// Add's the specified task to the target that will be run asynchronous with other tasks.
/// </summary>
/// <param name="task">The task to be added</param>
/// <returns>This same instance of <see cref="ITargetInternal" />.</returns>
/// <summary>
/// Add's the specified .net core task to the target that will be run asynchronous with other tasks.
/// </summary>
/// <param name="task">The task to be added</param>
/// <returns>This same instance of <see cref="ITargetInternal" />.</returns>
/// <summary>
/// Add's the specified target to this target.
/// </summary>
/// <param name="target">The target to be added.</param>
/// <returns></returns>
/// <summary>
/// Add's the specified target to this target.
/// </summary>
/// <param name="target"></param>
/// <returns></returns>
/// <summary>
/// Execute custom code in script. U can invoke base task actions through optional parameter.
/// </summary>
/// <param name="doAction">Action to execute.</param>
/// <returns>This same instance of <see cref="ITargetInternal" />.</returns>
/// <summary>
/// Execute custom code in script. . U can invoke base task actions through optional parameter.
/// </summary>
/// <param name="doAction">Action to execute.</param>
/// <returns>This same instance of <see cref="ITargetInternal" />.</returns>
/// <summary>
/// Execute custom code in script. U can invoke base task actions through optional parameter.
/// </summary>
/// <param name="doAction">Action to execute.</param>
/// <returns>This same instance of <see cref="ITargetInternal" />.</returns>
/// <summary>
/// Execute custom code in script. U can invoke base task actions through optional parameters.
/// </summary>
/// <param name="doAction">Action to execute.</param>
/// <returns>This same instance of <see cref="ITargetInternal" />.</returns>
/// <summary>
/// Execute custom code in script. U can invoke base task actions through optional parameters.
/// </summary>
/// <param name="doAction">Action to execute.</param>
/// <returns>This same instance of <see cref="ITargetInternal" />.</returns>
/// <summary>
/// Execute custom code in script. U can invoke base task actions through optional parameters.
/// </summary>
/// <param name="doAction">Action to execute.</param>
/// <returns>This same instance of <see cref="ITargetInternal" />.</returns>
/// <summary>
/// Execute custom code in script asynchronous. U can invoke base task actions through optional parameters.
/// </summary>
/// <param name="doAction">Action to execute.</param>
/// <returns>This same instance of <see cref="ITargetInternal" />.</returns>
/// <summary>
/// Execute custom code in script asynchronous. U can invoke base task actions through optional parameters.
/// </summary>
/// <param name="doAction">Action to execute.</param>
/// <returns>This same instance of <see cref="ITargetInternal" />.</returns>
/// <summary>
/// Execute custom code in script asynchronous. U can invoke base task actions through optional parameters.
/// </summary>
/// <param name="doAction">Action to execute.</param>
/// <returns>This same instance of <see cref="ITargetInternal" />.</returns>
/// <summary>
/// Execute custom code in script asynchronous. U can invoke base task actions through optional parameters.
/// </summary>
/// <param name="doAction">Action to execute.</param>
/// <returns>This same instance of <see cref="ITargetInternal" />.</returns>
/// <summary>
/// Execute custom code in script asynchronous. U can invoke base task actions through optional parameters.
/// </summary>
/// <param name="doAction">Action to execute.</param>
/// <returns>This same instance of <see cref="ITargetInternal" />.</returns>
/// <summary>
/// Execute custom code in script asynchronous. U can invoke base task actions through optional parameters.
/// </summary>
/// <param name="doAction">Action to execute.</param>
/// <returns>This same instance of <see cref="ITargetInternal" />.</returns>
/// <summary>
/// Execute custom code in script asynchronous. U can invoke base task actions through optional parameters.
/// </summary>
/// <param name="doAction">Action to execute.</param>
/// <returns>This same instance of <see cref="ITargetInternal" />.</returns>
/// <summary>
/// Execute custom code in script asynchronous. U can invoke base task actions through optional parameters.
/// </summary>
/// <param name="doAction">Action to execute.</param>
/// <returns>This same instance of <see cref="ITargetInternal" />.</returns>
/// <summary>
/// Execute custom code in script asynchronous. U can invoke base task actions through optional parameters.
/// </summary>
/// <param name="doAction">Action to execute.</param>
/// <returns>This same instance of <see cref="ITargetInternal" />.</returns>
/// <summary>
/// Execute custom code in script asynchronous. U can invoke base task actions through optional parameters.
/// </summary>
/// <param name="doAction">Action to execute.</param>
/// <returns>This same instance of <see cref="ITargetInternal" />.</returns>
/// <summary>
/// Execute custom code in script asynchronous. U can invoke base task actions through optional parameters.
/// </summary>
/// <param name="doAction">Action to execute.</param>
/// <returns>This same instance of <see cref="ITargetInternal" />.</returns>
/// <summary>
/// Execute custom code in script asynchronous. U can invoke base task actions through optional parameters.
/// </summary>
/// <param name="doAction">Action to execute.</param>
/// <returns>This same instance of <see cref="ITargetInternal" />.</returns>
/// <summary>
/// Target executes action specified before when only if specified <see cref="condition"/> is meet.
/// </summary>
/// <param name="condition">The condition.</param>
/// <returns></returns>
/// <summary>
/// Condition to be checked before target is executed. If <see cref="condition"/> is not meet execution of script fails.
/// </summary>
/// <param name="condition">The condition to be checked.</param>
/// <returns></returns>
/// <summary>
/// Condition to be checked before target is executed. If <see cref="condition"/> is not meet execution of script fails.
/// </summary>
/// <param name="condition">The condition to be checked.</param>
/// <param name="message">The message displayed in logs when condition is not meet. </param>
/// <returns></returns>
/// <summary>
/// Iterates through <see cref="collection"/> and adds specified actions to target.
/// </summary>
/// <typeparam name="T"></typeparam>
/// <param name="collection">The collection</param>
/// <param name="action">The acction</param>
/// <returns></returns>
/// <summary>
/// Checks if specified parameter is null. If it is null target execution fails before any task is executed.
/// </summary>
/// <typeparam name="T"></typeparam>
/// <param name="parameter"></param>
/// <returns></returns>
/// <summary>
/// Enables / disables sequential logging in asynchronous executed tasks and target dependencies.
/// </summary>
/// <returns></returns>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Context\FluentInterface\Interfaces\ITaskFluentInterface.cs
/// <summary>
/// Task runs the specified program.
/// </summary>
/// <param name="programToExecute">The program to execute.</param>
/// <returns></returns>
/// <summary>
///  Copies a directory tree from the source to the destination.
/// </summary>
/// <param name="sourcePath">Path of the source directory</param>
/// <param name="destinationPath">Path where directory will be copied to.</param>
/// <param name="overwriteExisting">If <c>True</c> directory on the destination path is overwriten if it exists. Otherwise not.</param>
/// <returns></returns>
/// <summary>
/// Creates new <see cref="HttpClient"/> or get's existing one. Depending on the base url.
/// </summary>
/// <remarks></remarks>
/// <param name="baseUrl">The base url</param>
/// <returns></returns>
/// <summary>
/// Execute NuGet command line tool.
/// </summary>
/// <param name="command">The nuget command to be executed. See nuget.exe help for command list.</param>
/// <param name="workingDirectory"></param>
/// <returns></returns>
/// <summary>
/// Creates Nupkg file from nuspec file and publises it to the nuget server.
/// </summary>
/// <param name="packageId">Id of the nuget package.</param>
/// <param name="nuspecFileName">Path to the nuspec file.</param>
/// <returns></returns>
/// <summary>
/// Task Packages specified directories and files into specified directory or zip file.
/// </summary>
/// <param name="destinationRootDir">The destination directory where the package will be created.</param>
/// <returns></returns>
/// <summary>
/// Task compiles the solution with MSBuild. Solution and build configuration is retrived from <see cref="IBuildPropertiesSession"/>.
/// </summary>
/// <returns></returns>
/// <summary>
/// Task compiles specified solution with MsBuild
/// </summary>
/// <param name="solutionFileName">The file name of the solution to be compiled</param>
/// <param name="buildConfiguration">The build configuration solution will be compiled in(Release, Debug...)</param>
/// <returns></returns>
/// <summary>
/// Chocolatey specific tasks. https://chocolatey.org/
/// </summary>
/// <returns></returns>
/// <summary>
/// Task load's solution information to the <see cref="BuildPropertiesSession"/> <see cref="BuildProps.Solution"/> solution file name is retieved from <see cref="BuildPropertiesSession"/>
/// </summary>
/// <summary>
/// Task load's specified vs solution information to the <see cref="BuildPropertiesSession"/> <see cref="BuildProps.Solution"/>.
/// </summary>
/// <param name="solutionFileName">The solution file name of the solution to be loaded.</param>
/// <summary>
/// Runs the cooverage report generator tool
/// </summary>
/// <param name="inputFiles"></param>
/// <returns></returns>
/// <summary>
/// Cleans the output directories of all projects in the solution.
/// </summary>
/// <returns></returns>
/// <summary>
/// Task runs nunit tests that are in specified project with command line options for nunit v3.
/// </summary>
/// <param name="projectName"></param>
/// <returns></returns>
/// <summary>
/// Task runs nunit tests that are in specified project with command line options for nunit v2.
/// </summary>
/// <param name="projectName"></param>
/// <returns></returns>
/// <summary>
/// Task runs nunit tests that are in specified project without any default command line options.
/// </summary>
/// <param name="projectName"></param>
/// <returns></returns>
/// <summary>
/// Task runs NUnit tests that are in specified project.
/// </summary>
/// <param name="cmdOptions">Adds default command line options for specified NUnit version.</param>
/// <param name="projectName">The project.</param>
/// <summary>
/// Task runs nunit tests that are in specified assembly.
/// </summary>
/// <param name="testAssemblyFileName"></param>
/// <returns></returns>
/// <summary>
/// Task runs xunit test that are in specified project.
/// </summary>
/// <param name="projectName"></param>
/// <returns></returns>
/// <summary>
/// Task runs xunit tests that are in specified assembly.
/// </summary>
/// <param name="testAssemblyFileName"></param>
/// <returns></returns>
/// <summary>
/// Task will execute tests in the specified <see cref="testAssemblyFileNames"/> list of test assemblies using
/// the specified NUnit test runner executable.
/// </summary>
/// <param name="nunitRunnerFileName">The file path to NUnit's console runner.</param>
/// <param name="testAssemblyFileNames">The list of of file paths to the assemblies containing unit tests.</param>
/// <summary>
/// Task  will execute tests in the specified <see cref="testAssemblyFileNames"/> list of test assemblies using
/// the specified NUnit test runner executable.
/// </summary>
/// <param name="nunitRunnerFileName">The file path to NUnit's console runner.</param>
/// <param name="testAssemblyFileNames">The list of of file paths to the assemblies containing unit tests.</param>
/// <summary>
/// Task replaces specified tokens in given file.
/// </summary>
/// <param name="sourceFileName"></param>
/// <returns></returns>
/// <summary>
/// Update's specified json.
/// </summary>
/// <param name="fileName">File name of the json to be updated.</param>
/// <returns></returns>
/// <summary>
/// Task Fetches build version from file. By default task fetches from file named: {ProductId}.ProjectVersion.Txt
/// Where ProductId is fetched from <see cref="IBuildPropertiesSession"/> build property named: <see cref="BuildProps.ProductId"/>.
/// </summary>
/// <returns></returns>
/// <summary>
/// Task fetches build and revision number from external soruce(build system).
/// Supported build systems by default: AppVeyor, Bamboo, Bitrise, ContinousCl, Jenkins, TFS, TeamCity, TravisCI.
/// </summary>
/// <returns></returns>
/// <summary>
/// Generate's common assembly info file. Information is taken from <see cref="IBuildPropertiesSession"/>
/// </summary>
/// <returns></returns>
/// <summary>
/// Task generate's common assembly info file. Information is taken from <see cref="IBuildPropertiesSession"/>
/// </summary>
/// <returns></returns>
/// <summary>
/// Task runs open cover to cobertuta tool.
/// </summary>
/// <param name="input"></param>
/// <param name="output"></param>
/// <returns></returns>
/// <summary>
/// Task runs open cover tool.
/// </summary>
/// <returns></returns>
/// <summary>
/// Task unzip specified zip to specified locattion.
/// </summary>
/// <param name="zip">Zip file to be unziped</param>
/// <param name="destionation">Destination path where zip content will be unziped.</param>
/// <returns></returns>
/// <summary>
/// Git specific tasks.
/// </summary>
/// <returns></returns>
/// <summary>
/// GitVersion is a tool to help you achieve Semantic Versioning on your project.
/// https://gitversion.readthedocs.io/en/latest/
/// </summary>
/// <returns></returns>
/// <summary>
/// Docker specific tasks.
/// </summary>
/// <returns></returns>
/// <summary>
/// Internet information service specific tasks.
/// </summary>
/// <returns></returns>
/// <summary>
/// Flubu web api specific tasks.
/// </summary>
/// <returns></returns>
/// <summary>
/// Task copies file to specified location.
/// </summary>
/// <param name="sourceFileName">File to be copied</param>
/// <param name="destinationFileName"></param>
/// <param name="overwrite">If <c>true</c> file is owerwriten if exists. Otherwise not</param>
/// <returns></returns>
/// <summary>
/// Task touches (set last write time) specified file.
/// </summary>
/// <param name="fileName">File to touch.</param>
/// <returns></returns>
/// <summary>
/// Task creates directory.
/// </summary>
/// <param name="directoryPath"></param>
/// <param name="forceRecreate">If <c>true</c> directory is deleted if it exists and then created again.</param>
/// <returns></returns>
/// <summary>
/// Task deletes directory.
/// </summary>
/// <param name="directoryPath">Path of the directoy to be deleted</param>
/// <param name="failIfNotExists">If <c>true</c> task fails if excetpion. Otherwise not.</param>
/// <returns></returns>
/// <summary>
/// Task deletes files in specified directory.
/// </summary>
/// <param name="directoryPath">Path of the directoy files to be deleted in</param>
/// <param name="filePattern">The search string to match against the names of files in path. This parameter can contain a combination of valid literal path and wildcard (* and ?) characters but doesnt support regular expressions.</param>
/// <param name="recursive">If <c>true</c> files in subdirectories is searched. Otherwise only in root directory.</param>
/// <returns></returns>
/// <summary>
/// Merges multiple configuration files into one.
/// </summary>
/// <param name="outFile"></param>
/// <param name="sourceFiles"></param>
/// <returns></returns>
/// <summary>
/// Task Replaces text in file.
/// </summary>
/// <param name="sourceFile">File path.</param>
/// <param name="tokens">Fist paramteter text to be replaced. Second parameter text to be replaced with</param>
/// <returns></returns>
/// <summary>
/// Task updates xml. Xml elements can be added, updated or deleted.
/// </summary>
/// <param name="fileName"></param>
/// <returns></returns>
/// <summary>
/// Sleep for specified period of time.
/// </summary>
/// <param name="delay">Delay in milliseconds.</param>
/// <returns><see cref="SleepTask"/></returns>
/// <summary>
/// Sleep for specified period of time.
/// </summary>
/// <param name="delay">Delay.</param>
/// <returns><see cref="SleepTask"/></returns>
/// <summary>
/// Control windows service with sc.exe command.
/// </summary>
/// <param name="command">Command to execute (stop, start, ...)</param>
/// <returns><see cref="ServiceControlTask"/></returns>
/// <summary>
/// Control windows service with sc.exe command.
/// </summary>
/// <param name="command">Command to execute (stop, start, ...)</param>
/// <param name="serviceName">Name of the service to control.</param>
/// <returns><see cref="ServiceControlTask"/></returns>
/// <summary>
/// Control windows service with sc.exe command.
/// </summary>
/// <param name="command">Standard command to execute</param>
/// <param name="serviceName">Name of the service to control.</param>
/// <returns><see cref="ServiceControlTask"/></returns>
/// <summary>
/// Creates windows service with sc.exe command.
/// </summary>
/// <param name="serviceName">Name of the service to control.</param>
/// <param name="pathToService">path to service executable .exe</param>
/// <returns><see cref="ServiceControlTask"/></returns>
/// <summary>
/// Executes specified powershell script.
/// </summary>
/// <param name="pathToPowerShellScript">Path to the power shell script file. Use .\ for relative path.</param>
/// <returns></returns>
/// <summary>
/// Execute SQL script file with sqlcmd.exe
/// </summary>
/// <returns></returns>
/// <summary>
/// Generate T4 template with TextTransform.exe utility.
/// </summary>
/// <param name="templateFileName">Filename to T4 transform.</param>
/// <returns></returns>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Context\FluentInterface\Interfaces\IToolsFluentInterface.cs
/// <summary>
/// Installs a tool for use on the command line.
/// </summary>
/// <param name="nugetPackageId">NuGet Package Id of the tool to install.</param>
/// <summary>
/// Updates a tool to the latest stable version for use.
/// </summary>
/// <param name="nugetPackageId"></param>
/// <returns></returns>
/// <summary>
/// Uninstalls a tool.
/// </summary>
/// <param name="nugetPackageId">NuGet Package Id of the tool to uninstall.</param>
/// <returns></returns>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Context\FluentInterface\Interfaces\IWebApiFluentInterface.cs
/// <summary>
/// Upload's sprecified packages to flubu web api server.
/// </summary>
/// <param name="directoryPath">The relative or absolute path to the directory where packages are searched.</param>
/// <param name="packageSearchPattern">The search string to match against the names of files(packages). This parameter can contain a combination of valid literal path and wildcard (* and ?) characters (see Remarks), but doesn't support regular expressions. The default pattern is "*", which returns all files.</param>
/// <returns></returns>
/// <summary>
/// Executes specified flubu scrip on flubu web api server.
/// </summary>
/// <param name="mainCommand">Command to be executed.</param>
/// <param name="scriptFilePath">Location to the flubu script on the flubu web api server.</param>
/// <returns></returns>
/// <summary>
/// Get's the token that can access flubu web api server.
/// </summary>
/// <param name="username">The username</param>
/// <param name="password">The password.</param>
/// <returns></returns>
/// <summary>
/// Deletes all packages(cleans directory on flubu web api server).
/// </summary>
/// <returns></returns>
/// <summary>
/// Uploads flubu script to flubu web api server.
/// </summary>
/// <param name="scriptFilePath"> The relative or absolute path to the flubu script to be uploaded to web api server.</param>
/// <returns></returns>
/// <summary>
/// Deletes all reports(cleans directory on flubu web api server).
/// </summary>
/// <returns></returns>
/// <summary>
/// Download reports(compressed in zip file) from flubu web api server.
/// </summary>
/// <param name="saveAs">name of the file (path) that the reports will be saved to.</param>
/// <returns></returns>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Context\FluentInterface\TaskExtensions\CoreTaskFluentInterfaceExtensions.cs
/// <summary>
/// Create ZIP file with specified folders. Returns PackageTask to add additional properties.
/// </summary>
/// <param name="zipPrefix">Zip file prefix. Version will be added automatically</param>
/// <param name="targetFramework">Framework to use for package folder. Folder is combined as follows {project}/bin/Release/{targetFramework}/publish</param>
/// <param name="projects">Name of the project to add to add</param>
/// <returns><see cref="PackageTask"/> instance.</returns>
/// <summary>
/// Create ZIP file with specified folders. Returns PackageTask to add additional properties.
/// </summary>
/// <param name="zipPrefix">Zip file prefix. Version will be added automatically</param>
/// <param name="targetFramework">Framework to use for package folder. Folder is combined as follows {project}/bin/Release/{targetFramework}/publish</param>
/// <param name="projects">Name of the project to add to add</param>
/// <returns><see cref="PackageTask"/> instance.</returns>
/// <summary>
/// Create ZIP file with specified folders. Returns PackageTask to add additional properties.
/// </summary>
/// <param name="zipPrefix">Zip file prefix. Version will be added automatically</param>
/// <param name="targetFramework">Framework to use for package folder. Folder is combined as follows {project}/bin/Release/{targetFramework}/{runtime}/publish</param>
/// <param name="projects">Name of the project to add to add</param>
/// <param name="runtime">Runtime to use for package folder.  Folder is combined as follows {project}/bin/Release/{targetFramework}/{runtime}/publish</param>
/// <param name="destinationRootDir">Name of the directory that the source directory will be copied to.</param>
/// <returns><see cref="PackageTask"/> instance.</returns>
/// <summary>
/// Create ZIP file with specified folders. Returns PackageTask to add additional properties.
/// </summary>
/// <param name="zipPrefix">Zip file prefix. Version will be added automatically</param>
/// <param name="targetFramework">Framework to use for package folder. Folder is combined as follows {project}/bin/Release/{targetFramework}/publish</param>
/// <param name="projects">Name of the project to add to add</param>
/// <param name="runtime">Runtime to use for package folder.  Folder is combined as follows {project}/bin/Release/{targetFramework}/{runtime}/publish</param>
/// <param name="destinationRootDir">Name of the directory that the source directory will be copied to.</param>
/// <returns><see cref="PackageTask"/> instance.</returns>
/// <summary>
/// Create ZIP file with specified folders. Returns PackageTask to add additional properties.
/// </summary>
/// <param name="zipPrefix">Zip file prefix. Version will be added automatically</param>
/// <param name="targetFramework">Framework to use for package folder. Folder is combined as follows {project}/bin/Release/{targetFramework}/{runtime}/publish</param>
/// <param name="projects">Name of the project to add to add</param>
/// <param name="runtime">Runtime to use for package folder.  Folder is combined as follows {project}/bin/Release/{targetFramework}/{runtime}/publish</param>
/// <param name="destinationRootDir">Name of the directory that the source directory will be copied to.</param>
/// <returns><see cref="PackageTask"/> instance.</returns>
/// <summary>
/// Create ZIP file with specified folders. Returns PackageTask to add additional properties.
/// </summary>
/// <param name="zipPrefix">Zip file prefix. Version will be added automatically</param>
/// <param name="targetFramework">Framework to use for package folder. Folder is combined as follows {project}/bin/Release/{targetFramework}/{runtime}/publish</param>
/// <param name="projects">Name of the project to add to add</param>
/// <param name="runtime">Runtime to use for package folder.  Folder is combined as follows {project}/bin/Release/{targetFramework}/{runtime}/publish</param>
/// <param name="destinationRootDir">Name of the directory that the source directory will be copied to.</param>
/// <returns><see cref="PackageTask"/> instance.</returns>
/// <summary>
/// Create ZIP file with specified folders. Returns PackageTask to add additional properties.
/// </summary>
/// <param name="zipPrefix">Zip file prefix. Version will be added automatically</param>
/// <param name="targetFramework">Framework to use for package folder. Folder is combined as follows {project}/bin/Release/{targetFramework}/{runtime}/publish</param>
/// <param name="projects">Name of the project to add to add</param>
/// <param name="runtime">Runtime to use for package folder.  Folder is combined as follows {project}/bin/Release/{targetFramework}/{runtime}/publish</param>
/// <param name="destinationRootDir">Name of the directory that the source directory will be copied to.</param>
/// <returns><see cref="PackageTask"/> instance.</returns>
/// <summary>
/// Create ZIP file with specified folders. Returns PackageTask to add additional properties.
/// </summary>
/// <param name="zipPrefix">Zip file prefix. Version will be added automatically</param>
/// <param name="targetFramework">Framework to use for package folder. Folder is combined as follows {project}/bin/Release/{targetFramework}/{runtime}/publish</param>
/// <param name="projects">Name of the project to add to add</param>
/// <param name="runtime">Runtime to use for package folder.  Folder is combined as follows {project}/bin/Release/{targetFramework}/{runtime}/publish</param>
/// <param name="destinationRootDir">Name of the directory that the source directory will be copied to.</param>
/// <returns><see cref="PackageTask"/> instance.</returns>
/// <summary>
/// Create ZIP file with specified folders. Returns PackageTask to add additional properties.
/// </summary>
/// <param name="zipPrefix">Zip file prefix. Version will be added automatically</param>
/// <param name="targetFramework">Framework to use for package folder. Folder is combined as follows {project}/bin/Release/{targetFramework}/{runtime}/publish</param>
/// <param name="projects">Name of the project to add to add</param>
/// <param name="runtime">Runtime to use for package folder.  Folder is combined as follows {project}/bin/Release/{targetFramework}/{runtime}/publish</param>
/// <param name="destinationRootDir">Name of the directory that the source directory will be copied to.</param>
/// <returns><see cref="PackageTask"/> instance.</returns>
/// <summary>
/// Create ZIP file with specified folders. Returns PackageTask to add additional properties.
/// </summary>
/// <param name="zipPrefix">Zip file prefix. Version will be added automatically</param>
/// <param name="targetFramework">Framework to use for package folder. Folder is combined as follows {project}/bin/Release/{targetFramework}/{runtime}/publish</param>
/// <param name="projects">Name of the project to add to add</param>
/// <param name="runtime">Runtime to use for package folder.  Folder is combined as follows {project}/bin/Release/{targetFramework}/{runtime}/publish</param>
/// <param name="destinationRootDir">Name of the directory that the source directory will be copied to.</param>
/// <returns><see cref="PackageTask"/> instance.</returns>
// must be string.Empty because of a constuctor
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Context\FluentInterface\TaskExtensions\TaskFluentInterfaceExtensions.cs
/// <summary>
/// Run's multiple programs
/// </summary>
/// <param name="programs"></param>
/// <returns></returns>
/// <summary>
/// Run specified program.
/// </summary>
/// <param name="program"></param>
/// <param name="workingFolder"></param>
/// <param name="args"></param>
/// <returns></returns>
/// <summary>
/// Run specified program.
/// </summary>
/// <param name="program"></param>
/// <param name="workingFolder"></param>
/// <returns></returns>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Infrastructure\CollectionExtensions.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Infrastructure\DictionaryWithDefault.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Infrastructure\DocumentationExtension.cs
/// <summary>
/// Utility class to provide documentation for various types where available with the assembly
/// </summary>
/// <summary>
/// A cache used to remember Xml documentation for assemblies
/// </summary>
/// <summary>
/// A cache used to store failure exceptions for assembly lookups
/// </summary>
/// <summary>
/// Provides the documentation comments for a specific method
/// </summary>
/// <param name="methodInfo">The MethodInfo (reflection data ) of the member to find documentation for</param>
/// <returns>The XML fragment describing the method</returns>
// Calculate the parameter string as this is in the member name in the XML
//AL: 15.04.2008 ==> BUG-FIX remove “()” if parametersString is empty
/// <summary>
/// Provides the documentation comments for a specific member
/// </summary>
/// <param name="memberInfo">The MemberInfo (reflection data) or the member to find documentation for</param>
/// <returns>The XML fragment describing the member</returns>
// First character [0] of member type is prefix character in the name in the XML
/// <summary>
/// Returns the Xml documenation summary comment for this member
/// </summary>
/// <param name="memberInfo"></param>
/// <returns></returns>
/// <summary>
/// Provides the documentation comments for a specific type
/// </summary>
/// <param name="type">Type to find the documentation for</param>
/// <returns>The XML fragment that describes the type</returns>
// Prefix in type names is T
/// <summary>
/// Gets the summary portion of a type's documenation or returns an empty string if not available
/// </summary>
/// <param name="type"></param>
/// <returns></returns>
/// <summary>
/// Obtains the XML Element that describes a reflection element by searching the
/// members for a member that has a name that describes the element.
/// </summary>
/// <param name="type">The type or parent type, used to fetch the assembly</param>
/// <param name="prefix">The prefix as seen in the name attribute in the documentation XML</param>
/// <param name="name">Where relevant, the full name qualifier for the element</param>
/// <returns>The member that has a name that describes the specified reflection element</returns>
//member[starts-with(@name, '" + fullName + "')]") as XmlElement;
/// <summary>
/// Obtains the documentation file for the specified assembly
/// </summary>
/// <param name="assembly">The assembly to find the XML document for</param>
/// <returns>The XML document</returns>
/// <remarks>This version uses a cache to preserve the assemblies, so that.
/// the XML file is not loaded and parsed on every single lookup</remarks>
// load the docuemnt into the cache
/// <summary>
/// Loads and parses the documentation file for the specified assembly.
/// </summary>
/// <param name="assembly">The assembly to find the XML document for</param>
/// <returns>The XML document</returns>
///";
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Infrastructure\ExpressionExtensions.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Infrastructure\FlubuConsoleLogger.cs
//// ConsoleColor does not have a value to specify the 'Default' color
////logLevelColors = GetLogLevelConsoleColors(logLevel);
// In case of AnsiLogConsole, the messages are not yet written to the console,
// this would flush them instead.
// We must explicitly set the background color if we are setting the foreground color,
// since just setting one can look bad on the users console.
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Infrastructure\HttpClientFactory.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Infrastructure\IHttpClientFactory.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Infrastructure\InstallerExtensions.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Infrastructure\StringExtensions.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Infrastructure\Terminal\ConsoleCursorPosition.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Infrastructure\Terminal\ConsoleUtils.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Infrastructure\Terminal\FlubuConsole.cs
/// <summary>
/// Creates new instance of <see cref="FlubuConsole"/> class.
/// </summary>
/// <param name="hintsSourceDictionary">Collection containing input hints</param>
/// <summary>
/// Execute flubu internal command.
/// </summary>
/// <param name="line"></param>
/// <returns>Return's true</returns>
/// <summary>
/// Reads input from user using hints. Commands history is supported.
/// </summary>
/// <param name="inputRegex"></param>
/// <returns></returns>
////UpdateSuggestionsForUserInput(userInput);
//// Restore previous position
//// value hints
//simple case then user's input is equal to start of hint
//simple case then user's input is equal to start of hint
//more complex case: tokenize hint and try to search user input from beginning of tokens
////try to split user's input into separate char and find all of them into string
//no such symbol in the hints source item
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Infrastructure\Terminal\Hint.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Infrastructure\Terminal\HintType.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Infrastructure\Terminal\InternalCommands.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Infrastructure\Terminal\Commands\ChocolateyCommands.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Infrastructure\Terminal\Commands\DockerCommands.cs
//-----------------------------------------------------------------------
// <auto-generated />
//-----------------------------------------------------------------------
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Infrastructure\Terminal\Commands\DotnetCommands.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Infrastructure\Terminal\Commands\GitCommands.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\IO\FileFullPath.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\IO\FullPath.cs
/// <summary>
/// Gets the path that is a parent to the current path in this object.
/// </summary>
/// <value>The parent path.</value>
/// <summary>
/// Gets all files matching glob pattern.
/// See: https://github.com/kthompson/glob for supported pattern expressions and use cases.
/// </summary>
/// <param name="context"></param>
/// <param name="directory"></param>
/// <param name="globPattern"></param>
/// <returns></returns>
/// <summary>
/// Gets all files matching glob pattern.
/// See: https://github.com/kthompson/glob for supported pattern expressions and use cases.
/// </summary>
/// <param name="context"></param>
/// <param name="directory"></param>
/// <param name="globPattern"></param>
/// <returns></returns>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\IO\IOExtensions.cs
// todo find node executable
// todo find node executable
// todo find node executable
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\IO\IPathBuilder.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\IO\LocalPath.cs
/// <summary>
/// Gets the path that is a parent to the current path in this object.
/// </summary>
/// <value>The parent path.</value>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\IO\Wrappers\DirectoryWrapper.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\IO\Wrappers\FileWrapper.cs
/// <summary>
/// This is the same default buffer size as
/// <see cref="StreamReader"/> and <see cref="FileStream"/>.
/// </summary>
/// <summary>
/// Indicates that
/// 1. The file is to be used for asynchronous reading.
/// 2. The file is to be accessed sequentially from beginning to end.
/// </summary>
// Open the FileStream with the same FileMode, FileAccess
// and FileShare as a call to File.OpenText would've done.
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\IO\Wrappers\IDirectoryWrapper.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\IO\Wrappers\IFileWrapper.cs
/// <summary>
/// Wrapper interface for <see cref="File"/>
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\IO\Wrappers\IPathWrapper.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\IO\Wrappers\PathWrapper.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Packaging\CompositeFilesSource.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Packaging\Copier.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Packaging\CopyProcessor.cs
/// <summary>
/// Defines a transformation for <see cref="SingleFileSource"/> which copies the file to the destination
/// and renames the file in the process.
/// </summary>
/// <param name="sourceId">ID of the <see cref="SingleFileSource"/>.</param>
/// <param name="destinationFileName">The destination directory and file name (local path).</param>
/// <returns>This same instance of the <see cref="CopyProcessor"/>.</returns>
/// <summary>
/// Replace all occurrences of source file name with newFileName.
/// </summary>
/// <param name="fileName">Source file name to replace.</param>
/// <param name="newFileName">Replace with new name.</param>
/// <returns>Returns <see cref="CopyProcessor"/>.</returns>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Packaging\CopyProcessorTransformation.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Packaging\CopyProcessorTransformationOptions.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Packaging\DirectoryFilesLister.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Packaging\DirectorySource.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Packaging\FilesList.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Packaging\ICompositeFilesSource.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Packaging\ICopier.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Packaging\IDirectoryFilesLister.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Packaging\IFileRenamer.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Packaging\IFilesSource.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Packaging\IFilterable.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Packaging\IPackageDef.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Packaging\IPackageProcessor.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Packaging\IZipper.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Packaging\LoggingHelper.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Packaging\PackagedFileInfo.cs
////private void AssertIsFullPath(string path)
////{
////    if (false == Path.IsPathRooted(path))
////    {
////        string message = string.Format(
////            CultureInfo.InvariantCulture,
////            "Path '{0}' must be absolute.",
////            path);
////        throw new ArgumentException("path", message);
////    }
////}
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Packaging\SingleFileSource.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Packaging\StandardPackageDef.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Packaging\ZipMetadata.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Packaging\ZipMetadataItem.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Packaging\Zipper.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Packaging\ZipProcessor.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Packaging\Filters\FilterCollection.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Packaging\Filters\FilterExtensions.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Packaging\Filters\FilterOptionExtensions.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Packaging\Filters\FilterOptions.cs
/// <summary>
/// If <c>true</c> subfolders in the source directory are also added. Otherwise not.
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Packaging\Filters\GlobFilter.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Packaging\Filters\IFilter.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Packaging\Filters\NegativeFilter.cs
/// <summary>
/// Neagatives given filter.
/// </summary>
/// <param name="filter">Filter to be negatived.</param>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Packaging\Filters\RegexFileFilter.cs
/// <summary>
/// Filter files by regex expression.
/// </summary>
/// <param name="filterRegexValue">The regex expression.</param>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Packaging\Filters\RegexFilter.cs
/// <summary>
/// Filter files by regex expression.
/// </summary>
/// <param name="filterRegexValue">The regex expression.</param>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Properties\AssemblyInfo.cs
//// General Information about an assembly is controlled through the following
//// set of attributes. Change these attribute values to modify the information
//// associated with an assembly.
//// Setting ComVisible to false makes the types in this assembly not visible
//// to COM components.  If you need to access a type in this assembly from
//// COM, set the ComVisible attribute to true on that type.
//// The following GUID is for the ID of the typelib if this project is exposed to COM
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Scripting\AssemblyInfo.cs
// Elements should appear in the correct order
// Elements should appear in the correct order
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Scripting\BuildScriptArguments.cs
/// <summary>
/// The list of main commands (targets) to be executed.
/// </summary>
/// <summary>
/// If <c>true</c> no target dependencies are executed.
/// </summary>
/// <summary>
/// List of all targets(also dependencies) that must be executed. If they are not script execution fails.
/// </summary>
/// <summary>
/// If <c>true</c> Target's provided in <see cref="MainCommands"/> are executed in parallel.
/// </summary>
/// <summary>
/// Script Argument that can be accessed in build script through <see cref="IBuildPropertiesContext.ScriptArgs"/>
/// </summary>
/// <summary>
/// If <c>true</c> flubu rethrows exception when occures. Otherwise status code is returned.
/// </summary>
/// <summary>
/// Performs dry run.
/// </summary>
/// <summary>
/// Disables Interactive mode for all task members where Interactive method is applied.
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Scripting\BuildScriptLocator.cs
//github.com/flubu-core/flubu.core/wiki");
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Scripting\BuildScriptLocatorException.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Scripting\CommandArguments.cs
/// <summary>
/// If <c>true</c> dotnet-flubu cli tool and flubu.runner shows whole excetpion stacktrace. otherwise only message.
/// </summary>
/// <summary>
/// If <c>true</c> colored logging is disabled.
/// </summary>
/// <summary>
/// Location where <see cref="BuildScriptLocator"/> searches for build script.
/// </summary>
/// <summary>
/// Location's where <see cref="ScriptLoader"/> looks for assemblies to load.
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Scripting\DefaultBuildScript.cs
/// <summary>
/// Get's product root directory.
/// </summary>
/// <summary>
/// Get's output directory.
/// </summary>
//// specific target help
// do windows specific tasks
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Scripting\FlubuEngine.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Scripting\IBuildScript.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Scripting\IBuildScriptLocator.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Scripting\IFlubuEngine.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Scripting\INugetPackageResolver.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Scripting\IScriptLoader.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Scripting\ITargetExtractor.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Scripting\NugetPackageReference.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Scripting\NugetPackageResolver.cs
// Field names should not use Hungarian notation
// Field names should not use Hungarian notation
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Scripting\ScriptException.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Scripting\ScriptLoader.cs
//github.com/flubu-core/flubu.core/wiki");
//github.com/flubu-core/flubu.core/wiki");
//github.com/flubu-core/flubu.core/wiki/2-Build-script-fundamentals#Referencing-other-assemblies-in-build-script for more details.";
//github.com/flubu-core/flubu.core/wiki/2-Build-script-fundamentals#Referencing-other-assemblies-in-build-script {Environment.NewLine} https://github.com/flubu-core/flubu.core/wiki/2-Build-Script-Fundamentals#Adding-other-cs-files-to-build-script";
//github.com/flubu-core/flubu.core/wiki/2-Build-Script-Fundamentals#Adding-other-cs-files-to-build-script";
//// Default assemblies that should be referenced.
// Enumerate all assemblies referenced by FlubuCore
// and provide them as references to the build script we're about to
// compile.
// Field names should not use Hungarian notation
// Field names should not use Hungarian notation
// Field names should not use Hungarian notation
// Field names should not use Hungarian notation
//#imp is only supported in main buildscript .cs file.");
//github.com/flubu-core/flubu.core/wiki");
//github.com/flubu-core/flubu.core/wiki/2-Build-script-fundamentals#Referencing-other-assemblies-in-build-script for more details.", e);
//github.com/flubu-core/flubu.core/wiki/2-Build-script-fundamentals#Referencing-other-assemblies-in-build-script {Environment.NewLine} https://github.com/flubu-core/flubu.core/wiki/2-Build-Script-Fundamentals#Adding-other-cs-files-to-build-script", e);
//github.com/flubu-core/flubu.core/wiki/2-Build-Script-Fundamentals#Adding-other-cs-files-to-build-script", e);
// Static elements should appear before instance elements
// Static elements should appear before instance elements
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Scripting\ScriptLoaderExcetpion.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Scripting\ScriptLoaderExtensions.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Scripting\TargetExtractor.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Scripting\TargetNotFoundException.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Scripting\Analysis\AssemblyReference.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Scripting\Analysis\IProjectFileAnalyzer.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Scripting\Analysis\IScriptAnalyzer.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Scripting\Analysis\ProjectFileAnalyzer.cs
//PackageReference");
//Reference");
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Scripting\Analysis\ProjectFileAnalyzerResult.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Scripting\Analysis\ScriptAnalyzer.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Scripting\Analysis\ScriptAnalyzerResult.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Scripting\Analysis\Processors\AssemblyDirectiveProcessor.cs
//#ass", StringComparison.OrdinalIgnoreCase))
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Scripting\Analysis\Processors\AttributesProcessor.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Scripting\Analysis\Processors\ClassProcessor.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Scripting\Analysis\Processors\CsDirectiveProcessor.cs
//#imp", StringComparison.OrdinalIgnoreCase))
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Scripting\Analysis\Processors\IScriptProcessor.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Scripting\Analysis\Processors\NamespaceProcessor.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Scripting\Analysis\Processors\NugetPackageDirectirveProcessor.cs
//#nuget", StringComparison.OrdinalIgnoreCase))
//#nuget: FlubuCore, 2.8.0'");
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Scripting\Analysis\Processors\ReferenceDirectiveProcessor.cs
//#ref", StringComparison.OrdinalIgnoreCase))
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Scripting\Attributes\AssemblyAttribute.cs
/// <summary>
/// Adds assembly reference to script.
/// </summary>
/// <summary>
/// Adds assembly reference to script.
/// </summary>
/// <param name="pathToAssembly">Relative or absolute path to assembly.</param>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Scripting\Attributes\AssemblyFromDirectoryAttribute.cs
/// <summary>
/// Adds assembly references to script from specified directory.
/// </summary>
/// <summary>
/// Adds assembly references to script from specified directory.
/// </summary>
/// <param name="directory">Directory path.</param>
/// <param name="subDirectories">Include directory sub directories.</param>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Scripting\Attributes\IncludeAttribute.cs
/// <summary>
/// Include other c# source code file(.cs) to script.
/// </summary>
/// <summary>
/// Include other c# source code file(.cs) to script.
/// </summary>
/// <param name="pathToCsFile">Path to c# source code file. </param>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Scripting\Attributes\IncludeFromDirectoryAttribute.cs
/// <summary>
/// Include all other c# source code file(.cs) to script from specified directory.
/// </summary>
/// <summary>
///  Include all other c# source code file(.cs) to script from specified directory.
/// </summary>
/// <param name="directory">Directory path.</param>
/// <param name="subDirectories">Include directory sub directories.</param>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Scripting\Attributes\NugetPackageAttribute.cs
/// <summary>
/// Adds nuget package reference to script.
/// </summary>
/// <summary>
/// Adds nuget package reference to script.
/// </summary>
/// <param name="packageId">Id of the nuget package. For Example "FlubuCore"</param>
/// <param name="packageVersion">Version of the nuget package. For Example "3.0.0"</param>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Scripting\Attributes\ReferenceAttribute.cs
/// <summary>
/// Loads System assemblies to script by fully qualified assembly name.
/// </summary>
/// <summary>
/// Loads System assemblies to script by fully qualified assembly name.
/// </summary>
/// <param name="fullyQualifedAssemblyName">The fully qualifed assembly name.</param>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Scripting\Attributes\Config\AlwaysRecompileScriptAttribute.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Scripting\Attributes\Config\CreateBuildScriptInstanceOldWayAttribute.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Scripting\Attributes\Config\DisableColoredLoggingAttribute.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Scripting\Attributes\Config\DisableLoadScriptReferencesAutomaticallyAttribute.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Scripting\Attributes\Config\ScriptConfigAttributes.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Services\FlubuEnvironment.cs
/// <summary>
/// Gets the Windows system root directory path.
/// </summary>
/// <value>The Windows system root directory path.</value>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Services\FlubuEnvironmentService.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Services\IFlubuEnvironmentService.cs
/// <summary>
/// An abstraction layer for various <see cref="FlubuEnvironment"/> utility methods.
/// </summary>
/// <summary>
/// Returns a sorted dictionary of all MSBuild tools versions that are available on the system.
/// </summary>
/// <remarks>The method scans through the registry (<c>HKLM\SOFTWARE\Microsoft\MSBuild\ToolsVersions</c> path)
/// to find the available tools versions.</remarks>
/// <returns>A sorted dictionary whose keys are tools versions (2.0, 3.5, 4.0, 12.0 etc.) and values are paths to the
/// tools directories (and NOT the <c>MSBuild.exe</c> itself!). The entries are sorted ascendingly by version numbers.</returns>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Targeting\ITargetInternal.cs
/// <summary>
/// Enables / disables sequential logging in asynchronous executed tasks.
/// </summary>
/// <summary>
///     Gets a value indicating whether this target is hidden. Hidden targets will not be
///     visible in the list of targets displayed to the user as help.
/// </summary>
/// <value><c>true</c> if this target is hidden; otherwise, <c>false</c>.</value>
/// <summary>
///     Specifies targets on which this target depends on and execute then Synchronus.
/// </summary>
/// <param name="targetNames">The dependency target names.</param>
/// <returns>This same instance of <see cref="ITargetInternal" />.</returns>
/// <summary>
///     Specifies targets on which this target depends on and execute dependencies asynchronus
/// </summary>
/// <param name="targetNames">The dependency target names.</param>
/// <returns>This same instance of <see cref="ITargetInternal" />.</returns>
/// <summary>
///     Specifies targets on which this target depends on.
/// </summary>
/// <param name="targets">The dependency target names.</param>
/// <returns>This same instance of <see cref="ITargetInternal" />.</returns>
/// <summary>
///     Specifies targets on which this target depends on and execute dependencies asynchronus.
/// </summary>
/// <param name="targets">The dependency target names.</param>
/// <returns>This same instance of <see cref="ITargetInternal" />.</returns>
/// <summary>
/// Execute custom code in script.
/// </summary>
/// <param name="targetAction">Action to execute.</param>
/// <returns>This target.</returns>
/// <summary>
/// Execute custom code in script.
/// </summary>
/// <param name="targetAction">Action to execute.</param>
/// <returns>This target.</returns>
/// <summary>
/// Execute custom code in script.
/// </summary>
/// <param name="targetAction">Action to execute.</param>
/// <returns>This target.</returns>
/// <summary>
/// Execute custom code in script.
/// </summary>
/// <param name="targetAction">Action to execute.</param>
/// <returns>This target.</returns>
/// <summary>
/// Execute custom code in script.
/// </summary>
/// <param name="targetAction">Action to execute.</param>
/// <returns>This target.</returns>
/// <summary>
/// Execute custom code in script.
/// </summary>
/// <param name="targetAction">Action to execute.</param>
/// <returns>This target.</returns>
/// <summary>
/// Execute custom code in script asynchronous.
/// </summary>
/// <param name="targetAction">Action to execute.</param>
/// <returns>This target.</returns>
/// <summary>
/// Execute custom code in script.
/// </summary>
/// <param name="targetAction">Action to execute.</param>
/// <returns>This target.</returns>
/// <summary>
/// Execute custom code in script.
/// </summary>
/// <param name="targetAction">Action to execute.</param>
/// <returns>This target.</returns>
/// <summary>
/// Execute custom code in script.
/// </summary>
/// <param name="targetAction">Action to execute.</param>
/// <returns>This target.</returns>
/// <summary>
/// Execute custom code in script.
/// </summary>
/// <param name="targetAction">Action to execute.</param>
/// <returns>This target.</returns>
/// <summary>
/// Execute custom code in script.
/// </summary>
/// <param name="targetAction">Action to execute.</param>
/// <returns>This target.</returns>
/// <summary>
/// Execute custom code in script asynchronous.
/// </summary>
/// <param name="targetAction">Action to execute.</param>
/// <returns>This target.</returns>
/// <summary>
/// Execute custom code in script.
/// </summary>
/// <param name="targetAction">Action to execute.</param>
/// <returns>This target.</returns>
/// <summary>
/// Execute custom code in script.
/// </summary>
/// <param name="targetAction">Action to execute.</param>
/// <returns>This target.</returns>
/// <summary>
/// Execute custom code in script.
/// </summary>
/// <param name="targetAction">Action to execute.</param>
/// <returns>This target.</returns>
/// <summary>
/// Execute custom code in script.
/// </summary>
/// <param name="targetAction">Action to execute.</param>
/// <returns>This target.</returns>
/// <summary>
/// Execute custom code in script.
/// </summary>
/// <param name="targetAction">Action to execute.</param>
/// <returns>This target.</returns>
/// <summary>
///     Sets the target as the default target for the runner.
/// </summary>
/// <returns>This same instance of <see cref="ITargetInternal" />.</returns>
/// <summary>
/// Set's the description of the target.
/// Desciption will be displayed in help.
/// </summary>
/// <param name="description">The description.</param>
/// <returns>this target</returns>
/// <summary>
///     Sets the target as hidden. Hidden targets will not be
///     visible in the list of targets displayed to the user as help.
/// </summary>
/// <returns>This same instance of <see cref="ITargetInternal" />.</returns>
/// <summary>
/// Add's the task to the target.
/// </summary>
/// <param name="task">The task to be added</param>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Targeting\Target.cs
/// <summary>
///     Gets a value indicating whether this target is hidden. Hidden targets will not be
///     visible in the list of targets displayed to the user as help.
/// </summary>
/// <value><c>true</c> if this target is hidden; otherwise, <c>false</c>.</value>
/// <summary>
///     Specifies targets on which this target depends on.
/// </summary>
/// <param name="targetNames">The dependency target names.</param>
/// <returns>This same instance of <see cref="ITargetInternal" />.</returns>
/// <summary>
///     Specifies targets on which this target depends on.
/// </summary>
/// <param name="targetNames">The dependency target names.</param>
/// <returns>This same instance of <see cref="ITargetInternal" />.</returns>
/// <summary>
///     Sets the target as the default target for the runner.
/// </summary>
/// <returns>This same instance of <see cref="ITargetInternal" />.</returns>
/// <summary>
///     Set's the description of the target,
/// </summary>
/// <param name="description">The description</param>
/// <returns>this target</returns>
/// <summary>
///     Sets the target as hidden. Hidden targets will not be
///     visible in the list of targets displayed to the user as help.
/// </summary>
/// <returns>This same instance of <see cref="ITargetInternal" />.</returns>
/// <summary>
///     Specifies targets on which this target depends on.
/// </summary>
/// <param name="targets">The dependency targets</param>
/// <returns>This same instance of <see cref="ITargetInternal" /></returns>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Targeting\TargetAction.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Targeting\TargetAttribute.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Targeting\TargetCreator.cs
/// <summary>
/// Searches methods with Target attribute in specified type and creates targets.
/// </summary>
/// <param name="buildScriptType"></param>
/// <param name="flubuSession"></param>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Targeting\TargetTree.cs
/// <summary>
///     Gets the default target for this runner.
/// </summary>
/// <remarks>
///     The default target is the one which will be executed if
///     the target is not specified in the command line.
/// </remarks>
/// <value>The default target.</value>
/// <summary>
///     Determines whether the specified targets exists.
/// </summary>
/// <param name="targetNames">Name of the target.</param>
/// <returns>
///     <c>true</c> if the specified target exists; otherwise, <c>false</c>.
/// </returns>
/// <summary>
///     Determines whether the specified target exists.
/// </summary>
/// <param name="targetName">Name of the target.</param>
/// <returns>
///     <c>true</c> if the specified target exists; otherwise, <c>false</c>.
/// </returns>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Targeting\TargetTree.Targets.cs
/// <summary>
///     The target for displaying help in the command line.
/// </summary>
/// <param name="context">The task context.</param>
// first sort the targets
// now display them in sorted order
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Targeting\TaskGroup.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\DoTask.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\DoTaskAsync.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\DoTaskBase.cs
/// <summary>
/// Name of the task that is displayed in help.
/// </summary>
/// <param name="taskName"></param>
/// <returns></returns>
/// <summary>
/// Adds help for specified argument.
/// </summary>
/// <param name="argKey"></param>
/// <param name="help"></param>
/// <returns></returns>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\DotnetTaskFactory.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\InstallTaskExtensions.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\ITask.cs
/// <summary>
/// Name of the task.
/// </summary>
/// <summary>
///     Executes the task using the specified script execution environment.
/// </summary>
/// <param name="context">The script execution environment.</param>
/// <summary>
/// Execute task async
/// </summary>
/// <param name="context"></param>
/// <returns></returns>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\ITaskFactory.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\ITaskOfT.cs
/// <summary>
///     Specifies basic properties and methods for a task.
/// </summary>
/// <summary>
///     Executes the task using the specified script execution environment.
/// </summary>
/// <param name="context">The script execution environment.</param>
/// <summary>
/// Retry task if execution of the task fails.
/// </summary>
/// <param name="numberOfRetries">Number of retries before task fails.</param>
/// <param name="delay">Delay time in miliseconds between retries.</param>
/// <param name="condition">Condition when retry will occur. If condition is null task is always retried. </param>
/// <returns></returns>
/// <summary>
/// Do not log messages.
/// </summary>
/// <returns></returns>
/// <summary>
/// Do not fail task if error occurs.
/// </summary>
/// <returns></returns>
/// <param name="doNotFailOnErrorAction">Action to be taken if task fails and DoNotFailOnError flag is set.</param>
/// <param name="condition">Condition when task will not fail. If condition is null task will never fail. </param>
/// <summary>
/// Action to be taken when task finisish successfuly or when it fails.
/// </summary>
/// <param name="finallyAction"></param>
/// <returns></returns>
/// <summary>
/// Action to be taken if task fails.
/// </summary>
/// <param name="onErrorAction"></param>
/// <returns></returns>
/// <summary>
/// Applies task actions specified in <see cref="taskAction"/> to task only when <see cref="condition"/>  is meet.
/// </summary>
/// <param name="condition">The condition to be meet.</param>
/// <param name="taskAction">task actions to be applied to task when <see cref="condition"/> is meet.</param>
/// <returns></returns>
/// <summary>
/// Passes script argument value with specified key in <see cref="argKey"/> to specified task method  in <see cref="taskMethod"/>
/// </summary>
/// <param name="taskMember">The method that the parameter value will be modified.</param>
/// <param name="argKey">The key of the argument that it will be pass through to method parameter in <see cref="taskMethod"/></param>
/// <param name="help">The argument help  text that wiil be display in target help. If not specified default help text is used.</param>
/// <param name="includeParameterlessMethodByDefault">If <c>true</c> <see cref="taskMethod"/> is invoked by default if <see cref="argKey"/> is not specified. Oterwise <see cref="taskMethod"/> is not invoked by default.</param>
/// <returns></returns>
/// <summary>
/// Interactively pass argument from console to specified task method / parameter.
/// If argument key is provided when executing target in console that value will be used and interactive mode will be disabled.
/// </summary>
/// <param name="taskMember">The method / parameter to pass argument.</param>
/// <param name="argKey">The key of the argument that it will be pass through to method parameter in <see cref="taskMethod"/></param>
/// <param name="consoleText">Text in console that will be displayed when entering value for task member.
/// If console text is not provided text is generated by FlubuCore.</param>
/// <param name="argHelp">The argument help  text that wiil be display in target help. If not specified default help text is used.</param>
/// <returns></returns>
/// <summary>
/// Overrides default task description.
/// </summary>
/// <param name="description"></param>
/// <returns></returns>
/// <summary>
/// When applied task duration is logged.
/// </summary>
/// <returns></returns>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\PrefixProcessors.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\TaskBase.cs
/// <summary>
///     A base abstract class from which tasks can be implemented.
/// </summary>
/// <summary>
/// Stopwatch for timings.
/// </summary>
/// <summary>
///  Should the task fail if an error occurs.
/// </summary>
/// <summary>
/// Do retry if set to true.
/// </summary>
/// <summary>
/// Delay in ms between retries.
/// </summary>
/// <summary>
/// Task context. It will be set after the execute method.
/// </summary>
/// <summary>
/// If set to true, task should not log anything.
/// </summary>
/// <summary>
/// Number of retries in case of an exception.
/// </summary>
/// <summary>
///     Gets a value indicating whether the duration of the task should be logged after the task
///     has finished.
/// </summary>
/// <value><c>true</c> if duration should be logged; otherwise, <c>false</c>.</value>
/// <inheritdoc />
/// <inheritdoc />
/// <inheritdoc />
/// <summary>
/// </summary>
/// <param name="numberOfRetries">Number of retries before task fails.</param>
/// <param name="delay">Delay time in miliseconds between retries.</param>
/// <param name="condition">Condition when retry will occur. If condition is null task is always retried. </param>
/// <returns></returns>
/// <inheritdoc />
/// <inheritdoc />
/// <inheritdoc />
/// <summary>
///     Executes the task using the specified script execution environment.
/// </summary>
/// <remarks>
///     This method implements the basic reporting and error handling for
///     classes which inherit the <see>
///         <cref>TaskBase</cref>
///     </see>
///     class.
/// </remarks>
/// <param name="context">The script execution environment.</param>
/// <inheritdoc />
/// <summary>
///     Abstract method defining the actual work for a task.
/// </summary>
/// <remarks>This method has to be implemented by the inheriting task.</remarks>
/// <param name="context">The script execution environment.</param>
/// <summary>
/// Virtual method defining the actual work for a task.
/// </summary>
/// <param name="context"></param>
/// <returns></returns>
/// <summary>
/// Log info if task logging is not disabled.
/// </summary>
/// <param name="message"></param>
/// <summary>
/// Log info if task logging is not disabled.
/// </summary>
/// <param name="message"></param>
/// <summary>
/// Log error if task logging is not disabled.
/// </summary>
/// <param name="message"></param>
/// <summary>
/// Log error if task logging is not disabled.
/// </summary>
/// <param name="message"></param>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\TaskExecutionMode.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\TaskStatus.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\TaskValidationException.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\TaskValidationExtensions.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\ValidationMessages.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\VerbosityOptions.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Attributes\ArgKey.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Attributes\DisableForMemberAttribute.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Chocolatey\Chocolatey.cs
/// <summary>
/// Installs a package or a list of packages (sometimes specified as a packages.config)
/// </summary>
/// <param name="package"></param>
/// <returns></returns>
/// <summary>
/// Upgrades a package or a list of packages.
/// </summary>
/// <param name="package"></param>
/// <returns></returns>
/// <summary>
/// Uninstalls a package or a list of packages.
/// </summary>
/// <param name="package"></param>
/// <returns></returns>
/// <summary>
/// Chocolatey will generate package specification files for a new package.
/// </summary>
/// <param name="name"></param>
/// <returns></returns>
/// <summary>
/// hocolatey will attempt to package a nuspec into a compiled nupkg.
/// </summary>
/// <param name="pathToNuspec"></param>
/// <summary>
/// Chocolatey will attempt to push a compiled nupkg to a package feed.
/// </summary>
/// <returns></returns>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Chocolatey\ChocolateyBaseTask.cs
/// <summary>
/// Debug - Show debug messaging.
/// </summary>
/// <returns></returns>
/// <summary>
///  Verbose - Show verbose messaging. Very verbose messaging, avoid using under normal circumstances.
/// </summary>
/// <returns></returns>
/// <summary>
/// Show trace messaging. Very, very verbose trace messaging. Avoid except when needing super low-level .NET Framework debugging.
/// </summary>
/// <returns></returns>
/// <summary>
///  No Color - Do not show colorization in logging output. This overrides the feature 'logWithoutColor', set to 'False'
/// </summary>
/// <returns></returns>
/// <summary>
///  AcceptLicense - Accept license dialogs automatically. Reserved for future use.
/// </summary>
/// <returns></returns>
/// <summary>
/// Confirm all prompts - Chooses affirmative answer instead of prompting.
/// </summary>
/// <returns></returns>
/// <summary>
/// Force - force the behavior. Do not use force during normal operation -it subverts some of the smart behavior for commands.
/// </summary>
/// <returns></returns>
/// <summary>
///  NoOp / WhatIf - Don't actually do anything.
/// </summary>
/// <returns></returns>
/// <summary>
///  LimitOutput - Limit the output to essential information
/// </summary>
/// <returns></returns>
/// <summary>
///  CommandExecutionTimeout (in seconds) - The time to allow a command to finish before timing out. Overrides the default execution timeout in the configuration of 2700 seconds.
/// </summary>
/// <param name="timeout"></param>
/// <returns></returns>
/// <summary>
///  CacheLocation - Location for download cache, defaults to %TEMP% or value in chocolatey.config file.
/// </summary>
/// <param name="cacheLocation"></param>
/// <returns></returns>
/// <summary>
/// AllowUnofficialBuild - When not using the official build you must set this flag for choco to continue.
/// </summary>
/// <returns></returns>
/// <summary>
///  FailOnStandardError - Fail on standard error output (stderr), typically received when running external commands during install providers. This
/// overrides the feature failOnStandardError.
/// </summary>
/// <returns></returns>
/// <summary>
/// Proxy Location - Explicit proxy location. Overrides the default proxy location of ''.
/// </summary>
/// <param name="proxy"></param>
/// <returns></returns>
/// <summary>
/// Proxy User Name - Explicit proxy user (optional). Requires explicitly proxy (`--proxy` or config setting). Overrides the default proxy user of '123'.
/// </summary>
/// <param name="user"></param>
/// <returns></returns>
/// <summary>
/// proxy Password - Explicit proxy password (optional) to be used with username. Requires explicity proxy (`--proxy` or config setting) and user name.
/// </summary>
/// <param name="password"></param>
/// <returns></returns>
/// <summary>
/// ProxyBypassList - Comma separated list of regex locations to bypass on proxy. Requires explicity proxy (`--proxy` or config setting). Overrides the default proxy bypass list of ''.
/// </summary>
/// <param name="list"></param>
/// <returns></returns>
/// <summary>
///    Proxy Bypass On Local - Bypass proxy for local connections. Requires explicity proxy (`--proxy` or config setting). Overrides the default proxy bypass on local setting of 'True'.
/// </summary>
/// <returns></returns>
/// <summary>
///  Log File to output to in addition to regular loggers.
/// </summary>
/// <param name="logFile"></param>
/// <returns></returns>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Chocolatey\ChocolateyInstallTask.cs
/// <summary>
/// Source - The source to find the package(s) to install. Special sources include: ruby, webpi, cygwin, windowsfeatures, and python. To specify more than one source, pass it with a semi-colon separating the values (-e.g. "'source1;source2'"). Defaults to default feeds.
/// </summary>
/// <param name="source"></param>
/// <returns></returns>
/// <summary>
/// Version - A specific version to install. Defaults to unspecified.
/// </summary>
/// <param name="version"></param>
/// <returns></returns>
/// <summary>
/// Prerelease - Include Prereleases? Defaults to false.
/// </summary>
/// <returns></returns>
/// <summary>
/// ForceX86 - Force x86 (32bit) installation on 64 bit systems. Defaults to false.
/// </summary>
/// <returns></returns>
/// <summary>
///  InstallArguments - Install Arguments to pass to the native installer in the package. Defaults to unspecified.
/// </summary>
/// <param name="arguments"></param>
/// <returns></returns>
/// <summary>
/// Apply Install Arguments To Dependencies  - Should install arguments be applied to dependent packages? Defaults to false.
/// </summary>
/// <returns></returns>
/// <summary>
///  Apply Package Parameters To Dependencies  - Should package parameters be applied to dependent packages? Defaults to false.
/// </summary>
/// <returns></returns>
/// <summary>
/// AllowMultipleVersions - Should multiple versions of a package be installed? Defaults to false.
/// </summary>
/// <returns></returns>
/// <summary>
/// AllowDowngrade - Should an attempt at downgrading be allowed? Defaults to false.
/// </summary>
/// <returns></returns>
/// <summary>
/// ForceDependencies - Force dependencies to be reinstalled when force installing package(s). Must be used in conjunction with --force.
/// </summary>
/// <returns></returns>
/// <summary>
///  IgnoreDependencies - Ignore dependencies when installing package(s).
/// </summary>
/// <returns></returns>
/// <summary>
/// Skip Powershell - Do not run chocolateyInstall.ps1. Defaults to false.
/// </summary>
/// <returns></returns>
/// <summary>
///  User - used with authenticated feeds. Defaults to empty.
/// </summary>
/// <param name="user"></param>
/// <returns></returns>
/// <summary>
///  Password - the user's password to the source. Defaults to empty.
/// </summary>
/// <param name="paswword"></param>
/// <returns></returns>
/// <summary>
/// Client certificate - PFX pathname for an x509 authenticated feeds. Defaults to empty. Available in 0.9.10+.
/// </summary>
/// <param name="path"></param>
/// <returns></returns>
/// <summary>
///   Certificate Password - the client certificate's password to the source. Defaults to empty. Available in 0.9.10+.
/// </summary>
/// <param name="password"></param>
/// <returns></returns>
/// <summary>
///  IgnoreChecksums - Ignore checksums provided by the package. Overrides the default feature 'checksumFiles' set to 'True'. Available in 0.9.9.9+.
/// </summary>
/// <returns></returns>
/// <summary>
///   Allow Empty Checksums - Allow packages to have empty/missing checksums for downloaded resources from non-secure locations (HTTP, FTP). Use this
///   switch is not recommended if using sources that download resources from the internet. Overrides the default feature 'allowEmptyChecksums' set to  'False'. Available in 0.10.0+.
/// </summary>
/// <returns></returns>
/// <summary>
/// Allow Empty Checksums Secure - Allow packages to have empty checksums for downloaded resources from secure locations (HTTPS). Overrides the
/// default feature 'allowEmptyChecksumsSecure' set to 'True'. Available in 0.10.0+.
/// </summary>
/// <returns></returns>
/// <summary>
/// Require Checksums - Requires packages to have checksums for downloaded resources (both non-secure and secure). Overrides the default feature
/// 'allowEmptyChecksums' set to 'False' and 'allowEmptyChecksumsSecure' set to 'True'. Available in 0.10.0+.
/// </summary>
/// <returns></returns>
/// <summary>
/// Download Checksum - a user provided checksum for downloaded resources for the package. Overrides the package checksum (if it has one).
/// Defaults to empty. Available in 0.10.0+.
/// </summary>
/// <returns></returns>
/// <summary>
/// Download Checksum 64bit - a user provided checksum for 64bit downloaded resources for the package. Overrides the package 64-bit checksum (if it has one).
/// Defaults to same as Download Checksum. Available in 0.10.0+.
/// </summary>
/// <param name="checksum"></param>
/// <returns></returns>
/// <summary>
/// Download Checksum Type 64bit - a user provided checksum for 64bit downloaded resources for the package. Overrides the package 64-bit
/// checksum (if it has one). Used in conjunction with Download Checksum  64bit. Available values are 'md5', 'sha1', 'sha256' or 'sha512'.
/// Defaults to same as Download Checksum Type. Available in 0.10.0+.
/// </summary>
/// <param name="checksumType"></param>
/// <returns></returns>
/// <summary>
/// IgnorePackageExitCodes - Exit with a 0 for success and 1 for non-succes-s, no matter what package scripts provide for exit codes. Overrides the
/// default feature 'usePackageExitCodes' set to 'True'. Available in 0.-9.10+.
/// </summary>
/// <returns></returns>
/// <summary>
/// UsePackageExitCodes - Package scripts can provide exit codes. Use those  for choco's exit code when non-zero (this value can come from a
///    dependency package). Chocolatey defines valid exit codes as 0, 1605, 1614, 1641, 3010.  Overrides the default feature 'usePackageExitCodes' set to 'True'. Available in 0.9.10+.
/// </summary>
/// <returns></returns>
/// <summary>
///  Exit When Reboot Detected - Stop running install, upgrade, or uninstall when a reboot request is detected. Requires 'usePackageExitCodes'
///  feature to be turned on. Will exit with either 350 or 1604.  Overrides  the default feature 'exitOnRebootDetected' set to 'False'.  Available in  0.10.12+.
/// </summary>
/// <returns></returns>
/// <summary>
/// Ignore Detected Reboot - Ignore any detected reboots if found. Overrides  the default feature 'exitOnRebootDetected' set to 'False'.  Available in 0.10.12+.
/// </summary>
/// <returns></returns>
/// <summary>
///  Skip Download Cache - Use the original download even if a private CDN cache is available for a package. Overrides the default feature
/// 'downloadCache' set to 'True'. Available in 0.9.10+. [Licensed editions](https://chocolatey.org/compare) only. See https://chocolatey.org/docs/features-private-cdn
/// </summary>
/// <returns></returns>
/// <summary>
/// kip Virus Check - Skip the virus check for downloaded files on this run. Overrides the default feature 'virusCheck' set to 'True'. Available
/// in 0.9.10+. [Licensed editions](https://chocolatey.org/compare) only. See https://chocolate-y.org/docs/features-virus-check
/// </summary>
/// <returns></returns>
/// <summary>
///  Virus Check - check downloaded files for viruses. Overrides the default feature 'virusCheck' set to 'True'. Available in 0.9.10+. Licensed
///    editions only. See https://chocolatey.org/docs/features-virus-check
/// </summary>
/// <returns></returns>
/// <summary>
///  Virus Check Minimum Scan Result Positives - the minimum number of scan result positives required to flag a package. Used when virusScannerType
///  is VirusTotal. Overrides the default configuration value 'virusCheckMinimumPositives' set to '5'. Available in 0.9.10+. Licensed editions only. See https://chocolatey.org/docs/features-virus-check
/// </summary>
/// <returns></returns>
/// <summary>
/// InstallArgumentsSensitive - Install Arguments to pass to the native installer in the package that are sensitive and you do not want logged.
///  Defaults to unspecified. Available in 0.10.1+. [Licensed editions](https://chocolatey.org/compare) only.
/// </summary>
/// <param name="argument"></param>
/// <returns></returns>
/// <summary>
/// PackageParametersSensitive - Package Parameters to pass the package that
/// are sensitive and you do not want logged. Defaults to unspecified.
/// Available in 0.10.1+. [Licensed editions](https://chocolatey.org/compare) only.
/// </summary>
/// <param name="parameter"></param>
/// <returns></returns>
/// <summary>
/// Maximum Download Rate Bits Per Second - The maximum download rate in  bits per second. '0' or empty means no maximum. A number means that will
/// be the maximum download rate in bps. Defaults to config setting of '0'.  Available in [licensed editions](https://chocolatey.org/compare) v1.10+ only. See https://chocolate- y.org/docs/features-package-throttle
/// </summary>
/// <param name="value"></param>
/// <returns></returns>
/// <summary>
/// Reducer Installed Package Size (Package Reducer) - Reduce size of the nupkg file to very small and remove extracted archives and installers.
/// Overrides the default feature 'reduceInstalledPackageSpaceUsage' set to 'True'. [Licensed editions](https://chocolatey.org/compare) only (version 1.12.0+). See https://chocolate-y.org/docs/features-package-reducer
/// </summary>
/// <returns></returns>
/// <summary>
/// Do Not Reduce Installed Package Size - Leave the nupkg and files alone in the package. Overrides the default feature
/// 'reduceInstalledPackageSpaceUsage' set to 'True'. [Licensed editions](https://chocolatey.org/compare) only (version 1.12.0+). See https://chocolatey.org/docs/features-package-reducer
/// </summary>
/// <returns></returns>
/// <summary>
/// Reduce Only Nupkg File Size - reduce only the size of nupkg file when using Package Reducer. Overrides the default feature
/// 'reduceOnlyNupkgSize' set to 'False'. [Licensed editions](https://chocolatey.org/compare) only (version -1.12.0+). See https://chocolatey.org/docs/features-package-reducer
/// </summary>
/// <returns></returns>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Chocolatey\ChocolateyNewTask.cs
/// <summary>
/// TemplateName - Use a named template in C:\ProgramData\chocolatey\templates\templatename instead of built-in
///  template. Available in 0.9.9.9+. Manage templates as packages in 0.9.10+.
/// </summary>
/// <returns></returns>
/// <summary>
///  Version - the version of the package. Can also be passed as the property;
/// </summary>
/// <param name="version"></param>
/// <returns></returns>
/// <summary>
/// Maintainer - the name of the maintainer. Can also be passed as the property MaintainerName=somevalue
/// </summary>
/// <param name="name"></param>
/// <returns></returns>
/// <summary>
/// OutputDirectory - Specifies the directory for the created Chocolatey package file. If not specified, uses the current directory. Available in
/// </summary>
/// <param name="directory"></param>
/// <returns></returns>
/// <summary>
///  BuiltInTemplate - Use the original built-in template instead of any override. Available in 0.9.10+.
/// </summary>
/// <returns></returns>
/// <summary>
/// detection (native installer, zip, patch/upgrade file, or remote url to download first) to completely create a package with proper silent
/// arguments! Can be 32-bit or 64-bit architecture.  Available in licensed editions only (licensed version 1.4.0+, url/zip starting in 1.6.0). See https://chocolatey.org/docs/features-create-packages-from-installers
/// </summary>
/// <param name="value"></param>
/// <returns></returns>
/// <summary>
///  Use Original Files Location - when using file or url, use the original location in packaging. Available in [licensed editions](https://chocolatey.org/compare) only (licensed version 1.6.0+).
/// </summary>
/// <returns></returns>
/// <summary>
///   Download Checksum - checksum to verify File/Url with. Defaults to empty. Available in [licensed editions](https://chocolatey.org/compare) only (licensed version 1.7.0+).
/// </summary>
/// <param name="value"></param>
/// <returns></returns>
/// <summary>
/// Download Checksum Type - checksum type for File/Url (and optional separate 64-bit files when specifying both). Used in conjunction with
/// Download Checksum and Download Checksum 64-bit. Available values are 'md5', 'sha1', 'sha256' or 'sha512'. Defaults to 'sha256'.  Available in Business editions only (licensed version 1.7.0+).
/// </summary>
/// <param name="value"></param>
/// <returns></returns>
/// <summary>
/// Pause on Error - Pause when there is an error with creating the package. Available in [licensed editions](https://chocolatey.org/compare) only (licensed version 1.7.0+).
/// </summary>
/// <returns></returns>
/// <summary>
///  Build Package - Attempt to compile the package after creating it.  Available in [licensed editions](https://chocolatey.org/compare) only (licensed version 1.7.0+).
/// </summary>
/// <returns></returns>
/// <summary>        /// Generate Packages From Installed Software - Generate packages from the installed software on a system (does not handle dependencies). Available in Business editions only (licensed version 1.8.0+).
/// </summary>
/// <returns></returns>
/// <summary>
///  Include Architecture in Package Name - Leave x86, x64, 64-bit, etc as part of the package id. Default setting is to remove architecture. Available in Business editions only (licensed version 1.8.0+).
/// </summary>
/// <returns></returns>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Chocolatey\ChocolateyPackTask.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Chocolatey\ChocolateyPushTask.cs
/// <summary>
///   Source - The source we are pushing the package to. Use https://push.chocolatey.org/ to push to [community feed](https://chocolatey.org/packages).
/// </summary>
/// <param name="source"></param>
/// <returns></returns>
/// <summary>
///  ApiKey - The api key for the source. If not specified (and not local file source), does a lookup. If not specified and one is not found for an https source, push will fail.
/// </summary>
/// <param name="key"></param>
/// <returns></returns>
/// <summary>
/// Timeout (in seconds) - The time to allow a package push to occur before timing out. Defaults to execution timeout 2700.
/// </summary>
/// <param name="timeout"></param>
/// <returns></returns>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Chocolatey\ChocolateyUninstallTask.cs
/// <summary>
///  Source - The source to find the package(s) to install. Special sources include: ruby, webpi, cygwin, windowsfeatures, and python. To specify
///  more than one source, pass it with a semi-colon separating the values (-e.g. "'source1;source2'"). Defaults to default feeds.
/// </summary>
/// <param name="source"></param>
/// <returns></returns>
/// <summary>
/// Version - A specific version to install. Defaults to unspecified.
/// </summary>
/// <param name="version"></param>
/// <returns></returns>
/// <summary>
///  InstallArguments - Install Arguments to pass to the native installer in the package. Defaults to unspecified.
/// </summary>
/// <param name="argument"></param>
/// <returns></returns>
/// <summary>
/// Apply Install Arguments To Dependencies  - Should install arguments be applied to dependent packages? Defaults to false.
/// </summary>
/// <returns></returns>
/// <summary>
///  Apply Package Parameters To Dependencies  - Should package parameters be applied to dependent packages? Defaults to false.
/// </summary>
/// <returns></returns>
/// <summary>
///  AllowMultipleVersions - Should multiple versions of a package be installed? Defaults to false.
/// </summary>
/// <returns></returns>
/// <summary>
/// RemoveDependencies - Uninstall dependencies when uninstalling package(s). Defaults to false.
/// </summary>
/// <returns></returns>
/// <summary>
/// Skip Powershell - Do not run chocolateyUninstall.ps1. Defaults to false.
/// </summary>
/// <returns></returns>
/// <summary>
///  IgnorePackageExitCodes - Exit with a 0 for success and 1 for non-succes-s, no matter what package scripts provide for exit codes. Overrides the
///  default feature 'usePackageExitCodes' set to 'True'. Available in 0.9.10+.
/// </summary>
/// <returns></returns>
/// <summary>
/// UsePackageExitCodes - Package scripts can provide exit codes. Use those for choco's exit code when non-zero (this value can come from a dependency package). Chocolatey defines valid exit codes as 0, 1605,
/// 1614, 1641, 3010. Overrides the default feature 'usePackageExitCodes' set to 'True'. Available in 0.9.10+.
/// </summary>
/// <returns></returns>
/// <summary>
/// UseAutoUninstaller - Use auto uninstaller service when uninstalling. Overrides the default feature 'autoUninstaller' set to 'True'. Available in 0.9.10+.
/// </summary>
/// <returns></returns>
/// <summary>
///  SkipAutoUninstaller - Skip auto uninstaller service when uninstalling. Overrides the default feature 'autoUninstaller' set to 'True'. Available in 0.9.10+.
/// </summary>
/// <returns></returns>
/// <summary>
/// FailOnAutoUninstaller - Fail the package uninstall if the auto uninstaller reports and error. Overrides the default feature 'failOnAutoUninstaller' set to 'False'. Available in 0.9.10+.
/// </summary>
/// <returns></returns>
/// <summary>
///  --ignoreautouninstallerfailure, --ignore-autouninstaller-failure Ignore Auto Uninstaller Failure - Do not fail the package if auto uninstaller reports an error. Overrides the default feature 'failOnAutoUninstaller' set to 'False'. Available in 0.9.10+.
/// </summary>
/// <returns></returns>
/// <summary>
///  Stop On First Package Failure - stop running install, upgrade or uninstall on first package failure instead of continuing with others.
///  Overrides the default feature 'stopOnFirstPackageFailure' set to 'False'. Available in 0.10.4+.
/// </summary>
/// <returns></returns>
/// <summary>
/// Exit When Reboot Detected - Stop running install, upgrade, or uninstall when a reboot request is detected. Requires 'usePackageExitCodes'
/// feature to be turned on. Will exit with either 350 or 1604.  Overrides the default feature 'exitOnRebootDetected' set to 'False'.  Available in 0.10.12+.
/// </summary>
/// <returns></returns>
/// <summary>
///  Ignore Detected Reboot - Ignore any detected reboots if found. Overrides the default feature 'exitOnRebootDetected' set to 'False'.  Available in 0.10.12+.
/// </summary>
/// <returns></returns>
/// <summary>
///  From Programs and Features - Uninstalls a program from programs and features. Name used for id must be a match or a wildcard (*) to Display
/// Name in Programs and Features. Available in [licensed editions](https://chocolatey.org/compare) only (licensed version 1.8.0+) and requires v0.10.4+.
/// </summary>
/// <returns></returns>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Chocolatey\ChocolateyUpgradeTask.cs
/// <summary>
///  Source - The source to find the package(s) to install. Special sources include: ruby, webpi, cygwin, windowsfeatures, and python. To specify
///  more than one source, pass it with a semi-colon separating the values (-e.g. "'source1;source2'"). Defaults to default feeds.
/// </summary>
/// <param name="source"></param>
/// <returns></returns>
/// <summary>
/// Version - A specific version to install. Defaults to unspecified.
/// </summary>
/// <param name="version"></param>
/// <returns></returns>
/// <summary>
/// Prerelease - Include Prereleases? Defaults to false.
/// </summary>
/// <returns></returns>
/// <summary>
/// ForceX86 - Force x86 (32bit) installation on 64 bit systems. Defaults to false.
/// </summary>
/// <returns></returns>
/// <summary>
///  InstallArguments - Install Arguments to pass to the native installer in the package. Defaults to unspecified.
/// </summary>
/// <param name="arguments"></param>
/// <returns></returns>
/// <summary>
/// Apply Install Arguments To Dependencies  - Should install arguments be applied to dependent packages? Defaults to false.
/// </summary>
/// <returns></returns>
/// <summary>
///  Apply Package Parameters To Dependencies  - Should package parameters be applied to dependent packages? Defaults to false.
/// </summary>
/// <returns></returns>
/// <summary>
/// AllowDowngrade - Should an attempt at downgrading be allowed? Defaults to false.
/// </summary>
/// <returns></returns>
/// <summary>
/// ForceDependencies - Force dependencies to be reinstalled when force installing package(s). Must be used in conjunction with --force.
/// </summary>
/// <returns></returns>
/// <summary>
///  IgnoreDependencies - Ignore dependencies when installing package(s).
/// </summary>
/// <returns></returns>
/// <summary>
/// Skip Powershell - Do not run chocolateyInstall.ps1. Defaults to false.
/// </summary>
/// <returns></returns>
/// <summary>
///  User - used with authenticated feeds. Defaults to empty.
/// </summary>
/// <param name="user"></param>
/// <returns></returns>
/// <summary>
///  Password - the user's password to the source. Defaults to empty.
/// </summary>
/// <param name="paswword"></param>
/// <returns></returns>
/// <summary>
/// Client certificate - PFX pathname for an x509 authenticated feeds. Defaults to empty. Available in 0.9.10+.
/// </summary>
/// <param name="path"></param>
/// <returns></returns>
/// <summary>
///   Certificate Password - the client certificate's password to the source. Defaults to empty. Available in 0.9.10+.
/// </summary>
/// <param name="password"></param>
/// <returns></returns>
/// <summary>
///  IgnoreChecksums - Ignore checksums provided by the package. Overrides the default feature 'checksumFiles' set to 'True'. Available in 0.9.9.9+.
/// </summary>
/// <returns></returns>
/// <summary>
///  Except - a comma-separated list of package names that should not be upgraded when upgrading 'all'. Defaults to empty. Available in 0.9.10+.
/// </summary>
/// <param name="packages"></param>
/// <returns></returns>
/// <summary>
///  Skip Packages Not Installed - if a package is not installed, do not install it during the upgrade process. Overrides the default feature
/// 'skipPackageUpgradesWhenNotInstalled' set to 'False'. Available in 0.1-0.12+.
/// </summary>
/// <returns></returns>
/// <summary>
///   Allow Empty Checksums - Allow packages to have empty/missing checksums for downloaded resources from non-secure locations (HTTP, FTP). Use this
///   switch is not recommended if using sources that download resources from the internet. Overrides the default feature 'allowEmptyChecksums' set to  'False'. Available in 0.10.0+.
/// </summary>
/// <returns></returns>
/// <summary>
/// Allow Empty Checksums Secure - Allow packages to have empty checksums for downloaded resources from secure locations (HTTPS). Overrides the
/// default feature 'allowEmptyChecksumsSecure' set to 'True'. Available in 0.10.0+.
/// </summary>
/// <returns></returns>
/// <summary>
/// Require Checksums - Requires packages to have checksums for downloaded resources (both non-secure and secure). Overrides the default feature
/// 'allowEmptyChecksums' set to 'False' and 'allowEmptyChecksumsSecure' set to 'True'. Available in 0.10.0+.
/// </summary>
/// <returns></returns>
/// <summary>
/// Download Checksum - a user provided checksum for downloaded resources for the package. Overrides the package checksum (if it has one).
/// Defaults to empty. Available in 0.10.0+.
/// </summary>
/// <returns></returns>
/// <summary>
/// Download Checksum 64bit - a user provided checksum for 64bit downloaded resources for the package. Overrides the package 64-bit checksum (if it has one).
/// Defaults to same as Download Checksum. Available in 0.10.0+.
/// </summary>
/// <param name="checksum"></param>
/// <returns></returns>
/// <summary>
/// Download Checksum Type 64bit - a user provided checksum for 64bit downloaded resources for the package. Overrides the package 64-bit
/// checksum (if it has one). Used in conjunction with Download Checksum  64bit. Available values are 'md5', 'sha1', 'sha256' or 'sha512'.
/// Defaults to same as Download Checksum Type. Available in 0.10.0+.
/// </summary>
/// <param name="checksumType"></param>
/// <returns></returns>
/// <summary>
/// IgnorePackageExitCodes - Exit with a 0 for success and 1 for non-succes-s, no matter what package scripts provide for exit codes. Overrides the
/// default feature 'usePackageExitCodes' set to 'True'. Available in 0.-9.10+.
/// </summary>
/// <returns></returns>
/// <summary>
/// UsePackageExitCodes - Package scripts can provide exit codes. Use those  for choco's exit code when non-zero (this value can come from a
///    dependency package). Chocolatey defines valid exit codes as 0, 1605, 1614, 1641, 3010.  Overrides the default feature 'usePackageExitCodes' set to 'True'. Available in 0.9.10+.
/// </summary>
/// <returns></returns>
/// <summary>
///  Exit When Reboot Detected - Stop running install, upgrade, or uninstall when a reboot request is detected. Requires 'usePackageExitCodes'
///  feature to be turned on. Will exit with either 350 or 1604.  Overrides  the default feature 'exitOnRebootDetected' set to 'False'.  Available in  0.10.12+.
/// </summary>
/// <returns></returns>
/// <summary>
/// Ignore Detected Reboot - Ignore any detected reboots if found. Overrides  the default feature 'exitOnRebootDetected' set to 'False'.  Available in 0.10.12+.
/// </summary>
/// <returns></returns>
/// <summary>
///  Skip Download Cache - Use the original download even if a private CDN cache is available for a package. Overrides the default feature
/// 'downloadCache' set to 'True'. Available in 0.9.10+. [Licensed editions](https://chocolatey.org/compare) only. See https://chocolatey.org/docs/features-private-cdn
/// </summary>
/// <returns></returns>
/// <summary>
/// kip Virus Check - Skip the virus check for downloaded files on this run. Overrides the default feature 'virusCheck' set to 'True'. Available
/// in 0.9.10+. [Licensed editions](https://chocolatey.org/compare) only. See https://chocolate-y.org/docs/features-virus-check
/// </summary>
/// <returns></returns>
/// <summary>
///  Virus Check - check downloaded files for viruses. Overrides the default feature 'virusCheck' set to 'True'. Available in 0.9.10+. Licensed
///    editions only. See https://chocolatey.org/docs/features-virus-check
/// </summary>
/// <returns></returns>
/// <summary>
///  Virus Check Minimum Scan Result Positives - the minimum number of scan result positives required to flag a package. Used when virusScannerType
///  is VirusTotal. Overrides the default configuration value 'virusCheckMinimumPositives' set to '5'. Available in 0.9.10+. Licensed editions only. See https://chocolatey.org/docs/features-virus-check
/// </summary>
/// <returns></returns>
/// <summary>
/// InstallArgumentsSensitive - Install Arguments to pass to the native installer in the package that are sensitive and you do not want logged.
///  Defaults to unspecified. Available in 0.10.1+. [Licensed editions](https://chocolatey.org/compare) only.
/// </summary>
/// <param name="argument"></param>
/// <returns></returns>
/// <summary>
/// PackageParametersSensitive - Package Parameters to pass the package that
/// are sensitive and you do not want logged. Defaults to unspecified.
/// Available in 0.10.1+. [Licensed editions](https://chocolatey.org/compare) only.
/// </summary>
/// <param name="parameter"></param>
/// <returns></returns>
/// <summary>
/// Maximum Download Rate Bits Per Second - The maximum download rate in  bits per second. '0' or empty means no maximum. A number means that will
/// be the maximum download rate in bps. Defaults to config setting of '0'.  Available in [licensed editions](https://chocolatey.org/compare) v1.10+ only. See https://chocolate- y.org/docs/features-package-throttle
/// </summary>
/// <param name="value"></param>
/// <returns></returns>
/// <summary>
/// Reducer Installed Package Size (Package Reducer) - Reduce size of the nupkg file to very small and remove extracted archives and installers.
/// Overrides the default feature 'reduceInstalledPackageSpaceUsage' set to 'True'. [Licensed editions](https://chocolatey.org/compare) only (version 1.12.0+). See https://chocolate-y.org/docs/features-package-reducer
/// </summary>
/// <returns></returns>
/// <summary>
/// Do Not Reduce Installed Package Size - Leave the nupkg and files alone in the package. Overrides the default feature
/// 'reduceInstalledPackageSpaceUsage' set to 'True'. [Licensed editions](https://chocolatey.org/compare) only (version 1.12.0+). See https://chocolatey.org/docs/features-package-reducer
/// </summary>
/// <returns></returns>
/// <summary>
/// Reduce Only Nupkg File Size - reduce only the size of nupkg file when using Package Reducer. Overrides the default feature
/// 'reduceOnlyNupkgSize' set to 'False'. [Licensed editions](https://chocolatey.org/compare) only (version -1.12.0+). See https://chocolatey.org/docs/features-package-reducer
/// </summary>
/// <returns></returns>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Docker\DockerAttachTask.cs
//-----------------------------------------------------------------------
// <auto-generated />
//-----------------------------------------------------------------------
/// <summary>
/// Override the key sequence for detaching a container
/// </summary>
/// <summary>
/// Do not attach STDIN
/// </summary>
/// <summary>
/// Proxy all received signals to the process
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Docker\DockerBuildTask.cs
//-----------------------------------------------------------------------
// <auto-generated />
//-----------------------------------------------------------------------
/// <summary>
/// Add a custom host-to-IP mapping (host:ip)
/// </summary>
/// <summary>
/// Set build-time variables
/// </summary>
/// <summary>
/// Images to consider as cache sources
/// </summary>
/// <summary>
/// Optional parent cgroup for the container
/// </summary>
/// <summary>
/// Compress the build context using gzip
/// </summary>
/// <summary>
/// Limit the CPU CFS (Completely Fair Scheduler) period
/// </summary>
/// <summary>
/// Limit the CPU CFS (Completely Fair Scheduler) quota
/// </summary>
/// <summary>
/// CPU shares (relative weight)
/// </summary>
/// <summary>
/// CPUs in which to allow execution (0-3, 0,1)
/// </summary>
/// <summary>
/// MEMs in which to allow execution (0-3, 0,1)
/// </summary>
/// <summary>
/// Skip image verification
/// </summary>
/// <summary>
/// Name of the Dockerfile (Default is 'PATH/Dockerfile')
/// </summary>
/// <summary>
/// Always remove intermediate containers
/// </summary>
/// <summary>
/// Write the image ID to the file
/// </summary>
/// <summary>
/// Container isolation technology
/// </summary>
/// <summary>
/// Set metadata for an image
/// </summary>
/// <summary>
/// Memory limit
/// </summary>
/// <summary>
/// Swap limit equal to memory plus swap: '-1' to enable unlimited swap
/// </summary>
/// <summary>
/// Set the networking mode for the RUN instructions during build
/// </summary>
/// <summary>
/// Do not use cache when building the image
/// </summary>
/// <summary>
/// Output destination (format: type=local,dest=path)
/// </summary>
/// <summary>
/// Set platform if server is multi-platform capable
/// </summary>
/// <summary>
/// Set type of progress output (auto, plain, tty). Use plain to show container output
/// </summary>
/// <summary>
/// Always attempt to pull a newer version of the image
/// </summary>
/// <summary>
/// Suppress the build output and print image ID on success
/// </summary>
/// <summary>
/// Remove intermediate containers after a successful build
/// </summary>
/// <summary>
/// Secret file to expose to the build (only if BuildKit enabled): id=mysecret,src=/local/secret
/// </summary>
/// <summary>
/// Security options
/// </summary>
/// <summary>
/// Size of /dev/shm
/// </summary>
/// <summary>
/// Squash newly built layers into a single new layer
/// </summary>
/// <summary>
/// SSH agent socket or keys to expose to the build (only if BuildKit enabled) (format: default|<id>[=<socket>|<key>[,<key>]])
/// </summary>
/// <summary>
/// Stream attaches to server to negotiate build context
/// </summary>
/// <summary>
/// Name and optionally a tag in the 'name:tag' format
/// </summary>
/// <summary>
/// Set the target build stage to build.
/// </summary>
/// <summary>
/// Ulimit options
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Docker\DockerCommitTask.cs
//-----------------------------------------------------------------------
// <auto-generated />
//-----------------------------------------------------------------------
/// <summary>
/// Author (e.g., "John Hannibal Smith <hannibal@a-team.com>")
/// </summary>
/// <summary>
/// Apply Dockerfile instruction to the created image
/// </summary>
/// <summary>
/// Commit message
/// </summary>
/// <summary>
/// Pause container during commit
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Docker\DockerCreateTask.cs
//-----------------------------------------------------------------------
// <auto-generated />
//-----------------------------------------------------------------------
/// <summary>
/// Add a custom host-to-IP mapping (host:ip)
/// </summary>
/// <summary>
/// Attach to STDIN, STDOUT or STDERR
/// </summary>
/// <summary>
/// Block IO (relative weight), between 10 and 1000, or 0 to disable (default 0)
/// </summary>
/// <summary>
/// Block IO weight (relative device weight)
/// </summary>
/// <summary>
/// Add Linux capabilities
/// </summary>
/// <summary>
/// Drop Linux capabilities
/// </summary>
/// <summary>
/// Optional parent cgroup for the container
/// </summary>
/// <summary>
/// Write the container ID to the file
/// </summary>
/// <summary>
/// CPU count (Windows only)
/// </summary>
/// <summary>
/// CPU percent (Windows only)
/// </summary>
/// <summary>
/// Limit CPU CFS (Completely Fair Scheduler) period
/// </summary>
/// <summary>
/// Limit CPU CFS (Completely Fair Scheduler) quota
/// </summary>
/// <summary>
/// Limit CPU real-time period in microseconds
/// </summary>
/// <summary>
/// Limit CPU real-time runtime in microseconds
/// </summary>
/// <summary>
/// CPU shares (relative weight)
/// </summary>
/// <summary>
/// Number of CPUs
/// </summary>
/// <summary>
/// CPUs in which to allow execution (0-3, 0,1)
/// </summary>
/// <summary>
/// MEMs in which to allow execution (0-3, 0,1)
/// </summary>
/// <summary>
/// Add a host device to the container
/// </summary>
/// <summary>
/// Add a rule to the cgroup allowed devices list
/// </summary>
/// <summary>
/// Limit read rate (bytes per second) from a device
/// </summary>
/// <summary>
/// Limit read rate (IO per second) from a device
/// </summary>
/// <summary>
/// Limit write rate (bytes per second) to a device
/// </summary>
/// <summary>
/// Limit write rate (IO per second) to a device
/// </summary>
/// <summary>
/// Skip image verification
/// </summary>
/// <summary>
/// Set custom DNS servers
/// </summary>
/// <summary>
/// Set DNS options
/// </summary>
/// <summary>
/// Set DNS options
/// </summary>
/// <summary>
/// Set custom DNS search domains
/// </summary>
/// <summary>
/// Container NIS domain name
/// </summary>
/// <summary>
/// Overwrite the default ENTRYPOINT of the image
/// </summary>
/// <summary>
/// Set environment variables
/// </summary>
/// <summary>
/// Read in a file of environment variables
/// </summary>
/// <summary>
/// Expose a port or a range of ports
/// </summary>
/// <summary>
/// GPU devices to add to the container ('all' to pass all GPUs)
/// </summary>
/// <summary>
/// Add additional groups to join
/// </summary>
/// <summary>
/// Command to run to check health
/// </summary>
/// <summary>
/// Time between running the check (ms|s|m|h) (default 0s)
/// </summary>
/// <summary>
/// Consecutive failures needed to report unhealthy
/// </summary>
/// <summary>
/// Start period for the container to initialize before starting health-retries countdown (ms|s|m|h) (default 0s)
/// </summary>
/// <summary>
/// Maximum time to allow one check to run (ms|s|m|h) (default 0s)
/// </summary>
/// <summary>
/// Print usage
/// </summary>
/// <summary>
/// Container host name
/// </summary>
/// <summary>
/// Run an init inside the container that forwards signals and reaps processes
/// </summary>
/// <summary>
/// Keep STDIN open even if not attached
/// </summary>
/// <summary>
/// Maximum IO bandwidth limit for the system drive (Windows only)
/// </summary>
/// <summary>
/// Maximum IOps limit for the system drive (Windows only)
/// </summary>
/// <summary>
/// IPv4 address (e.g., 172.30.100.104)
/// </summary>
/// <summary>
/// IPv6 address (e.g., 2001:db8::33)
/// </summary>
/// <summary>
/// IPC mode to use
/// </summary>
/// <summary>
/// Container isolation technology
/// </summary>
/// <summary>
/// Kernel memory limit
/// </summary>
/// <summary>
/// Set meta data on a container
/// </summary>
/// <summary>
/// Read in a line delimited file of labels
/// </summary>
/// <summary>
/// Add link to another container
/// </summary>
/// <summary>
/// Container IPv4/IPv6 link-local addresses
/// </summary>
/// <summary>
/// Logging driver for the container
/// </summary>
/// <summary>
/// Log driver options
/// </summary>
/// <summary>
/// Container MAC address (e.g., 92:d0:c6:0a:29:33)
/// </summary>
/// <summary>
/// Memory limit
/// </summary>
/// <summary>
/// Memory soft limit
/// </summary>
/// <summary>
/// Swap limit equal to memory plus swap: '-1' to enable unlimited swap
/// </summary>
/// <summary>
/// Tune container memory swappiness (0 to 100)
/// </summary>
/// <summary>
/// Attach a filesystem mount to the container
/// </summary>
/// <summary>
/// Assign a name to the container
/// </summary>
/// <summary>
/// Connect a container to a network
/// </summary>
/// <summary>
/// Add network-scoped alias for the container
/// </summary>
/// <summary>
/// Connect a container to a network
/// </summary>
/// <summary>
/// Add network-scoped alias for the container
/// </summary>
/// <summary>
/// Disable any container-specified HEALTHCHECK
/// </summary>
/// <summary>
/// Disable OOM Killer
/// </summary>
/// <summary>
/// Tune host's OOM preferences (-1000 to 1000)
/// </summary>
/// <summary>
/// PID namespace to use
/// </summary>
/// <summary>
/// Tune container pids limit (set -1 for unlimited)
/// </summary>
/// <summary>
/// Set platform if server is multi-platform capable
/// </summary>
/// <summary>
/// Give extended privileges to this container
/// </summary>
/// <summary>
/// Publish a container's port(s) to the host
/// </summary>
/// <summary>
/// Publish all exposed ports to random ports
/// </summary>
/// <summary>
/// Mount the container's root filesystem as read only
/// </summary>
/// <summary>
/// Restart policy to apply when a container exits
/// </summary>
/// <summary>
/// Automatically remove the container when it exits
/// </summary>
/// <summary>
/// Runtime to use for this container
/// </summary>
/// <summary>
/// Security Options
/// </summary>
/// <summary>
/// Size of /dev/shm
/// </summary>
/// <summary>
/// Signal to stop a container
/// </summary>
/// <summary>
/// Timeout (in seconds) to stop a container
/// </summary>
/// <summary>
/// Storage driver options for the container
/// </summary>
/// <summary>
/// Sysctl options
/// </summary>
/// <summary>
/// Mount a tmpfs directory
/// </summary>
/// <summary>
/// Allocate a pseudo-TTY
/// </summary>
/// <summary>
/// Ulimit options
/// </summary>
/// <summary>
/// Username or UID (format: <name|uid>[:<group|gid>])
/// </summary>
/// <summary>
/// User namespace to use
/// </summary>
/// <summary>
/// UTS namespace to use
/// </summary>
/// <summary>
/// Bind mount a volume
/// </summary>
/// <summary>
/// Optional volume driver for the container
/// </summary>
/// <summary>
/// Mount volumes from the specified container(s)
/// </summary>
/// <summary>
/// Working directory inside the container
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Docker\DockerDeployTask.cs
//-----------------------------------------------------------------------
// <auto-generated />
//-----------------------------------------------------------------------
/// <summary>
/// Path to a Distributed Application Bundle file
/// </summary>
/// <summary>
/// Path to a Compose file, or "-" to read from stdin
/// </summary>
/// <summary>
/// Kubernetes namespace to use
/// </summary>
/// <summary>
/// Prune services that are no longer referenced
/// </summary>
/// <summary>
/// Query the registry to resolve image digest and supported platforms ("always"|"changed"|"never")
/// </summary>
/// <summary>
/// Send registry authentication details to Swarm agents
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Docker\DockerEventsTask.cs
//-----------------------------------------------------------------------
// <auto-generated />
//-----------------------------------------------------------------------
/// <summary>
/// Filter output based on conditions provided
/// </summary>
/// <summary>
/// Format the output using the given Go template
/// </summary>
/// <summary>
/// Show all events created since timestamp
/// </summary>
/// <summary>
/// Stream events until this timestamp
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Docker\DockerExecTask.cs
//-----------------------------------------------------------------------
// <auto-generated />
//-----------------------------------------------------------------------
/// <summary>
/// Detached mode: run command in the background
/// </summary>
/// <summary>
/// Override the key sequence for detaching a container
/// </summary>
/// <summary>
/// Set environment variables
/// </summary>
/// <summary>
/// Keep STDIN open even if not attached
/// </summary>
/// <summary>
/// Give extended privileges to the command
/// </summary>
/// <summary>
/// Allocate a pseudo-TTY
/// </summary>
/// <summary>
/// Username or UID (format: <name|uid>[:<group|gid>])
/// </summary>
/// <summary>
/// Working directory inside the container
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Docker\DockerExportTask.cs
//-----------------------------------------------------------------------
// <auto-generated />
//-----------------------------------------------------------------------
/// <summary>
/// Write to a file, instead of STDOUT
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Docker\DockerHistoryTask.cs
//-----------------------------------------------------------------------
// <auto-generated />
//-----------------------------------------------------------------------
/// <summary>
/// Pretty-print images using a Go template
/// </summary>
/// <summary>
/// Print sizes and dates in human readable format
/// </summary>
/// <summary>
/// Don't truncate output
/// </summary>
/// <summary>
/// Only show numeric IDs
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Docker\DockerImagesTask.cs
//-----------------------------------------------------------------------
// <auto-generated />
//-----------------------------------------------------------------------
/// <summary>
/// Show all images (default hides intermediate images)
/// </summary>
/// <summary>
/// Show digests
/// </summary>
/// <summary>
/// Filter output based on conditions provided
/// </summary>
/// <summary>
/// Pretty-print images using a Go template
/// </summary>
/// <summary>
/// Don't truncate output
/// </summary>
/// <summary>
/// Only show numeric IDs
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Docker\DockerImportTask.cs
//-----------------------------------------------------------------------
// <auto-generated />
//-----------------------------------------------------------------------
/// <summary>
/// Apply Dockerfile instruction to the created image
/// </summary>
/// <summary>
/// Set commit message for imported image
/// </summary>
/// <summary>
/// Set platform if server is multi-platform capable
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Docker\DockerInfoTask.cs
//-----------------------------------------------------------------------
// <auto-generated />
//-----------------------------------------------------------------------
/// <summary>
/// Format the output using the given Go template
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Docker\DockerInspectTask.cs
//-----------------------------------------------------------------------
// <auto-generated />
//-----------------------------------------------------------------------
/// <summary>
/// Format the output using the given Go template
/// </summary>
/// <summary>
/// Display total file sizes if the type is container
/// </summary>
/// <summary>
/// Return JSON for specified type
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Docker\DockerKillTask.cs
//-----------------------------------------------------------------------
// <auto-generated />
//-----------------------------------------------------------------------
/// <summary>
/// Signal to send to the container
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Docker\DockerLoadTask.cs
//-----------------------------------------------------------------------
// <auto-generated />
//-----------------------------------------------------------------------
/// <summary>
/// Read from tar archive file, instead of STDIN
/// </summary>
/// <summary>
/// Suppress the load output
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Docker\DockerLoginTask.cs
//-----------------------------------------------------------------------
// <auto-generated />
//-----------------------------------------------------------------------
/// <summary>
/// Password
/// </summary>
/// <summary>
/// Take the password from stdin
/// </summary>
/// <summary>
/// Username
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Docker\DockerLogsTask.cs
//-----------------------------------------------------------------------
// <auto-generated />
//-----------------------------------------------------------------------
/// <summary>
/// Show extra details provided to logs
/// </summary>
/// <summary>
/// Follow log output
/// </summary>
/// <summary>
/// Show logs since timestamp (e.g. 2013-01-02T13:23:37) or relative (e.g. 42m for 42 minutes)
/// </summary>
/// <summary>
/// Number of lines to show from the end of the logs
/// </summary>
/// <summary>
/// Show timestamps
/// </summary>
/// <summary>
/// Show logs before a timestamp (e.g. 2013-01-02T13:23:37) or relative (e.g. 42m for 42 minutes)
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Docker\DockerPsTask.cs
//-----------------------------------------------------------------------
// <auto-generated />
//-----------------------------------------------------------------------
/// <summary>
/// Show all containers (default shows just running)
/// </summary>
/// <summary>
/// Filter output based on conditions provided
/// </summary>
/// <summary>
/// Pretty-print containers using a Go template
/// </summary>
/// <summary>
/// Show n last created containers (includes all states)
/// </summary>
/// <summary>
/// Show the latest created container (includes all states)
/// </summary>
/// <summary>
/// Don't truncate output
/// </summary>
/// <summary>
/// Only display numeric IDs
/// </summary>
/// <summary>
/// Display total file sizes
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Docker\DockerPullTask.cs
//-----------------------------------------------------------------------
// <auto-generated />
//-----------------------------------------------------------------------
/// <summary>
/// Download all tagged images in the repository
/// </summary>
/// <summary>
/// Skip image verification
/// </summary>
/// <summary>
/// Set platform if server is multi-platform capable
/// </summary>
/// <summary>
/// Suppress verbose output
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Docker\DockerPushTask.cs
//-----------------------------------------------------------------------
// <auto-generated />
//-----------------------------------------------------------------------
/// <summary>
/// Skip image signing
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Docker\DockerRemoveContainerTask.cs
/// <summary>
/// --force, -f
/// Force the removal of a running container (uses SIGKILL)
/// </summary>
/// <summary>
/// --link, -l
/// default: false
/// Remove the specified link
/// </summary>
/// <summary>
/// --volumes, -v
/// default: false
/// Remove the volumes associated with the container
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Docker\DockerRemoveImageTask.cs
/// <summary>
/// --force, -f
/// Force removal of the image
/// </summary>
/// <summary>
/// --no-prune
/// Do not delete untagged parents
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Docker\DockerRestartTask.cs
//-----------------------------------------------------------------------
// <auto-generated />
//-----------------------------------------------------------------------
/// <summary>
/// Seconds to wait for stop before killing the container
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Docker\DockerRmiTask.cs
//-----------------------------------------------------------------------
// <auto-generated />
//-----------------------------------------------------------------------
/// <summary>
/// Force removal of the image
/// </summary>
/// <summary>
/// Do not delete untagged parents
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Docker\DockerRmTask.cs
//-----------------------------------------------------------------------
// <auto-generated />
//-----------------------------------------------------------------------
/// <summary>
/// Force the removal of a running container (uses SIGKILL)
/// </summary>
/// <summary>
/// Remove the specified link
/// </summary>
/// <summary>
/// Remove the volumes associated with the container
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Docker\DockerRunTask.cs
//-----------------------------------------------------------------------
// <auto-generated />
//-----------------------------------------------------------------------
/// <summary>
/// Add a custom host-to-IP mapping (host:ip)
/// </summary>
/// <summary>
/// Attach to STDIN, STDOUT or STDERR
/// </summary>
/// <summary>
/// Block IO (relative weight), between 10 and 1000, or 0 to disable (default 0)
/// </summary>
/// <summary>
/// Block IO weight (relative device weight)
/// </summary>
/// <summary>
/// Add Linux capabilities
/// </summary>
/// <summary>
/// Drop Linux capabilities
/// </summary>
/// <summary>
/// Optional parent cgroup for the container
/// </summary>
/// <summary>
/// Write the container ID to the file
/// </summary>
/// <summary>
/// CPU count (Windows only)
/// </summary>
/// <summary>
/// CPU percent (Windows only)
/// </summary>
/// <summary>
/// Limit CPU CFS (Completely Fair Scheduler) period
/// </summary>
/// <summary>
/// Limit CPU CFS (Completely Fair Scheduler) quota
/// </summary>
/// <summary>
/// Limit CPU real-time period in microseconds
/// </summary>
/// <summary>
/// Limit CPU real-time runtime in microseconds
/// </summary>
/// <summary>
/// CPU shares (relative weight)
/// </summary>
/// <summary>
/// Number of CPUs
/// </summary>
/// <summary>
/// CPUs in which to allow execution (0-3, 0,1)
/// </summary>
/// <summary>
/// MEMs in which to allow execution (0-3, 0,1)
/// </summary>
/// <summary>
/// Run container in background and print container ID
/// </summary>
/// <summary>
/// Override the key sequence for detaching a container
/// </summary>
/// <summary>
/// Add a host device to the container
/// </summary>
/// <summary>
/// Add a rule to the cgroup allowed devices list
/// </summary>
/// <summary>
/// Limit read rate (bytes per second) from a device
/// </summary>
/// <summary>
/// Limit read rate (IO per second) from a device
/// </summary>
/// <summary>
/// Limit write rate (bytes per second) to a device
/// </summary>
/// <summary>
/// Limit write rate (IO per second) to a device
/// </summary>
/// <summary>
/// Skip image verification
/// </summary>
/// <summary>
/// Set custom DNS servers
/// </summary>
/// <summary>
/// Set DNS options
/// </summary>
/// <summary>
/// Set DNS options
/// </summary>
/// <summary>
/// Set custom DNS search domains
/// </summary>
/// <summary>
/// Container NIS domain name
/// </summary>
/// <summary>
/// Overwrite the default ENTRYPOINT of the image
/// </summary>
/// <summary>
/// Set environment variables
/// </summary>
/// <summary>
/// Read in a file of environment variables
/// </summary>
/// <summary>
/// Expose a port or a range of ports
/// </summary>
/// <summary>
/// GPU devices to add to the container ('all' to pass all GPUs)
/// </summary>
/// <summary>
/// Add additional groups to join
/// </summary>
/// <summary>
/// Command to run to check health
/// </summary>
/// <summary>
/// Time between running the check (ms|s|m|h) (default 0s)
/// </summary>
/// <summary>
/// Consecutive failures needed to report unhealthy
/// </summary>
/// <summary>
/// Start period for the container to initialize before starting health-retries countdown (ms|s|m|h) (default 0s)
/// </summary>
/// <summary>
/// Maximum time to allow one check to run (ms|s|m|h) (default 0s)
/// </summary>
/// <summary>
/// Print usage
/// </summary>
/// <summary>
/// Container host name
/// </summary>
/// <summary>
/// Run an init inside the container that forwards signals and reaps processes
/// </summary>
/// <summary>
/// Keep STDIN open even if not attached
/// </summary>
/// <summary>
/// Maximum IO bandwidth limit for the system drive (Windows only)
/// </summary>
/// <summary>
/// Maximum IOps limit for the system drive (Windows only)
/// </summary>
/// <summary>
/// IPv4 address (e.g., 172.30.100.104)
/// </summary>
/// <summary>
/// IPv6 address (e.g., 2001:db8::33)
/// </summary>
/// <summary>
/// IPC mode to use
/// </summary>
/// <summary>
/// Container isolation technology
/// </summary>
/// <summary>
/// Kernel memory limit
/// </summary>
/// <summary>
/// Set meta data on a container
/// </summary>
/// <summary>
/// Read in a line delimited file of labels
/// </summary>
/// <summary>
/// Add link to another container
/// </summary>
/// <summary>
/// Container IPv4/IPv6 link-local addresses
/// </summary>
/// <summary>
/// Logging driver for the container
/// </summary>
/// <summary>
/// Log driver options
/// </summary>
/// <summary>
/// Container MAC address (e.g., 92:d0:c6:0a:29:33)
/// </summary>
/// <summary>
/// Memory limit
/// </summary>
/// <summary>
/// Memory soft limit
/// </summary>
/// <summary>
/// Swap limit equal to memory plus swap: '-1' to enable unlimited swap
/// </summary>
/// <summary>
/// Tune container memory swappiness (0 to 100)
/// </summary>
/// <summary>
/// Attach a filesystem mount to the container
/// </summary>
/// <summary>
/// Assign a name to the container
/// </summary>
/// <summary>
/// Connect a container to a network
/// </summary>
/// <summary>
/// Add network-scoped alias for the container
/// </summary>
/// <summary>
/// Connect a container to a network
/// </summary>
/// <summary>
/// Add network-scoped alias for the container
/// </summary>
/// <summary>
/// Disable any container-specified HEALTHCHECK
/// </summary>
/// <summary>
/// Disable OOM Killer
/// </summary>
/// <summary>
/// Tune host's OOM preferences (-1000 to 1000)
/// </summary>
/// <summary>
/// PID namespace to use
/// </summary>
/// <summary>
/// Tune container pids limit (set -1 for unlimited)
/// </summary>
/// <summary>
/// Set platform if server is multi-platform capable
/// </summary>
/// <summary>
/// Give extended privileges to this container
/// </summary>
/// <summary>
/// Publish a container's port(s) to the host
/// </summary>
/// <summary>
/// Publish all exposed ports to random ports
/// </summary>
/// <summary>
/// Mount the container's root filesystem as read only
/// </summary>
/// <summary>
/// Restart policy to apply when a container exits
/// </summary>
/// <summary>
/// Automatically remove the container when it exits
/// </summary>
/// <summary>
/// Runtime to use for this container
/// </summary>
/// <summary>
/// Security Options
/// </summary>
/// <summary>
/// Size of /dev/shm
/// </summary>
/// <summary>
/// Proxy received signals to the process
/// </summary>
/// <summary>
/// Signal to stop a container
/// </summary>
/// <summary>
/// Timeout (in seconds) to stop a container
/// </summary>
/// <summary>
/// Storage driver options for the container
/// </summary>
/// <summary>
/// Sysctl options
/// </summary>
/// <summary>
/// Mount a tmpfs directory
/// </summary>
/// <summary>
/// Allocate a pseudo-TTY
/// </summary>
/// <summary>
/// Ulimit options
/// </summary>
/// <summary>
/// Username or UID (format: <name|uid>[:<group|gid>])
/// </summary>
/// <summary>
/// User namespace to use
/// </summary>
/// <summary>
/// UTS namespace to use
/// </summary>
/// <summary>
/// Bind mount a volume
/// </summary>
/// <summary>
/// Optional volume driver for the container
/// </summary>
/// <summary>
/// Mount volumes from the specified container(s)
/// </summary>
/// <summary>
/// Working directory inside the container
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Docker\DockerSaveTask.cs
//-----------------------------------------------------------------------
// <auto-generated />
//-----------------------------------------------------------------------
/// <summary>
/// Write to a file, instead of STDOUT
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Docker\DockerSearchTask.cs
//-----------------------------------------------------------------------
// <auto-generated />
//-----------------------------------------------------------------------
/// <summary>
/// Only show automated builds
/// </summary>
/// <summary>
/// Filter output based on conditions provided
/// </summary>
/// <summary>
/// Pretty-print search using a Go template
/// </summary>
/// <summary>
/// Max number of search results
/// </summary>
/// <summary>
/// Don't truncate output
/// </summary>
/// <summary>
/// Only displays with at least x stars
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Docker\DockerStackTask.cs
//-----------------------------------------------------------------------
// <auto-generated />
//-----------------------------------------------------------------------
/// <summary>
/// Kubernetes config file
/// </summary>
/// <summary>
/// Orchestrator to use (swarm|kubernetes|all)
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Docker\DockerStartTask.cs
//-----------------------------------------------------------------------
// <auto-generated />
//-----------------------------------------------------------------------
/// <summary>
/// Attach STDOUT/STDERR and forward signals
/// </summary>
/// <summary>
/// Restore from this checkpoint
/// </summary>
/// <summary>
/// Use a custom checkpoint storage directory
/// </summary>
/// <summary>
/// Override the key sequence for detaching a container
/// </summary>
/// <summary>
/// Attach container's STDIN
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Docker\DockerStatsTask.cs
//-----------------------------------------------------------------------
// <auto-generated />
//-----------------------------------------------------------------------
/// <summary>
/// Show all containers (default shows just running)
/// </summary>
/// <summary>
/// Pretty-print images using a Go template
/// </summary>
/// <summary>
/// Disable streaming stats and only pull the first result
/// </summary>
/// <summary>
/// Do not truncate output
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Docker\DockerStopTask.cs
//-----------------------------------------------------------------------
// <auto-generated />
//-----------------------------------------------------------------------
/// <summary>
/// Seconds to wait for stop before killing it
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Docker\DockerUpdateTask.cs
//-----------------------------------------------------------------------
// <auto-generated />
//-----------------------------------------------------------------------
/// <summary>
/// Block IO (relative weight), between 10 and 1000, or 0 to disable (default 0)
/// </summary>
/// <summary>
/// Limit CPU CFS (Completely Fair Scheduler) period
/// </summary>
/// <summary>
/// Limit CPU CFS (Completely Fair Scheduler) quota
/// </summary>
/// <summary>
/// Limit the CPU real-time period in microseconds
/// </summary>
/// <summary>
/// Limit the CPU real-time runtime in microseconds
/// </summary>
/// <summary>
/// CPU shares (relative weight)
/// </summary>
/// <summary>
/// Number of CPUs
/// </summary>
/// <summary>
/// CPUs in which to allow execution (0-3, 0,1)
/// </summary>
/// <summary>
/// MEMs in which to allow execution (0-3, 0,1)
/// </summary>
/// <summary>
/// Kernel memory limit
/// </summary>
/// <summary>
/// Memory limit
/// </summary>
/// <summary>
/// Memory soft limit
/// </summary>
/// <summary>
/// Swap limit equal to memory plus swap: '-1' to enable unlimited swap
/// </summary>
/// <summary>
/// Tune container pids limit (set -1 for unlimited)
/// </summary>
/// <summary>
/// Restart policy to apply when a container exits
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Docker\DockerVersionTask.cs
//-----------------------------------------------------------------------
// <auto-generated />
//-----------------------------------------------------------------------
/// <summary>
/// Format the output using the given Go template
/// </summary>
/// <summary>
/// Kubernetes config file
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Docker\Builder\DockerBuilderBuildTask.cs
//-----------------------------------------------------------------------
// <auto-generated />
//-----------------------------------------------------------------------
/// <summary>
/// Add a custom host-to-IP mapping (host:ip)
/// </summary>
/// <summary>
/// Set build-time variables
/// </summary>
/// <summary>
/// Images to consider as cache sources
/// </summary>
/// <summary>
/// Optional parent cgroup for the container
/// </summary>
/// <summary>
/// Compress the build context using gzip
/// </summary>
/// <summary>
/// Limit the CPU CFS (Completely Fair Scheduler) period
/// </summary>
/// <summary>
/// Limit the CPU CFS (Completely Fair Scheduler) quota
/// </summary>
/// <summary>
/// CPU shares (relative weight)
/// </summary>
/// <summary>
/// CPUs in which to allow execution (0-3, 0,1)
/// </summary>
/// <summary>
/// MEMs in which to allow execution (0-3, 0,1)
/// </summary>
/// <summary>
/// Skip image verification
/// </summary>
/// <summary>
/// Name of the Dockerfile (Default is 'PATH/Dockerfile')
/// </summary>
/// <summary>
/// Always remove intermediate containers
/// </summary>
/// <summary>
/// Write the image ID to the file
/// </summary>
/// <summary>
/// Container isolation technology
/// </summary>
/// <summary>
/// Set metadata for an image
/// </summary>
/// <summary>
/// Memory limit
/// </summary>
/// <summary>
/// Swap limit equal to memory plus swap: '-1' to enable unlimited swap
/// </summary>
/// <summary>
/// Set the networking mode for the RUN instructions during build
/// </summary>
/// <summary>
/// Do not use cache when building the image
/// </summary>
/// <summary>
/// Output destination (format: type=local,dest=path)
/// </summary>
/// <summary>
/// Set platform if server is multi-platform capable
/// </summary>
/// <summary>
/// Set type of progress output (auto, plain, tty). Use plain to show container output
/// </summary>
/// <summary>
/// Always attempt to pull a newer version of the image
/// </summary>
/// <summary>
/// Suppress the build output and print image ID on success
/// </summary>
/// <summary>
/// Remove intermediate containers after a successful build
/// </summary>
/// <summary>
/// Secret file to expose to the build (only if BuildKit enabled): id=mysecret,src=/local/secret
/// </summary>
/// <summary>
/// Security options
/// </summary>
/// <summary>
/// Size of /dev/shm
/// </summary>
/// <summary>
/// Squash newly built layers into a single new layer
/// </summary>
/// <summary>
/// SSH agent socket or keys to expose to the build (only if BuildKit enabled) (format: default|<id>[=<socket>|<key>[,<key>]])
/// </summary>
/// <summary>
/// Stream attaches to server to negotiate build context
/// </summary>
/// <summary>
/// Name and optionally a tag in the 'name:tag' format
/// </summary>
/// <summary>
/// Set the target build stage to build.
/// </summary>
/// <summary>
/// Ulimit options
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Docker\Builder\DockerBuilderPruneTask.cs
//-----------------------------------------------------------------------
// <auto-generated />
//-----------------------------------------------------------------------
/// <summary>
/// Remove all unused images, not just dangling ones
/// </summary>
/// <summary>
/// Provide filter values (e.g. 'unused-for=24h')
/// </summary>
/// <summary>
/// Do not prompt for confirmation
/// </summary>
/// <summary>
/// Amount of disk space to keep for cache
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Docker\Checkpoint\DockerCheckpointCreateTask.cs
//-----------------------------------------------------------------------
// <auto-generated />
//-----------------------------------------------------------------------
/// <summary>
/// Use a custom checkpoint storage directory
/// </summary>
/// <summary>
/// Leave the container running after checkpoint
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Docker\Checkpoint\DockerCheckpointLsTask.cs
//-----------------------------------------------------------------------
// <auto-generated />
//-----------------------------------------------------------------------
/// <summary>
/// Use a custom checkpoint storage directory
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Docker\Checkpoint\DockerCheckpointRmTask.cs
//-----------------------------------------------------------------------
// <auto-generated />
//-----------------------------------------------------------------------
/// <summary>
/// Use a custom checkpoint storage directory
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Docker\Config\DockerConfigCreateTask.cs
//-----------------------------------------------------------------------
// <auto-generated />
//-----------------------------------------------------------------------
/// <summary>
/// Config labels
/// </summary>
/// <summary>
/// Template driver
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Docker\Config\DockerConfigInspectTask.cs
//-----------------------------------------------------------------------
// <auto-generated />
//-----------------------------------------------------------------------
/// <summary>
/// Format the output using the given Go template
/// </summary>
/// <summary>
/// Print the information in a human friendly format
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Docker\Config\DockerConfigLsTask.cs
//-----------------------------------------------------------------------
// <auto-generated />
//-----------------------------------------------------------------------
/// <summary>
/// Filter output based on conditions provided
/// </summary>
/// <summary>
/// Pretty-print configs using a Go template
/// </summary>
/// <summary>
/// Only display IDs
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Docker\Container\DockerContainerAttachTask.cs
//-----------------------------------------------------------------------
// <auto-generated />
//-----------------------------------------------------------------------
/// <summary>
/// Override the key sequence for detaching a container
/// </summary>
/// <summary>
/// Do not attach STDIN
/// </summary>
/// <summary>
/// Proxy all received signals to the process
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Docker\Container\DockerContainerCommitTask.cs
//-----------------------------------------------------------------------
// <auto-generated />
//-----------------------------------------------------------------------
/// <summary>
/// Author (e.g., "John Hannibal Smith <hannibal@a-team.com>")
/// </summary>
/// <summary>
/// Apply Dockerfile instruction to the created image
/// </summary>
/// <summary>
/// Commit message
/// </summary>
/// <summary>
/// Pause container during commit
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Docker\Container\DockerContainerCreateTask.cs
//-----------------------------------------------------------------------
// <auto-generated />
//-----------------------------------------------------------------------
/// <summary>
/// Add a custom host-to-IP mapping (host:ip)
/// </summary>
/// <summary>
/// Attach to STDIN, STDOUT or STDERR
/// </summary>
/// <summary>
/// Block IO (relative weight), between 10 and 1000, or 0 to disable (default 0)
/// </summary>
/// <summary>
/// Block IO weight (relative device weight)
/// </summary>
/// <summary>
/// Add Linux capabilities
/// </summary>
/// <summary>
/// Drop Linux capabilities
/// </summary>
/// <summary>
/// Optional parent cgroup for the container
/// </summary>
/// <summary>
/// Write the container ID to the file
/// </summary>
/// <summary>
/// CPU count (Windows only)
/// </summary>
/// <summary>
/// CPU percent (Windows only)
/// </summary>
/// <summary>
/// Limit CPU CFS (Completely Fair Scheduler) period
/// </summary>
/// <summary>
/// Limit CPU CFS (Completely Fair Scheduler) quota
/// </summary>
/// <summary>
/// Limit CPU real-time period in microseconds
/// </summary>
/// <summary>
/// Limit CPU real-time runtime in microseconds
/// </summary>
/// <summary>
/// CPU shares (relative weight)
/// </summary>
/// <summary>
/// Number of CPUs
/// </summary>
/// <summary>
/// CPUs in which to allow execution (0-3, 0,1)
/// </summary>
/// <summary>
/// MEMs in which to allow execution (0-3, 0,1)
/// </summary>
/// <summary>
/// Add a host device to the container
/// </summary>
/// <summary>
/// Add a rule to the cgroup allowed devices list
/// </summary>
/// <summary>
/// Limit read rate (bytes per second) from a device
/// </summary>
/// <summary>
/// Limit read rate (IO per second) from a device
/// </summary>
/// <summary>
/// Limit write rate (bytes per second) to a device
/// </summary>
/// <summary>
/// Limit write rate (IO per second) to a device
/// </summary>
/// <summary>
/// Skip image verification
/// </summary>
/// <summary>
/// Set custom DNS servers
/// </summary>
/// <summary>
/// Set DNS options
/// </summary>
/// <summary>
/// Set DNS options
/// </summary>
/// <summary>
/// Set custom DNS search domains
/// </summary>
/// <summary>
/// Container NIS domain name
/// </summary>
/// <summary>
/// Overwrite the default ENTRYPOINT of the image
/// </summary>
/// <summary>
/// Set environment variables
/// </summary>
/// <summary>
/// Read in a file of environment variables
/// </summary>
/// <summary>
/// Expose a port or a range of ports
/// </summary>
/// <summary>
/// GPU devices to add to the container ('all' to pass all GPUs)
/// </summary>
/// <summary>
/// Add additional groups to join
/// </summary>
/// <summary>
/// Command to run to check health
/// </summary>
/// <summary>
/// Time between running the check (ms|s|m|h) (default 0s)
/// </summary>
/// <summary>
/// Consecutive failures needed to report unhealthy
/// </summary>
/// <summary>
/// Start period for the container to initialize before starting health-retries countdown (ms|s|m|h) (default 0s)
/// </summary>
/// <summary>
/// Maximum time to allow one check to run (ms|s|m|h) (default 0s)
/// </summary>
/// <summary>
/// Print usage
/// </summary>
/// <summary>
/// Container host name
/// </summary>
/// <summary>
/// Run an init inside the container that forwards signals and reaps processes
/// </summary>
/// <summary>
/// Keep STDIN open even if not attached
/// </summary>
/// <summary>
/// Maximum IO bandwidth limit for the system drive (Windows only)
/// </summary>
/// <summary>
/// Maximum IOps limit for the system drive (Windows only)
/// </summary>
/// <summary>
/// IPv4 address (e.g., 172.30.100.104)
/// </summary>
/// <summary>
/// IPv6 address (e.g., 2001:db8::33)
/// </summary>
/// <summary>
/// IPC mode to use
/// </summary>
/// <summary>
/// Container isolation technology
/// </summary>
/// <summary>
/// Kernel memory limit
/// </summary>
/// <summary>
/// Set meta data on a container
/// </summary>
/// <summary>
/// Read in a line delimited file of labels
/// </summary>
/// <summary>
/// Add link to another container
/// </summary>
/// <summary>
/// Container IPv4/IPv6 link-local addresses
/// </summary>
/// <summary>
/// Logging driver for the container
/// </summary>
/// <summary>
/// Log driver options
/// </summary>
/// <summary>
/// Container MAC address (e.g., 92:d0:c6:0a:29:33)
/// </summary>
/// <summary>
/// Memory limit
/// </summary>
/// <summary>
/// Memory soft limit
/// </summary>
/// <summary>
/// Swap limit equal to memory plus swap: '-1' to enable unlimited swap
/// </summary>
/// <summary>
/// Tune container memory swappiness (0 to 100)
/// </summary>
/// <summary>
/// Attach a filesystem mount to the container
/// </summary>
/// <summary>
/// Assign a name to the container
/// </summary>
/// <summary>
/// Connect a container to a network
/// </summary>
/// <summary>
/// Add network-scoped alias for the container
/// </summary>
/// <summary>
/// Connect a container to a network
/// </summary>
/// <summary>
/// Add network-scoped alias for the container
/// </summary>
/// <summary>
/// Disable any container-specified HEALTHCHECK
/// </summary>
/// <summary>
/// Disable OOM Killer
/// </summary>
/// <summary>
/// Tune host's OOM preferences (-1000 to 1000)
/// </summary>
/// <summary>
/// PID namespace to use
/// </summary>
/// <summary>
/// Tune container pids limit (set -1 for unlimited)
/// </summary>
/// <summary>
/// Set platform if server is multi-platform capable
/// </summary>
/// <summary>
/// Give extended privileges to this container
/// </summary>
/// <summary>
/// Publish a container's port(s) to the host
/// </summary>
/// <summary>
/// Publish all exposed ports to random ports
/// </summary>
/// <summary>
/// Mount the container's root filesystem as read only
/// </summary>
/// <summary>
/// Restart policy to apply when a container exits
/// </summary>
/// <summary>
/// Automatically remove the container when it exits
/// </summary>
/// <summary>
/// Runtime to use for this container
/// </summary>
/// <summary>
/// Security Options
/// </summary>
/// <summary>
/// Size of /dev/shm
/// </summary>
/// <summary>
/// Signal to stop a container
/// </summary>
/// <summary>
/// Timeout (in seconds) to stop a container
/// </summary>
/// <summary>
/// Storage driver options for the container
/// </summary>
/// <summary>
/// Sysctl options
/// </summary>
/// <summary>
/// Mount a tmpfs directory
/// </summary>
/// <summary>
/// Allocate a pseudo-TTY
/// </summary>
/// <summary>
/// Ulimit options
/// </summary>
/// <summary>
/// Username or UID (format: <name|uid>[:<group|gid>])
/// </summary>
/// <summary>
/// User namespace to use
/// </summary>
/// <summary>
/// UTS namespace to use
/// </summary>
/// <summary>
/// Bind mount a volume
/// </summary>
/// <summary>
/// Optional volume driver for the container
/// </summary>
/// <summary>
/// Mount volumes from the specified container(s)
/// </summary>
/// <summary>
/// Working directory inside the container
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Docker\Container\DockerContainerExecTask.cs
//-----------------------------------------------------------------------
// <auto-generated />
//-----------------------------------------------------------------------
/// <summary>
/// Detached mode: run command in the background
/// </summary>
/// <summary>
/// Override the key sequence for detaching a container
/// </summary>
/// <summary>
/// Set environment variables
/// </summary>
/// <summary>
/// Keep STDIN open even if not attached
/// </summary>
/// <summary>
/// Give extended privileges to the command
/// </summary>
/// <summary>
/// Allocate a pseudo-TTY
/// </summary>
/// <summary>
/// Username or UID (format: <name|uid>[:<group|gid>])
/// </summary>
/// <summary>
/// Working directory inside the container
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Docker\Container\DockerContainerExportTask.cs
//-----------------------------------------------------------------------
// <auto-generated />
//-----------------------------------------------------------------------
/// <summary>
/// Write to a file, instead of STDOUT
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Docker\Container\DockerContainerInspectTask.cs
//-----------------------------------------------------------------------
// <auto-generated />
//-----------------------------------------------------------------------
/// <summary>
/// Format the output using the given Go template
/// </summary>
/// <summary>
/// Display total file sizes
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Docker\Container\DockerContainerKillTask.cs
//-----------------------------------------------------------------------
// <auto-generated />
//-----------------------------------------------------------------------
/// <summary>
/// Signal to send to the container
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Docker\Container\DockerContainerLogsTask.cs
//-----------------------------------------------------------------------
// <auto-generated />
//-----------------------------------------------------------------------
/// <summary>
/// Show extra details provided to logs
/// </summary>
/// <summary>
/// Follow log output
/// </summary>
/// <summary>
/// Show logs since timestamp (e.g. 2013-01-02T13:23:37) or relative (e.g. 42m for 42 minutes)
/// </summary>
/// <summary>
/// Number of lines to show from the end of the logs
/// </summary>
/// <summary>
/// Show timestamps
/// </summary>
/// <summary>
/// Show logs before a timestamp (e.g. 2013-01-02T13:23:37) or relative (e.g. 42m for 42 minutes)
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Docker\Container\DockerContainerLsTask.cs
//-----------------------------------------------------------------------
// <auto-generated />
//-----------------------------------------------------------------------
/// <summary>
/// Show all containers (default shows just running)
/// </summary>
/// <summary>
/// Filter output based on conditions provided
/// </summary>
/// <summary>
/// Pretty-print containers using a Go template
/// </summary>
/// <summary>
/// Show n last created containers (includes all states)
/// </summary>
/// <summary>
/// Show the latest created container (includes all states)
/// </summary>
/// <summary>
/// Don't truncate output
/// </summary>
/// <summary>
/// Only display numeric IDs
/// </summary>
/// <summary>
/// Display total file sizes
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Docker\Container\DockerContainerPruneTask.cs
//-----------------------------------------------------------------------
// <auto-generated />
//-----------------------------------------------------------------------
/// <summary>
/// Provide filter values (e.g. 'until=<timestamp>')
/// </summary>
/// <summary>
/// Do not prompt for confirmation
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Docker\Container\DockerContainerRestartTask.cs
//-----------------------------------------------------------------------
// <auto-generated />
//-----------------------------------------------------------------------
/// <summary>
/// Seconds to wait for stop before killing the container
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Docker\Container\DockerContainerRmTask.cs
//-----------------------------------------------------------------------
// <auto-generated />
//-----------------------------------------------------------------------
/// <summary>
/// Force the removal of a running container (uses SIGKILL)
/// </summary>
/// <summary>
/// Remove the specified link
/// </summary>
/// <summary>
/// Remove the volumes associated with the container
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Docker\Container\DockerContainerRunTask.cs
//-----------------------------------------------------------------------
// <auto-generated />
//-----------------------------------------------------------------------
/// <summary>
/// Add a custom host-to-IP mapping (host:ip)
/// </summary>
/// <summary>
/// Attach to STDIN, STDOUT or STDERR
/// </summary>
/// <summary>
/// Block IO (relative weight), between 10 and 1000, or 0 to disable (default 0)
/// </summary>
/// <summary>
/// Block IO weight (relative device weight)
/// </summary>
/// <summary>
/// Add Linux capabilities
/// </summary>
/// <summary>
/// Drop Linux capabilities
/// </summary>
/// <summary>
/// Optional parent cgroup for the container
/// </summary>
/// <summary>
/// Write the container ID to the file
/// </summary>
/// <summary>
/// CPU count (Windows only)
/// </summary>
/// <summary>
/// CPU percent (Windows only)
/// </summary>
/// <summary>
/// Limit CPU CFS (Completely Fair Scheduler) period
/// </summary>
/// <summary>
/// Limit CPU CFS (Completely Fair Scheduler) quota
/// </summary>
/// <summary>
/// Limit CPU real-time period in microseconds
/// </summary>
/// <summary>
/// Limit CPU real-time runtime in microseconds
/// </summary>
/// <summary>
/// CPU shares (relative weight)
/// </summary>
/// <summary>
/// Number of CPUs
/// </summary>
/// <summary>
/// CPUs in which to allow execution (0-3, 0,1)
/// </summary>
/// <summary>
/// MEMs in which to allow execution (0-3, 0,1)
/// </summary>
/// <summary>
/// Run container in background and print container ID
/// </summary>
/// <summary>
/// Override the key sequence for detaching a container
/// </summary>
/// <summary>
/// Add a host device to the container
/// </summary>
/// <summary>
/// Add a rule to the cgroup allowed devices list
/// </summary>
/// <summary>
/// Limit read rate (bytes per second) from a device
/// </summary>
/// <summary>
/// Limit read rate (IO per second) from a device
/// </summary>
/// <summary>
/// Limit write rate (bytes per second) to a device
/// </summary>
/// <summary>
/// Limit write rate (IO per second) to a device
/// </summary>
/// <summary>
/// Skip image verification
/// </summary>
/// <summary>
/// Set custom DNS servers
/// </summary>
/// <summary>
/// Set DNS options
/// </summary>
/// <summary>
/// Set DNS options
/// </summary>
/// <summary>
/// Set custom DNS search domains
/// </summary>
/// <summary>
/// Container NIS domain name
/// </summary>
/// <summary>
/// Overwrite the default ENTRYPOINT of the image
/// </summary>
/// <summary>
/// Set environment variables
/// </summary>
/// <summary>
/// Read in a file of environment variables
/// </summary>
/// <summary>
/// Expose a port or a range of ports
/// </summary>
/// <summary>
/// GPU devices to add to the container ('all' to pass all GPUs)
/// </summary>
/// <summary>
/// Add additional groups to join
/// </summary>
/// <summary>
/// Command to run to check health
/// </summary>
/// <summary>
/// Time between running the check (ms|s|m|h) (default 0s)
/// </summary>
/// <summary>
/// Consecutive failures needed to report unhealthy
/// </summary>
/// <summary>
/// Start period for the container to initialize before starting health-retries countdown (ms|s|m|h) (default 0s)
/// </summary>
/// <summary>
/// Maximum time to allow one check to run (ms|s|m|h) (default 0s)
/// </summary>
/// <summary>
/// Print usage
/// </summary>
/// <summary>
/// Container host name
/// </summary>
/// <summary>
/// Run an init inside the container that forwards signals and reaps processes
/// </summary>
/// <summary>
/// Keep STDIN open even if not attached
/// </summary>
/// <summary>
/// Maximum IO bandwidth limit for the system drive (Windows only)
/// </summary>
/// <summary>
/// Maximum IOps limit for the system drive (Windows only)
/// </summary>
/// <summary>
/// IPv4 address (e.g., 172.30.100.104)
/// </summary>
/// <summary>
/// IPv6 address (e.g., 2001:db8::33)
/// </summary>
/// <summary>
/// IPC mode to use
/// </summary>
/// <summary>
/// Container isolation technology
/// </summary>
/// <summary>
/// Kernel memory limit
/// </summary>
/// <summary>
/// Set meta data on a container
/// </summary>
/// <summary>
/// Read in a line delimited file of labels
/// </summary>
/// <summary>
/// Add link to another container
/// </summary>
/// <summary>
/// Container IPv4/IPv6 link-local addresses
/// </summary>
/// <summary>
/// Logging driver for the container
/// </summary>
/// <summary>
/// Log driver options
/// </summary>
/// <summary>
/// Container MAC address (e.g., 92:d0:c6:0a:29:33)
/// </summary>
/// <summary>
/// Memory limit
/// </summary>
/// <summary>
/// Memory soft limit
/// </summary>
/// <summary>
/// Swap limit equal to memory plus swap: '-1' to enable unlimited swap
/// </summary>
/// <summary>
/// Tune container memory swappiness (0 to 100)
/// </summary>
/// <summary>
/// Attach a filesystem mount to the container
/// </summary>
/// <summary>
/// Assign a name to the container
/// </summary>
/// <summary>
/// Connect a container to a network
/// </summary>
/// <summary>
/// Add network-scoped alias for the container
/// </summary>
/// <summary>
/// Connect a container to a network
/// </summary>
/// <summary>
/// Add network-scoped alias for the container
/// </summary>
/// <summary>
/// Disable any container-specified HEALTHCHECK
/// </summary>
/// <summary>
/// Disable OOM Killer
/// </summary>
/// <summary>
/// Tune host's OOM preferences (-1000 to 1000)
/// </summary>
/// <summary>
/// PID namespace to use
/// </summary>
/// <summary>
/// Tune container pids limit (set -1 for unlimited)
/// </summary>
/// <summary>
/// Set platform if server is multi-platform capable
/// </summary>
/// <summary>
/// Give extended privileges to this container
/// </summary>
/// <summary>
/// Publish a container's port(s) to the host
/// </summary>
/// <summary>
/// Publish all exposed ports to random ports
/// </summary>
/// <summary>
/// Mount the container's root filesystem as read only
/// </summary>
/// <summary>
/// Restart policy to apply when a container exits
/// </summary>
/// <summary>
/// Automatically remove the container when it exits
/// </summary>
/// <summary>
/// Runtime to use for this container
/// </summary>
/// <summary>
/// Security Options
/// </summary>
/// <summary>
/// Size of /dev/shm
/// </summary>
/// <summary>
/// Proxy received signals to the process
/// </summary>
/// <summary>
/// Signal to stop a container
/// </summary>
/// <summary>
/// Timeout (in seconds) to stop a container
/// </summary>
/// <summary>
/// Storage driver options for the container
/// </summary>
/// <summary>
/// Sysctl options
/// </summary>
/// <summary>
/// Mount a tmpfs directory
/// </summary>
/// <summary>
/// Allocate a pseudo-TTY
/// </summary>
/// <summary>
/// Ulimit options
/// </summary>
/// <summary>
/// Username or UID (format: <name|uid>[:<group|gid>])
/// </summary>
/// <summary>
/// User namespace to use
/// </summary>
/// <summary>
/// UTS namespace to use
/// </summary>
/// <summary>
/// Bind mount a volume
/// </summary>
/// <summary>
/// Optional volume driver for the container
/// </summary>
/// <summary>
/// Mount volumes from the specified container(s)
/// </summary>
/// <summary>
/// Working directory inside the container
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Docker\Container\DockerContainerStartTask.cs
//-----------------------------------------------------------------------
// <auto-generated />
//-----------------------------------------------------------------------
/// <summary>
/// Attach STDOUT/STDERR and forward signals
/// </summary>
/// <summary>
/// Restore from this checkpoint
/// </summary>
/// <summary>
/// Use a custom checkpoint storage directory
/// </summary>
/// <summary>
/// Override the key sequence for detaching a container
/// </summary>
/// <summary>
/// Attach container's STDIN
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Docker\Container\DockerContainerStatsTask.cs
//-----------------------------------------------------------------------
// <auto-generated />
//-----------------------------------------------------------------------
/// <summary>
/// Show all containers (default shows just running)
/// </summary>
/// <summary>
/// Pretty-print images using a Go template
/// </summary>
/// <summary>
/// Disable streaming stats and only pull the first result
/// </summary>
/// <summary>
/// Do not truncate output
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Docker\Container\DockerContainerStopTask.cs
//-----------------------------------------------------------------------
// <auto-generated />
//-----------------------------------------------------------------------
/// <summary>
/// Seconds to wait for stop before killing it
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Docker\Container\DockerContainerUpdateTask.cs
//-----------------------------------------------------------------------
// <auto-generated />
//-----------------------------------------------------------------------
/// <summary>
/// Block IO (relative weight), between 10 and 1000, or 0 to disable (default 0)
/// </summary>
/// <summary>
/// Limit CPU CFS (Completely Fair Scheduler) period
/// </summary>
/// <summary>
/// Limit CPU CFS (Completely Fair Scheduler) quota
/// </summary>
/// <summary>
/// Limit the CPU real-time period in microseconds
/// </summary>
/// <summary>
/// Limit the CPU real-time runtime in microseconds
/// </summary>
/// <summary>
/// CPU shares (relative weight)
/// </summary>
/// <summary>
/// Number of CPUs
/// </summary>
/// <summary>
/// CPUs in which to allow execution (0-3, 0,1)
/// </summary>
/// <summary>
/// MEMs in which to allow execution (0-3, 0,1)
/// </summary>
/// <summary>
/// Kernel memory limit
/// </summary>
/// <summary>
/// Memory limit
/// </summary>
/// <summary>
/// Memory soft limit
/// </summary>
/// <summary>
/// Swap limit equal to memory plus swap: '-1' to enable unlimited swap
/// </summary>
/// <summary>
/// Tune container pids limit (set -1 for unlimited)
/// </summary>
/// <summary>
/// Restart policy to apply when a container exits
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Docker\Context\DockerContextCreateTask.cs
//-----------------------------------------------------------------------
// <auto-generated />
//-----------------------------------------------------------------------
/// <summary>
/// Default orchestrator for stack operations to use with this context (swarm|kubernetes|all)
/// </summary>
/// <summary>
/// Description of the context
/// </summary>
/// <summary>
/// set the docker endpoint
/// </summary>
/// <summary>
/// create context from a named context
/// </summary>
/// <summary>
/// set the kubernetes endpoint
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Docker\Context\DockerContextExportTask.cs
//-----------------------------------------------------------------------
// <auto-generated />
//-----------------------------------------------------------------------
/// <summary>
/// Export as a kubeconfig file
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Docker\Context\DockerContextInspectTask.cs
//-----------------------------------------------------------------------
// <auto-generated />
//-----------------------------------------------------------------------
/// <summary>
/// Format the output using the given Go template
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Docker\Context\DockerContextLsTask.cs
//-----------------------------------------------------------------------
// <auto-generated />
//-----------------------------------------------------------------------
/// <summary>
/// Pretty-print contexts using a Go template
/// </summary>
/// <summary>
/// Only show context names
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Docker\Context\DockerContextRmTask.cs
//-----------------------------------------------------------------------
// <auto-generated />
//-----------------------------------------------------------------------
/// <summary>
/// Force the removal of a context in use
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Docker\Context\DockerContextUpdateTask.cs
//-----------------------------------------------------------------------
// <auto-generated />
//-----------------------------------------------------------------------
/// <summary>
/// Default orchestrator for stack operations to use with this context (swarm|kubernetes|all)
/// </summary>
/// <summary>
/// Description of the context
/// </summary>
/// <summary>
/// set the docker endpoint
/// </summary>
/// <summary>
/// set the kubernetes endpoint
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Docker\Engine\DockerEngineActivateTask.cs
//-----------------------------------------------------------------------
// <auto-generated />
//-----------------------------------------------------------------------
/// <summary>
/// override default location of containerd endpoint
/// </summary>
/// <summary>
/// only display license information and exit
/// </summary>
/// <summary>
/// Specify engine image
/// </summary>
/// <summary>
/// Pretty-print licenses using a Go template
/// </summary>
/// <summary>
/// License File
/// </summary>
/// <summary>
/// Only display available licenses by ID
/// </summary>
/// <summary>
/// Override the default location where engine images are pulled
/// </summary>
/// <summary>
/// Specify engine version (default is to use currently running version)
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Docker\Engine\DockerEngineCheckTask.cs
//-----------------------------------------------------------------------
// <auto-generated />
//-----------------------------------------------------------------------
/// <summary>
/// override default location of containerd endpoint
/// </summary>
/// <summary>
/// Report downgrades (default omits older versions)
/// </summary>
/// <summary>
/// Specify engine image (default uses the same image as currently running)
/// </summary>
/// <summary>
/// Pretty-print updates using a Go template
/// </summary>
/// <summary>
/// Include pre-release versions
/// </summary>
/// <summary>
/// Only display available versions
/// </summary>
/// <summary>
/// Override the existing location where engine images are pulled
/// </summary>
/// <summary>
/// Report available upgrades
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Docker\Engine\DockerEngineUpdateTask.cs
//-----------------------------------------------------------------------
// <auto-generated />
//-----------------------------------------------------------------------
/// <summary>
/// override default location of containerd endpoint
/// </summary>
/// <summary>
/// Specify engine image (default uses the same image as currently running)
/// </summary>
/// <summary>
/// Override the current location where engine images are pulled
/// </summary>
/// <summary>
/// Specify engine version
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Docker\Image\DockerImageBuildTask.cs
//-----------------------------------------------------------------------
// <auto-generated />
//-----------------------------------------------------------------------
/// <summary>
/// Add a custom host-to-IP mapping (host:ip)
/// </summary>
/// <summary>
/// Set build-time variables
/// </summary>
/// <summary>
/// Images to consider as cache sources
/// </summary>
/// <summary>
/// Optional parent cgroup for the container
/// </summary>
/// <summary>
/// Compress the build context using gzip
/// </summary>
/// <summary>
/// Limit the CPU CFS (Completely Fair Scheduler) period
/// </summary>
/// <summary>
/// Limit the CPU CFS (Completely Fair Scheduler) quota
/// </summary>
/// <summary>
/// CPU shares (relative weight)
/// </summary>
/// <summary>
/// CPUs in which to allow execution (0-3, 0,1)
/// </summary>
/// <summary>
/// MEMs in which to allow execution (0-3, 0,1)
/// </summary>
/// <summary>
/// Skip image verification
/// </summary>
/// <summary>
/// Name of the Dockerfile (Default is 'PATH/Dockerfile')
/// </summary>
/// <summary>
/// Always remove intermediate containers
/// </summary>
/// <summary>
/// Write the image ID to the file
/// </summary>
/// <summary>
/// Container isolation technology
/// </summary>
/// <summary>
/// Set metadata for an image
/// </summary>
/// <summary>
/// Memory limit
/// </summary>
/// <summary>
/// Swap limit equal to memory plus swap: '-1' to enable unlimited swap
/// </summary>
/// <summary>
/// Set the networking mode for the RUN instructions during build
/// </summary>
/// <summary>
/// Do not use cache when building the image
/// </summary>
/// <summary>
/// Output destination (format: type=local,dest=path)
/// </summary>
/// <summary>
/// Set platform if server is multi-platform capable
/// </summary>
/// <summary>
/// Set type of progress output (auto, plain, tty). Use plain to show container output
/// </summary>
/// <summary>
/// Always attempt to pull a newer version of the image
/// </summary>
/// <summary>
/// Suppress the build output and print image ID on success
/// </summary>
/// <summary>
/// Remove intermediate containers after a successful build
/// </summary>
/// <summary>
/// Secret file to expose to the build (only if BuildKit enabled): id=mysecret,src=/local/secret
/// </summary>
/// <summary>
/// Security options
/// </summary>
/// <summary>
/// Size of /dev/shm
/// </summary>
/// <summary>
/// Squash newly built layers into a single new layer
/// </summary>
/// <summary>
/// SSH agent socket or keys to expose to the build (only if BuildKit enabled) (format: default|<id>[=<socket>|<key>[,<key>]])
/// </summary>
/// <summary>
/// Stream attaches to server to negotiate build context
/// </summary>
/// <summary>
/// Name and optionally a tag in the 'name:tag' format
/// </summary>
/// <summary>
/// Set the target build stage to build.
/// </summary>
/// <summary>
/// Ulimit options
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Docker\Image\DockerImageHistoryTask.cs
//-----------------------------------------------------------------------
// <auto-generated />
//-----------------------------------------------------------------------
/// <summary>
/// Pretty-print images using a Go template
/// </summary>
/// <summary>
/// Print sizes and dates in human readable format
/// </summary>
/// <summary>
/// Don't truncate output
/// </summary>
/// <summary>
/// Only show numeric IDs
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Docker\Image\DockerImageImportTask.cs
//-----------------------------------------------------------------------
// <auto-generated />
//-----------------------------------------------------------------------
/// <summary>
/// Apply Dockerfile instruction to the created image
/// </summary>
/// <summary>
/// Set commit message for imported image
/// </summary>
/// <summary>
/// Set platform if server is multi-platform capable
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Docker\Image\DockerImageInspectTask.cs
//-----------------------------------------------------------------------
// <auto-generated />
//-----------------------------------------------------------------------
/// <summary>
/// Format the output using the given Go template
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Docker\Image\DockerImageLoadTask.cs
//-----------------------------------------------------------------------
// <auto-generated />
//-----------------------------------------------------------------------
/// <summary>
/// Read from tar archive file, instead of STDIN
/// </summary>
/// <summary>
/// Suppress the load output
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Docker\Image\DockerImageLsTask.cs
//-----------------------------------------------------------------------
// <auto-generated />
//-----------------------------------------------------------------------
/// <summary>
/// Show all images (default hides intermediate images)
/// </summary>
/// <summary>
/// Show digests
/// </summary>
/// <summary>
/// Filter output based on conditions provided
/// </summary>
/// <summary>
/// Pretty-print images using a Go template
/// </summary>
/// <summary>
/// Don't truncate output
/// </summary>
/// <summary>
/// Only show numeric IDs
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Docker\Image\DockerImagePruneTask.cs
//-----------------------------------------------------------------------
// <auto-generated />
//-----------------------------------------------------------------------
/// <summary>
/// Remove all unused images, not just dangling ones
/// </summary>
/// <summary>
/// Provide filter values (e.g. 'until=<timestamp>')
/// </summary>
/// <summary>
/// Do not prompt for confirmation
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Docker\Image\DockerImagePullTask.cs
//-----------------------------------------------------------------------
// <auto-generated />
//-----------------------------------------------------------------------
/// <summary>
/// Download all tagged images in the repository
/// </summary>
/// <summary>
/// Skip image verification
/// </summary>
/// <summary>
/// Set platform if server is multi-platform capable
/// </summary>
/// <summary>
/// Suppress verbose output
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Docker\Image\DockerImagePushTask.cs
//-----------------------------------------------------------------------
// <auto-generated />
//-----------------------------------------------------------------------
/// <summary>
/// Skip image signing
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Docker\Image\DockerImageRmTask.cs
//-----------------------------------------------------------------------
// <auto-generated />
//-----------------------------------------------------------------------
/// <summary>
/// Force removal of the image
/// </summary>
/// <summary>
/// Do not delete untagged parents
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Docker\Image\DockerImageSaveTask.cs
//-----------------------------------------------------------------------
// <auto-generated />
//-----------------------------------------------------------------------
/// <summary>
/// Write to a file, instead of STDOUT
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Docker\Manifest\DockerManifestAnnotateTask.cs
//-----------------------------------------------------------------------
// <auto-generated />
//-----------------------------------------------------------------------
/// <summary>
/// Set architecture
/// </summary>
/// <summary>
/// Set operating system
/// </summary>
/// <summary>
/// Set operating system feature
/// </summary>
/// <summary>
/// Set architecture variant
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Docker\Manifest\DockerManifestCreateTask.cs
//-----------------------------------------------------------------------
// <auto-generated />
//-----------------------------------------------------------------------
/// <summary>
/// Amend an existing manifest list
/// </summary>
/// <summary>
/// Allow communication with an insecure registry
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Docker\Manifest\DockerManifestInspectTask.cs
//-----------------------------------------------------------------------
// <auto-generated />
//-----------------------------------------------------------------------
/// <summary>
/// Allow communication with an insecure registry
/// </summary>
/// <summary>
/// Output additional info including layers and platform
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Docker\Manifest\DockerManifestPushTask.cs
//-----------------------------------------------------------------------
// <auto-generated />
//-----------------------------------------------------------------------
/// <summary>
/// Allow push to an insecure registry
/// </summary>
/// <summary>
/// Remove the local manifest list after push
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Docker\Network\DockerNetworkConnectTask.cs
//-----------------------------------------------------------------------
// <auto-generated />
//-----------------------------------------------------------------------
/// <summary>
/// Add network-scoped alias for the container
/// </summary>
/// <summary>
/// driver options for the network
/// </summary>
/// <summary>
/// IPv4 address (e.g., 172.30.100.104)
/// </summary>
/// <summary>
/// IPv6 address (e.g., 2001:db8::33)
/// </summary>
/// <summary>
/// Add link to another container
/// </summary>
/// <summary>
/// Add a link-local address for the container
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Docker\Network\DockerNetworkCreateTask.cs
//-----------------------------------------------------------------------
// <auto-generated />
//-----------------------------------------------------------------------
/// <summary>
/// Enable manual container attachment
/// </summary>
/// <summary>
/// Auxiliary IPv4 or IPv6 addresses used by Network driver
/// </summary>
/// <summary>
/// The network from which copying the configuration
/// </summary>
/// <summary>
/// Create a configuration only network
/// </summary>
/// <summary>
/// Driver to manage the Network
/// </summary>
/// <summary>
/// IPv4 or IPv6 Gateway for the master subnet
/// </summary>
/// <summary>
/// Create swarm routing-mesh network
/// </summary>
/// <summary>
/// Restrict external access to the network
/// </summary>
/// <summary>
/// Allocate container ip from a sub-range
/// </summary>
/// <summary>
/// IP Address Management Driver
/// </summary>
/// <summary>
/// Set IPAM driver specific options
/// </summary>
/// <summary>
/// Enable IPv6 networking
/// </summary>
/// <summary>
/// Set metadata on a network
/// </summary>
/// <summary>
/// Set driver specific options
/// </summary>
/// <summary>
/// Control the network's scope
/// </summary>
/// <summary>
/// Subnet in CIDR format that represents a network segment
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Docker\Network\DockerNetworkDisconnectTask.cs
//-----------------------------------------------------------------------
// <auto-generated />
//-----------------------------------------------------------------------
/// <summary>
/// Force the container to disconnect from a network
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Docker\Network\DockerNetworkInspectTask.cs
//-----------------------------------------------------------------------
// <auto-generated />
//-----------------------------------------------------------------------
/// <summary>
/// Format the output using the given Go template
/// </summary>
/// <summary>
/// Verbose output for diagnostics
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Docker\Network\DockerNetworkLsTask.cs
//-----------------------------------------------------------------------
// <auto-generated />
//-----------------------------------------------------------------------
/// <summary>
/// Provide filter values (e.g. 'driver=bridge')
/// </summary>
/// <summary>
/// Pretty-print networks using a Go template
/// </summary>
/// <summary>
/// Do not truncate the output
/// </summary>
/// <summary>
/// Only display network IDs
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Docker\Network\DockerNetworkPruneTask.cs
//-----------------------------------------------------------------------
// <auto-generated />
//-----------------------------------------------------------------------
/// <summary>
/// Provide filter values (e.g. 'until=<timestamp>')
/// </summary>
/// <summary>
/// Do not prompt for confirmation
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Docker\Node\DockerNodeInspectTask.cs
//-----------------------------------------------------------------------
// <auto-generated />
//-----------------------------------------------------------------------
/// <summary>
/// Format the output using the given Go template
/// </summary>
/// <summary>
/// Print the information in a human friendly format
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Docker\Node\DockerNodeLsTask.cs
//-----------------------------------------------------------------------
// <auto-generated />
//-----------------------------------------------------------------------
/// <summary>
/// Filter output based on conditions provided
/// </summary>
/// <summary>
/// Pretty-print nodes using a Go template
/// </summary>
/// <summary>
/// Only display IDs
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Docker\Node\DockerNodePsTask.cs
//-----------------------------------------------------------------------
// <auto-generated />
//-----------------------------------------------------------------------
/// <summary>
/// Filter output based on conditions provided
/// </summary>
/// <summary>
/// Pretty-print tasks using a Go template
/// </summary>
/// <summary>
/// Do not map IDs to Names
/// </summary>
/// <summary>
/// Do not truncate output
/// </summary>
/// <summary>
/// Only display task IDs
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Docker\Node\DockerNodeRmTask.cs
//-----------------------------------------------------------------------
// <auto-generated />
//-----------------------------------------------------------------------
/// <summary>
/// Force remove a node from the swarm
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Docker\Node\DockerNodeUpdateTask.cs
//-----------------------------------------------------------------------
// <auto-generated />
//-----------------------------------------------------------------------
/// <summary>
/// Availability of the node ("active"|"pause"|"drain")
/// </summary>
/// <summary>
/// Add or update a node label (key=value)
/// </summary>
/// <summary>
/// Remove a node label if exists
/// </summary>
/// <summary>
/// Role of the node ("worker"|"manager")
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Docker\Plugin\DockerPluginCreateTask.cs
//-----------------------------------------------------------------------
// <auto-generated />
//-----------------------------------------------------------------------
/// <summary>
/// Compress the context using gzip
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Docker\Plugin\DockerPluginDisableTask.cs
//-----------------------------------------------------------------------
// <auto-generated />
//-----------------------------------------------------------------------
/// <summary>
/// Force the disable of an active plugin
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Docker\Plugin\DockerPluginEnableTask.cs
//-----------------------------------------------------------------------
// <auto-generated />
//-----------------------------------------------------------------------
/// <summary>
/// HTTP client timeout (in seconds)
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Docker\Plugin\DockerPluginInspectTask.cs
//-----------------------------------------------------------------------
// <auto-generated />
//-----------------------------------------------------------------------
/// <summary>
/// Format the output using the given Go template
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Docker\Plugin\DockerPluginInstallTask.cs
//-----------------------------------------------------------------------
// <auto-generated />
//-----------------------------------------------------------------------
/// <summary>
/// Local name for plugin
/// </summary>
/// <summary>
/// Do not enable the plugin on install
/// </summary>
/// <summary>
/// Skip image verification
/// </summary>
/// <summary>
/// Grant all permissions necessary to run the plugin
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Docker\Plugin\DockerPluginLsTask.cs
//-----------------------------------------------------------------------
// <auto-generated />
//-----------------------------------------------------------------------
/// <summary>
/// Provide filter values (e.g. 'enabled=true')
/// </summary>
/// <summary>
/// Pretty-print plugins using a Go template
/// </summary>
/// <summary>
/// Don't truncate output
/// </summary>
/// <summary>
/// Only display plugin IDs
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Docker\Plugin\DockerPluginPushTask.cs
//-----------------------------------------------------------------------
// <auto-generated />
//-----------------------------------------------------------------------
/// <summary>
/// Skip image signing
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Docker\Plugin\DockerPluginRmTask.cs
//-----------------------------------------------------------------------
// <auto-generated />
//-----------------------------------------------------------------------
/// <summary>
/// Force the removal of an active plugin
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Docker\Plugin\DockerPluginUpgradeTask.cs
//-----------------------------------------------------------------------
// <auto-generated />
//-----------------------------------------------------------------------
/// <summary>
/// Skip image verification
/// </summary>
/// <summary>
/// Grant all permissions necessary to run the plugin
/// </summary>
/// <summary>
/// Do not check if specified remote plugin matches existing plugin image
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Docker\Secret\DockerSecretCreateTask.cs
//-----------------------------------------------------------------------
// <auto-generated />
//-----------------------------------------------------------------------
/// <summary>
/// Secret driver
/// </summary>
/// <summary>
/// Secret labels
/// </summary>
/// <summary>
/// Template driver
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Docker\Secret\DockerSecretInspectTask.cs
//-----------------------------------------------------------------------
// <auto-generated />
//-----------------------------------------------------------------------
/// <summary>
/// Format the output using the given Go template
/// </summary>
/// <summary>
/// Print the information in a human friendly format
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Docker\Secret\DockerSecretLsTask.cs
//-----------------------------------------------------------------------
// <auto-generated />
//-----------------------------------------------------------------------
/// <summary>
/// Filter output based on conditions provided
/// </summary>
/// <summary>
/// Pretty-print secrets using a Go template
/// </summary>
/// <summary>
/// Only display IDs
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Docker\Service\DockerServiceCreateTask.cs
//-----------------------------------------------------------------------
// <auto-generated />
//-----------------------------------------------------------------------
/// <summary>
/// Specify configurations to expose to the service
/// </summary>
/// <summary>
/// Placement constraints
/// </summary>
/// <summary>
/// Container labels
/// </summary>
/// <summary>
/// Credential spec for managed service account (Windows only)
/// </summary>
/// <summary>
/// Exit immediately instead of waiting for the service to converge
/// </summary>
/// <summary>
/// Set custom DNS servers
/// </summary>
/// <summary>
/// Set DNS options
/// </summary>
/// <summary>
/// Set custom DNS search domains
/// </summary>
/// <summary>
/// Endpoint mode (vip or dnsrr)
/// </summary>
/// <summary>
/// Overwrite the default ENTRYPOINT of the image
/// </summary>
/// <summary>
/// Set environment variables
/// </summary>
/// <summary>
/// Read in a file of environment variables
/// </summary>
/// <summary>
/// User defined resources
/// </summary>
/// <summary>
/// Set one or more supplementary user groups for the container
/// </summary>
/// <summary>
/// Command to run to check health
/// </summary>
/// <summary>
/// Time between running the check (ms|s|m|h)
/// </summary>
/// <summary>
/// Consecutive failures needed to report unhealthy
/// </summary>
/// <summary>
/// Start period for the container to initialize before counting retries towards unstable (ms|s|m|h)
/// </summary>
/// <summary>
/// Maximum time to allow one check to run (ms|s|m|h)
/// </summary>
/// <summary>
/// Set one or more custom host-to-IP mappings (host:ip)
/// </summary>
/// <summary>
/// Container hostname
/// </summary>
/// <summary>
/// Use an init inside each service container to forward signals and reap processes
/// </summary>
/// <summary>
/// Service container isolation mode
/// </summary>
/// <summary>
/// Service labels
/// </summary>
/// <summary>
/// Limit CPUs
/// </summary>
/// <summary>
/// Limit Memory
/// </summary>
/// <summary>
/// Logging driver for service
/// </summary>
/// <summary>
/// Logging driver options
/// </summary>
/// <summary>
/// Service mode (replicated or global)
/// </summary>
/// <summary>
/// Attach a filesystem mount to the service
/// </summary>
/// <summary>
/// Service name
/// </summary>
/// <summary>
/// Network attachments
/// </summary>
/// <summary>
/// Disable any container-specified HEALTHCHECK
/// </summary>
/// <summary>
/// Do not query the registry to resolve image digest and supported platforms
/// </summary>
/// <summary>
/// Add a placement preference
/// </summary>
/// <summary>
/// Publish a port as a node port
/// </summary>
/// <summary>
/// Suppress progress output
/// </summary>
/// <summary>
/// Mount the container's root filesystem as read only
/// </summary>
/// <summary>
/// Number of tasks
/// </summary>
/// <summary>
/// Maximum number of tasks per node (default 0 = unlimited)
/// </summary>
/// <summary>
/// Reserve CPUs
/// </summary>
/// <summary>
/// Reserve Memory
/// </summary>
/// <summary>
/// Restart when condition is met ("none"|"on-failure"|"any") (default "any")
/// </summary>
/// <summary>
/// Delay between restart attempts (ns|us|ms|s|m|h) (default 5s)
/// </summary>
/// <summary>
/// Maximum number of restarts before giving up
/// </summary>
/// <summary>
/// Window used to evaluate the restart policy (ns|us|ms|s|m|h)
/// </summary>
/// <summary>
/// Delay between task rollbacks (ns|us|ms|s|m|h) (default 0s)
/// </summary>
/// <summary>
/// Action on rollback failure ("pause"|"continue") (default "pause")
/// </summary>
/// <summary>
/// Failure rate to tolerate during a rollback (default 0)
/// </summary>
/// <summary>
/// Duration after each task rollback to monitor for failure (ns|us|ms|s|m|h) (default 5s)
/// </summary>
/// <summary>
/// Rollback order ("start-first"|"stop-first") (default "stop-first")
/// </summary>
/// <summary>
/// Maximum number of tasks rolled back simultaneously (0 to roll back all at once)
/// </summary>
/// <summary>
/// Specify secrets to expose to the service
/// </summary>
/// <summary>
/// Time to wait before force killing a container (ns|us|ms|s|m|h) (default 10s)
/// </summary>
/// <summary>
/// Signal to stop the container
/// </summary>
/// <summary>
/// Sysctl options
/// </summary>
/// <summary>
/// Allocate a pseudo-TTY
/// </summary>
/// <summary>
/// Delay between updates (ns|us|ms|s|m|h) (default 0s)
/// </summary>
/// <summary>
/// Action on update failure ("pause"|"continue"|"rollback") (default "pause")
/// </summary>
/// <summary>
/// Failure rate to tolerate during an update (default 0)
/// </summary>
/// <summary>
/// Duration after each task update to monitor for failure (ns|us|ms|s|m|h) (default 5s)
/// </summary>
/// <summary>
/// Update order ("start-first"|"stop-first") (default "stop-first")
/// </summary>
/// <summary>
/// Maximum number of tasks updated simultaneously (0 to update all at once)
/// </summary>
/// <summary>
/// Username or UID (format: <name|uid>[:<group|gid>])
/// </summary>
/// <summary>
/// Send registry authentication details to swarm agents
/// </summary>
/// <summary>
/// Working directory inside the container
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Docker\Service\DockerServiceInspectTask.cs
//-----------------------------------------------------------------------
// <auto-generated />
//-----------------------------------------------------------------------
/// <summary>
/// Format the output using the given Go template
/// </summary>
/// <summary>
/// Print the information in a human friendly format
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Docker\Service\DockerServiceLogsTask.cs
//-----------------------------------------------------------------------
// <auto-generated />
//-----------------------------------------------------------------------
/// <summary>
/// Show extra details provided to logs
/// </summary>
/// <summary>
/// Follow log output
/// </summary>
/// <summary>
/// Do not map IDs to Names in output
/// </summary>
/// <summary>
/// Do not include task IDs in output
/// </summary>
/// <summary>
/// Do not truncate output
/// </summary>
/// <summary>
/// Do not neatly format logs
/// </summary>
/// <summary>
/// Show logs since timestamp (e.g. 2013-01-02T13:23:37) or relative (e.g. 42m for 42 minutes)
/// </summary>
/// <summary>
/// Number of lines to show from the end of the logs
/// </summary>
/// <summary>
/// Show timestamps
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Docker\Service\DockerServiceLsTask.cs
//-----------------------------------------------------------------------
// <auto-generated />
//-----------------------------------------------------------------------
/// <summary>
/// Filter output based on conditions provided
/// </summary>
/// <summary>
/// Pretty-print services using a Go template
/// </summary>
/// <summary>
/// Only display IDs
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Docker\Service\DockerServicePsTask.cs
//-----------------------------------------------------------------------
// <auto-generated />
//-----------------------------------------------------------------------
/// <summary>
/// Filter output based on conditions provided
/// </summary>
/// <summary>
/// Pretty-print tasks using a Go template
/// </summary>
/// <summary>
/// Do not map IDs to Names
/// </summary>
/// <summary>
/// Do not truncate output
/// </summary>
/// <summary>
/// Only display task IDs
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Docker\Service\DockerServiceRollbackTask.cs
//-----------------------------------------------------------------------
// <auto-generated />
//-----------------------------------------------------------------------
/// <summary>
/// Exit immediately instead of waiting for the service to converge
/// </summary>
/// <summary>
/// Suppress progress output
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Docker\Service\DockerServiceScaleTask.cs
//-----------------------------------------------------------------------
// <auto-generated />
//-----------------------------------------------------------------------
/// <summary>
/// Exit immediately instead of waiting for the service to converge
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Docker\Service\DockerServiceUpdateTask.cs
//-----------------------------------------------------------------------
// <auto-generated />
//-----------------------------------------------------------------------
/// <summary>
/// Service command args
/// </summary>
/// <summary>
/// Add or update a config file on a service
/// </summary>
/// <summary>
/// Remove a configuration file
/// </summary>
/// <summary>
/// Add or update a placement constraint
/// </summary>
/// <summary>
/// Remove a constraint
/// </summary>
/// <summary>
/// Add or update a container label
/// </summary>
/// <summary>
/// Remove a container label by its key
/// </summary>
/// <summary>
/// Credential spec for managed service account (Windows only)
/// </summary>
/// <summary>
/// Exit immediately instead of waiting for the service to converge
/// </summary>
/// <summary>
/// Add or update a custom DNS server
/// </summary>
/// <summary>
/// Add or update a DNS option
/// </summary>
/// <summary>
/// Remove a DNS option
/// </summary>
/// <summary>
/// Remove a custom DNS server
/// </summary>
/// <summary>
/// Add or update a custom DNS search domain
/// </summary>
/// <summary>
/// Remove a DNS search domain
/// </summary>
/// <summary>
/// Endpoint mode (vip or dnsrr)
/// </summary>
/// <summary>
/// Overwrite the default ENTRYPOINT of the image
/// </summary>
/// <summary>
/// Add or update an environment variable
/// </summary>
/// <summary>
/// Remove an environment variable
/// </summary>
/// <summary>
/// Force update even if no changes require it
/// </summary>
/// <summary>
/// Add a Generic resource
/// </summary>
/// <summary>
/// Remove a Generic resource
/// </summary>
/// <summary>
/// Add an additional supplementary user group to the container
/// </summary>
/// <summary>
/// Remove a previously added supplementary user group from the container
/// </summary>
/// <summary>
/// Command to run to check health
/// </summary>
/// <summary>
/// Time between running the check (ms|s|m|h)
/// </summary>
/// <summary>
/// Consecutive failures needed to report unhealthy
/// </summary>
/// <summary>
/// Start period for the container to initialize before counting retries towards unstable (ms|s|m|h)
/// </summary>
/// <summary>
/// Maximum time to allow one check to run (ms|s|m|h)
/// </summary>
/// <summary>
/// Add a custom host-to-IP mapping (host:ip)
/// </summary>
/// <summary>
/// Remove a custom host-to-IP mapping (host:ip)
/// </summary>
/// <summary>
/// Container hostname
/// </summary>
/// <summary>
/// Service image tag
/// </summary>
/// <summary>
/// Use an init inside each service container to forward signals and reap processes
/// </summary>
/// <summary>
/// Service container isolation mode
/// </summary>
/// <summary>
/// Add or update a service label
/// </summary>
/// <summary>
/// Remove a label by its key
/// </summary>
/// <summary>
/// Limit CPUs
/// </summary>
/// <summary>
/// Limit Memory
/// </summary>
/// <summary>
/// Logging driver for service
/// </summary>
/// <summary>
/// Logging driver options
/// </summary>
/// <summary>
/// Add or update a mount on a service
/// </summary>
/// <summary>
/// Remove a mount by its target path
/// </summary>
/// <summary>
/// Add a network
/// </summary>
/// <summary>
/// Remove a network
/// </summary>
/// <summary>
/// Disable any container-specified HEALTHCHECK
/// </summary>
/// <summary>
/// Do not query the registry to resolve image digest and supported platforms
/// </summary>
/// <summary>
/// Add a placement preference
/// </summary>
/// <summary>
/// Remove a placement preference
/// </summary>
/// <summary>
/// Add or update a published port
/// </summary>
/// <summary>
/// Remove a published port by its target port
/// </summary>
/// <summary>
/// Suppress progress output
/// </summary>
/// <summary>
/// Mount the container's root filesystem as read only
/// </summary>
/// <summary>
/// Number of tasks
/// </summary>
/// <summary>
/// Maximum number of tasks per node (default 0 = unlimited)
/// </summary>
/// <summary>
/// Reserve CPUs
/// </summary>
/// <summary>
/// Reserve Memory
/// </summary>
/// <summary>
/// Restart when condition is met ("none"|"on-failure"|"any")
/// </summary>
/// <summary>
/// Delay between restart attempts (ns|us|ms|s|m|h)
/// </summary>
/// <summary>
/// Maximum number of restarts before giving up
/// </summary>
/// <summary>
/// Window used to evaluate the restart policy (ns|us|ms|s|m|h)
/// </summary>
/// <summary>
/// Rollback to previous specification
/// </summary>
/// <summary>
/// Delay between task rollbacks (ns|us|ms|s|m|h)
/// </summary>
/// <summary>
/// Action on rollback failure ("pause"|"continue")
/// </summary>
/// <summary>
/// Failure rate to tolerate during a rollback
/// </summary>
/// <summary>
/// Duration after each task rollback to monitor for failure (ns|us|ms|s|m|h)
/// </summary>
/// <summary>
/// Rollback order ("start-first"|"stop-first")
/// </summary>
/// <summary>
/// Maximum number of tasks rolled back simultaneously (0 to roll back all at once)
/// </summary>
/// <summary>
/// Add or update a secret on a service
/// </summary>
/// <summary>
/// Remove a secret
/// </summary>
/// <summary>
/// Time to wait before force killing a container (ns|us|ms|s|m|h)
/// </summary>
/// <summary>
/// Signal to stop the container
/// </summary>
/// <summary>
/// Add or update a Sysctl option
/// </summary>
/// <summary>
/// Remove a Sysctl option
/// </summary>
/// <summary>
/// Allocate a pseudo-TTY
/// </summary>
/// <summary>
/// Delay between updates (ns|us|ms|s|m|h)
/// </summary>
/// <summary>
/// Action on update failure ("pause"|"continue"|"rollback")
/// </summary>
/// <summary>
/// Failure rate to tolerate during an update
/// </summary>
/// <summary>
/// Duration after each task update to monitor for failure (ns|us|ms|s|m|h)
/// </summary>
/// <summary>
/// Update order ("start-first"|"stop-first")
/// </summary>
/// <summary>
/// Maximum number of tasks updated simultaneously (0 to update all at once)
/// </summary>
/// <summary>
/// Username or UID (format: <name|uid>[:<group|gid>])
/// </summary>
/// <summary>
/// Send registry authentication details to swarm agents
/// </summary>
/// <summary>
/// Working directory inside the container
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Docker\Stack\DockerStackDeployTask.cs
//-----------------------------------------------------------------------
// <auto-generated />
//-----------------------------------------------------------------------
/// <summary>
/// Path to a Distributed Application Bundle file
/// </summary>
/// <summary>
/// Path to a Compose file, or "-" to read from stdin
/// </summary>
/// <summary>
/// Kubernetes namespace to use
/// </summary>
/// <summary>
/// Prune services that are no longer referenced
/// </summary>
/// <summary>
/// Query the registry to resolve image digest and supported platforms ("always"|"changed"|"never")
/// </summary>
/// <summary>
/// Send registry authentication details to Swarm agents
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Docker\Stack\DockerStackLsTask.cs
//-----------------------------------------------------------------------
// <auto-generated />
//-----------------------------------------------------------------------
/// <summary>
/// List stacks from all Kubernetes namespaces
/// </summary>
/// <summary>
/// Pretty-print stacks using a Go template
/// </summary>
/// <summary>
/// Kubernetes namespaces to use
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Docker\Stack\DockerStackPsTask.cs
//-----------------------------------------------------------------------
// <auto-generated />
//-----------------------------------------------------------------------
/// <summary>
/// Filter output based on conditions provided
/// </summary>
/// <summary>
/// Pretty-print tasks using a Go template
/// </summary>
/// <summary>
/// Kubernetes namespace to use
/// </summary>
/// <summary>
/// Do not map IDs to Names
/// </summary>
/// <summary>
/// Do not truncate output
/// </summary>
/// <summary>
/// Only display task IDs
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Docker\Stack\DockerStackRmTask.cs
//-----------------------------------------------------------------------
// <auto-generated />
//-----------------------------------------------------------------------
/// <summary>
/// Kubernetes namespace to use
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Docker\Stack\DockerStackServicesTask.cs
//-----------------------------------------------------------------------
// <auto-generated />
//-----------------------------------------------------------------------
/// <summary>
/// Filter output based on conditions provided
/// </summary>
/// <summary>
/// Pretty-print services using a Go template
/// </summary>
/// <summary>
/// Kubernetes namespace to use
/// </summary>
/// <summary>
/// Only display IDs
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Docker\Swarm\DockerSwarmCaTask.cs
//-----------------------------------------------------------------------
// <auto-generated />
//-----------------------------------------------------------------------
/// <summary>
/// Path to the PEM-formatted root CA certificate to use for the new cluster
/// </summary>
/// <summary>
/// Path to the PEM-formatted root CA key to use for the new cluster
/// </summary>
/// <summary>
/// Validity period for node certificates (ns|us|ms|s|m|h)
/// </summary>
/// <summary>
/// Exit immediately instead of waiting for the root rotation to converge
/// </summary>
/// <summary>
/// Specifications of one or more certificate signing endpoints
/// </summary>
/// <summary>
/// Suppress progress output
/// </summary>
/// <summary>
/// Rotate the swarm CA - if no certificate or key are provided, new ones will be generated
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Docker\Swarm\DockerSwarmInitTask.cs
//-----------------------------------------------------------------------
// <auto-generated />
//-----------------------------------------------------------------------
/// <summary>
/// Advertised address (format: <ip|interface>[:port])
/// </summary>
/// <summary>
/// Enable manager autolocking (requiring an unlock key to start a stopped manager)
/// </summary>
/// <summary>
/// Availability of the node ("active"|"pause"|"drain")
/// </summary>
/// <summary>
/// Validity period for node certificates (ns|us|ms|s|m|h)
/// </summary>
/// <summary>
/// Address or interface to use for data path traffic (format: <ip|interface>)
/// </summary>
/// <summary>
/// Port number to use for data path traffic (1024 - 49151). If no value is set or is set to 0, the default port (4789) is used.
/// </summary>
/// <summary>
/// default address pool in CIDR format
/// </summary>
/// <summary>
/// default address pool subnet mask length
/// </summary>
/// <summary>
/// Dispatcher heartbeat period (ns|us|ms|s|m|h)
/// </summary>
/// <summary>
/// Specifications of one or more certificate signing endpoints
/// </summary>
/// <summary>
/// Force create a new cluster from current state
/// </summary>
/// <summary>
/// Listen address (format: <ip|interface>[:port])
/// </summary>
/// <summary>
/// Number of additional Raft snapshots to retain
/// </summary>
/// <summary>
/// Number of log entries between Raft snapshots
/// </summary>
/// <summary>
/// Task history retention limit
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Docker\Swarm\DockerSwarmJoinTask.cs
//-----------------------------------------------------------------------
// <auto-generated />
//-----------------------------------------------------------------------
/// <summary>
/// Advertised address (format: <ip|interface>[:port])
/// </summary>
/// <summary>
/// Availability of the node ("active"|"pause"|"drain")
/// </summary>
/// <summary>
/// Address or interface to use for data path traffic (format: <ip|interface>)
/// </summary>
/// <summary>
/// Listen address (format: <ip|interface>[:port])
/// </summary>
/// <summary>
/// Token for entry into the swarm
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Docker\Swarm\DockerSwarmJoinTokenTask.cs
//-----------------------------------------------------------------------
// <auto-generated />
//-----------------------------------------------------------------------
/// <summary>
/// Only display token
/// </summary>
/// <summary>
/// Rotate join token
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Docker\Swarm\DockerSwarmLeaveTask.cs
//-----------------------------------------------------------------------
// <auto-generated />
//-----------------------------------------------------------------------
/// <summary>
/// Force this node to leave the swarm, ignoring warnings
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Docker\Swarm\DockerSwarmUnlockKeyTask.cs
//-----------------------------------------------------------------------
// <auto-generated />
//-----------------------------------------------------------------------
/// <summary>
/// Only display token
/// </summary>
/// <summary>
/// Rotate unlock key
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Docker\Swarm\DockerSwarmUpdateTask.cs
//-----------------------------------------------------------------------
// <auto-generated />
//-----------------------------------------------------------------------
/// <summary>
/// Change manager autolocking setting (true|false)
/// </summary>
/// <summary>
/// Validity period for node certificates (ns|us|ms|s|m|h)
/// </summary>
/// <summary>
/// Dispatcher heartbeat period (ns|us|ms|s|m|h)
/// </summary>
/// <summary>
/// Specifications of one or more certificate signing endpoints
/// </summary>
/// <summary>
/// Number of additional Raft snapshots to retain
/// </summary>
/// <summary>
/// Number of log entries between Raft snapshots
/// </summary>
/// <summary>
/// Task history retention limit
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Docker\System\DockerSystemDfTask.cs
//-----------------------------------------------------------------------
// <auto-generated />
//-----------------------------------------------------------------------
/// <summary>
/// Pretty-print images using a Go template
/// </summary>
/// <summary>
/// Show detailed information on space usage
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Docker\System\DockerSystemEventsTask.cs
//-----------------------------------------------------------------------
// <auto-generated />
//-----------------------------------------------------------------------
/// <summary>
/// Filter output based on conditions provided
/// </summary>
/// <summary>
/// Format the output using the given Go template
/// </summary>
/// <summary>
/// Show all events created since timestamp
/// </summary>
/// <summary>
/// Stream events until this timestamp
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Docker\System\DockerSystemInfoTask.cs
//-----------------------------------------------------------------------
// <auto-generated />
//-----------------------------------------------------------------------
/// <summary>
/// Format the output using the given Go template
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Docker\System\DockerSystemPruneTask.cs
//-----------------------------------------------------------------------
// <auto-generated />
//-----------------------------------------------------------------------
/// <summary>
/// Remove all unused images not just dangling ones
/// </summary>
/// <summary>
/// Provide filter values (e.g. 'label=<key>=<value>')
/// </summary>
/// <summary>
/// Do not prompt for confirmation
/// </summary>
/// <summary>
/// Prune volumes
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Docker\Trust\DockerTrustInspectTask.cs
//-----------------------------------------------------------------------
// <auto-generated />
//-----------------------------------------------------------------------
/// <summary>
/// Print the information in a human friendly format
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Docker\Trust\DockerTrustKeyGenerateTask.cs
//-----------------------------------------------------------------------
// <auto-generated />
//-----------------------------------------------------------------------
/// <summary>
/// Directory to generate key in, defaults to current directory
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Docker\Trust\DockerTrustKeyLoadTask.cs
//-----------------------------------------------------------------------
// <auto-generated />
//-----------------------------------------------------------------------
/// <summary>
/// Name for the loaded key
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Docker\Trust\DockerTrustRevokeTask.cs
//-----------------------------------------------------------------------
// <auto-generated />
//-----------------------------------------------------------------------
/// <summary>
/// Do not prompt for confirmation
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Docker\Trust\DockerTrustSignerAddTask.cs
//-----------------------------------------------------------------------
// <auto-generated />
//-----------------------------------------------------------------------
/// <summary>
/// Path to the signer's public key file
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Docker\Trust\DockerTrustSignerRemoveTask.cs
//-----------------------------------------------------------------------
// <auto-generated />
//-----------------------------------------------------------------------
/// <summary>
/// Do not prompt for confirmation before removing the most recent signer
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Docker\Trust\DockerTrustSignTask.cs
//-----------------------------------------------------------------------
// <auto-generated />
//-----------------------------------------------------------------------
/// <summary>
/// Sign a locally tagged image
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Docker\Volume\DockerVolumeCreateTask.cs
//-----------------------------------------------------------------------
// <auto-generated />
//-----------------------------------------------------------------------
/// <summary>
/// Specify volume driver name
/// </summary>
/// <summary>
/// Set metadata for a volume
/// </summary>
/// <summary>
/// Specify volume name
/// </summary>
/// <summary>
/// Set driver specific options
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Docker\Volume\DockerVolumeInspectTask.cs
//-----------------------------------------------------------------------
// <auto-generated />
//-----------------------------------------------------------------------
/// <summary>
/// Format the output using the given Go template
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Docker\Volume\DockerVolumeLsTask.cs
//-----------------------------------------------------------------------
// <auto-generated />
//-----------------------------------------------------------------------
/// <summary>
/// Provide filter values (e.g. 'dangling=true')
/// </summary>
/// <summary>
/// Pretty-print volumes using a Go template
/// </summary>
/// <summary>
/// Only display volume names
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Docker\Volume\DockerVolumePruneTask.cs
//-----------------------------------------------------------------------
// <auto-generated />
//-----------------------------------------------------------------------
/// <summary>
/// Provide filter values (e.g. 'label=<label>')
/// </summary>
/// <summary>
/// Do not prompt for confirmation
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Docker\Volume\DockerVolumeRmTask.cs
//-----------------------------------------------------------------------
// <auto-generated />
//-----------------------------------------------------------------------
/// <summary>
/// Force the removal of one or more volumes
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\FileSystem\CopyDirectoryStructureTask.cs
/// <summary>
///     Copies a directory tree from the source to the destination.
/// </summary>
/// <summary>
///     Initializes a new instance of the <see cref="CopyDirectoryStructureTask" /> class
///     using a specified source and destination path and an indicator whether to overwrite existing files.
/// </summary>
/// <param name="sourcePath">The source path.</param>
/// <param name="destinationPath">The destination path.</param>
/// <param name="overwriteExisting">if set to <c>true</c> the task will overwrite existing destination files.</param>
/// <summary>
///     Gets the list of all destination files that were copied.
/// </summary>
/// <value>The list of all destination files that were copied.</value>
/// <summary>
///     Gets or sets the exclusion regular expression pattern for files.
/// </summary>
/// <remarks>
///     All files whose paths match this regular expression
///     will not be copied. If the <see cref="ExclusionPattern" /> is <c>null</c>, it will be ignored.
/// </remarks>
/// <value>The exclusion pattern.</value>
/// <summary>
///     Gets or sets the inclusion regular expression pattern for files.
/// </summary>
/// <remarks>
///     All files whose paths match this regular expression
///     will be copied. If the <see cref="InclusionPattern" /> is <c>null</c>, it will be ignored.
/// </remarks>
/// <value>The inclusion pattern.</value>
/// <summary>
/// The source path.
/// </summary>
/// <param name="sourcePath"></param>
/// <returns></returns>
/// <summary>
/// The destination path.
/// </summary>
/// <param name="destinationPath"></param>
/// <returns></returns>
/// <summary>
///     Sets the exclusion regular expression pattern for files.
/// </summary>
/// <remarks>
///     All files whose paths match this regular expression
///     will not be copied. If the <see cref="ExclusionPattern" /> is <c>null</c>, it will be ignored.
/// </remarks>
/// <summary>
///     sets the inclusion regular expression pattern for files.
/// </summary>
/// <remarks>
///     All files whose paths match this regular expression
///     will be copied. If the <see cref="InclusionPattern" /> is <c>null</c>, it will be ignored.
/// </remarks>
/// <summary>
///     Internal task execution code.
/// </summary>
/// <param name="context">The script execution environment.</param>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\FileSystem\CopyFileTask.cs
/// <summary>
///     Copies file to specified soruce
/// </summary>
/// <summary>
///     Copies file to specified destination location.
/// </summary>
/// <param name="sourceFileName">Path of file to be copied. </param>
/// <param name="destinationFileName">Destination location of the file to be copied.</param>
/// <param name="overwrite">if <c>true</c> file on the destionation location is overwriren if it exists. Otherwise not.</param>
/// <summary>
/// The source path.
/// </summary>
/// <param name="sourceFileName"></param>
/// <returns></returns>
/// <summary>
/// The destination path.
/// </summary>
/// <param name="destinationFileName"></param>
/// <returns></returns>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\FileSystem\CreateDirectoryTask.cs
/// <summary>
/// Task creates directroy
/// </summary>
/// <summary>
/// Task creates directory at the given location.
/// </summary>
/// <param name="directoryPath"></param>
/// <param name="forceRecreate">If <c>true</c> directory is deleted if it exists and then created again.</param>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\FileSystem\DeleteDirectoryTask.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\FileSystem\DeleteFilesTask.cs
/// <summary>
/// </summary>
/// <param name="directoryPath"></param>
/// <param name="filePattern">The search string to match against the names of files in path. This parameter can contain a combination of valid literal path and wildcard (* and ?) characters but doesnt support regular expressions.</param>
/// <param name="recursive">If true it searches and deletes all matching files in subdirectories.</param>
/// <summary>
/// The search string to match against the names of files in path. This parameter can contain a combination of valid literal path and wildcard (* and ?) characters but doesnt support regular expressions.
/// </summary>
/// <param name="filePattern"></param>
/// <returns></returns>
/// <summary>
/// If true it searches and deletes all matching files in subdirectories.
/// </summary>
/// <returns></returns>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\FileSystem\TouchFileTask.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\FlubuWebApi\DeletePackagesTask.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\FlubuWebApi\DeleteReportsTask.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\FlubuWebApi\DownloadReportsTask.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\FlubuWebApi\ExecuteScriptTask.cs
/// <summary>
/// Adds argument with specified key.
/// </summary>
/// <param name="key"></param>
/// <param name="value"></param>
/// <returns></returns>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\FlubuWebApi\GetTokenTask.cs
/// <summary>
/// Set's web api base url on web api client.
/// </summary>
/// <param name="webApiUrl"></param>
/// <returns></returns>
/// <summary>
/// Set's timeout on web api client.
/// </summary>
/// <param name="timeout"></param>
/// <returns></returns>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\FlubuWebApi\IWebApiClientFactory.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\FlubuWebApi\UploadPackageTask.cs
/// <summary>
/// The search string to match against the names of files(packages). This parameter can contain a combination of valid literal path and wildcard (* and ?) characters (see Remarks), but doesn't support regular expressions. The default pattern is "*", which returns all files.
/// </summary>
/// <param name="packageSearchPattern"></param>
/// <returns></returns>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\FlubuWebApi\UploadScriptTask.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\FlubuWebApi\WebApiBaseTask.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\FlubuWebApi\WebApiClientFactory.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Git\GitAddTask.cs
/// <summary>
/// Task updates the index using the current content found in the working tree, to prepare the content staged for the next commit.
/// </summary>
/// <summary>
/// Files to add content from. Fileglobs (e.g. *.c) can be given to add all matching files.
/// Also a leading directory name (e.g. dir to add dir/file1 and dir/file2) can be given
/// to update the index to match the current state of the directory as a whole.
/// </summary>
/// <param name="pathSpec"></param>
/// <returns></returns>
/// <summary>
/// Be verbose.
/// </summary>
/// <returns></returns>
/// <summary>
/// Don’t actually add the file(s), just show if they exist and/or will be ignored.
/// </summary>
/// <returns></returns>
/// <summary>
/// allow adding otherwise ignored files.
/// </summary>
/// <returns></returns>
/// <summary>
/// just skip files which cannot be added because of errors.
/// </summary>
/// <returns></returns>
/// <summary>
/// Update the index just where it already has an entry matching <pathspec>. This removes as well as modifies index entries to match the working tree, but adds no new files.
/// </summary>
/// <returns></returns>
/// <summary>
/// Add modified contents in the working tree interactively to the index. Optional path arguments may be supplied to limit operation to a subset of the working tree.
/// </summary>
/// <returns></returns>
/// <summary>
/// Interactively choose hunks of patch between the index and the work tree and add them to the index. This gives the user a chance to review the difference before adding modified contents to the index.
/// </summary>
/// <returns></returns>
/// <summary>
/// Update the index by adding new files that are unknown to the index and files modified in the working tree, but ignore files that have been removed from the working tree.
/// </summary>
/// <returns></returns>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Git\GitBranchTask.cs
/// <summary>
/// When in list mode, show sha1 and commit subject line for each head, along with relationship to upstream branch (if any).
/// </summary>
/// <returns></returns>
/// <summary>
/// Be more quiet when creating or deleting a branch, suppressing non-error messages.
/// </summary>
/// <returns></returns>
/// <summary>
/// Delete a branch. The branch must be fully merged in its upstream branch, or in HEAD if no upstream was set with --track or --set-upstream-to.
/// </summary>
/// <returns></returns>
/// <summary>
/// Reset 'branchname' to 'startpoint', even if 'branchname' exists already. Without -f, git branch refuses to change an existing branch.
/// </summary>
/// <returns></returns>
/// <summary>
/// Move/rename a branch and the corresponding reflog.
/// </summary>
/// <returns></returns>
/// <summary>
/// Copy a branch and the corresponding reflog.
/// </summary>
/// <returns></returns>
/// <summary>
/// List or delete (if used with -d) the remote-tracking branches. Combine with --list to match the optional pattern(s).
/// </summary>
/// <returns></returns>
/// <summary>
/// List both remote-tracking branches and local branches. Combine with --list to match optional pattern(s).
/// </summary>
/// <returns></returns>
/// <summary>
/// List branches.
/// </summary>
/// <returns></returns>
/// <summary>
/// When creating a new branch, set up branch.<name>.remote and branch.'name'.merge configuration entries to mark the start-point branch as "upstream" from the new branch.
/// </summary>
/// <returns></returns>
/// <summary>
/// Do not set up "upstream" configuration, even if the branch.autoSetupMerge configuration variable is true.
/// </summary>
/// <returns></returns>
/// <summary>
/// Set up 'branchname''s tracking information so 'upstream' is considered 'branchname''s upstream branch. If no 'branchname' is specified, then it defaults to the current branch.
/// </summary>
/// <param name="upstream"></param>
/// <returns></returns>
/// <summary>
/// Remove the upstream information for "branchname". If no branch is specified it defaults to the current branch.
/// </summary>
/// <returns></returns>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Git\GitCheckoutTask.cs
/// <summary>
/// Detach repo.
/// </summary>
/// <returns></returns>
/// <summary>
/// Create a new branch named <new_branch> and start it at <start_point>;
/// </summary>
/// <param name="name"></param>
/// <returns></returns>
/// <summary>
/// Creates the branch <new_branch> and start it at <start_point>; if it already exists, then reset it to <start_point>.
/// </summary>
/// <param name="name"></param>
/// <returns></returns>
/// <summary>
/// When creating a new branch, set up "upstream" configuration.
/// </summary>
/// <returns></returns>
/// <summary>
/// Do not set up "upstream" configuration, even if the branch.autoSetupMerge configuration variable is true.
/// </summary>
/// <returns></returns>
/// <summary>
/// Create a new orphan branch, named <new_branch>, started from <start_point> and switch to it.
/// </summary>
/// <returns></returns>
/// <summary>
/// When switching branches, if you have local modifications to one or more files that are different between the current branch and the branch to which you are switching, the command refuses to switch branches in order to preserve your modifications in context.
/// </summary>
/// <returns></returns>
/// <summary>
/// Using --recurse-submodules will update the content of all initialized submodules according to the commit recorded in the superproject.
/// </summary>
/// <returns></returns>
/// <summary>
/// Interactively select hunks in the difference between the 'tree-ish' (or the index, if unspecified) and the working tree.
/// </summary>
/// <returns></returns>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Git\GitCloneTask.cs
/// <summary>
/// checkout specified branch instead of the remote's HEAD.
/// </summary>
/// <param name="name"></param>
/// <returns></returns>
/// <summary>
/// force progress reporting.
/// </summary>
/// <returns></returns>
/// <summary>
/// be more verbose.
/// </summary>
/// <returns></returns>
/// <summary>
/// be more quiet.
/// </summary>
/// <returns></returns>
/// <summary>
/// don't create a checkout
/// </summary>
/// <returns></returns>
/// <summary>
/// create a bare repository.
/// </summary>
/// <returns></returns>
/// <summary>
/// setup as shared repository.
/// </summary>
/// <returns></returns>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Git\GitCommitTask.cs
/// <summary>
/// Override the commit author. Specify an explicit author using the standard A U Thor author@example.com format.
/// </summary>
/// <param name="author"></param>
/// <returns></returns>
/// <summary>
/// Use the given 'msg' as the commit message.
/// </summary>
/// <param name="message"></param>
/// <returns></returns>
/// <summary>
/// Tell the command to automatically stage files that have been modified and deleted, but new files you have not told Git about are not affected.
/// </summary>
/// <returns></returns>
/// <summary>
/// Do not create a commit, but show a list of paths that are to be committed, paths with local changes that will be left uncommitted and paths that are untracked.
/// </summary>
/// <returns></returns>
/// <summary>
/// be more verbose.
/// </summary>
/// <returns></returns>
/// <summary>
/// be more quiet.
/// </summary>
/// <returns></returns>
/// <summary>
/// Use the interactive patch selection interface to chose which changes to commit. See git-add[1] for details.
/// </summary>
/// <returns></returns>
/// <summary>
/// Take an existing commit object, and reuse the log message and the authorship information (including the timestamp) when creating the commit.
/// </summary>
/// <returns></returns>
/// <summary>
/// Like --reuse-message, but with --reedit-message the editor is invoked, so that the user can further edit the commit message.
/// </summary>
/// <returns></returns>
/// <summary>
/// Construct a commit message for use with rebase --autosquash. The commit message will be the subject line from the specified commit with a prefix of "fixup! ". See git-rebase[1] for details.
/// </summary>
/// <returns></returns>
/// <summary>
/// Take the commit message from the given file. Use - to read the message from the standard input.
/// </summary>
/// <returns></returns>
/// <summary>
/// Override the author date used in the commit.
/// </summary>
/// <param name="dateTime"></param>
/// <returns></returns>
/// <summary>
/// When editing the commit message, start the editor with the contents in the given file. The commit.template configuration variable is often used to give this option implicitly to the command.
/// </summary>
/// <returns></returns>
/// <summary>
/// Add Signed-off-by line by the committer at the end of the commit log message.
/// </summary>
/// <returns></returns>
/// <summary>
/// This option bypasses the pre-commit and commit-msg hooks. See also githooks[5].
/// </summary>
/// <returns></returns>
/// <summary>
/// Usually recording a commit that has the exact same tree as its sole parent commit is a mistake, and the command prevents you from making such a commit.
/// </summary>
/// <returns></returns>
/// <summary>
/// Like --allow-empty this command is primarily for use by foreign SCM interface scripts. It allows you to create a commit with an empty commit message without using plumbing commands
/// </summary>
/// <returns></returns>
/// <summary>
/// This option determines how the supplied commit message should be cleaned up before committing. The <mode> can be strip, whitespace, verbatim, scissors or default.
/// </summary>
/// <param name="mode"></param>
/// <returns></returns>
/// <summary>
/// Use the selected commit message without launching an editor. For example, git commit --amend --no-edit amends a commit without changing its commit message.
/// </summary>
/// <returns></returns>
/// <summary>
/// Replace the tip of the current branch by creating a new commit.
/// </summary>
/// <returns></returns>
/// <summary>
/// Bypass the post-rewrite hook.
/// </summary>
/// <returns></returns>
/// <summary>
/// Show untracked files.
/// </summary>
/// <returns></returns>
/// <summary>
/// When files are given on the command line, the command commits the contents of the named files, without recording the changes already staged. The contents of these files are also staged for the next commit on top of what have been staged before.
/// </summary>
/// <param name="file"></param>
/// <returns></returns>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Git\GitMergeTask.cs
/// <summary>
/// Be verbose.
/// </summary>
/// <returns></returns>
/// <summary>
/// Perform the merge and commit the result. This option can be used to override --no-commit.
/// </summary>
/// <returns></returns>
/// <summary>
/// With --no-commit perform the merge and stop just before creating a merge commit.
/// </summary>
/// <returns></returns>
/// <summary>
/// When the merge resolves as a fast-forward, only update the branch pointer, without creating a merge commit.
/// </summary>
/// <returns></returns>
/// <summary>
/// Create a merge commit even when the merge resolves as a fast-forward.
/// </summary>
/// <returns></returns>
/// <summary>
/// Refuse to merge and exit with a non-zero status unless the current HEAD is already up to date or the merge can be resolved as a fast-forward.
/// </summary>
/// <returns></returns>
/// <summary>
/// Show a diffstat at the end of the merge.
/// </summary>
/// <returns></returns>
/// <summary>
/// Produce the working tree and index state as if a real merge happened (except for the merge information), but do not actually make a commit, move the HEAD, or record.
/// </summary>
/// <returns></returns>
/// <summary>
/// Use the given merge strategy; can be supplied more than once to specify them in the order they should be tried.
/// </summary>
/// <param name="strategy"></param>
/// <returns></returns>
/// <summary>
/// Pass merge strategy specific option through to the merge strategy.
/// </summary>
/// <param name="option"></param>
/// <returns></returns>
/// <summary>
/// Verify that the tip commit of the side branch being merged is signed with a valid key, i.e. a key that has a valid uid: in the default trust model, this means the signing key has been signed by a trusted key.
/// </summary>
/// <returns></returns>
/// <summary>
/// Turn progress on explicitly. If neither is specified, progress is shown if standard error is connected to a terminal.
/// </summary>
/// <returns></returns>
/// <summary>
/// Turn progress off explicitly. If neither is specified, progress is shown if standard error is connected to a terminal.
/// </summary>
/// <returns></returns>
/// <summary>
/// By default, git merge command refuses to merge histories that do not share a common ancestor. This option can be used to override this safety when merging histories of two projects that started their lives independently.
/// </summary>
/// <returns></returns>
/// <summary>
/// Set the commit message to be used for the merge commit (in case one is created).
/// </summary>
/// <param name="message"></param>
/// <returns></returns>
/// <summary>
/// Read the commit message to be used for the merge commit (in case one is created).
/// </summary>
/// <returns></returns>
/// <summary>
/// Allow the rerere mechanism to update the index with the result of auto-conflict resolution if possible.
/// </summary>
/// <returns></returns>
/// <summary>
/// Silently overwrite ignored files from the merge result. This is the default behavior. Use --no-overwrite-ignore to abort.
/// </summary>
/// <returns></returns>
/// <summary>
/// Abort the current conflict resolution process, and try to reconstruct the pre-merge state.
/// </summary>
/// <returns></returns>
/// <summary>
/// Forget about the current merge in progress. Leave the index and the working tree as-is.
/// </summary>
/// <returns></returns>
/// <summary>
/// After a git merge stops due to conflicts you can conclude the merge by running git merge --continue.
/// </summary>
/// <returns></returns>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Git\GitPullTask.cs
/// <summary>
/// force progress reporting.
/// </summary>
/// <returns></returns>
/// <summary>
/// be more verbose.
/// </summary>
/// <returns></returns>
/// <summary>
/// be more quiet.
/// </summary>
/// <returns></returns>
/// <summary>
/// create a single commit instead of doing a merge.
/// </summary>
/// <returns></returns>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Git\GitPushTask.cs
/// <summary>
/// The "remote" repository that is destination of a push operation.
/// This parameter can be either a URL or the name of a remote.
/// </summary>
/// <param name="repository"></param>
/// <returns></returns>
/// <summary>
/// Specify what destination ref to update with what source object. See https://git-scm.com/docs/git-push for more info
/// </summary>
/// <param name="refSpec"></param>
/// <returns></returns>
/// <summary>
/// Be verbose.
/// </summary>
/// <returns></returns>
/// <summary>
/// be more quiet.
/// </summary>
/// <returns></returns>
/// <summary>
/// Do everything except actually send the updates.
/// </summary>
/// <returns></returns>
/// <summary>
/// force updates.
/// </summary>
/// <returns></returns>
/// <summary>
/// All refs under refs/tags are pushed.
/// </summary>
/// <returns></returns>
/// <summary>
/// Push all the refs that would be pushed without this option, and also push annotated tags in refs/tags that are missing from the remote but are pointing at commit-ish that are reachable from the refs being pushed.
/// </summary>
/// <returns></returns>
/// <summary>
/// For every branch that is up to date or successfully pushed, add upstream (tracking) reference, used by argument-less git-pull[1] and other commands.
/// </summary>
/// <returns></returns>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Git\GitRemoveFilesTask.cs
/// <summary>
/// Remove files from the index, or from the working tree and the index. git rm will not remove a file from just your working directory.
/// </summary>
/// <summary>
/// override the up-to-date check
/// </summary>
/// <returns></returns>
/// <summary>
/// be more quiet.
/// </summary>
/// <returns></returns>
/// <summary>
/// Do everything except actually send the updates.
/// </summary>
/// <returns></returns>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Git\GitSubmoduleTask.cs
/// <summary>
///     Submodule update command.
/// </summary>
/// <returns></returns>
/// <summary>
///     Add --init argument
/// </summary>
/// <returns></returns>
/// <summary>
///     Add --recursive argument
/// </summary>
/// <returns></returns>
/// <summary>
///     Add --remote argument
/// </summary>
/// <returns></returns>
/// <summary>
///     Add --merge argument.
/// </summary>
/// <returns></returns>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Git\GitTagTask.cs
/// <summary>
/// Task updates the index using the current content found in the working tree, to prepare the content staged for the next commit.
/// </summary>
/// <summary>
/// Delete tag(s).
/// </summary>
/// <returns></returns>
/// <summary>
/// annotated tag, needs a message.
/// </summary>
/// <returns></returns>
/// <summary>
/// tag message.
/// </summary>
/// <param name="message"></param>
/// <returns></returns>
/// <summary>
/// replace the tag if exists.
/// </summary>
/// <returns></returns>
/// <summary>
/// annotated and GPG-signed tag.
/// </summary>
/// <returns></returns>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Iis\AddWebSiteBindingTask.cs
//// See if this binding is already on some site
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Iis\ControlApplicationPoolAction.cs
/// <summary>
/// Start the application pool.
/// </summary>
/// <summary>
/// Stop the application pool.
/// </summary>
/// <summary>
/// Recycle the application pool.
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Iis\ControlAppPoolTask.cs
/*app pool already stopped*/);
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Iis\CreateApplicationPoolMode.cs
/// <summary>
/// The task should fail if the application pool already exists.
/// </summary>
/// <summary>
/// If the application pool already exists, it should be updated.
/// </summary>
/// <summary>
/// If the application pool already exists, the task should do nothing.
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Iis\CreateAppPoolTask.cs
// otherwise we should update the existing application pool
////serverManager.ApplicationPools.Add(appPoolToWorkOn);
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Iis\CreateWebApplicationMode.cs
/// <summary>
/// If the application already exists, the task should fail.
/// </summary>
/// <summary>
/// If the application already exists, it should be updated.
/// </summary>
/// <summary>
/// If the application already exists, the task should do nothing.
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Iis\CreateWebApplicationTask.cs
/// <summary>
/// Gets or sets the Name of the website that the web application is added too. By default it is "Default Web Site"
/// </summary>
//// otherwise we should update the existing virtual directory
////TODO update existing application
////ourApplication = application;
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Iis\CreateWebSiteTask.cs
/// <summary>
/// Name of the website
/// </summary>
/// <summary>
/// The binding protocol. Http or https.
/// </summary>
/// <summary>
/// Port of the web application
/// </summary>
/// <summary>
/// Physical path to application.
/// </summary>
/// <summary>
/// Creates or updated the web site.
/// </summary>
/// <param name="context">The task context</param>
/// <summary>
/// Validates Ii7CreateWebSiteTask properties.
/// </summary>
/// <summary>
/// Sets the binding protocol. Http or https.
/// </summary>
/// <param name="value">The binding protocol. Supported values http and https.</param>
/// <returns>new instance of <see cref="CreateWebsiteProtocol"/></returns>
/// <summary>
/// Sets the port of the web site.
/// </summary>
/// <param name="value">The port</param>
/// <returns>New instance of <see cref="CreateWebsitePhysicalPath"/></returns>
/// <summary>
/// Sets the physical path to the web site.
/// </summary>
/// <param name="value">The physical path.</param>
/// <returns>The iI7CreateWebSiteTask.</returns>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Iis\DeleteAppPoolTask.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Iis\IisTaskBase.cs
/// <summary>
/// Adds mime types.
/// </summary>
/// <param name="config">Config of the website or web application</param>
/// <param name="mimeTypes">List of mime types to be added</param>
/// <summary>
/// Checks if web site exists in the iis.
/// </summary>
/// <param name="serverManager">the server manager.</param>
/// <param name="siteName">Site name to be checked if it exists.</param>
/// <returns>True if web site exists in iis.</returns>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Iis\MimeType.cs
/// <summary>
/// Gets or sets File extension of the mime type.
/// </summary>
/// <summary>
/// Gets or sets The Mime type.
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Iis\Interfaces\IAddWebSiteBindingTask.cs
/// <summary>
/// Add's binding.
/// </summary>
/// <param name="protocol">Binding protocol</param>
/// <returns></returns>
/// <summary>
/// Web site name binding is added to.
/// </summary>
/// <param name="name"></param>
/// <returns></returns>
/// <summary>
/// Certificate store.
/// </summary>
/// <param name="store"></param>
/// <returns></returns>
/// <summary>
/// Hash of the certificate.
/// </summary>
/// <param name="hash"></param>
/// <returns></returns>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Iis\Interfaces\IControlAppPoolTask.cs
/// <summary>
/// If <c>true</c> task fails with exception if application pool doesn't exists. Otherwise not.
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Iis\Interfaces\ICreateAppPoolTask.cs
/// <summary>
/// Classic managed pipelinemode will be used instead of integrated managed pipelinemode.
/// </summary>
/// <returns></returns>
/// <summary>
/// Set the Managed runtime version(.net CLR version). By default latest is used.
/// </summary>
/// <param name="managedRuntimeVersion"></param>
/// <returns></returns>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Iis\Interfaces\ICreateWebApplicationTask.cs
/// <summary>
/// Application Name.
/// </summary>
/// <param name="applicationName"></param>
/// <returns></returns>
/// <summary>
///     Name of the application pool application will be controoler by.
/// </summary>
/// <summary>
///     Web site name web application will be added to.
/// </summary>
/// <summary>
///     Mime types to be added.
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Iis\Interfaces\ICreateWebSiteTask.cs
/// <summary>
/// set the web site name.
/// </summary>
/// <param name="siteName">The web site name.</param>
/// <returns>The <see cref="CreateWebsiteTask.CreateWebsiteBindingProtocol"/> instance.</returns>
/// <summary>
/// Set Website mode.
/// </summary>
/// <param name="value">The website Mode <see cref="CreateWebApplicationMode"/> </param>
/// <returns>The Iis7CreateWebSiteTask.</returns>
/// <summary>
/// Set web site application pool name.
/// </summary>
/// <param name="applicationPool">The application pool name</param>
/// <returns>The  Iis7CreateWebSiteTask.</returns>
/// <summary>
///  Add MimeType. Can be used multiple times.
/// </summary>
/// <param name="mimeType">The mime type</param>
/// <returns>The  Iis7CreateWebSiteTask.</returns>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Iis\Interfaces\IDeleteAppPoolTask.cs
/// <summary>
/// Set's name of the appication pool to be deleted.
/// </summary>
/// <param name="appPoolName"></param>
/// <returns></returns>
/// <summary>
/// task fails with exception if application pool doesn't exists. Otherwise not.
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Linux\LinuxExtensions.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Linux\SourceDestinationPair.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Linux\SshCommandTask.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Linux\SshCopyTask.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Linux\SystemCtlTask.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\MsSql\SqlCmdTask.cs
/// <summary>
/// Execute SQL script file with sqlcmd.exe
/// </summary>
/// <summary>
/// Add another full path to the sqlcmd executable. First one that is found will be used.
/// </summary>
/// <param name="fullPath"></param>
/// <returns></returns>
/// <summary>
/// Return output of the sqlcmd command.
/// </summary>
/// <returns></returns>
/// <summary>
/// Return output of the sqlcmd command.
/// </summary>
/// <returns></returns>
/// <summary>
/// Connect to the specified SQL server
/// </summary>
/// <param name="server"></param>
/// <param name="userName"></param>
/// <param name="password"></param>
/// <returns></returns>
/// <summary>
/// Connect to the specified SQL server
/// </summary>
/// <param name="server"></param>
/// <param name="userName"></param>
/// <param name="password"></param>
/// <param name="database"></param>
/// <returns></returns>
/// <summary>
/// Connect to server.
/// </summary>
/// <param name="server"></param>
/// <returns></returns>
/// <summary>
/// Use userName when connecting to the DB.
/// </summary>
/// <param name="userName"></param>
/// <returns></returns>
/// <summary>
/// Use password when connecting to the DB.
/// </summary>
/// <param name="password"></param>
/// <returns></returns>
/// <summary>
/// Use trusted connection when connecting to the DB.
/// </summary>
/// <returns></returns>
/// <summary>
/// Use database name.
/// </summary>
/// <param name="database"></param>
/// <returns></returns>
/// <summary>
/// Force that file is in UTF8 encoding. Skip auto detection.
/// </summary>
/// <returns></returns>
/// <inheritdoc />
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\NetCore\DotnetBuildTask.cs
/// <summary>
/// Publishes a .NET project for deployment (including the runtime).
/// </summary>
/// <summary>
/// The MSBuild project file to build. If a project file is not specified, MSBuild searches the current working directory for a file that has a file extension that ends in `proj` and uses that file.
/// </summary>
/// <param name="projectName"></param>
/// <returns></returns>
/// <summary>
/// Compiles for a specific framework. The framework must be defined in the project file.
/// </summary>
/// <param name="framework"></param>
/// <returns></returns>
/// <summary>
/// Target runtime to build for. The default is to build a portable application.
/// </summary>
/// <param name="runtime"></param>
/// <returns></returns>
/// <summary>
/// Configuration to use for building the project. Default for most projects is  "Debug".
/// </summary>
/// <param name="configuration"></param>
/// <returns></returns>
/// <summary>
///  Disables incremental build.
/// </summary>
/// <returns></returns>
/// <summary>
///  Set this flag to ignore project to project references and only restore the root project
/// </summary>
/// <returns></returns>
/// <summary>
/// Set this flag to force all dependencies to be resolved even if the last restore was successful. This is equivalent to deleting project.assets.json.
/// </summary>
/// <returns></returns>
/// <summary>
/// Set the verbosity level of the command.
/// </summary>
/// <param name="verbosity"></param>
/// <returns></returns>
/// <summary>
/// Set the --version-suffix. Set the value of the $(VersionSuffix) property to use when building the project.
/// </summary>
/// <param name="suffix">version suffix e.g. -alpha</param>
/// <returns></returns>
/// <summary>
/// Set version
/// </summary>
/// <param name="version">Version prefix e.g. 1.0.0</param>
/// <param name="versionSuffix">Version suffix e.g. -alpha</param>
/// <returns></returns>
/// <summary>
/// Set information version
/// </summary>
/// <param name="version"></param>
/// <returns></returns>
/// <summary>
/// Set assembly version
/// </summary>
/// <param name="version"></param>
/// <returns></returns>
/// <summary>
/// Set file version
/// </summary>
/// <param name="version"></param>
/// <returns></returns>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\NetCore\DotnetCleanTask.cs
/// <summary>
/// The MSBuild project file to publish. If a project file is not specified, MSBuild searches the current working directory for a file that has a file extension that ends in `proj` and uses that file.
/// </summary>
/// <param name="projectName"></param>
/// <returns></returns>
/// <summary>
/// Clean a specific framework.
/// </summary>
/// <param name="framework"></param>
/// <returns></returns>
/// <summary>
/// Clean a specific configuration.
/// </summary>
/// <param name="configuration"></param>
/// <returns></returns>
/// <summary>
/// Set the verbosity level of the command.
/// </summary>
/// <param name="verbosity"></param>
/// <returns></returns>
/// <summary>
/// Task deletes added directory.
/// </summary>
/// <param name="directory">The directory do delete</param>
/// <param name="recreate">If <c>true</c> directory is recreated. Otherwise deleted.</param>
/// <returns></returns>
/// <summary>
/// If set output directory specified in <see cref="BuildProps.OutputDir"/> is deleted and recreated.
/// </summary>
/// <returns></returns>
/// <summary>
/// If set Build directory specified in <see cref="BuildProps.BuildDir"/> is deleted and recreated.
/// </summary>
/// <returns></returns>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\NetCore\DotNetConfigurationBuilderTask.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\NetCore\DotnetMsBuildTask.cs
/// <summary>
/// Build these targets in this project. Use a semicolon or a comma to separate multiple targets
/// </summary>
/// <param name="target"></param>
/// <returns></returns>
/// <summary>
/// Set or override these project-level properties. "n" is the property name, and "v" is the property value. Example: -property:WarningLevel=2;OutDir=bin\Debug\
/// </summary>
/// <param name="property"></param>
/// <returns></returns>
/// <summary>
/// Specifies the maximum number of concurrent processes to build with. If the switch is not used, the default value used is 1.
/// </summary>
/// <param name="count"></param>
/// <returns></returns>
/// <summary>
/// The version of the MSBuild Toolset (tasks, targets, etc.) to use during build. This version will override the versions specified by individual projects.
/// </summary>
/// <param name="toolsVersion"></param>
/// <returns></returns>
/// <summary>
/// Display this amount of information in the event log. The available verbosity levels are: q[uiet], m[inimal], n[ormal], d[etailed], and diag[nostic].
/// </summary>
/// <param name="verbosity"></param>
/// <returns></returns>
/// <summary>
/// Parameters to console logger.
/// </summary>
/// <param name="consoleLoggerParameters"></param>
/// <returns></returns>
/// <summary>
/// Disable the default console logger and do not log events to the console.
/// </summary>
/// <param name="property"></param>
/// <returns></returns>
/// <summary>
///  Logs the build output to a file. By default the file is in the current directory and named "msbuild[n].log".
/// </summary>
/// <param name="fileLogger"></param>
/// <returns></returns>
/// <summary>
/// Provides any extra parameters for file loggers.
/// Example: -fileLoggerParameters:LogFile=MyLog.log;Append;Verbosity=diagnostic;Encoding=UTF-8
/// </summary>
/// <param name="fileLoggerParameters"></param>
/// <returns></returns>
/// <summary>
/// Use this logger to log events from MSBuild, attaching a different logger instance to each node. To specify multiple loggers, specify each logger separately.
/// </summary>
/// <param name="distributedLogger"></param>
/// <returns></returns>
/// <summary>
/// -distributedLogger:"central logger"*"forwarding logger" Logs the build output to multiple log files, one log file per MSBuild node. The initial location for these files is the current directory.
/// </summary>
/// <param name="property"></param>
/// <returns></returns>
/// <summary>
///  Use this logger to log events from MSBuild. To specify multiple loggers, specify each logger separately.
/// </summary>
/// <param name="logger"></param>
/// <returns></returns>
/// <summary>
/// -binaryLogger[:[LogFile=]output.binlog[;ProjectImports={None,Embed,ZipFile}]] Serializes all build events to a compressed binary file.
/// </summary>
/// <param name="binaryLogger"></param>
/// <returns></returns>
/// <summary>
/// List of warning codes to treats as low importance messages. Use a semicolon or a comma to separate multiple extensions.
/// Example: -warnAsMessage:MSB3026
/// </summary>
/// <param name="code"></param>
/// <returns></returns>
/// <summary>
/// List of extensions to ignore when determining which project file to build. Use a semicolon or a comma to separate multiple extensions.
/// Example: -ignoreProjectExtensions:.sln
/// </summary>
/// <param name="extension"></param>
/// <returns></returns>
/// <summary>
/// Enables or Disables the reuse of MSBuild nodes.
/// </summary>
/// <param name="nodeReuse"></param>
/// <returns></returns>
/// <summary>
/// Creates a single, aggregated project file by inlining all the files that would be imported during a build, with their boundaries marked.
/// This can be useful for figuring out what files are being imported and from where, and what they will contribute to the build.
/// </summary>
/// <param name="file"></param>
/// <returns></returns>
/// <summary>
/// Shows detailed information at the end of the build about the configurations built and how they were scheduled to nodes.
/// </summary>
/// <param name="property"></param>
/// <returns></returns>
/// <summary>
/// Runs a target named Restore prior to building other targets and ensures the build for these targets uses the latest restored build logic.
/// This is useful when your project tree requires packages to be restored before it can be built.
/// </summary>
/// <param name="property"></param>
/// <returns></returns>
/// <summary>
///  Set or override these project-level properties only during restore and do not use properties specified with the -property argument.
///  Example: -restoreProperty:IsRestore=true;MyProperty=value
/// </summary>
/// <param name="restoreProperty"></param>
/// <returns></returns>
/// <summary>
///  Profiles MSBuild evaluation and writes the result to the specified file.
/// If the extension of the specified file is '.md', the result is generated in markdown format. Otherwise, a tab separated file is produced.
/// </summary>
/// <param name="file"></param>
/// <returns></returns>
/// <summary>
/// Indicates that actions in the build are allowed to interact with the user.  Do not use this argument in an automated scenario where interactivity is not expected.
/// </summary>
/// <param name="property"></param>
/// <returns></returns>
/// <summary>
/// Causes MSBuild to build each project in isolation.
/// </summary>
/// <param name="property"></param>
/// <returns></returns>
/// <summary>
///  Semicolon separated list of input cache files that MSBuild will read build results from.
/// </summary>
/// <param name="cacheFile"></param>
/// <returns></returns>
/// <summary>
/// Output cache file where MSBuild will write the contents of its build result caches at the end of the build. Setting this also turns on isolated builds (-isolate).
/// </summary>
/// <param name="cacheFile"></param>
/// <returns></returns>
/// <summary>
/// Causes MSBuild to construct and build a project graph.
/// </summary>
/// <param name="property"></param>
/// <returns></returns>
/// <summary>
/// Do not auto-include any MSBuild.rsp files.
/// </summary>
/// <param name="property"></param>
/// <returns></returns>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\NetCore\DotnetNugetPushTask.cs
/// <summary>
/// Pushes the nuget package to nuget server.
/// </summary>
/// <param name="packagePath">Path to nupkg</param>
/// <summary>
///  Specifies the server URL (source).
/// </summary>
/// <param name="serverUrl"></param>
/// <returns></returns>
/// <summary>
///  Specifies the symbol server URL(symbol source). If not specified, nuget.smbsrc.net is used when pushing to nuget.org.
/// </summary>
/// <param name="symbolServerUrl"></param>
/// <returns></returns>
/// <summary>
/// If applied pushing packages to nuget repository is disabled on local build.
/// </summary>
/// <returns></returns>
/// <summary>
/// The API key for the server.
/// </summary>
/// <param name="apiKey"></param>
/// <returns></returns>
/// <summary>
/// The API key for the symbol server.
/// </summary>
/// <param name="symbolApiKey"></param>
/// <returns></returns>
/// <summary>
/// Specifies the timeout for pushing to a server in seconds. Defaults to 300 seconds (5 minutes). Specifying 0 (zero seconds) applies the default value.
/// </summary>
/// <param name="timeoutInSeconds"></param>
/// <returns></returns>
/// <summary>
/// If a symbols package exists, it will not be pushed to a symbols server.
/// </summary>
/// <returns></returns>
/// <summary>
/// Disable buffering when pushing to an HTTP(S) server to decrease memory usage.
/// </summary>
/// <returns></returns>
/// <summary>
///  Does not append "api/v2/package" to the source URL.
/// </summary>
/// <returns></returns>
/// <summary>
/// Allow the command to block and require manual action for operations like authentication.
/// </summary>
/// <returns></returns>
// do not push new packages from a local build
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\NetCore\DotnetPackTask.cs
/// <summary>
/// The project to pack, defaults to the project file in the current directory. Can be a path to any project file
/// </summary>
/// <param name="projectName"></param>
/// <returns></returns>
/// <summary>
/// The target runtime to restore packages for.
/// </summary>
/// <param name="runtime"></param>
/// <returns></returns>
/// <summary>
/// Directory in which to place built packages.
/// </summary>
/// <param name="directory"></param>
/// <returns></returns>
/// <summary>
/// Configuration to use for building the project. Default for most projects is  "Debug".
/// </summary>
/// <param name="configuration"></param>
/// <returns></returns>
/// <summary>
/// Include packages with symbols in addition to regular packages in output directory.
/// </summary>
/// <returns></returns>
/// <summary>
/// Include PDBs and source files. Source files go into the src folder in the resulting nuget package.
/// </summary>
/// <returns></returns>
/// <summary>
///  Defines the value for the $(VersionSuffix) property in the project.
/// </summary>
/// <param name="versionSufix"></param>
/// <returns></returns>
/// <summary>
///  Defines the value for the $(VersionSuffix) property in the project.
/// </summary>
/// <param name="versionSufix"></param>
/// <returns></returns>
/// <summary>
/// Set's package version
/// </summary>
/// <param name="version">Version prefix e.g. 1.0.0</param>
/// <param name="versionSuffix">Version suffix e.g. -alpha</param>
/// <returns></returns>
/// <summary>
///  Skip building the project prior to packing. By default, the project will be built.
/// </summary>
/// <returns></returns>
/// <summary>
/// Set the serviceable flag in the package. For more information, please see https://aka.ms/nupkgservicing.
/// </summary>
/// <returns></returns>
/// <summary>
///  Set this flag to ignore project to project references and only restore the root project
/// </summary>
/// <returns></returns>
/// <summary>
/// Set this flag to force all dependencies to be resolved even if the last restore was successful. This is equivalent to deleting project.assets.json.
/// </summary>
/// <returns></returns>
/// <summary>
/// Set the verbosity level of the command.
/// </summary>
/// <param name="verbosity"></param>
/// <returns></returns>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\NetCore\DotnetPublishTask.cs
/// <summary>
/// Publishes a .NET project for deployment (including the runtime).
/// </summary>
/// <summary>
/// The MSBuild project file to publish. If a project file is not specified, MSBuild searches the current working directory for a file that has a file extension that ends in `proj` and uses that file.
/// </summary>
/// <param name="projectName"></param>
/// <returns></returns>
/// <summary>
/// Target framework to publish for. The target framework has to be specified in the project file.
/// </summary>
/// <param name="framework"></param>
/// <returns></returns>
/// <summary>
/// Target runtime to publish for. The default is to build a portable application.
/// </summary>
/// <param name="runtime"></param>
/// <returns></returns>
/// <summary>
/// Output directory in which to place the published artifacts.
/// </summary>
/// <param name="directory"></param>
/// <returns></returns>
/// <summary>
/// Configuration to use for building the project. Default for most projects is  "Debug".
/// </summary>
/// <param name="configuration"></param>
/// <returns></returns>
/// <summary>
/// Set the --version-suffix. Set the value of the $(VersionSuffix) property to use when building the project.
/// </summary>
/// <param name="suffix">version suffix e.g. -alpha</param>
/// <returns></returns>
/// <summary>
/// Set version
/// </summary>
/// <param name="version">Version prefix e.g. 1.0.0</param>
/// <param name="versionSuffix">Version suffix e.g. -alpha</param>
/// <returns></returns>
/// <summary>
/// Set information version
/// </summary>
/// <param name="version"></param>
/// <returns></returns>
/// <summary>
/// Set assembly version
/// </summary>
/// <param name="version"></param>
/// <returns></returns>
/// <summary>
/// Set file version
/// </summary>
/// <param name="version"></param>
/// <returns></returns>
/// <summary>
///  Set this flag to ignore project to project references and only restore the root project
/// </summary>
/// <returns></returns>
/// <summary>
/// Set this flag to force all dependencies to be resolved even if the last restore was successful. This is equivalent to deleting project.assets.json.
/// </summary>
/// <returns></returns>
/// <summary>
/// Set the verbosity level of the command.
/// </summary>
/// <param name="verbosity"></param>
/// <returns></returns>
/// <summary>
///  Publish the .NET Core runtime with your application so the runtime doesn't need to be installed on the target machine.
/// </summary>
/// <returns></returns>
/// <summary>
///  Do not build the project before publishing. Implies --no-restore.
/// </summary>
/// <returns></returns>
/// <summary>
///  Do not restore the project before building.
/// </summary>
/// <returns></returns>
/// <summary>
/// Publish application as a single executable for specified platform. Available only for .netcoreapp 3.0 and above.
/// </summary>
/// <returns></returns>
/// <summary>
/// Reduces the size of the executable to a great extent and create a trimmed self-contained single executable by removing unused dlls. Available only for .netcoreapp 3.0 and above.
/// </summary>
/// <returns></returns>
/// <summary>
/// Increases self-contained single executable app startup time. Available only in.netcoreapp 3.0 and above.
/// </summary>
/// <returns></returns>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\NetCore\DotnetRestoreTask.cs
/// <summary>
/// Add a NuGet package source to use during the restore.
/// </summary>
/// <param name="source"></param>
/// <returns></returns>
/// <summary>
/// </summary>
/// <param name="runtime"></param>
/// <returns></returns>
/// <summary>
/// Directory to install packages in.
/// </summary>
/// <param name="directory"></param>
/// <returns></returns>
/// <summary>
/// Disables restoring multiple projects in parallel.
/// </summary>
/// <returns></returns>
/// <summary>
/// </summary>
/// <param name="configFile"></param>
/// <returns></returns>
/// <summary>
/// Do not cache packages and http requests.
/// </summary>
/// <returns></returns>
/// <summary>
/// Treat package source failures as warnings.
/// </summary>
/// <returns></returns>
/// <summary>
///  Set this flag to ignore project to project references and only restore the root project
/// </summary>
/// <returns></returns>
/// <summary>
/// Set this flag to force all dependencies to be resolved even if the last restore was successful. This is equivalent to deleting project.assets.json.
/// </summary>
/// <returns></returns>
/// <summary>
/// Set the verbosity level of the command.
/// </summary>
/// <param name="verbosity"></param>
/// <returns></returns>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\NetCore\DotnetTestTask.cs
/// <summary>
/// The MSBuild project file to publish. If a project file is not specified, MSBuild searches the current working directory for a file that has a file extension that ends in `proj` and uses that file.
/// </summary>
/// <param name="projectName"></param>
/// <returns></returns>
/// <summary>
/// Looks for test binaries for a specific framework
/// </summary>
/// <param name="framework"></param>
/// <returns></returns>
/// <summary>
/// Directory in which to find the binaries to be run
/// </summary>
/// <param name="directory"></param>
/// <returns></returns>
/// <summary>
/// Settings to use when running tests.
/// </summary>
/// <param name="settingFilePath"></param>
/// <returns></returns>
/// <summary>
/// Use custom adapters from the given path in the test run.
/// </summary>
/// <param name="pathToAdapter"></param>
/// <returns></returns>
/// <summary>
/// Run tests that match the given expression.
/// Examples:
/// Run tests with priority set to 1: --filter "Priority = 1"
/// Run a test with the specified full name: --filter "FullyQualifiedName=Namespace.ClassName.MethodName"
/// Run tests that contain the specified name: --filter "FullyQualifiedName~Namespace.Class"
/// More info on filtering support: https://aka.ms/vstest-filtering
/// </summary>
/// <param name="filterExpression"></param>
/// <returns></returns>
/// <summary>
/// Configuration to use for building the project. Default for most projects is  "Debug".
/// </summary>
/// <param name="configuration"></param>
/// <returns></returns>
/// <summary>
/// Enable verbose logs for test platform. Logs are written to the provided file.
/// </summary>
/// <param name="pathToFile"></param>
/// <returns></returns>
/// <summary>
/// Do not build project before testing.
/// </summary>
/// <returns></returns>
/// <summary>
/// Set the verbosity level of the command.
/// </summary>
/// <param name="verbosity"></param>
/// <returns></returns>
/// <summary>
///  The logger to use for test results. See https://aka.ms/vstest-report for more information on logger arguments.
/// </summary>
/// <param name="logger"></param>
/// <returns></returns>
/// <summary>
/// The directory where the test results are going to be placed. The specified directory will be created if it does not exist.
/// </summary>
/// <param name="path"></param>
/// <returns></returns>
/// <summary>
/// Run the tests in blame mode. This option is helpful in isolating a problematic test causing the test host to crash.
/// </summary>
/// <returns></returns>
/// <summary>
///  Do not restore the project before building.
/// </summary>
/// <returns></returns>
/// <summary>
/// List the discovered tests instead of running the tests.
/// </summary>
/// <returns></returns>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\NetCore\DotnetToolInstall.cs
/// <summary>
/// Installs a tool for use on the command line.
/// </summary>
/// <param name="nugetPackageId">NuGet Package Id of the tool to install.</param>
/// <summary>
/// Version of the tool package in NuGet.
/// </summary>
/// <param name="version">The version</param>
/// <returns></returns>
/// <summary>
///  Install user wide as global tool.
/// </summary>
/// <returns></returns>
/// <summary>
/// Location where the tool will be installed.
/// </summary>
/// <param name="path"></param>
/// <returns></returns>
/// <summary>
/// The NuGet configuration file to use.
/// </summary>
/// <param name="pathToFile"></param>
/// <returns></returns>
/// <summary>
/// Adds an additional NuGet package source to use during installation.
/// </summary>
/// <param name="source"></param>
/// <returns></returns>
/// <summary>
/// The target framework to install the tool for.
/// </summary>
/// <param name="framework"></param>
/// <returns></returns>
/// <summary>
/// Set the verbosity level of the command.
/// </summary>
/// <param name="verbosity"></param>
/// <returns></returns>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\NetCore\DotnetToolUninstall.cs
/// <summary>
/// Uninstalls a tool.
/// </summary>
/// <param name="nugetPackageId">NuGet Package Id of the tool to uninstall.</param>
/// <summary>
/// Uninstall user wide.
/// </summary>
/// <returns></returns>
/// <summary>
/// Location where the tool was previously installed.
/// </summary>
/// <param name="path"></param>
/// <returns></returns>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\NetCore\DotnetToolUpdate.cs
/// <summary>
/// Installs a tool for use on the command line.
/// </summary>
/// <param name="nugetPackageId">NuGet Package Id of the tool to install.</param>
/// <summary>
/// Update user wide as global tool.
/// </summary>
/// <returns></returns>
/// <summary>
/// Location where the tool will be installed.
/// </summary>
/// <param name="path"></param>
/// <returns></returns>
/// <summary>
/// The NuGet configuration file to use.
/// </summary>
/// <param name="pathToFile"></param>
/// <returns></returns>
/// <summary>
/// Adds an additional NuGet package source to use during installation.
/// </summary>
/// <param name="source"></param>
/// <returns></returns>
/// <summary>
/// The target framework to install the tool for.
/// </summary>
/// <param name="framework"></param>
/// <returns></returns>
/// <summary>
/// Set the verbosity level of the command.
/// </summary>
/// <param name="verbosity"></param>
/// <returns></returns>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\NetCore\ExecuteDotnetTask.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\NetCore\ExecuteDotnetTaskBase.cs
/// <summary>
/// Dotnet command to be executed.
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\NetCore\StandardDotnetCommands.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Nuget\DownloadNugetPackageInUserRepositoryTask.cs
//www.nuget.org/api/v2/";
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Nuget\FindNuGetPackageInUserRepositoryTask.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Nuget\NugetCmdLineTask.cs
/// <summary>
/// Verbosity
/// </summary>
/// <summary>
/// The API key for the server
/// </summary>
/// <summary>
/// Path to the nuget.exe
/// </summary>
/// <param name="fullFilePath"></param>
/// <returns></returns>
/// <inheritdoc />
// ReSharper disable once PossibleNullReferenceException
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Nuget\PublishNugetPackageTask.cs
/// <summary>
/// nuget base path argument to be added.
/// </summary>
/// <summary>
/// Nuget server url package will be pushed to.
/// </summary>
/// <summary>
/// If applied pushing packages to nuget repository is disabled on local build.
/// </summary>
/// <returns></returns>
/// <summary>
/// Nuget server Api key.
/// </summary>
/// <param name="apiKey"></param>
/// <summary>
/// Name of the enviroment variable to use to get api key.
/// </summary>
/// <param name="variableName"></param>
/// <summary>
/// Path to the file that contains api key.
/// </summary>
/// <param name="fileName"></param>
// package it
// do not push new packages from a local build
// publish the package file
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Packaging\PackageTask.cs
/// <summary>
/// Add's specified directory to the package.
/// </summary>
/// <param name="sourceDirectoryPath">Path of the source directory to be copied.</param>
/// <param name="destinationDirectory">Name of the directory that the source directory will be copied to.</param>
/// <param name="recursive">If <c>true</c> subfolders in the source directory are also added. Otherwise not.</param>
/// <returns></returns>
/// <summary>
/// Add's directory to the package.
/// </summary>
/// <param name="sourceDirectoryPath">Path of the source directory to be copied.</param>
/// <param name="destinationDirectory">Name of the directory that the source directory will be copied to.</param>
/// <param name="recursive">If <c>true</c> subfolders in the source directory are also added. Otherwise not.</param>
/// <param name="fileFilters"></param>
/// <returns></returns>
/// <summary>
/// Add's directory to the package.
/// </summary>
/// <param name="sourceDirectoryPath">Path of the source directory to be copied.</param>
/// <param name="destinationDirectory">Name of the directory that the source directory will be copied to.</param>
/// <param name="filterOptions">Apply filtering options for directories and files inside directories.</param>
/// <returns></returns>
/// <summary>
/// Adds file to the package
/// </summary>
/// <param name="sourceFilePath">Path of the tile to be added to the package.</param>
/// <param name="destinationDirectory">Name of the directory that the source file will be copied to.</param>
/// <returns></returns>
/// <summary>
/// If <c>true</c> zip is optimized by removing duplicated files. When unzipped those files are copied to original locations.
/// For unzipping Unzip task has to be used.
/// </summary>
/// <returns></returns>
/// <summary>
/// Disables logging of filtered out files and files to be copied / zipped.
/// </summary>
/// <returns></returns>
/// <summary>
/// Zip's the package
/// </summary>
/// <param name="zipFileName">File name of the zip package.</param>
/// <param name="addVersionPostfix">if <c>true</c> build version number is added to zip file as postfix</param>
/// <param name="versionFeildCount">Number of version fields to be added.</param>
/// <returns></returns>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Packaging\SourcePackagingInfo.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Packaging\SourceType.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Packaging\UnzipTask.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Process\Argument.cs
/// <summary>
/// If <c>true</c> exception is thrown if value is not present, otherwise not.
/// </summary>
/// <summary>
/// If <c><true</c> argument is masked when logging to console, otherwise not.
/// </summary>
/// <summary>
/// Key value separator.
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Process\ExternalProcessTaskBase.cs
// ReSharper disable once InconsistentNaming
// Element should begin with upper-case letter
// Element should begin with upper-case letter
/// <summary>
/// Gets or sets working folder.
/// </summary>
/// <value>
/// Working folder.
/// </value>
/// <summary>
/// Executable path.
/// </summary>
/// <summary>
/// Do not log to console if possible.
/// </summary>
/// <inheritdoc />
/// <inheritdoc />
/// <summary>
/// Adds argument with corresponding value. eg --Framework .net462 where --Framework is key and .net462 is value.
/// If value is null or empty task fails on execution. if key is null both argument's are ignored.
/// </summary>
/// <param name="argKey"></param>
/// <param name="argValue"></param>
/// <param name="maskValue">If <c>true</c> value is masked.</param>
/// <returns></returns>
/// <inheritdoc />
/// <inheritdoc />
/// <inheritdoc />
/// <summary>
/// Clear all arguments for command line executable.
/// </summary>
/// <returns></returns>
/// <inheritdoc />
/// <summary>
/// Full file path to the executable.
/// </summary>
/// <param name="executableFullFilePath"></param>
/// <returns></returns>
/// <summary>
/// Captures the output of the executable.
/// </summary>
/// <summary>
/// Captures the error output of the executable.
/// </summary>
/// <summary>
/// Get the output produced by the executable.
/// </summary>
/// <returns></returns>
/// <summary>
/// Get the error output produced by the executable.
/// </summary>
/// <returns></returns>
/// <inheritdoc />
/// <summary>
/// Action taken before executing external process.
/// </summary>
/// <param name="context"></param>
/// <param name="runProgramTask"></param>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Process\IExternalProcess.cs
/// <summary>
/// Set the full file path of the executable file.
/// </summary>
/// <param name="executableFullFilePath"></param>
/// <returns></returns>
/// <summary>
/// Add argument for executable.
/// </summary>
/// <param name="arg"></param>
/// <param name="maskArg">If <c>true</c> argument is masked. Otherwise not.</param>
/// <returns></returns>
/// <summary>
/// Add arguments for executable.
/// </summary>
/// <param name="args"></param>
/// <returns></returns>
/// <summary>
/// Clear all arguments for the command line.
/// </summary>
/// <returns></returns>
/// <summary>
/// Set the working folder for the executable.
/// </summary>
/// <param name="folder"></param>
/// <returns></returns>
/// <summary>
/// Do not log output to the console.
/// </summary>
/// <returns></returns>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Process\IRunProgramTask.cs
/// <inheritdoc cref="ITaskOfT{T, TTask}" />
/// <summary>
/// Add argument for executable.
/// </summary>
/// <param name="arg"></param>
/// <param name="maskArg">If <c>true</c> argument is masked. Otherwise not.</param>
/// <returns></returns>
/// <summary>
/// Add arguments for executable.
/// </summary>
/// <param name="args"></param>
/// <returns></returns>
/// <summary>
///     Capture output of the running program.
/// </summary>
/// <returns></returns>
/// <summary>
///     Capture error output of the running program.
/// </summary>
/// <returns></returns>
/// <summary>
///     Gets the whole output of the executed command.
/// </summary>
/// <returns></returns>
/// <summary>
///     Gets the whole error output of the executed command.
/// </summary>
/// <returns></returns>
/// <summary>
/// When applied task execution info is not logged.
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Process\RunProgramTask.cs
/// <inheritdoc />
/// <inheritdoc />
/// <summary>
/// Add's argument to the program.
/// </summary>
/// <param name="arg"></param>
/// <param name="maskArg"></param>
/// <returns></returns>
/// <summary>
/// Add's arguments to the program.
/// </summary>
/// <inheritdoc />
/// <summary>
/// Working folder of the program.
/// </summary>
/// <param name="folder"></param>
/// <returns></returns>
/// <inheritdoc />
/// <inheritdoc />
/// <inheritdoc />
/// <summary>
/// Get the output produced by executable.
/// </summary>
/// <returns></returns>
/// <inheritdoc />
/// <summary>
/// Get the error output produced by executable.
/// </summary>
/// <returns></returns>
/// <inheritdoc />
/// <inheritdoc />
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Solution\CleanOutputTask.cs
/// <summary>
/// Task deletes added directory
/// </summary>
/// <param name="directory">The directory do delete</param>
/// <param name="recreate">If <c>true</c> directory is recreated. Otherwise deleted.</param>
/// <returns></returns>
/// <summary>
/// If set output directory specified in <see cref="BuildProps.OutputDir"/> is deleted and recreated.
/// </summary>
/// <returns></returns>
/// <summary>
/// If set Build directory specified in <see cref="BuildProps.BuildDir"/> is deleted and recreated.
/// </summary>
/// <returns></returns>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Solution\CompileSolutionTask.cs
/// <inheritdoc />
/// <summary>
/// Task compiles solution with MsBuild.
/// </summary>
/// <summary>
/// Task compiles specified solution with MSBuild.
/// </summary>
/// <param name="environmentService"></param>
/// <inheritdoc />
/// <summary>
/// Task compiles specified solution with MSBuild.
/// </summary>
/// <param name="buildConfiguration"></param>
/// <param name="environmentService"></param>
/// <param name="solutionFileName"></param>
/// <summary>
/// Msbuild version to be used for build.
/// </summary>
/// <summary>
/// Should we use solution directory for working folder
/// </summary>
/// <summary>
/// Solution filename to build.
/// </summary>
/// <param name="solutionFileName"></param>
/// <returns></returns>
/// <summary>
/// The build configuration solution will be build.
/// </summary>
/// <param name="buildConfiguration"></param>
/// <returns></returns>
/// <summary>
/// Add's Platform argument to MSBuild. If not set CPUAny is used as default.
/// </summary>
/// <param name="platform">The platform.</param>
/// <returns></returns>
/// <summary>
/// Add location to msbuild. Full msbuild.exe file location must be specified. If msbuild is found at specified location msbuild wild not be searched at default locations it will use one specified here.
/// If more than 1 path is specified first msbuild occurrence will be used. Otherwise if it is not found it will search for it in default locations.
/// </summary>
/// <summary>
/// Configuration parameter won't be passed to msbuild command.
/// </summary>
/// <returns></returns>
/// <summary>
/// Sets the max CPU variable for msbuild
/// </summary>
/// <summary>
/// Sets the logging level of console logger. See msbuild help for more details.
/// </summary>
/// <param name="level">Logging level (quiet, minimal,normal, detailed, and diagnostic)</param>
/// <returns></returns>
/// <summary>
/// Sets the logging level of console logger. See msbuild help for more details.
/// </summary>
/// <param name="level">Logging level (quiet, minimal,normal, detailed, and diagnostic)</param>
/// <returns></returns>
/// <summary>
/// Add console logger option(clp). See msbuild for more details.
/// </summary>
/// <param name="option">Option to set to the /clp parameter (NoSummary)</param>
/// <returns></returns>
/// <summary>
/// Add console logger option(clp). See msbuild for more details.
/// </summary>
/// <param name="option">Option to set to the /clp parameter (NoSummary)</param>
/// <returns></returns>
/// <summary>
/// Add'sTarget argument to MSBuild.
/// </summary>
/// <summary>
/// Msbuild version to be used for build.
/// </summary>
/// <summary>
/// Solution directory is used for working directory.
/// </summary>
/// <returns></returns>
/// <inheritdoc />
////if (_toolsVersion != null)
////{
////    msbuildPath = ToolLocationHelper.GetPathToBuildToolsFile("msbuild.exe", _toolsVersion.ToString());
////    if (msbuildPath != null)
////    {
////        return msbuildPath;
////    }
////    var highestToolVersion = ToolLocationHelper.CurrentToolsVersion;
////    context.LogInfo(string.Format("Requested MSBuild tools version {0} not found, using a higher version {1}", _toolsVersion, highestToolVersion));
////    msbuildPath = ToolLocationHelper.GetPathToBuildToolsFile("msbuild.exe", highestToolVersion);
////    if (msbuildPath != null)
////    {
////        return msbuildPath;
////    }
////}
////else
////{
////    var highestToolVersion = ToolLocationHelper.CurrentToolsVersion;
////    context.LogInfo(string.Format("Since MSBuild tools version was not explicity specified, using the highest MSBuild tools version found ({0})", highestToolVersion));
////    msbuildPath = ToolLocationHelper.GetPathToBuildToolsFile("msbuild.exe", highestToolVersion);
////    if (msbuildPath != null)
////    {
////        return msbuildPath;
////    }
////}
////context.LogInfo("MsBuild not found with tool location helper. Falling back to registry locator.");
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Solution\LoadSolutionTask.cs
/// <summary>
/// Task load's solution to <see cref="BuildPropertiesSession"/> solution file name is retieved from <see cref="BuildPropertiesSession"/>
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Solution\StandardConsoleLoggerParameters.cs
/// <summary>
/// Show time spent in tasks, targets and projects.
/// </summary>
/// <summary>
/// Show error and warning summary at the end.
/// </summary>
/// <summary>
/// Don't show error and warning summary at the end.
/// </summary>
/// <summary>
/// Show only errors.
/// </summary>
/// <summary>
/// Show only warnings.
/// </summary>
/// <summary>
/// Don't show list of items and properties at the start of each project build.
/// </summary>
/// <summary>
/// Show TaskCommandLineEvent messages
/// </summary>
/// <summary>
/// Display the Timestamp as a prefix to any message.
/// </summary>
/// <summary>
/// Show eventId for started events, finished events, and messages
/// </summary>
/// <summary>
/// Does not align the text to the size of the console buffer
/// </summary>
/// <summary>
/// Use the default console colors for all logging messages.
/// </summary>
/// <summary>
/// Disable the multiprocessor logging style of output when running in non-multiprocessor mode.
/// </summary>
/// <summary>
/// Enable the multiprocessor logging style even when running in non-multiprocessor mode. This logging style is on by default.
/// </summary>
/// <summary>
/// Use ANSI console colors even if console does not support it
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Solution\VSSolutionBrowsing\StandardVerbosityLevelParameters.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Solution\VSSolutionBrowsing\VSProject.cs
/// <summary>
/// Holds information about a VisualStudio project.
/// </summary>
//schemas.microsoft.com/developer/msbuild/2003";
/// <summary>
/// Gets or sets the <see cref="VSProjectDetails"/> object holding the detailed information about this VisualStudio
/// project.
/// </summary>
/// <value>The <see cref="VSProjectDetails"/> object .</value>
/// <summary>
/// Gets the path to the directory where the project file is located.
/// </summary>
/// <value>The project directory path.</value>
/// <summary>
/// Gets the name of the project file. The file name is relative to the solution's directory.
/// </summary>
/// <remarks>The full path to the project file can be retrieved using the <see cref="ProjectFileNameFull"/>
/// property.</remarks>
/// <value>The name of the project file.</value>
/// <summary>
/// Gets the full path to the project file.
/// </summary>
/// <value>The full path to the project file.</value>
/// <summary>
/// Gets the output path for a specified VisualStudio project. The output path is relative
/// to the directory where the project file is located.
/// </summary>
/// <param name="buildConfiguration">The build configuration.</param>
/// <returns>
/// The output path or <c>null</c> if the project is not compatible.
/// </returns>
/// <exception cref="ArgumentException">The method could not extract the data from the project file.</exception>
// skip non-C# projects
// find the project configuration
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Solution\VSSolutionBrowsing\VSProjectConfiguration.cs
/// <summary>
/// Contains information of compile configuration.
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Solution\VSSolutionBrowsing\VSProjectDetails.cs
/// <summary>
/// Represents a VisualStudio project.
/// </summary>
/// <summary>
/// Gets a read-only collection of project configurations.
/// </summary>
/// <value>A read-only collection of project configurations.</value>
/// <summary>
/// Gets a read-only collection of all .cs files in the solution.
/// </summary>
/// <value>A read-only collection of all the .cs files in the solution.</value>
/// <summary>
/// Gets a read-only collection of project properties.
/// </summary>
/// <value>A read-only collection of project properties.</value>
/// <summary>
/// Loads the specified project file name.
/// </summary>
/// <param name="projectFileName">Name of the project file.</param>
/// <returns>VSProject class containing project information.</returns>
/// <summary>
/// Finds the VisualStudio project configuration specified by a condition.
/// </summary>
/// <param name="condition">The condition which identifies the configuration
///  (example: " '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ").</param>
/// <returns><see cref="VSProjectConfiguration"/> object if found; <c>null</c> if no configuration was found that meets the
/// specified condition.</returns>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Solution\VSSolutionBrowsing\VSProjectInfo.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Solution\VSSolutionBrowsing\VSProjectItem.cs
/// <summary>
/// Holds information about content items inside of a VisualStudio project.
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Solution\VSSolutionBrowsing\VSProjectType.cs
/// <summary>
/// Contains information about a specific VisualStudio project type.
/// </summary>
/// <summary>
/// Initializes a new instance of the <see cref="VSProjectType"/> class.
/// </summary>
/// <param name="projectTypeGuid">The project type GUID.</param>
/// <param name="projectTypeName">Name of the project type.</param>
/// <summary>
/// Gets the <see cref="VSProjectType"/> for C# projects.
/// </summary>
/// <value>The <see cref="VSProjectType"/> for C# projects.</value>
/// <summary>
/// Gets the <see cref="VSProjectType"/> for solution folders.
/// </summary>
/// <value>The <see cref="VSProjectType"/> for solution folders.</value>
/// <summary>
/// Gets the project type GUID.
/// </summary>
/// <value>The project type GUID.</value>
/// <summary>
/// Gets the name of the project type.
/// </summary>
/// <value>The name of the project type.</value>
/// <summary>
/// Compares the two objects.
/// </summary>
/// <param name="left">The left object.</param>
/// <param name="right">The right object.</param>
/// <returns>The result of the operator.</returns>
/// <summary>
/// Compares the two objects.
/// </summary>
/// <param name="left">The left object.</param>
/// <param name="right">The right object.</param>
/// <returns>The result of the operator.</returns>
/// <summary>
///     Indicates whether the current object is equal to another object of the same type.
/// </summary>
/// <returns>
/// true if the current object is equal to the <paramref name="other" /> parameter; otherwise, false.
/// </returns>
/// <param name="other">
///     An object to compare with this object.
/// </param>
/// <summary>
/// Determines whether the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:System.Object"/>.
/// </summary>
/// <param name="obj">The <see cref="T:System.Object"/> to compare with the current <see cref="T:System.Object"/>.</param>
/// <returns>
/// true if the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:System.Object"/>; otherwise, false.
/// </returns>
/// <exception cref="T:System.NullReferenceException">
/// The <paramref name="obj"/> parameter is null.
/// </exception>
/// <summary>
/// Serves as a hash function for a particular type.
/// </summary>
/// <returns>
/// A hash code for the current <see cref="T:System.Object"/>.
/// </returns>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Solution\VSSolutionBrowsing\VSSolution.cs
/// <summary>
/// Represents a VisualStudio solution.
/// </summary>
/// <summary>
/// Gets a read-only collection of <see cref="VSProject"/> objects for all of the projects in the solution.
/// </summary>
/// <value>A read-only collection of <see cref="VSProject"/> objects .</value>
/// <summary>
/// Loads the specified VisualStudio solution file and returns a <see cref="VSSolution"/> representing the solution.
/// </summary>
/// <param name="fileName">The name of the solution file.</param>
/// <returns>A <see cref="VSSolution"/> representing the solution.</returns>
// exit the loop when 'Global' section appears
// skip any solution properties
// if nothing matches, we have a problem
/// <summary>
/// Find projects by glob pattern.
/// </summary>
/// <param name="projectName"></param>
/// <returns></returns>
/// <exception cref="ArgumentException"></exception>
/// <summary>
/// Filter projects by name with glob pattern.
/// </summary>
/// <param name="projectName"></param>
/// <returns></returns>
/// <exception cref="ArgumentException"></exception>
/// <summary>
/// Performs the specified action on each project of the solution.
/// </summary>
/// <param name="action">The action delegate to perform on each project.</param>
/// <summary>
/// Loads the VisualStudio project files and fills the project data into <see cref="VSProject.ProjectDetails"/>
/// properties for each of the project in the solution.
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Solution\VSSolutionBrowsing\VSSolutionFileParser.cs
////if (log.IsDebugEnabled)
////    log.DebugFormat ("Read line ({0}): {1}", parserContext.LineCount, line);
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Solution\VSSolutionBrowsing\VSSolutionFilesInfo.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Testing\CoverageReportTask.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Testing\CoverletTask.cs
/// <summary>
/// Path to the test runner application.
/// </summary>
/// <param name="target"></param>
/// <returns></returns>
/// <summary>
/// Arguments to be passed to the test runner.
/// </summary>
/// <param name="args"></param>
/// <returns></returns>
/// <summary>
/// Output of the generated coverage report.
/// </summary>
/// <param name="output"></param>
/// <returns></returns>
/// <summary>
///  Sets the verbosity level of the command. Allowed values are quiet, minimal, normal, detailed.
/// </summary>
/// <param name="verbosity"></param>
/// <returns></returns>
/// <summary>
/// Format of the generated coverage report.
/// </summary>
/// <param name="format"></param>
/// <returns></returns>
/// <summary>
/// Exits with error if the coverage % is below value.
/// </summary>
/// <param name="treshold"></param>
/// <returns></returns>
/// <summary>
/// Coverage type to apply the threshold to.
/// </summary>
/// <param name="tresholdType"></param>
/// <returns></returns>
/// <summary>
/// Coverage statistic used to enforce the threshold value.
/// </summary>
/// <param name="tresholdStat"></param>
/// <returns></returns>
/// <summary>
///  Filter expressions to exclude specific modules and types.
/// </summary>
/// <param name="exclude"></param>
/// <returns></returns>
/// <summary>
/// Filter expressions to include specific modules and types.
/// </summary>
/// <param name="include"></param>
/// <returns></returns>
/// <summary>
/// Include directories containing additional assemblies to be instrumented.
/// </summary>
/// <param name="directory"></param>
/// <returns></returns>
/// <summary>
/// Glob patterns specifying source files to exclude.
/// </summary>
/// <param name="file"></param>
/// <returns></returns>
/// <summary>
/// Attributes to exclude from code coverage.
/// </summary>
/// <param name="exclude"></param>
/// <returns></returns>
/// <summary>
/// Specifies whether to report code coverage of the test assembly.
/// </summary>
/// <returns></returns>
/// <summary>
/// Specifies whether to limit code coverage hit reporting to a single hit for each location.
/// </summary>
/// <returns></returns>
/// <summary>
/// Path to existing coverage result to merge.
/// </summary>
/// <param name="path"></param>
/// <returns></returns>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Testing\NunitCmdOptions.cs
/// <summary>
/// No nunit options are added.
/// </summary>
/// <summary>
/// Default options for nunit V2 are added.
/// </summary>
/// <summary>
/// Default options for nunit v3 are added.
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Testing\NunitTask.cs
/// <inheritdoc />
/// <summary>
/// Run NUnit tests with NUnit console runner.
/// </summary>
/// <summary>
/// unit test working directory.
/// </summary>
/// <summary>
///  test categories that will be included/excluded in tests.
/// </summary>
/// <summary>
/// .NET framework NUnit console should run under.
/// </summary>
/// <summary>
/// Initializes a new instance of the <see cref="NUnitTask"/> class.
/// </summary>
/// <param name="nunitConsoleFileName">full file path to nunit console runner</param>
/// <param name="projectNames">Unit test project name.</param>
/// <summary>
/// Gets a list of assemblies to be tested
/// </summary>
/// <summary>
/// Initializes NunitTask with default command line options for nunit V2.
/// </summary>
/// <param name="projectName">Unit test project name.</param>
/// <returns>New instance of nunit task</returns>
/// <summary>
/// Initializes NunitTask with default command line options for nunit V3.
/// </summary>
/// <param name="projectName">Unit test project name.</param>
/// <returns>New instance of nunit task</returns>
/// <summary>
/// Adds verbose options
/// </summary>
/// <returns></returns>
/// <summary>
/// Excludes category from test. Can be ussed multiple times. Supported only in nunit v3 and above. For v2 use <see cref="AddNunitCommandLineOption"/>
/// </summary>
/// <param name="category">The Categorie to be excluded</param>
/// <returns>The NunitTask</returns>
/// <summary>
/// Include category in test. Can be ussed multiple times. Supported only in nunit v3 and above. For v2 use <see cref="AddNunitCommandLineOption"/>
/// </summary>
/// <param name="category">The category to be included</param>
/// <returns>The NunitTask</returns>
/// <summary>
/// Sets the .NET framework NUnit console should run under. Supported only in nunit v3 and above. For v2 use <see cref="AddNunitCommandLineOption"/>
/// </summary>
/// <param name="framework">Targeted .net framework</param>
/// <returns>The NunitTask</returns>
/// <summary>
/// Full file Path to the nunit console runner.
/// </summary>
/// <param name="nunitConsoleFilePath"></param>
/// <returns></returns>
/// <summary>
/// Build configuration the tests fill be run under.
/// </summary>
/// <param name="configruation"></param>
/// <returns></returns>
/// <summary>
///  Add nunit command line option. Can be used multiple times.
/// </summary>
/// <param name="nunitCmdOption">nunit command line option to be added.</param>
/// <returns>The NunitTask</returns>
/// <summary>
/// Full file path to nunit console runner. If not set task tries to get path from  context build propertie <see cref="BuildProps.NUnitConsolePath"/>
/// </summary>
/// <param name="fullFilePath"></param>
/// <returns></returns>
/// <inheritdoc />
/// <summary>
/// Abstract method defining the actual work for a task.
/// </summary>
/// <remarks>This method has to be implemented by the inheriting task.</remarks>
/// <param name="context">The script execution environment.</param>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Testing\NUnitWithDotCoverTask.cs
/// <summary>
///     Runs NUnit tests in combination with dotCover test coverage analysis.
/// </summary>
/// <remarks>
///     <para>
///         The task uses dotCover command line tool to run NUnit command line runner
///         which executes tests for the specified assembly or C# project.
///     </para>
///     <para>
///         The task uses <see cref="DownloadNugetPackageInUserRepositoryTask" /> to download dotCover command
///         line tool into the running user's local application data directory. If the tool is already there,
///         the task skips downloading it.
///     </para>
/// </remarks>
/// <summary>
///     Initializes a new instance of the <see cref="NUnitWithDotCoverTask" /> class that
///     will execute tests in the specified <see cref="_testAssemblyFileNames" /> list of test assemblies using
///     the specified NUnit test runner executable.
/// </summary>
/// <param name="nunitRunnerFileName">The file path to NUnit's console runner.</param>
/// <param name="testAssemblyFileNames">The list of of file paths to the assemblies containing unit tests.</param>
/// <summary>
///     Gets the path to the generated dotCover test coverage XML report.
/// </summary>
/// <seealso cref="CoverageHtmlReportFileName" />
/// <summary>
///     Gets the path to the generated dotCover test coverage HTML report.
/// </summary>
/// <seealso cref="CoverageXmlReportFileName" />
/// <summary>
///     If Set build will fail if the test coverage of any
///     class is below <see cref="MinRequiredCoverage" />.
/// </summary>
/// <remarks>
///     If <see cref="FailBuildOnViolations" />
///     is not set the task will only print out information about violating classes
///     without failing the build.
///     The default value is <c>true</c>.
/// </remarks>
/// <summary>
///     Sets the minimum required test coverage percentage.
///     If any class has the test coverage below this value and <see cref="FailBuildOnViolations" />
///     is set to <c>true</c>, the task will fail the build.
/// </summary>
/// <remarks>
///     The default value is 75%.
/// </remarks>
/// <summary>
///     Sets the command line options for NUnit console runner (as a single string).
/// </summary>
/// <remarks>
///     The default options are <c>/labels /nodots</c>.
/// </remarks>
/// <summary>
///     Sets the dotCover filters that will be passed to dotCover's <c>/Filters</c> command line parameter.
/// </summary>
/// <remarks>
///     The default filters are set to <c>-:module=*.Tests;-:class=*Contract;-:class=*Contract`*</c>.
///     For more information, visit
///     <a href="https://www.jetbrains.com/dotcover/help/dotCover__Console_Runner_Commands.html">here</a>.
/// </remarks>
/// <seealso cref="DotCoverAttributeFilters" />
/// <summary>
///     Sets the dotCover attribute filters that will be passed to dotCover's <c>/AttributeFilters</c> command line
///     parameter.
///     Attribute filters tell dotCover to skip the analysis of any code that has the specified attribute(s) applied.
/// </summary>
/// <remarks>
///     The default attribute filters are set to <c>"*.ExcludeFromCodeCoverageAttribute"</c>.
///     For more information, visit
///     <a href="https://www.jetbrains.com/dotcover/help/dotCover__Console_Runner_Commands.html">here</a>.
/// </remarks>
/// <seealso cref="DotCoverFilters" />
//.AddArgument("/LogFile={0}", Path.Combine(buildDir, "dotCover-log.xml"))
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Testing\OpenCoverTask.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Testing\OpenCoverToCoberturaTask.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Testing\UnitTestProvider.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Testing\Xunit\ReportMode.cs
/// <summary>
/// forces AppVeyor CI mode (normally auto-detected)
/// </summary>
/// <summary>
/// show progress messages in JSON format
/// </summary>
/// <summary>
/// do not show progress messages
/// </summary>
/// <summary>
/// forces TeamCity mode (normally auto-detected)
/// </summary>
/// <summary>
/// show verbose progress messages
/// </summary>
/// <summary>
/// Auto detect.
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Testing\Xunit\ResultFormat.cs
/// <summary>
/// output results to xUnit.net v2 XML file
/// </summary>
/// <summary>
/// output results to xUnit.net v1 XML file
/// </summary>
/// <summary>
/// output results to HTML file
/// </summary>
/// <summary>
/// output results to NUnit v2.5 XML file
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Testing\Xunit\XunitTask.cs
/// <summary>
/// unit test working directory.
/// </summary>
/// <summary>
/// Gets a list of assemblies to be tested
/// </summary>
/// <summary>
/// Build configuration the tests fill be run under.
/// </summary>
/// <param name="configruation"></param>
/// <returns></returns>
/// <summary>
/// Full file path to the xunit console runner. If not set task tries to get path from context build propertie <see cref="BuildProps.XUnitConsolePath"/>
/// </summary>
/// <param name="fullFilePath"></param>
/// <returns></returns>
/// <summary>
/// convert skipped tests into failures
/// </summary>
/// <returns></returns>
/// <summary>
/// stop on first test failure
/// </summary>
/// <returns></returns>
/// <summary>
/// only run tests with matching name/value traits
/// if specified more than once, acts as an OR operation
/// </summary>
/// <param name="name"></param>
/// <returns></returns>
/// <summary>
/// do not run tests with matching name/value traits
/// if specified more than once, acts as an AND operation
/// </summary>
/// <param name="name"></param>
/// <returns></returns>
/// <summary>
/// Result formats: (optional, choose one or more)
/// </summary>
/// <param name="format"></param>
/// <param name="fileName"></param>
/// <returns></returns>
/// <summary>
/// Add custom xunit option. For example '-noshadow'. See xunit console runner for available options.
/// </summary>
/// <param name="option"></param>
/// <returns></returns>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Text\EvaluateXmlTask.cs
/// <summary>
/// Evaluates XPath expressions on a specified XML file and stores results in <seealso cref="ITaskContext"/> properties.
/// </summary>
/// <summary>
/// Internal task execution code.
/// </summary>
/// <param name="context">The script execution environment.</param>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Text\MergeConfigurationTask.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Text\ReplaceTokensTask.cs
/// <inheritdoc />
/// <inheritdoc />
/// <summary>
/// Sets the encoding of the source file. Default is UTF8
/// </summary>
/// <summary>
/// Sets the encoding of the destination file. Default is UTF8.
/// </summary>
/// <param name="encoding"></param>
/// <returns></returns>
/// <summary>
/// Use token prefix and suffix for key. {token}{key}{token} will be replaced with key's value.
/// </summary>
/// <param name="token"></param>
/// <returns></returns>
/// <summary>
/// Sets the destination filename. If not specified source file will be replaced.
/// </summary>
/// <param name="file"></param>
/// <returns></returns>
/// <summary>
/// Replace old value with the new one.
/// </summary>
/// <param name="oldValue"></param>
/// <param name="newValue"></param>
/// <returns></returns>
/// <summary>
/// Replace old value with the new one.
/// </summary>
/// <param name="tokens"></param>
/// <returns></returns>
/// <summary>
/// Create new file with the source file name and appended with .tmp.
/// </summary>
/// <returns></returns>
/// <inheritdoc />
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Text\T4TemplateTask.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Text\UpdateJsonFileTask.cs
/// <summary>
/// Set the fileName of the new json file. If not set same file is updated.
/// </summary>
/// <param name="fullFilePath"></param>
/// <returns></returns>
/// <summary>
///  Updates json property/element with specified value,
/// </summary>
/// <param name="path">Json path to the element to be updated</param>
/// <param name="value">New value of the json element</param>
/// <returns></returns>
/// <summary>
///  Updates json property/element with specified value,
/// </summary>
/// <param name="path">Json path to the element to be updated</param>
/// <param name="value">New value of the json element</param>
/// <returns></returns>
/// <summary>
///  Updates json property/element with specified value,
/// </summary>
/// <param name="path">Json path to the element to be updated</param>
/// <param name="value">New value of the json element</param>
/// <returns></returns>
/// <summary>
///  Updates json property/element with specified value,
/// </summary>
/// <param name="path">Json path to the element to be updated</param>
/// <param name="value">New value of the json element</param>
/// <returns></returns>
/// <summary>
///  Updates json property/element with specified value,
/// </summary>
/// <param name="path">Json path to the element to be updated</param>
/// <param name="value">New value of the json element</param>
/// <returns></returns>
/// <summary>
///  Updates json property/element with specified value,
/// </summary>
/// <param name="path">Json path to the element to be updated</param>
/// <param name="value">New value of the json element</param>
/// <returns></returns>
/// <summary>
///  Updates json property/element with specified value,
/// </summary>
/// <param name="path">Json path to the element to be updated</param>
/// <param name="value">New value of the json element</param>
/// <returns></returns>
/// <summary>
/// If <c>true</c> task fails with exception if any of the properties to be updated are not found.
/// </summary>
/// <param name="fail"></param>
/// <returns></returns>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Text\UpdateXmlFileTask.cs
/// <summary>
///     Updates an XML file using the specified update commands.
/// </summary>
/// <summary>
///     Initializes a new instance of the <see cref="UpdateXmlFileTask" /> class with
///     the specified XML file to be updated.
/// </summary>
/// <param name="fileName">The fileName of the XML file.</param>
/// <summary>
///     Adds an "update" command to the list of commands to be performed on the XML file.
/// </summary>
/// <param name="xpath">XPath for the nodes which should be updated.</param>
/// <param name="value">New value of the selected nodes.</param>
/// <summary>
///     Adds an "delete" command to the list of commands to be performed on the XML file.
/// </summary>
/// <param name="xpath">XPath for the nodes which should be deleted.</param>
/// <summary>
///     Adds an "add or update" command to the list of commands to be performed on the XML file. Depending on if the xml
///     element exists or not.
/// </summary>
/// <param name="xpath"></param>
/// <param name="value"></param>
/// <summary>
///     Adds an "add" command to the list of commands to be performed on the XML file.
/// </summary>
/// <param name="rootXpath">XPath for the root node on which an addition should be performed.</param>
/// <param name="childNodeName">Name of the new child node.</param>
/// <param name="value">The value for the new child node.</param>
/// <summary>
///     Adds an "add" command to the list of commands to be performed on the XML file.
/// </summary>
/// <param name="rootXpath">XPath for the root node on which an addition should be performed.</param>
/// <param name="childNodeName">Name of the new child node.</param>
/// <summary>
///     Adds an "add" command to the list of commands to be performed on the XML file.
/// </summary>
/// <param name="rootXpath">XPath for the root node on which an addition should be performed.</param>
/// <param name="childNodeName">Name of the new child node.</param>
/// <param name="attributes">Attributes to be added.</param>
/// <summary>
///     Method defining the actual work for a task.
/// </summary>
/// <param name="context">The script execution environment.</param>
/// <returns></returns>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Text\VisitXmlFileTask.cs
/// <summary>
/// Runs XPath queries on the specified XML file and provides an interface for visiting each query result.
/// </summary>
/// <summary>
/// Initializes a new instance of the <see cref="VisitXmlFileTask"/> class with the specified
/// XML file to be analyzed.
/// </summary>
/// <param name="xmlFileName">
/// File name of the XML file to be queried.
/// </param>
/// <summary>
/// Adds a visitor to be used for querying a specific XPath.
/// </summary>
/// <param name="xpath">XPath to be queried.</param>
/// <param name="visitorFunc">The function that should be called on each XML node found by the query.</param>
/// <returns>This same instance of the <see cref="VisitXmlFileTask"/>.</returns>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Utils\ExecutePowerShellScriptTask.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Utils\ServiceControlTask.cs
/// <summary>
/// Control windows service with sc.exe command.
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Utils\ServiceControlTaskBase.cs
/// <summary>
/// Base class for <see cref="ServiceControlTask" />
/// </summary>
/// <typeparam name="TTask"></typeparam>
/// <inheritdoc />
/// <summary>
/// Control services on another machine.
/// </summary>
/// <param name="server">Machine to control. It must be in \\ServerName format.</param>
/// <returns></returns>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Utils\ServiceCreateTask.cs
/// <summary>
/// Creates a service entry in the registry and Service Database.
/// </summary>
/// <summary>
/// Set start mode of the service.
/// </summary>
/// <param name="start"></param>
/// <returns></returns>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Utils\ServiceStartMode.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Utils\SleepTask.cs
/// <inheritdoc />
/// <summary>
/// Sleep task. Just wait for specified period of time.
/// </summary>
/// <summary>
/// Constructs new <see cref="SleepTask"/>
/// </summary>
/// <param name="delay">Delay in milliseconds</param>
/// <summary>
/// Constructs new <see cref="SleepTask"/>
/// </summary>
/// <param name="delay">Amount of time to sleep.</param>
/// <inheritdoc />
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Utils\StandardServiceControlCommands.cs
/// <summary>
/// Starts a windows service.
/// </summary>
/// <summary>
/// Sends a STOP request to a windows service.
/// </summary>
/// <summary>
/// Creates a windows service.
/// </summary>
/// <summary>
/// Deletes a windows service.
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Versioning\BuildVersion.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Versioning\FetchBuildVersionFromFileTask.cs
/// <summary>
/// Removes prefix from version.
/// For example if u write version in file like so: ## 1.0.0.0 specify '##' as prefix to remove.
/// </summary>
/// <param name="prefix"></param>
/// <returns></returns>
/// <summary>
/// When specified version allows to have suffix. Suffix must contain whitespace.
/// For example 1.0.0.0 (28.1.2019)
/// </summary>
/// <returns></returns>
/// <summary>
/// When set task does not store Version information to session <see cref="BuildProps.BuildVersion"/>
/// </summary>
/// <returns></returns>
/// <summary>
/// File name where project version will be retrieved from. If not set one of the default file names is used.
/// Defaults: Changelog.md, ReleaseNotes.md, ReleaseNotes.txt, {ProductId from session}.ProjectVersion.md, {ProductId from session}.ProjectVersion.txt
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Versioning\FetchVersionFromExternalSourceTask.cs
/// <summary>
/// Fetches revision number from given enviroment variable if it exists
/// </summary>
/// <param name="envName">Name of the enviroment variable</param>
/// <returns></returns>
/// <summary>
/// Ignores fetching of build number and revision number from build systems that this task supports by default.
/// </summary>
/// <returns></returns>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Versioning\GenerateCommonAssemblyInfoTask.cs
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Versioning\GitVersion.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Versioning\GitVersionOutput.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Versioning\GitVersionTask.cs
/// <summary>
///  The directory containing .git. If not defined current directory is used. (Must be first argument).
/// </summary>
/// <param name="path"></param>
/// <returns></returns>
/// <summary>
/// Runs GitVersion with additional diagnostic information (requires git.exe to be installed)
/// </summary>
/// <returns></returns>
/// <summary>
/// Determines the output to the console. Can be either 'json' or 'buildserver', will default to 'json'.
/// </summary>
/// <param name="output"></param>
/// <returns></returns>
/// <summary>
/// Used in conjuntion with /output json, will output just a particular variable.
/// eg /output json /showvariable SemVer - will output `1.2.3+beta.4`
/// </summary>
/// <param name="variable"></param>
/// <returns></returns>
/// <summary>
/// Path to logfile.
/// </summary>
/// <param name="path"></param>
/// <returns></returns>
/// <summary>
/// Outputs the effective GitVersion config (defaults + custom from GitVersion.yml) in yaml format.
/// </summary>
/// <returns></returns>
/// <summary>
/// Overrides GitVersion config values inline (semicolon-separated key value pairs e.g. /overrideconfig tag-prefix=Foo)
/// </summary>
/// <param name="configs"></param>
/// <returns></returns>
/// <summary>
///  Bypasses the cache, result will not be written to the cache.
/// </summary>
/// <returns></returns>
/// <summary>
///  Will recursively search for all 'AssemblyInfo.cs' files in the git repo and update them.
/// </summary>
/// <returns></returns>
/// <summary>
/// Specify name of AssemblyInfo file. Can also /updateAssemblyInfo GlobalAssemblyInfo.cs as a shorthand
/// </summary>
/// <param name="fileName"></param>
/// <returns></returns>
/// <summary>
///    If the assembly info file specified with /updateassemblyinfo or /updateassemblyinfofilename is not found,
/// it be created with these attributes: AssemblyFileVersion, AssemblyVersion and AssemblyInformationalVersion
/// </summary>
/// <returns></returns>
/// <summary>
/// Url to remote git repository.
/// </summary>
/// <param name="url"></param>
/// <returns></returns>
/// <summary>
/// Name of the branch to use on the remote repository, must be used in combination with /url.
/// </summary>
/// <param name="branch"></param>
/// <returns></returns>
/// <summary>
/// Username in case authentication is required.
/// </summary>
/// <param name="username"></param>
/// <returns></returns>
/// <summary>
/// Password in case authentication is required.
/// </summary>
/// <param name="password"></param>
/// <returns></returns>
/// <summary>
/// The commit id to check. If not specified, the latest available commit on the specified branch will be used.
/// </summary>
/// <param name="commitId"></param>
/// <returns></returns>
/// <summary>
///  By default dynamic repositories will be cloned to %tmp%. Use this switch to override
/// </summary>
/// <param name="location"></param>
/// <returns></returns>
/// <summary>
///  Disables 'git fetch' during version calculation. Might cause GitVersion to not calculate your version as expected.
/// </summary>
/// <returns></returns>
/// <summary>
/// Executes target executable making GitVersion variables available as environmental variables.
/// </summary>
/// <param name="executable"></param>
/// <returns></returns>
/// <summary>
/// Arguments for the executable specified by /exec.
/// </summary>
/// <param name="arguments"></param>
/// <returns></returns>
/// <summary>
///  Build a msbuild file, GitVersion variables will be passed as msbuild properties
/// </summary>
/// <param name="file"></param>
/// <returns></returns>
/// <summary>
/// Additional arguments to pass to msbuild.
/// </summary>
/// <param name="arguments"></param>
/// <returns></returns>
/// <summary>
/// Set Verbosity level (debug, info, warn, error, none). Default is info
/// </summary>
/// <param name="verbosity"></param>
/// <returns></returns>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Versioning\IFetchBuildVersionTask.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore\Tasks\Versioning\UpdateNetCoreVersionTask.cs
/// <summary>
/// Use fixed version instead of fetching one from <see cref="IBuildPropertiesSession"/> build property named: <see cref="BuildProps.BuildVersion"/>
/// </summary>
/// <param name="version"></param>
/// <returns></returns>
/// <summary>
/// Set version field count in csproj Version property. Default is 3
/// </summary>
/// <param name="versionFieldCount"></param>
/// <returns></returns>
/// <summary>
/// If applied PackageVersion property is added/updated in csproj.
/// </summary>
/// <param name="versionFieldCount">version field count in csproj PackageVersion property. Default is 3</param>
/// <returns></returns>
/// <summary>
/// Use fixed version instead of fetching one from <see cref="IBuildPropertiesSession"/> build property named: <see cref="BuildProps.BuildVersion"/>
/// </summary>
/// <param name="version"></param>
/// <returns></returns>
/// <summary>
/// Adds additional properties to be updated with the version. Only for xproj.
/// </summary>
/// <param name="args"></param>
/// <returns></returns>
/// <summary>
/// Adds Project (json/cproj) files to be updated.
/// </summary>
/// <param name="files"></param>
/// <returns></returns>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore.Analyzers\FlubuCloreAnalyzerCodeFixProvider.cs
// See https://github.com/dotnet/roslyn/blob/master/docs/analyzers/FixAllProvider.md for more information on Fix All Providers
// TODO: Replace the following code with your own analysis, generating a CodeAction for each fix to suggest
// Find the type declaration identified by the diagnostic.
// Register a code action that will invoke the fix.
// Compute new uppercase name.
// Get the symbol representing the type to be renamed.
// Produce a new solution that has all references to that type renamed, including the declaration.
// Return the new solution with the now-uppercase type name.
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore.Analyzers\FromArgAnalyzer.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore.Analyzers\TargetParameterAnalyzer.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore.Analyzers.Tests\FromArgAnalyzerUnitTests.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore.Analyzers.Tests\TargetParameterAnalyzerUnitTests.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore.Analyzers.Tests\Helpers\CodeFixVerifier.Helper.cs
/// <summary>
/// Diagnostic Producer class with extra methods dealing with applying codefixes
/// All methods are static
/// </summary>
/// <summary>
/// Apply the inputted CodeAction to the inputted document.
/// Meant to be used to apply codefixes.
/// </summary>
/// <param name="document">The Document to apply the fix on</param>
/// <param name="codeAction">A CodeAction that will be applied to the Document.</param>
/// <returns>A Document with the changes from the CodeAction</returns>
/// <summary>
/// Compare two collections of Diagnostics,and return a list of any new diagnostics that appear only in the second collection.
/// Note: Considers Diagnostics to be the same if they have the same Ids.  In the case of multiple diagnostics with the same Id in a row,
/// this method may not necessarily return the new one.
/// </summary>
/// <param name="diagnostics">The Diagnostics that existed in the code before the CodeFix was applied</param>
/// <param name="newDiagnostics">The Diagnostics that exist in the code after the CodeFix was applied</param>
/// <returns>A list of Diagnostics that only surfaced in the code after the CodeFix was applied</returns>
/// <summary>
/// Get the existing compiler diagnostics on the inputted document.
/// </summary>
/// <param name="document">The Document to run the compiler diagnostic analyzers on</param>
/// <returns>The compiler diagnostics that were found in the code</returns>
/// <summary>
/// Given a document, turn it into a string based on the syntax root
/// </summary>
/// <param name="document">The Document to be converted to a string</param>
/// <returns>A string containing the syntax of the Document after formatting</returns>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore.Analyzers.Tests\Helpers\DiagnosticResult.cs
/// <summary>
/// Location where the diagnostic appears, as determined by path, line number, and column number.
/// </summary>
/// <summary>
/// Struct that stores information about a Diagnostic appearing in a source
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore.Analyzers.Tests\Helpers\DiagnosticVerifier.Helper.cs
/// <summary>
/// Class for turning strings into documents and getting the diagnostics on them
/// All methods are static
/// </summary>
/// <summary>
/// Given classes in the form of strings, their language, and an IDiagnosticAnalyzer to apply to it, return the diagnostics found in the string after converting it to a document.
/// </summary>
/// <param name="sources">Classes in the form of strings</param>
/// <param name="language">The language the source classes are in</param>
/// <param name="analyzer">The analyzer to be run on the sources</param>
/// <returns>An IEnumerable of Diagnostics that surfaced in the source code, sorted by Location</returns>
/// <summary>
/// Given an analyzer and a document to apply it to, run the analyzer and gather an array of diagnostics found in it.
/// The returned diagnostics are then ordered by location in the source document.
/// </summary>
/// <param name="analyzer">The analyzer to run on the documents</param>
/// <param name="documents">The Documents that the analyzer will be run on</param>
/// <returns>An IEnumerable of Diagnostics that surfaced in the source code, sorted by Location</returns>
/// <summary>
/// Sort diagnostics by location in source document
/// </summary>
/// <param name="diagnostics">The list of Diagnostics to be sorted</param>
/// <returns>An IEnumerable containing the Diagnostics in order of Location</returns>
/// <summary>
/// Given an array of strings as sources and a language, turn them into a project and return the documents and spans of it.
/// </summary>
/// <param name="sources">Classes in the form of strings</param>
/// <param name="language">The language the source code is in</param>
/// <returns>A Tuple containing the Documents produced from the sources and their TextSpans if relevant</returns>
/// <summary>
/// Create a Document from a string through creating a project that contains it.
/// </summary>
/// <param name="source">Classes in the form of a string</param>
/// <param name="language">The language the source code is in</param>
/// <returns>A Document created from the source string</returns>
/// <summary>
/// Create a project using the inputted strings as sources.
/// </summary>
/// <param name="sources">Classes in the form of strings</param>
/// <param name="language">The language the source code is in</param>
/// <returns>A Project created out of the Documents created from the source strings</returns>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore.Analyzers.Tests\Scripts\FromArgAnalyzerUnitTestsScripts.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore.Analyzers.Tests\Scripts\TargetParameterAnalyzerUnitTestsScripts.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore.Analyzers.Tests\Verifiers\CodeFixVerifier.cs
/// <summary>
/// Superclass of all Unit tests made for diagnostics with codefixes.
/// Contains methods used to verify correctness of codefixes
/// </summary>
/// <summary>
/// Returns the codefix being tested (C#) - to be implemented in non-abstract class
/// </summary>
/// <returns>The CodeFixProvider to be used for CSharp code</returns>
/// <summary>
/// Returns the codefix being tested (VB) - to be implemented in non-abstract class
/// </summary>
/// <returns>The CodeFixProvider to be used for VisualBasic code</returns>
/// <summary>
/// Called to test a C# codefix when applied on the inputted string as a source
/// </summary>
/// <param name="oldSource">A class in the form of a string before the CodeFix was applied to it</param>
/// <param name="newSource">A class in the form of a string after the CodeFix was applied to it</param>
/// <param name="codeFixIndex">Index determining which codefix to apply if there are multiple</param>
/// <param name="allowNewCompilerDiagnostics">A bool controlling whether or not the test will fail if the CodeFix introduces other warnings after being applied</param>
/// <summary>
/// Called to test a VB codefix when applied on the inputted string as a source
/// </summary>
/// <param name="oldSource">A class in the form of a string before the CodeFix was applied to it</param>
/// <param name="newSource">A class in the form of a string after the CodeFix was applied to it</param>
/// <param name="codeFixIndex">Index determining which codefix to apply if there are multiple</param>
/// <param name="allowNewCompilerDiagnostics">A bool controlling whether or not the test will fail if the CodeFix introduces other warnings after being applied</param>
/// <summary>
/// General verifier for codefixes.
/// Creates a Document from the source string, then gets diagnostics on it and applies the relevant codefixes.
/// Then gets the string after the codefix is applied and compares it with the expected result.
/// Note: If any codefix causes new diagnostics to show up, the test fails unless allowNewCompilerDiagnostics is set to true.
/// </summary>
/// <param name="language">The language the source code is in</param>
/// <param name="analyzer">The analyzer to be applied to the source code</param>
/// <param name="codeFixProvider">The codefix to be applied to the code wherever the relevant Diagnostic is found</param>
/// <param name="oldSource">A class in the form of a string before the CodeFix was applied to it</param>
/// <param name="newSource">A class in the form of a string after the CodeFix was applied to it</param>
/// <param name="codeFixIndex">Index determining which codefix to apply if there are multiple</param>
/// <param name="allowNewCompilerDiagnostics">A bool controlling whether or not the test will fail if the CodeFix introduces other warnings after being applied</param>
//check if applying the code fix introduced any new compiler diagnostics
// Format and get the compiler diagnostics again so that the locations make sense in the output
//check if there are analyzer diagnostics left after the code fix
//after applying all of the code fixes, compare the resulting string to the inputted one
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore.Analyzers.Tests\Verifiers\DiagnosticVerifier.cs
/// <summary>
/// Superclass of all Unit Tests for DiagnosticAnalyzers
/// </summary>
/// <summary>
/// Get the CSharp analyzer being tested - to be implemented in non-abstract class
/// </summary>
/// <summary>
/// Get the Visual Basic analyzer being tested (C#) - to be implemented in non-abstract class
/// </summary>
/// <summary>
/// Called to test a C# DiagnosticAnalyzer when applied on the single inputted string as a source
/// Note: input a DiagnosticResult for each Diagnostic expected
/// </summary>
/// <param name="source">A class in the form of a string to run the analyzer on</param>
/// <param name="expected"> DiagnosticResults that should appear after the analyzer is run on the source</param>
/// <summary>
/// Called to test a VB DiagnosticAnalyzer when applied on the single inputted string as a source
/// Note: input a DiagnosticResult for each Diagnostic expected
/// </summary>
/// <param name="source">A class in the form of a string to run the analyzer on</param>
/// <param name="expected">DiagnosticResults that should appear after the analyzer is run on the source</param>
/// <summary>
/// Called to test a C# DiagnosticAnalyzer when applied on the inputted strings as a source
/// Note: input a DiagnosticResult for each Diagnostic expected
/// </summary>
/// <param name="sources">An array of strings to create source documents from to run the analyzers on</param>
/// <param name="expected">DiagnosticResults that should appear after the analyzer is run on the sources</param>
/// <summary>
/// Called to test a VB DiagnosticAnalyzer when applied on the inputted strings as a source
/// Note: input a DiagnosticResult for each Diagnostic expected
/// </summary>
/// <param name="sources">An array of strings to create source documents from to run the analyzers on</param>
/// <param name="expected">DiagnosticResults that should appear after the analyzer is run on the sources</param>
/// <summary>
/// Checks each of the actual Diagnostics found and compares them with the corresponding DiagnosticResult in the array of expected results.
/// Diagnostics are considered equal only if the DiagnosticResultLocation, Id, Severity, and Message of the DiagnosticResult match the actual diagnostic.
/// </summary>
/// <param name="actualResults">The Diagnostics found by the compiler after running the analyzer on the source code</param>
/// <param name="analyzer">The analyzer that was being run on the sources</param>
/// <param name="expectedResults">Diagnostic Results that should have appeared in the code</param>
/// <summary>
/// Helper method to VerifyDiagnosticResult that checks the location of a diagnostic and compares it with the location in the expected DiagnosticResult.
/// </summary>
/// <param name="analyzer">The analyzer that was being run on the sources</param>
/// <param name="diagnostic">The diagnostic that was found in the code</param>
/// <param name="actual">The Location of the Diagnostic found in the code</param>
/// <param name="expected">The DiagnosticResultLocation that should have been found</param>
// Only check line position if there is an actual line in the real diagnostic
// Only check column position if there is an actual column position in the real diagnostic
/// <summary>
/// Helper method to format a Diagnostic into an easily readable string
/// </summary>
/// <param name="analyzer">The analyzer that this verifier tests</param>
/// <param name="diagnostics">The Diagnostics to be formatted</param>
/// <returns>The Diagnostics formatted as a string</returns>
// " + diagnostics[i].ToString());
/// <summary>
/// General method that gets a collection of actual diagnostics found in the source after the analyzer is run,
/// then verifies each of them.
/// </summary>
/// <param name="sources">An array of strings to create source documents from to run the analyzers on</param>
/// <param name="language">The language of the classes represented by the source strings</param>
/// <param name="analyzer">The analyzer to be run on the source code</param>
/// <param name="expected">DiagnosticResults that should appear after the analyzer is run on the sources</param>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore.GlobalTool\Program.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore.TaskGenerator\FlubuConsoleTaskGenerator.csx.cs
//-----------------------------------------------------------------------
// <auto-generated />
//-----------------------------------------------------------------------
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore.TaskGenerator\TaskExtensionsGenerator.csx.cs
//-----------------------------------------------------------------------
// <auto-generated />
//-----------------------------------------------------------------------
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore.TaskGenerator\TaskGenerator.csx.cs
//-----------------------------------------------------------------------
// <auto-generated />
//-----------------------------------------------------------------------
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore.TaskGenerator\TaskGeneratorBase.csx.cs
/// <summary>
/// {summary}
/// </summary>";
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore.TaskGenerator\Models\Argument.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore.TaskGenerator\Models\Constructor.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore.TaskGenerator\Models\ConstructorArgument.cs
/// <summary>
/// If <c>true</c> argument(command) is added after all options. Otherwise before all options.
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore.TaskGenerator\Models\Method.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore.TaskGenerator\Models\Parameter.cs
/// <summary>
/// Determinates if parameter is optional or not.
/// </summary>
/// <summary>
/// Adds argument as params parameter to constructor.
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore.TaskGenerator\Models\Task.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore.TaskGenerator\Models\Extensions\ExtensionMethod.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore.TaskGenerator\Models\Extensions\TaskExtensions.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore.Tests\FailTask.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore.Tests\FlubuTestBase.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore.Tests\FlubuTestCollection.cs
// This class has no code, and is never created. Its purpose is simply
// to be the place to apply [CollectionDefinition] and all the
// ICollectionFixture<> interfaces.
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore.Tests\FlubuTestFixture.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore.Tests\InfrastructureTests.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore.Tests\ScriptPropertiesSetterTests.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore.Tests\SimpleTask.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore.Tests\SimpleTaskWithDelay.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore.Tests\SolutionLoadingTests.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore.Tests\TargetCreatorTests.cs
////[Fact]
////public void CreateTargetFromMethodAttributes_MethodAndAttributeParameterTypeMismatch_ThrowsScriptException()
////{
////    var ex = Assert.Throws<ScriptException>(() => TargetCreator.CreateTargetFromMethodAttributes(new BuildScriptParameterTypeMismatch(), _taskSession));
////    Assert.Equal("Failed to create target 'Test'. Attribute parameter 21 does not match 'TestTarget' method parameter 21. Expected System.String Actual: System.Int32", ex.Message);
////}
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore.Tests\TestExtensions.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore.Tests\Commanding\CommandParserTests.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore.Tests\Commanding\FlubuConfigurationProviderTests.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore.Tests\Context\BuildPropertiesSessionTests.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore.Tests\Context\TargetFluentInterfaceIntegrationTestsWithTarget.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore.Tests\Context\TargetFluentInterfaceUnitTests.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore.Tests\Context\TaskContextResolveTaskTests.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore.Tests\Context\TaskFactoryTests.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore.Tests\Integration\BuildScriptWithHttpClient.cs
//www.google.com");
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore.Tests\Integration\ConfigureTargetsTests.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore.Tests\Integration\IntegrationTestCollection.cs
// This class has no code, and is never created. Its purpose is simply
// to be the place to apply [CollectionDefinition] and all the
// ICollectionFixture<> interfaces.
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore.Tests\Integration\IntegrationTestFixture.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore.Tests\Integration\SimpleBuildScript.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore.Tests\Integration\TargetTests.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore.Tests\Packaging\PackagingTests.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore.Tests\Properties\AssemblyInfo.cs
//// General Information about an assembly is controlled through the following
//// set of attributes. Change these attribute values to modify the information
//// associated with an assembly.
//// Setting ComVisible to false makes the types in this assembly not visible
//// to COM components.  If you need to access a type in this assembly from
//// COM, set the ComVisible attribute to true on that type.
//// The following GUID is for the ID of the typelib if this project is exposed to COM
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore.Tests\Scripting\FlubuEngineTests.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore.Tests\Scripting\NugetPackageResolverTests.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore.Tests\Scripting\ProjectFileAnalyzerTests.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore.Tests\Scripting\ScriptAnalyserTests.cs
//#ass c:\\hello.dll", "c:\\hello.dll")]
//#ass c:\\hello1.dll    \r\n", "c:\\hello1.dll")]
//#nuget FlubuCore, 2.7.0", "FlubuCore", "2.7.0")]
//#nuget RockStar, 2.0.0  \r\n", "RockStar", "2.0.0")]
//#imp c:\\test.cs", "c:\\test.cs")]
//#imp c:\\test.cs    \r\n", "c:\\test.cs")]
//#ass",
//",
//#ass hello.dll",
//#nuget Package, 2.0.0",
//#imp test.cs",
//fsa",
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore.Tests\Scripting\ScriptExecutionTests.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore.Tests\Scripting\TargetExtractorTests.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore.Tests\Services\FlubuEnviromentTests.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore.Tests\Tasks\BaseTaskUnitTests.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore.Tests\Tasks\CompileSolutionTaskUnitTests.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore.Tests\Tasks\DoTaskTests.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore.Tests\Tasks\DotnetBuildUnitTests.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore.Tests\Tasks\DotnetCleanUnitTests.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore.Tests\Tasks\DotnetPackUnitTests.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore.Tests\Tasks\DotnetPublishUnitTests.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore.Tests\Tasks\DotnetRestoreUnitTests.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore.Tests\Tasks\DotnetTestUnitTests.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore.Tests\Tasks\ExampleTask.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore.Tests\Tasks\ExampleTask2.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore.Tests\Tasks\ExecuteDotnetTaskTests.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore.Tests\Tasks\FetchBuildVersionFromFileTaskTests.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore.Tests\Tasks\LinuxTaskTests.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore.Tests\Tasks\LoadSolutionTaskTests.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore.Tests\Tasks\MergeConfigurationFileTaskTests.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore.Tests\Tasks\PackageTaskTests.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore.Tests\Tasks\RunProgramTaskTests.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore.Tests\Tasks\TaskUnitTestBase.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore.Tests\Tasks\UpdateJsonFileTaskTests.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore.Tests\Tasks\UpdateNetCoreVersionTaskIntegrationTests.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore.Tests\Tasks\UpdateNetCoreVersionTaskUnitTests.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore.Tests\TestData\BuildScripts\BuildScriptWithForArguments.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore.Tests\TestData\BuildScripts\ForCreateTargetWithAttributes\BuildScriptMethodHasNoParameters.cs
// Wrong first parameter
// Wrong first parameter
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore.Tests\TestData\BuildScripts\ForCreateTargetWithAttributes\BuildScriptNoTargetsWithAttribute.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore.Tests\TestData\BuildScripts\ForCreateTargetWithAttributes\BuildScriptParameterCountNotMatch.cs
// Wrong parameter count
// Wrong parameter count
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore.Tests\TestData\BuildScripts\ForCreateTargetWithAttributes\BuildScriptParameterTypeMismatch.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore.Tests\TestData\BuildScripts\ForCreateTargetWithAttributes\BuildScriptWithTargetsFromAttribute.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore.WebApi\HashService.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore.WebApi\IHashService.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore.WebApi\Program.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore.WebApi\Startup.cs
// This method gets called by the runtime. Use this method to add services to the container.
// Add framework services.
// This method gets called by the runtime. Use this method to configure the HTTP request pipeline.
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore.WebApi\Configuration\JwtOptions.cs
/// <summary>
/// "iss" (Issuer) Claim
/// </summary>
/// <remarks>The "iss" (issuer) claim identifies the principal that issued the
///   JWT.  The processing of this claim is generally application specific.
///   The "iss" value is a case-sensitive string containing a StringOrURI
///   value.  Use of this claim is OPTIONAL.</remarks>
/// <summary>
/// "sub" (Subject) Claim
/// </summary>
/// <remarks> The "sub" (subject) claim identifies the principal that is the
///   subject of the JWT.  The claims in a JWT are normally statements
///   about the subject.  The subject value MUST either be scoped to be
///   locally unique in the context of the issuer or be globally unique.
///   The processing of this claim is generally application specific.  The
///   "sub" value is a case-sensitive string containing a StringOrURI
///   value.  Use of this claim is OPTIONAL.</remarks>
/// <summary>
/// "aud" (Audience) Claim
/// </summary>
/// <remarks>The "aud" (audience) claim identifies the recipients that the JWT is
///   intended for.  Each principal intended to process the JWT MUST
///   identify itself with a value in the audience claim.  If the principal
///   processing the claim does not identify itself with a value in the
///   "aud" claim when this claim is present, then the JWT MUST be
///   rejected.  In the general case, the "aud" value is an array of case-
///   sensitive strings, each containing a StringOrURI value.  In the
///   special case when the JWT has one audience, the "aud" value MAY be a
///   single case-sensitive string containing a StringOrURI value.  The
///   interpretation of audience values is generally application specific.
///   Use of this claim is OPTIONAL.</remarks>
/// <summary>
/// "nbf" (Not Before) Claim (default is UTC NOW)
/// </summary>
/// <remarks>The "nbf" (not before) claim identifies the time before which the JWT
///   MUST NOT be accepted for processing.  The processing of the "nbf"
///   claim requires that the current date/time MUST be after or equal to
///   the not-before date/time listed in the "nbf" claim.  Implementers MAY
///   provide for some small leeway, usually no more than a few minutes, to
///   account for clock skew.  Its value MUST be a number containing a
///   NumericDate value.  Use of this claim is OPTIONAL.</remarks>
/// <summary>
/// "iat" (Issued At) Claim (default is UTC NOW)
/// </summary>
/// <remarks>The "iat" (issued at) claim identifies the time at which the JWT was
///   issued.  This claim can be used to determine the age of the JWT.  Its
///   value MUST be a number containing a NumericDate value.  Use of this
///   claim is OPTIONAL.</remarks>
/// <summary>
/// Set the timespan the token will be valid for (default is 5 min/300 seconds)
/// </summary>
/// <summary>
/// "exp" (Expiration Time) Claim (returns IssuedAt + ValidFor)
/// </summary>
/// <remarks>The "exp" (expiration time) claim identifies the expiration time on
///   or after which the JWT MUST NOT be accepted for processing.  The
///   processing of the "exp" claim requires that the current date/time
///   MUST be before the expiration date/time listed in the "exp" claim.
///   Implementers MAY provide for some small leeway, usually no more than
///   a few minutes, to account for clock skew.  Its value MUST be a number
///   containing a NumericDate value.  Use of this claim is OPTIONAL.</remarks>
/// <summary>
/// "jti" (JWT ID) Claim (default ID is a GUID)
/// </summary>
/// <remarks>The "jti" (JWT ID) claim provides a unique identifier for the JWT.
///   The identifier value MUST be assigned in a manner that ensures that
///   there is a negligible probability that the same value will be
///   accidentally assigned to a different data object; if the application
///   uses multiple issuers, collisions MUST be prevented among values
///   produced by different issuers as well.  The "jti" claim can be used
///   to prevent the JWT from being replayed.  The "jti" value is a case-
///   sensitive string.  Use of this claim is OPTIONAL.</remarks>
/// <summary>
/// The signing key to use when generating tokens.
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore.WebApi\Configuration\NotificationFilter.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore.WebApi\Configuration\NotificationSettings.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore.WebApi\Configuration\TimeFrame.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore.WebApi\Configuration\WebApiSettings.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore.WebApi\Configuration\WebAppSettings.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore.WebApi\Controllers\AuthController.cs
/// <summary>
/// Issues flubu web api access token for specified username.
/// </summary>
/// <param name="applicationUser"></param>
/// <returns></returns>
// Create the JWT security token and encode it.
/// <returns>Date converted to seconds since Unix epoch (Jan 1, 1970, midnight UTC).</returns>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore.WebApi\Controllers\ControllerBase.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore.WebApi\Controllers\HealthCheckController.cs
/// <summary>
/// Flubu web api healthcheck
/// </summary>
/// <returns></returns>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore.WebApi\Controllers\PackagesController.cs
/// <summary>
/// Upload specified packages to flubu server.
/// </summary>
/// <returns></returns>
/// <summary>
/// Delete all packages from flubu server (Cleans packages directory or specified subfolder).
/// </summary>
/// <param name="request"></param>
/// <returns></returns>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore.WebApi\Controllers\PingController.cs
/// <summary>
/// Web api ping.
/// </summary>
/// <returns></returns>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore.WebApi\Controllers\ReportsController.cs
/// <summary>
/// Sends reports(compressed in zip file) that are on the flubu web api server.
/// </summary>
/// <param name="request"></param>
/// <returns></returns>
/// <summary>
/// Deletes all reports(cleans directory on flubu web api server).
/// </summary>
/// <param name="request"></param>
/// <returns></returns>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore.WebApi\Controllers\ScriptsController.cs
/// <summary>
/// Executes specified FlubuCore script.
/// </summary>
/// <param name="request"></param>
/// <returns></returns>
/// <summary>
/// Uploads specified flubu script to flubu server.
/// </summary>
/// <returns></returns>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore.WebApi\Controllers\Attributes\ApiExceptionFilter.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore.WebApi\Controllers\Attributes\EmailNotificationFilter.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore.WebApi\Controllers\Attributes\RestrictApiAccessFilter.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore.WebApi\Controllers\Attributes\ValidateRequestModelAttribute.cs
/// <summary>
/// Validate the model before control passes to the controller's action
/// </summary>
/// <param name="context"></param>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore.WebApi\Controllers\Exceptions\HttpError.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore.WebApi\Controllers\WebApp\LoginController.cs
//// todo move to web api client initialization.
//{Request.Host}{Request.PathBase}/";
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore.WebApi\Controllers\WebApp\ScriptController.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore.WebApi\Controllers\WebApp\UpdateCenterController.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore.WebApi\Controllers\WebApp\ViewComponents\TopMenuViewComponent.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore.WebApi\Infrastructure\Files.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore.WebApi\Infrastructure\InstallerExtensions.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore.WebApi\Infrastructure\ITimeProvider.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore.WebApi\Infrastructure\TimeProvider.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore.WebApi\Models\ExecuteScript.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore.WebApi\Models\Security.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore.WebApi\Models\User.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore.WebApi\Models\ViewModels\LoginModel.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore.WebApi\Models\ViewModels\ScriptsViewModel.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore.WebApi\Models\ViewModels\TopMenuViewModel.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore.WebApi\Models\ViewModels\UpdateCenterModel.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore.WebApi\Repository\ILiteRepositoryFactory.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore.WebApi\Repository\IRepositoryFactory.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore.WebApi\Repository\ISecurityRepository.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore.WebApi\Repository\ISerilogRepository.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore.WebApi\Repository\IUserRepository.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore.WebApi\Repository\LiteRepositoryFactory.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore.WebApi\Repository\RepositoryFactory.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore.WebApi\Repository\SecurityRepository.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore.WebApi\Repository\SeriLogRepository.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore.WebApi\Repository\UserRepository.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore.WebApi\Repository\Exceptions\NotUniqueException.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore.WebApi\Services\INotificationService.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore.WebApi\Services\NotificationService.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore.WebApi\Validators\ExecuteScriptRequestValidator.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore.WebApi.Client\IWebApiClient.cs
/// <summary>
/// Executes specified flubu scrip on flubu web api server.
/// </summary>
/// <param name="request"></param>
/// <returns></returns>
/// <summary>
/// Upload's sprecified packages to flubu web api server.
/// </summary>
/// <param name="request"></param>
/// <returns>List of uploaded packages(files).</returns>
/// <summary>
/// Cleanes packages directory on flubu web api server.
/// </summary>
/// <returns></returns>
/// <summary>
/// Get's the access token for flubu web api server.
/// </summary>
/// <param name="request"></param>
/// <returns>The access token</returns>
/// <summary>
/// Download reports(compressed in zip file) from flubu web api server.
/// </summary>
/// <returns></returns>
/// <summary>
/// Deletes all reports(cleans directory on flubu web api server).
/// </summary>
/// <returns></returns>
/// <summary>
/// Executes specified web api method and handles <see cref="WebApiException"/> all errors.
/// </summary>
/// <typeparam name="T">The response data</typeparam>
/// <param name="action"></param>
/// <param name="statusCodeToHandle"></param>
/// <returns></returns>
/// <summary>
/// Executes specified web api method and handles <see cref="WebApiException"/> with specified HttpStatusCode. If WebException with other status code has occured exception is retrown.
/// </summary>
/// <typeparam name="T">The response data</typeparam>
/// <param name="action"></param>
/// <param name="statusCodesToHandle">HttpStatusCodes to handle.</param>
/// <returns></returns>
/// <summary>
/// Executes specified web api method and handles <see cref="WebApiException"/> with specified HttpStatusCode. If WebException with other status code has occured exception is retrown.
/// </summary>
/// <param name="action"></param>
/// <param name="statusCodeToHandle"></param>
/// <returns></returns>
/// <summary>
/// Executes specified web api method and handles <see cref="WebApiException"/> with specified HttpStatusCode. If WebException with other status code has occured exception is retrown.
/// </summary>
/// <param name="action"></param>
/// <param name="statusCodesToHandle">HttpStatusCodes to handle.</param>
/// <returns></returns>
/// <summary>
/// Handles errors in execute method
/// </summary>
/// <typeparam name="T"></typeparam>
/// <param name="response"></param>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore.WebApi.Client\Response.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore.WebApi.Client\RestClient.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore.WebApi.Client\UrlHelpers.cs
//// Get all properties (incl. string), exept IEnumerable ones
// Get all IEnumerable properties (excl. string)
// add all IEnumerable properties
// Concat all key/value pairs into a string separated by ampersand
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore.WebApi.Client\Void.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore.WebApi.Client\WebApiClient.cs
////todo investigate why one content has to be added.
////todo investigate why one content has to be added.
/// <summary>
/// Executes specified web api method and handles <see cref="WebApiException"/> with specified HttpStatusCode. If WebException with other status code has occured exception is retrown.
/// </summary>
/// <typeparam name="T">The response data</typeparam>
/// <param name="action"></param>
/// <returns></returns>
/// <summary>
/// Executes specified web api method and handles <see cref="WebApiException"/> <see cref="TimeoutException"/> with specified HttpStatusCodes. If WebException with other status code has occured exception is rethrown.
/// </summary>
/// <typeparam name="T">The response data</typeparam>
/// <param name="action"></param>
/// <param name="statusCodesToHandle">HttpStatusCodes to handle.</param>
/// <returns></returns>
/// <summary>
/// Executes specified web api method and handles <see cref="WebApiException"/> with specified HttpStatusCode. If WebException with other status code has occured exception is rethrown.
/// </summary>
/// <param name="action"></param>
/// <returns></returns>
/// <summary>
/// Executes specified web api method and handles <see cref="WebApiException"/> with specified HttpStatusCode. If WebException with other status code has occured exception is rethrown.
/// </summary>
/// <param name="action"></param>
/// <param name="statusCodesToHandle">HttpStatusCodes to handle.</param>
/// <returns></returns>
/// <summary>
/// Handles errors in execute method
/// </summary>
/// <typeparam name="T"></typeparam>
/// <param name="response"></param>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore.WebApi.Client\WebApiException.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore.WebApi.Client\Attributes\DeleteAttribute.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore.WebApi.Client\Attributes\GetAttribute.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore.WebApi.Client\Attributes\HttpAttribute.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore.WebApi.Client\Attributes\PostAttribute.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore.WebApi.Client\Attributes\PutAttribute.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore.WebApi.Model\CleanPackagesDirectoryRequest.cs
/// <summary>
/// if <see cref="SubDirectoryToDelete"/>  is not set root directory 'packages' and subfolders are cleaned.
/// If it is set then  specified sub directory is cleaned 'Pacakges\{UploadToSubDirectory}'.
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore.WebApi.Model\CleanReportsDirectoryRequest.cs
/// <summary>
/// if <see cref="SubDirectoryToDelete"/>  is not set root directory 'Reports' and subfolders are cleaned.
/// If it is set then  specified sub directory is cleaned 'Reports\{UploadToSubDirectory}'.
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore.WebApi.Model\DownloadReportsRequest.cs
/// <summary>
/// if <see cref="DownloadFromSubDirectory"/>  is not set whole root directory 'reports' on flubu server is packaged into zip and downloaded.
/// If it is set then reports in specified subdirectory are zipped and downloaded 'Reports\{DownloadFromSubDirectory}'.
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore.WebApi.Model\ErrorCodes.cs
/// <summary>
/// Occures when request validation has failed.
/// </summary>
/// <summary>
/// Occures when resource is not found.
/// </summary>
/// <summary>
/// Occures when script is not found.
/// </summary>
/// <summary>
/// Occures when user doesnt have access to specific resource;
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore.WebApi.Model\ErrorMessages.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore.WebApi.Model\ErrorModel.cs
/// <summary>
/// Http status code of the error.
/// </summary>
/// <summary>
/// The error code
/// </summary>
/// <summary>
/// The error message
/// </summary>
/// <summary>
/// Stack trace of the exception
/// </summary>
/// <summary>
/// Flubu web api logs
/// </summary>
/// <summary>
/// Validation errors.
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore.WebApi.Model\ExecuteScriptRequest.cs
/// <summary>
/// Target to execute.
/// ErrorCodes: notempty_error
/// </summary>
/// <summary>
/// Filename of the script to be executed.
/// </summary>
/// <summary>
/// The script arguments.
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore.WebApi.Model\ExecuteScriptResponse.cs
/// <summary>
/// Flubu web api Server logs.
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore.WebApi.Model\GetTokenRequest.cs
/// <summary>
/// The username.
/// </summary>
/// <summary>
/// The password
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore.WebApi.Model\GetTokenResponse.cs
/// <summary>
/// Authentication token.
/// </summary>
/// <summary>
/// Time in seconds authentication token expires in.
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore.WebApi.Model\UploadPackageRequest.cs
/// <summary>
/// The relative or absolute path to the directory to search. This string is not case-sensitive.
/// </summary>
/// <summary>
/// The search string to match against the names of files in DirectoryPath.This parameter
/// can contain a combination of valid literal path and wildcard (such as * and ?) characters, but doesn't support regular expressions.
/// </summary>
/// <summary>
/// if <see cref="UploadToSubDirectory"/>  is not set it is uploaded to the root directory 'packages'.
/// If it is set then package is uploaded to specified sub directory 'Pacakges\{UploadToSubDirectory}'.
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore.WebApi.Model\UploadScriptRequest.cs
/// <summary>
/// Path to the script file to be uploaded.
/// </summary>
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore.WebApi.Model\ValidationError.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore.WebApi.Tests\DatabaseBaseTests.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore.WebApi.Tests\FilesTests.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore.WebApi.Tests\SimpleScript.cs
//#nuget: Moq, 4.8.2
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore.WebApi.Tests\UserRepositoryTests.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore.WebApi.Tests\AttributeTests\EmailNotificationFilterTests.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore.WebApi.Tests\AttributeTests\RestrictApiAccessFilterTests.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore.WebApi.Tests\ClientTests\AuthClientTests.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore.WebApi.Tests\ClientTests\ClientBaseTests.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore.WebApi.Tests\ClientTests\ClientCollection.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore.WebApi.Tests\ClientTests\ClientFixture.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore.WebApi.Tests\ClientTests\HealthCheckClientTests.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore.WebApi.Tests\ClientTests\PackagesClientTests.cs
//ttt.txt"));
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore.WebApi.Tests\ClientTests\ReportsClientTests.cs
//ttt.txt"));
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore.WebApi.Tests\ClientTests\ScriptsClientTests.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\FlubuCore.WebApi.Updater\Program.cs
________________________________________________________________________________________
E:/AllLangDS/ds/csharp/FlubuCore-master\FlubuCore-master\src\Template\BuildScript\BuildScript.cs
