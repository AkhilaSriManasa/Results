________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\install.py
# built-in
# parse CLI arguments
# install pip
# noQA: F401
# get dephell's jail path
# linux
# mac os
# try again, pip is nightly
#egg=dephell[full]'
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\setup.py
# -*- coding: utf-8 -*-
# DO NOT EDIT THIS FILE!
# This file has been autogenerated by dephell <3
# https://github.com/dephell/dephell
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\dephell\cache.py
# built-in
# app
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\dephell\cached_property.py
# https://github.com/bottlepy/bottle/commit/fa7733e075da0d790d809aa3d2f53071897e6f76
# https://github.com/pydanny/cached-property/blob/master/cached_property.py
# noqa: N801
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\dephell\cacher.py
# built-in
# external
# project
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\dephell\cli.py
# built-in
# external
# app
# print help
# rewrite argv to get help about command
# get command
# parse config
# env not found
# validate config
# execute command
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\dephell\constants.py
# built-in
# https://github.com/github/markup
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\dephell\context_tools.py
# built-in
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\dephell\exceptions.py
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\dephell\imports.py
# built-in
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\dephell\logging_helpers.py
# built-in
# http://docs.python.org/library/logging.html#logrecord-attributes
# https://github.com/madzak/python-json-logger/blob/master/src/pythonjsonlogger/jsonlogger.py
# this allows to have numeric keys
# https://stackoverflow.com/questions/384076/how-can-i-color-python-logging-output
# add color
# add extras
# hide traceback
# Convert str level representation to level number.
# Example: "DEBUG" -> 10
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\dephell\networking.py
# built-in
# external
# app
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\dephell\package_manager.py
# built-in
# external
# app
# properties
# methods
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\dephell\pip_cleaner.py
# built-in
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\dephell\yaml.py
# app
# first of all, try to parse by ruamel.yaml
# on error try to parse by PyYAML
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\dephell\__init__.py
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\dephell\__main__.py
# app
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\dephell\actions\_autocomplete.py
# built-in
# external
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\dephell\actions\_contributing.py
# built-in
# external
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\dephell\actions\_converting.py
# built-in
# app
# attach
# fix name for new root to avoid conflicts
# TODO: generate random name
# merge (without full graph building)
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\dephell\actions\_docker.py
# built-in
# app
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\dephell\actions\_dotenv.py
# built-in
#':
# clean key
# clean and substitute value
# escaping
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\dephell\actions\_downloads.py
# built-in
# external
# app
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\dephell\actions\_editorconfig.py
# built-in
# external
# EditorConfig helps developers define and maintain consistent
# coding styles between different editors and IDEs
# https://editorconfig.org
# 4 spaces
# 2 spaces
# tabs
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\dephell\actions\_entrypoints.py
# built-in
# external
# app
# entry_points.txt can be missed for egg-info.
# In that case let's try to find a binary with the same name as package.
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\dephell\actions\_git.py
# built-in
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\dephell\actions\_json.py
# built-in
# app
# aliases
#': _each,
# function
# sum of fields
# index
# slice
# field
# one dict
# list of dicts
# print all config
# print config section
# print one value
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\dephell\actions\_package.py
# built-in
# app
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\dephell\actions\_python.py
# external
# app
# defined in config
# defined in dependencies file
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\dephell\actions\_shutil.py
# built-in
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\dephell\actions\_transform.py
# built-in
# app
# @_register
# remove old prefix
# add new prefix
# build new node from new_name
# attach to the new node subimports from the old module
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\dephell\actions\_travis.py
# built-in
# Config for Travis CI, tests powered by DepHell.
# https://travis-ci.org/
# https://github.com/dephell/dephell
# show a little bit more information about environment
# install DepHell
# https://github.com/travis-ci/travis-ci/issues/8589
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\dephell\actions\_venv.py
# built-in
# external
# app
# venv for current project exists
# now some venv is active
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\dephell\actions\__init__.py
# app
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\dephell\commands\base.py
# built-in
# external
# app
# properties
# helpers
# get params from env vars if are not specified
# if path to config specified explicitly, just use it
# if path isn't specified, carefully try default names
# resolve
# if it isn't resolved yet
# apply envs if needed
# if path specified in CLI, use it
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\dephell\commands\deps_add.py
# built-in
# app
# get current deps
# get new deps
# set envs
# mix them up
# write merged deps back
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\dephell\commands\deps_audit.py
# built-in
# app
# get packages from CLI
# get packages from lockfile
# local info
# pypi info
# vuln info
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\dephell\commands\deps_check.py
# built-in
# app
# get executable
# get installed packages
# filter deps by envs and markers
# not installed
# installed the same version, skip
# installed old version
# obsolete
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\dephell\commands\deps_convert.py
# built-in
# app
# load
# attach
# resolve (and merge)
# filter out deps by `--envs`
# dump
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\dephell\commands\deps_install.py
# built-in
# app
# remove
# install
# get installed packages
# plan what we will install and what we will remove
# not installed, install
# installed the same version, skip
# installed old version, remove it and install new
# remove packages not in graph
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\dephell\commands\deps_licenses.py
# built-in
# app
# get licenses
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\dephell\commands\deps_outdated.py
# built-in
# app
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\dephell\commands\deps_sync.py
# built-in
# app
# DepsInstallCommand contains all logic for sync.
# There we just set `sync` flag and change some minor metainfo.
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\dephell\commands\deps_tree.py
# built-in
# app
# drop duplicates
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\dephell\commands\discover.py
# built-in
# keep sorted
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\dephell\commands\docker_create.py
# built-in
# app
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\dephell\commands\docker_destroy.py
# built-in
# app
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\dephell\commands\docker_prepare.py
# built-in
# app
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\dephell\commands\docker_run.py
# built-in
# app
# get command
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\dephell\commands\docker_shell.py
# built-in
# app
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\dephell\commands\docker_stop.py
# built-in
# app
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\dephell\commands\docker_tags.py
# built-in
# app
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\dephell\commands\generate_authors.py
# built-in
# app
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\dephell\commands\generate_config.py
# built-in
# external
# app
# read
# add section
# detect requirements files
# write
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\dephell\commands\generate_contributing.py
# built-in
# external
# app
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\dephell\commands\generate_editorconfig.py
# built-in
# app
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\dephell\commands\generate_license.py
# built-in
# external
# app
# get license object
# author name from --owner
# get author from `from`
# author from project config file
# author from getuser().title
# generate license text
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\dephell\commands\generate_travis.py
# built-in
# external
# app
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\dephell\commands\inspect_auth.py
# built-in
# app
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\dephell\commands\inspect_config.py
# built-in
# app
# do not show credentials
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\dephell\commands\inspect_gadget.py
# built-in
# app
# Source: https://www.asciiart.eu/cartoons/inspector-gadget
# Author: https://en.wikipedia.org/wiki/Joan_Stark
#JGS/_|_\###,---'`
#'  _.:`___`:-._ '#,
#'  ,~'-;(oIo);-'~, '#
#   `~-(  |    )=~`  #
#       | |_  |      #
#       ; ._. ;      #
#  _..-;|\ - /|;-._  #
#-'   /_ \\_// _\  '-#
#    ; /__\-'__\;    #`\
#\.--|  |O  O   |'-./#  ;
#/   \ _;O__O___/   \#__|
#\    [I_[_]__I]    /# |
#   /  |O  O   \   #)_/
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\dephell\commands\inspect_project.py
# built-in
# app
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\dephell\commands\inspect_self.py
# built-in
# app
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\dephell\commands\inspect_venv.py
# built-in
# external
# app
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\dephell\commands\inspect_versioning.py
# built-in
# external
# app
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\dephell\commands\jail_install.py
# built-in
# external
# app
# resolve (and merge)
# make venv
# install
# get entrypoints
# copy console scripts
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\dephell\commands\jail_list.py
# built-in
# app
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\dephell\commands\jail_remove.py
# built-in
# external
# app
# remove symlinks on entrypoints
# remove venv
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\dephell\commands\jail_show.py
# built-in
# external
# app
# get list of exposed entrypoints
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\dephell\commands\jail_try.py
# built-in
# external
# app
# make venv
# install
# install executable
# make startup script to import installed packages
# run
# install
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\dephell\commands\package_bug.py
# built-in
# external
# app
# fetch metainfo
# try to find githab or gitlub url and use it as a bug tracker
# build URL
# check that issues aren't disabled for the project
# try to find custom bug tracker by name
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\dephell\commands\package_downloads.py
# built-in
# external
# app
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\dephell\commands\package_install.py
# built-in
# app
# resolve
# get executable
# install
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\dephell\commands\package_list.py
# built-in
# app
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\dephell\commands\package_purge.py
# built-in
# external
# app
# get installed packages
# resolve graph
# get packages to remove
# remove installed packages
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\dephell\commands\package_releases.py
# built-in
# app
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\dephell\commands\package_remove.py
# built-in
# app
# get installed packages
# remove installed packages
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\dephell\commands\package_search.py
# built-in
# app
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\dephell\commands\package_show.py
# built-in
# app
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\dephell\commands\project_build.py
# built-in
# app
# attach
# dump
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\dephell\commands\project_bump.py
# built-in
# external
# app
# get project metainfo
# make new version
# update version in project files
# update version in project metadata
# set git tag
# we can reproduce metadata only for poetry yet
# try to replace version in file as string
# add placeholder to the end if it isn't specified
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\dephell\commands\project_test.py
# built-in
# external
# app
# load project
# attach
# dump
# get command
# choose pythons
# get from config
# get from project
# make venv
# copy tests
# copy file
# copy dir
# install project
# we are using pip here to make it closer to the real installation
# install executable
# run tests
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\dephell\commands\project_validate.py
# built-in
# app
# get current deps
# errors
# classifier checks
# warnings
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\dephell\commands\self_auth.py
# built-in
# external
# app
# delete all credentials for hostname
# delete one credential
# update
# add
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\dephell\commands\self_autocomplete.py
# built-in
# external
# app
# Install completions to the correct location for modern bash-completion.
# This will be sourced on-demand by bash-completion as soon as dephell is
# completed for the first time.
# https://github.com/dephell/dephell/pull/132
# https://github.com/dephell/dephell/pull/62
# ref. https://itnext.io/programmable-completion-for-bash-on-macos-f81a0103080b
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\dephell\commands\self_uncache.py
# built-in
# app
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\dephell\commands\self_upgrade.py
# built-in
# app
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\dephell\commands\vendor_download.py
# built-in
# external
# app
# say to shutils that wheel can be parsed as zip
# find modules
# copy modules
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\dephell\commands\vendor_import.py
# built-in
# app
# select modules to patch imports
# patch vendors if it's outside of main package
# set renamings
# execute renaming
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\dephell\commands\venv_create.py
# built-in
# external
# app
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\dephell\commands\venv_destroy.py
# built-in
# external
# app
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\dephell\commands\venv_run.py
# built-in
# external
# app
# get command
# get and make venv
# install executable
# get env vars
# run
# resolve
# install
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\dephell\commands\venv_shell.py
# built-in
# external
# app
# get and create venv
# get env vars
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\dephell\commands\__init__.py
# app
# allow to import commands
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\dephell\config\app_dirs.py
# built-in
# app
# unix
# unix default
# mac os x
# unix
# unix default
# mac os x
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\dephell\config\builders.py
# project
# external
# app
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\dephell\config\defaults.py
# built-in
# app
# resolver
# api
# output
# venv
# docker
# other
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\dephell\config\logging_config.py
# defined via config
# write to stderr only WARNING and higher
# write to stdout only DEBUG and INFO
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\dephell\config\manager.py
# built-in
# external
# app
# convert `and` section from tomlkit types to python types
# passed converter that doesn't require path
# if passed only format
# if passed only filename
# read
# get section
# get env
# if old content isn't a dict, override it
# drop templated part from name
# convert value to the correct type
# do the same as in `attach_cli`
# if old content isn't a dict, override it
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\dephell\config\scheme.py
# project
# external
# app
# + Scheme for DepHell config, validated by Cerberus:
#   https://docs.python-cerberus.org/en/stable/validation-rules.html
# + All fields with default value (defaults.py) marked as required.
# + dict() for rules, {} for content.
# + Grouped in the same groups as builders (./builders.py)
# api
# resolver
# output
# venv
# docker
# other
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\dephell\config\__init__.py
# app
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\dephell\controllers\_conflict.py
# built-in
# external
# https://github.com/dephell/dephell/issues/11
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\dephell\controllers\_dependency.py
# built-in
# external
# app
# regex for names generated by pipenv
# https://github.com/pypa/packaging/blob/master/packaging/requirements.py
# make constraint
# some libs uses `in` for python_version,
# but dephell_markers isn't ready for this
# drop version from the end
# make link
# make constraint
# make repo
# make marker
# make envs
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\dephell\controllers\_docker.py
# built-in
# external
# app
# properties
# public methods
# get image
# create network
# mount the project
# (but do not mount if it's obviously not a project)
# create container
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\dephell\controllers\_graph.py
# built-in
# app
# if it is the first layer (requirements.txt) try to merge these deps
# magic methods
# type: Optional[Dependency]
# if dependency hasn't been locked then unlock it after our accidental lock
# add root nodes
# add nodes
# https://graphviz.gitlab.io/_pages/doc/info/colors.html
# add edges
# save files
# properties
# magic
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\dephell\controllers\_mutator.py
# built-in
# external
# app
# self._check_soft,
# mypy wants it
# any new group has to change state of the subgraph
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\dephell\controllers\_readme.py
# built-in
# external
# app
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\dephell\controllers\_repos.py
# built-in
# external
# app
# allow prereleases
# try to interpret URL as local path
# repos from config
# auth
# pypi doesn't have private packages
# properties
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\dephell\controllers\_resolver.py
# built-in
# external
# app
# add new dep to graph
# if some of the dependencies cyclicaly depends on root
# then ignore these deps
# if dep is locked, but not used, let's just unlock it
# merge deps
# conflict happened
# check
# it must be before actual unapplying to avoid recursion on circular dependencies
# unapply current dependency for child
# unapply child because he is modified
# get not applied deps
# if we already build deps for all nodes in graph
# check python version
# if we have conflict, try to mutate graph
# if cannot mutate
# apply mutation
# Unapply deps that we don't need
# without `soft=True` all deps of this dep will be marked as unapplied
# and ignored in Requirement.from_graph.
# It's bad behavior because deps of this dep can be required for other
# deps that won't be unapplied.
# Some child deps can be unapplied from other child deps, but we need them.
# For example, if we need A, but don't need B, and A and B depends on C,
# then C will be unapplied from B. Let's return B in the graph by re-applying A.
# get only base part of python version because `packagings` drops
# all markers for python prereleases
# Dep can be partialy applied. Clean it.
# only if all deps applied
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\dephell\controllers\_safety.py
# built-in
# external
# app
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\dephell\controllers\_snyk.py
# built-in
# external
# app
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\dephell\controllers\__init__.py
# app
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\dephell\converters\base.py
# built-in
# external
# app
# inspection
# root dependency load and dump
# read
# make new content
# write
# resolver creation
# helpers
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\dephell\converters\conda.py
# built-in
# external
# app
# https://github.com/ericmjl/conda-envs/blob/master/deeplearning.yml
# make root
# make dependencies
# channels
# get channels
# remove old channels
# add new channels
# add default channel
# dependencies
# remove old deps
# remove
# update
# add new deps
# drop empty section
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\dephell\converters\egginfo.py
# built-in
# external
# app
# load from *.egg-info dir
# find *.egg-info in current dir
# load from file (requires.txt or PKG-INFO)
# drop duplicates
# maybe it's possible, so we will have to process it
# sometimes pypy stores only pkg-info as *.egg-info file
# dependency_links.txt
# pkg-info
# requires.txt
# entry_points.txt
# readme and package files
# links
# authors
# dependencies
#;':
# get section name as extra
#;':  # ignore comments
#':
# https://setuptools.readthedocs.io/en/latest/formats.html
# distutils.dist.DistributionMetadata.write_pkg_file
# links
# authors
# all envs (including dev and excluding main)
# write extra deps
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\dephell\converters\flit.py
# built-in
# external
# app
# description
# entrypoints
# authors
# links
# requirements
# extras
# read config
# get tool section from config
# project and module names
# author and maintainer
# add name
# add new or remove old mail
# remove old author
# remove old maintainer
# metainfo
# delete
# insert
# update
# write links
# remove old
# add and update
# readme
# python constraint
# dependencies
# extras
# clean env from old packages
# remove old env
# create new env
# write new extra packages
# scripts
# remove old scripts
# entrypoints
# remove old group
# remove old entrypoints in group
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\dephell\converters\imports.py
# built-in
# external
# app
# 30 days
# get modules
# attach modules
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\dephell\converters\installed.py
# built-in
# external
# app
# https://bugs.launchpad.net/ubuntu/+source/python-pip/+bug/1635463
# https://stackoverflow.com/a/22676267
# read *.egg dir
# we cannot read single *.py file yet
# read site-packages / dist-packages
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\dephell\converters\pip.py
# built-in
# external
# app
# https://github.com/pypa/pip/blob/master/src/pip/_internal/req/constructors.py
# https://github.com/pypa/pip/blob/master/src/pip/_internal/req/req_install.py
# update repository
# get repos urls
# dump repos urls
# disable hashes when dir-based deps are presented
# https://github.com/dephell/dephell/issues/41
# pip 19.3
# pip 19.3.1
# pip 19.3.2?
# https://github.com/pypa/packaging/blob/master/packaging/requirements.py
# https://github.com/jazzband/pip-tools/blob/master/piptools/utils.py
#egg=')[0])
# https://github.com/jazzband/pip-tools/blob/master/piptools/writer.py
# ^ from {sources}'.format(
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\dephell\converters\pipfile.py
# built-in
# external
# app
# Pipfile doesn't support any other envs
# repositories
# https://github.com/pypa/pipenv/issues/2231
# pipenv doesn't work without explicit repo
# python version
# dependencies
# create section if doesn't exist
# clean file from outdated dependencies
# write new packages
# do not overwrite dep if nothing is changed
# overwrite
# https://github.com/pypa/pipfile/blob/master/examples/Pipfile
# get link
# https://github.com/sarugaku/requirementslib/blob/master/src/requirementslib/models/requirements.py
# https://github.com/pypa/pipenv/blob/master/pipenv/project.py
# https://github.com/sarugaku/requirementslib/blob/master/src/requirementslib/models/utils.py
# if we have only version, return string instead of table
# do not specify version explicit
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\dephell\converters\pipfilelock.py
# built-in
# external
# app
# https://stackoverflow.com/a/23820416
# https://github.com/pypa/pipfile/blob/master/examples/Pipfile.lock
# https://github.com/pypa/pipfile/blob/master/pipfile/api.py
# set repo
# set envs
# get repos
# https://github.com/pypa/pipenv/issues/2231
# pipenv doesn't work without explicit repo
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\dephell\converters\poetry.py
# built-in
# external
# app
# read metainfo
# read links
# read entrypoints
# update repository
# get envs for deps
# read dependencies
# metainfo
# delete
# insert
# update
# write links
# dependencies
# clean file from outdated dependencies
# python version
# write dependencies
# do not overwrite dep if nothing is changed
# overwrite
# remove empty section
# extras
# drop old extras
# create section if doesn't exist
# add new extras
# deop all old extras if there are no new extras
# drop old console_scripts
# add console_scripts
# drop old plugins
# add plugins
# get repositories
# remove or update old repositories
# add new repositories
# remove section if empty
# https://github.com/sdispater/tomlkit/blob/master/pyproject.toml
# get link
# make marker
# https://www.python.org/dev/peps/pep-0496/
# poetry plans to remove the allows-prereleases key,
# and will only use the allow-prereleases key instead.
# if we have only version, return string instead of table
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\dephell\converters\poetrylock.py
# built-in
# external
# app
# fields for dependency: python, version, platform
# get repositories
# category can be "dev" or "main"
# add extras
# add repositories
# sha256 of tool.poetry section from pyproject.toml
# 'content-hash': ...,
# 'platform': '*',
# https://github.com/sdispater/poetry/blob/master/poetry.lock
# get link
# make markers
# make version
# add dependencies for dependencies
# add link
# add dependencies
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\dephell\converters\pyproject.py
# built-in
# external
# app
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\dephell\converters\sdist.py
# built-in
# external
# app
# place all files into subdir
# ratio of tests and project size after which tests will be excluded from sdist
# read *.egg-info
# read metainfo from PKG-INFO
# read dependencies from requires.txt
# write metafiles
# write packages
# write readme
# write setup files
# write license files
# write tests
# poetry/masonry/builders/sdist.py:clean_tarinfo
# Set 644 permissions, leaving higher bits of st_mode unchanged
# Executable: 644 -> 755
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\dephell\converters\setuppy.py
# built-in
# external
# app
# -*- coding: utf-8 -*-
# DO NOT EDIT THIS FILE!
# This file has been autogenerated by dephell <3
# https://github.com/dephell/dephell
# links
# authors
# entrypoints
# dependency_links
# dependencies
# extras
#metadata
# links
# authors
# packages, package_data
# depedencies
# dependency_links
# extras
# beautify
# private methods
#egg=' + req.name
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\dephell\converters\wheel.py
# built-in
# external
# app
# metadata file or dir for dists
# extracted wheel
# archived wheel
# if passed METADATA, just parse and return it
# maybe it's possible, so we will have to process it
# dependency_links.txt
# METADATA
# entry_points.txt
# "METADATA is the package metadata, the same format as PKG-INFO"
# (c) PEP-0427
# write metafiles
# write packages
# write license files
# write RECORD
# write content into archive
# calculate hashsum
# write content into archive
# calculate hashsum
# https://stackoverflow.com/questions/22058048/hashing-a-file-in-python
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\dephell\converters\__init__.py
# built-in
# app
# archives
# pip
# pipenv
# poetry
# environment
# other
# type: Dict[str, BaseConverter]
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\dephell\models\auth.py
# built-in
# external
# for requests
# additional check to prevent lack of creds
# for aiohttp
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\dephell\models\author.py
# built-in
# external
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\dephell\models\constraint.py
# built-in
# external
# properties
# methods
# don't apply same group twice
# unapply old group of this package:
# save params
# magic methods
# if group already applied
# if self._groups.get(name, -1) == group:
#     continue
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\dephell\models\dependency.py
# built-in
# external
# app
# flags
# optional info
# summary
# author{,_email}, maintainer{,_email}
# project_url{,s}, package_url
# classifiers
# license
# info from requirements file
# https://github.com/pypa/packaging/blob/master/packaging/markers.py
# which root extras cause this dep
# envs of parents
# package places on disk
# prlicenseoperties
# subdependencies has no direct envs, let's force it
# propagate envs to deps of this dep
# propagate repo
# propagate envs to deps of this dep
# if group has already choosed
# if group hasn't choosed
# methods
# if 'dependencies' in self.__dict__:
#     del self.__dict__['dependencies']
# magic methods
# some checks when we merge two git based dep
# links point to different revisions
# links point to different servers
# if ...
# .. 1. we don't use repo in self,
# .. 2. it's a git repo,
# .. 3. dep has non-git repo,
# .. 4. self has no rev,
# then prefer non-git repo, because it's more accurate and fast.
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\dephell\models\entrypoint.py
# external
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\dephell\models\extra_dependency.py
# external
# app
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\dephell\models\git_release.py
# external
# app
# just for information
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\dephell\models\group.py
# built-in
# app
# BEST RELEASE PROPERTIES
# RANDOM RELEASE PROPERTIES
# OTHER PROPERTIES
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\dephell\models\groups.py
# built-in
# external
# app
# sort
# attach extra
# collect missed releases
# fill missed deps by edge deps
# fetch missed releases
# return all groups from cache
# load first group
# load new groups
# collect releases with the same deps
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\dephell\models\marker_tracker.py
# external
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\dephell\models\release.py
# built-in
# external
# app
# type: tuple
# type: ignore
# upload_time
# requires_python
# digests/sha256
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\dephell\models\requirement.py
# built-in
# external
# app
# if roots wasn't applied then apply them
# get all nodes
# skip roots
# add extras
# mypy wants it
# mypy wants it
# mypy wants it
# mypy wants it
# mypy wants it
# drop all constraints not from roots
# mypy wants it
# mypy wants it
# TODO: calculate hash for local data
# envs
# install everything on dev environment
# methods
# magic methods
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\dephell\models\root.py
# built-in
# external
# app
# additional info strings
# Version
# Summary
# License
# additional info lists
# Home-page, Download-URL
# Author, Author-email
# Keywords
# Classifier
# Platform
# entry_points
# additional info objects
# packages, package_data
# Requires-Python
# Description
# get some metainfo from package
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\dephell\models\simple_dependency.py
# built-in
# external
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\dephell\models\__init__.py
# app
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\dephell\repositories\base.py
# built-in
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\dephell\repositories\_getter.py
# external
# app
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\dephell\repositories\_local.py
# built-in
# app
# load from file
# get from wheel or sdist
# read from egg-info
# read from dephell config
# get from dependencies file
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\dephell\repositories\_release.py
# built-in
# app
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\dephell\repositories\__init__.py
# app
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\dephell\repositories\_conda\_base.py
# built-in
# external
# app
# idk how this regex works
# source: conda/models/match_spec.py
#', 1)[0]
# TODO: parse url
# extract name
# extract version and build
# transform version to specifier
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\dephell\repositories\_conda\_cloud.py
# built-in
# external
# app
# https://conda.anaconda.org/conda-forge/linux-64
# https://conda.anaconda.org/conda-forge/noarch
# https://repo.anaconda.com/pkgs/main/linux-64
# https://repo.anaconda.com/pkgs/main/noarch
# https://repo.anaconda.com/pkgs/free/linux-64
# https://repo.anaconda.com/pkgs/free/noarch
# https://repo.anaconda.com/pkgs/r/linux-64
# https://repo.anaconda.com/pkgs/r/noarch
# https://conda.anaconda.org/{channel}/channeldata.json
# get deps
# hidden methods
# hidden properties
# release info
# file info
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\dephell\repositories\_conda\_composite.py
# built-in
# external
# app
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\dephell\repositories\_conda\_git.py
# built-in
# external
# app
# source: conda-build/metadata.py
# Selectors must be either:
# - at end of the line
# - embedded (anywhere) within a comment
#
# Notes:
# - [([^\[\]]+)\] means "find a pair of brackets containing any
#                 NON-bracket chars, and capture the contents"
# - (?(2)[^\(\)]*)$ means "allow trailing characters iff group 2 (#.*) was found."
#                 Skip markdown link syntax.
#.*)?\[([^\[\]]+)\](?(2)[^\(\)]*)$')
# https://github.com/conda-forge/textdistance-feedstock/blob/master/recipe/meta.yaml
# https://github.com/conda-forge/ukbparse-feedstock/blob/master/recipe/meta.yaml
# https://github.com/bioconda/bioconda-recipes/blob/master/recipes/anvio/meta.yaml
# get metainfo
# update dep
# make release
# get hashes
# get deps
# hidden methods
# download
# render
# clean
# parse
# os=os,
# functions
# modules
# system info
# python vars
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\dephell\repositories\_conda\__init__.py
# app
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\dephell\repositories\_git\bitbucket.py
# built-in
# app
# get from `#hash=...`
# https://api.bitbucket.org/2.0/repositories/mnpenner/merge-attrs/refs/tags
# https://bitbucket.org/atlassian/python-bitbucket/src/master/pybitbucket/auth.py
# https://developer.atlassian.com/bitbucket/api/2/reference/resource/repositories/%7Busername%7D/%7Brepo_slug%7D/refs/tags
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\dephell\repositories\_git\git.py
# built-in
# app
# PROPERTIES
# show-ref returns tags in alphabet order, so we have to sort tags ourselves.
# PUBLIC METHODS
# add tags to releases
# add current revision to releases
# get from cache
# load deps
# filter extras
# get version in that this commit has included
# if this commit isn't released yet than return latest release
# PRIVATE METHODS
# '2018-09-03T13:51:53+03:00'
# Python 3.6 cannot parse timezone with `:`.
# '2018-09-03T13:51:53+0300'
# TODO: look for version in setup.py and other places
# clone or fetch
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\dephell\repositories\_git\github.py
# built-in
# app
# https://developer.github.com/v3/repos/releases/
# https://api.github.com/repos/orsinium/textdistance/releases
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\dephell\repositories\_git\gitlab.py
# built-in
# app
# get from `#hash=...`
# https://gitlab.com/api/v4/projects/inkscape%2Finkscape/repository/tags
# https://docs.gitlab.com/ee/api/tags.html
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\dephell\repositories\_git\__init__.py
# WIP!!!
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\dephell\repositories\_warehouse\_api.py
# built-in
# external
# app
# allow prereleases
# make name canonical
# retrieve data
# update info for dependency
# init releases
# ignore version if no files for release
# filter prereleases if needed
# special case for black: if there is no releases, but found some
# prereleases, implicitly allow prereleases for this package
# retrieve data
# private methods
# if name contains dot, restore it, because setuptools can't process it
# If no requires_dist then package metadata can be broken.
# Let's check distribution files.
# # Dirty hack to make DepHell much faster.
# # If releases contains wheel then PyPI can parse requirements from it,
# # but hasn't found iany requirements. So, release has no requirements.
# # UPD: it doesn't work for prompt_toolkit
# for file_info in files_info:
#     if file_info['packagetype'] == 'bdist_wheel':
#         return ()
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\dephell\repositories\_warehouse\_base.py
# built-in
# external
# app
# I'm not sure how to combine `@abstractproperty` and `= attr.ib()`
# replace link on pypi api by link on simple index
# filter result
# try to parse with dropped out markers
# unsupported operation for version marker python_version: in
# it's not extra and we want not extra too
# it's extra, but we want not the extra
# or it's not the extra, but we want extra.
# it's extra and we want this extra
# load and make separated dep for every env
# download file
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\dephell\repositories\_warehouse\_local.py
# built-in
# external
# app
# allow prereleases
# deps of deps will inherit repo
# init releases
# ignore version if no files for release
# filter prereleases if needed
# special case for black: if there is no releases, but found some
# prereleases, implicitly allow prereleases for this package
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\dephell\repositories\_warehouse\_simple.py
# built-in
# external
# app
# allow prereleases
# deps of deps will inherit repo
# make name canonical
# init releases
# ignore version if no files for release
# filter prereleases if needed
# special case for black: if there is no releases, but found some
# prereleases, implicitly allow prereleases for this package
# private methods
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\dephell\repositories\_warehouse\__init__.py
# app
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\docs\conf.py
#!/usr/bin/env python3
# built-in
# external
# 'color': '#2c3e50',
# -- Options for HTMLHelp output ------------------------------------------
# Output file base name for HTML help builder.
# -- Options for LaTeX output ---------------------------------------------
# Grouping the document tree into LaTeX files. List of tuples
# (source start file, target name, title,
#  author, documentclass [howto, manual, or own class]).
# -- Options for manual page output ---------------------------------------
# One entry per manual page. List of tuples
# (source start file, name, description, authors, manual section).
# -- Options for Texinfo output -------------------------------------------
# Grouping the document tree into Texinfo files. List of tuples
# (source start file, target name, title, author,
#  dir menu entry, description, category)
# https://github.com/rtfd/recommonmark/blob/master/docs/conf.py
# 'url_resolver': lambda url: github_doc_root + url,
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\tests\conftest.py
# built-in
# external
# block network if no marker
# skip marked tests if no network connection
# if test marked with allow_hosts and hosts specified
# allow only these hosts. Otherwise allow all hosts
# add `orig_self` (original `ClientSession`) into `args`
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\tests\helpers.py
# built-in
# external
# project
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\tests\test_cli.py
# built-in
# project
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\tests\test_config.py
# built-in
# external
# project
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\tests\test_helpers.py
# app
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\tests\test_utils.py
# project
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\tests\__init__.py
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\tests\requirements\module.py
# isort skips this file, but `flake8-isort` can't read pyproject.toml
# isort:skip
# isort:skip
# isort:skip
# noqa: E402
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\tests\requirements\setup.py
# built-in
# external
# TODO: more info
#egg=libtest-0.1.0',
# Optional
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\tests\requirements\egg-info\setup.py
# built-in
# external
# TODO: more info
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\tests\requirements\egg-info\dephell\constants.py
# built-in
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\tests\requirements\egg-info\dephell\__init__.py
# app
# noQA
# noQA
# noQA
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\tests\requirements\egg-info\dephell\__main__.py
# built-in
# app
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\tests\test_actions\test_dotenv.py
# external
# project
# https://github.com/jpadilla/django-dotenv/blob/master/tests.py
# https://github.com/motdotla/dotenv/blob/master/tests/.env
# lol'], {'a': 'b'}),
# strip spaces
# quotes
# key formats
# empty
# substitution
# escaping
# escape sequences
# comments
# out'], {'take': 'me'}),
# to" # church'], {'take': 'me # to'}),
# to # church'], {'take': 'me'}),
# out"'], {'take': 'me # out'}),
# take', 'me=out'], {'me': 'out'}),
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\tests\test_actions\test_transform.py
# built-in
# external
# project
# module import
# ('import foo.bar', 'from baz.bar', 'foo', 'baz'),
# from import
# as import
# string replacement
# ('import foo.bar\nfoo.bar.test()', 'import baz.bar\nbaz.bar.test()', 'foo', 'baz'),
# (
#     'import old.foo.bar\nold.foo.bar.test()',
#     'import new.baz.bar\nnew.baz.bar.test()',
#     'old.foo', 'new.baz',
# ),
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\tests\test_actions\test_travis.py
# project
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\tests\test_actions\__init__.py
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\tests\test_commands\test_build.py
# built-in
# project
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\tests\test_commands\test_deps_audit.py
# built-in
# external
# project
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\tests\test_commands\test_deps_convert.py
# built-in
# project
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\tests\test_commands\test_deps_install.py
# built-in
# external
# project
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\tests\test_commands\test_deps_licenses.py
# built-in
# external
# project
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\tests\test_commands\test_deps_outdated.py
# built-in
# external
# project
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\tests\test_commands\test_deps_tree.py
# built-in
# external
# project
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\tests\test_commands\test_generate_config.py
# built-in
# external
# project
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\tests\test_commands\test_generate_contributing.py
# built-in
# project
## Testing' in content
## Style' in content
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\tests\test_commands\test_generate_editorconfig.py
# built-in
# project
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\tests\test_commands\test_generate_license.py
# built-in
# external
# project
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\tests\test_commands\test_generate_travis.py
# built-in
# project
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\tests\test_commands\test_inspect_config.py
# built-in
# project
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\tests\test_commands\test_inspect_project.py
# built-in
# project
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\tests\test_commands\test_inspect_venv.py
# built-in
# external
# project
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\tests\test_commands\test_jail_install.py
# built-in
# external
# project
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\tests\test_commands\test_package_bug.py
# external
# project
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\tests\test_commands\test_package_downloads.py
# built-in
# external
# project
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\tests\test_commands\test_package_install.py
# built-in
# external
# project
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\tests\test_commands\test_package_search.py
# built-in
# external
# project
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\tests\test_commands\test_package_show.py
# built-in
# external
# project
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\tests\test_commands\test_project_bump.py
# built-in
# external
# project
# init local repo and add `__init__.py` to git index
# it's needed because bump command with tag generates not only tag, but also commit with --update flag
# --update add to commit only modified files, not created (__init__.py in this case is created)
# just read stdout from git tag command
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\tests\test_commands\test_vendor_download.py
# built-in
# project
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\tests\test_commands\test_vendor_import.py
# built-in
# external
# project
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\tests\test_commands\test_venv_create.py
# built-in
# external
# project
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\tests\test_commands\test_venv_destroy.py
# built-in
# external
# project
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\tests\test_commands\__init__.py
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\tests\test_controllers\test_safety.py
# external
# project
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\tests\test_controllers\test_snyk.py
# external
# project
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\tests\test_controllers\__init__.py
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\tests\test_converters\test_all.py
# external
# built-in
# project
# check all params
# check warehouse URL
# exactly one dev or main env should be specified for dep
# check envs (extras)
# (converters.PoetryLockConverter(), root_path / 'poetry.lock.toml'),
# converters.PIPConverter(lock=False),
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\tests\test_converters\test_conda.py
# project
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\tests\test_converters\test_egginfo.py
# built-in
# external
# project
#egg=libtest'
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\tests\test_converters\test_imports.py
# built-in
# external
# project
# import from
# starred import
# aliasing
# simple import
# exception
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\tests\test_converters\test_installed.py
# project
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\tests\test_converters\test_pip.py
# built-in
# external
# project
# test dep
# test format
#egg=django')
#egg=django', None),
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\tests\test_converters\test_pipfile.py
# built-in
# external
# project
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\tests\test_converters\test_pipfilelock.py
# built-in
# external
# project
# https://github.com/pypa/pipfile/blob/master/examples/Pipfile.lock
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\tests\test_converters\test_poetry.py
# built-in
# external
# project
# god bless comments',
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\tests\test_converters\test_poetrylock.py
# built-in
# external
# project
# assert str(deps['certifi'].group.best_release.version) == '2018.11.29'
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\tests\test_converters\test_sdist.py
# built-in
# project
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\tests\test_converters\test_setuppy.py
# built-in
# external
# project
#egg=libtest-0.1.0"],
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\tests\test_converters\test_wheel.py
# built-in
# project
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\tests\test_converters\__init__.py
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\tests\test_models\test_author.py
# external
# project
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\tests\test_models\test_marker_tracker.py
# project
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\tests\test_models\test_models_dependency.py
# external
# project
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\tests\test_models\test_release.py
# built-in
# external
# project
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\tests\test_models\test_requirement.py
# external
# project
#egg=dephell',
#egg=dephell',
#egg=dephell',
#egg=dephell',
#egg=dephell',
#egg=dephell',
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\tests\test_models\__init__.py
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\tests\test_repositories\test_conda.py
# built-in
# external
# project
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\tests\test_repositories\test_git_git.py
# built-in
# external
# project
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\tests\test_repositories\test_local.py
# built-in
# project
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\tests\test_repositories\test_warehouse_api.py
# built-in
# external
# project
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\tests\test_repositories\test_warehouse_local.py
# built-in
# project
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\tests\test_repositories\test_warehouse_simple.py
# built-in
# external
# project
# to download archive
# to download archive
# test pypi
# test custom
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\tests\test_repositories\__init__.py
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\tests\test_resolving\test_extras.py
# app
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\tests\test_resolving\test_git_resolving.py
# built-in
# external
# project
# 1.11
# 1.9
# 1.7
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\tests\test_resolving\test_merging.py
# project
# app
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\tests\test_resolving\test_mutator.py
# built-in
# project
# app
# if cannot mutate
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\tests\test_resolving\test_python_compat.py
# external
# project
# open intervals
# one point intersection
# version isn't exist
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\tests\test_resolving\test_resolver.py
# app
# now dephell choose first local maximum, not total.
# check(root=root, a='==2', b='==1', c='==2')
# check(root=root, a='==4', b='==4', c='==2')
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\tests\test_resolving\test_smoke.py
# built-in
# external
# project
# assert str(resolver.graph.get('numpy').group.best_release.version) == '1.15.1'
# https://github.com/sdispater/poetry#dependency-resolution
# assert str(resolver.graph.get('oslo-i18n').group.best_release.version) == '2.1.0'
# https://github.com/sdispater/poetry#dependency-resolution
# arpeggio==1.7.*,>=1.7.0
________________________________________________________________________________________
E:/AllLangDS/ds/python/dephell-master\dephell-master\tests\test_resolving\__init__.py
