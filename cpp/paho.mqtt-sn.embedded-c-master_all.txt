#*******************************************************************************
#  Copyright (c) 2017 IBM Corp.
#
#  All rights reserved. This program and the accompanying materials
#  are made available under the terms of the Eclipse Public License v1.0
#  and Eclipse Distribution License v1.0 which accompany this distribution.
#
#  The Eclipse Public License is available at
#     http://www.eclipse.org/legal/epl-v10.html
#  and the Eclipse Distribution License is available at
#    http://www.eclipse.org/org/documents/edl-v10.php.
#
#  Contributors:
#     Ian Craggs - initial version
#*******************************************************************************/

CMAKE_MINIMUM_REQUIRED(VERSION 2.8)
PROJECT("paho-mqttsn" CXX)
MESSAGE(STATUS "CMake version: " ${CMAKE_VERSION})
MESSAGE(STATUS "CMake system name: " ${CMAKE_SYSTEM_NAME})

SET(CMAKE_SCRIPTS "${CMAKE_SOURCE_DIR}/cmake")
SET(CMAKE_MODULE_PATH "${CMAKE_SOURCE_DIR}/cmake/modules")

## build settings
SET(PAHO_VERSION_MAJOR 1)
SET(PAHO_VERSION_MINOR 0)
SET(PAHO_VERSION_PATCH 0)
SET(CLIENT_VERSION ${PAHO_VERSION_MAJOR}.${PAHO_VERSION_MINOR}.${PAHO_VERSION_PATCH})

STRING(TIMESTAMP BUILD_TIMESTAMP UTC)
MESSAGE(STATUS "Timestamp is ${BUILD_TIMESTAMP}")

SET(CPACK_PACKAGE_VERSION_MAJOR ${PAHO_VERSION_MAJOR})
SET(CPACK_PACKAGE_VERSION_MINOR ${PAHO_VERSION_MINOR})
SET(CPACK_PACKAGE_VERSION_PATCH ${PAHO_VERSION_PATCH})
INCLUDE(CPack)

ENABLE_TESTING()

ADD_SUBDIRECTORY(MQTTSNPacket)
# Contributing to Paho

Thanks for your interest in this project!

You can contribute bugfixes and new features by sending pull requests through GitHub.

## Legal

In order for your contribution to be accepted, it must comply with the Eclipse Foundation IP policy.

Please read the [Eclipse Foundation policy on accepting contributions via Git](http://wiki.eclipse.org/Development_Resources/Contributing_via_Git).

1. Sign the [Eclipse ECA](http://www.eclipse.org/legal/ECA.php)
  1. Register for an Eclipse Foundation User ID. You can register [here](https://dev.eclipse.org/site_login/createaccount.php).
  2. Log into the [Eclipse projects forge](https://www.eclipse.org/contribute/cla), and click on 'Eclipse Contributor Agreement'.
2. Go to your [account settings](https://dev.eclipse.org/site_login/myaccount.php#open_tab_accountsettings) and add your GitHub username to your account.
3. Make sure that you _sign-off_ your Git commits in the following format:
  ``` Signed-off-by: Alex Smith <alexsmith@nowhere.com> ``` This is usually at the bottom of the commit message. You can automate this by adding the '-s' flag when you make the commits. e.g.   ```git commit -s -m "Adding a cool feature"```
4. Ensure that the email address that you make your commits with is the same one you used to sign up to the Eclipse Foundation website with.

## Contributing a change

## Contributing a change

1. [Fork the repository on GitHub](https://github.com/eclipse/paho.mqtt-sn.embedded-c/fork)
2. Clone the forked repository onto your computer: ``` git clone https://github.com/<your username>/paho.mqtt-sn.embedded-c.git ```
3. Create a new branch from the latest ```develop``` branch with ```git checkout -b YOUR_BRANCH_NAME origin/develop```
4. Make your changes
5. If developing a new feature, make sure to include JUnit tests.
6. Ensure that all new and existing tests pass.
7. Commit the changes into the branch: ``` git commit -s ``` Make sure that your commit message is meaningful and describes your changes correctly.
8. If you have a lot of commits for the change, squash them into a single / few commits.
9. Push the changes in your branch to your forked repository.
10. Finally, go to [https://github.com/eclipse/paho.mqtt-sn.embedded-c](https://github.com/eclipse/paho.mqtt-sn.embedded-c) and create a pull request from your "YOUR_BRANCH_NAME" branch to the ```develop``` one to request review and merge of the commits in your pushed branch.


What happens next depends on the content of the patch. If it is 100% authored
by the contributor and is less than 1000 lines (and meets the needs of the
project), then it can be pulled into the main repository. If not, more steps
are required. These are detailed in the
[legal process poster](http://www.eclipse.org/legal/EclipseLegalProcessPoster.pdf).



## Developer resources:


Information regarding source code management, builds, coding standards, and more.

- [https://projects.eclipse.org/projects/iot.paho/developer](https://projects.eclipse.org/projects/iot.paho/developer)

Contact:
--------

Contact the project developers via the project's development
[mailing list](https://dev.eclipse.org/mailman/listinfo/paho-dev).

Search for bugs:
----------------

This project uses GitHub Issues here: [github.com/eclipse/paho.mqtt-sn.embedded-c/issues](https://github.com/eclipse/paho.mqtt-sn.embedded-c/issues) to track ongoing development and issues.

Create a new bug:
-----------------

Be sure to search for existing bugs before you create another one. Remember that contributions are always welcome!

- [Create new Paho bug](https://github.com/eclipse/paho.mqtt-sn.embedded-c/issues/new)
# Eclipse Paho MQTT-SN C/C++ client for Embedded platforms

This repository contains the source code for the [Eclipse Paho](http://eclipse.org/paho) MQTT-SN C/C++ client library for Embedded platorms.

It is dual licensed under the EPL and EDL (see about.html and notice.html for more details).  You can choose which of these licenses you want to use the code under.  The EDL allows you to embed the code into your application, and distribute your application in binary or source form without contributing any of your code, or any changes you make back to Paho.  See the EDL for the exact conditions.

There are three sub-projects:

1. MQTTSNPacket - simple de/serialization of MQTT-SN packets, plus helper functions
2. MQTTGateway - MQTT-SN transparent/aggregating gateway - connects MQTT-SN clients with an MQTT server.  See the README within the project for more information.
3. MQTTSNClient - high(er) level C++ client (not yet complete)

The *MQTTSNPacket* directory contains the lowest level C library with the smallest requirements.  This supplies simple serialization
and deserialization routines.  They serve as a base for the higher level libraries, but can also be used on their own.
It is mainly up to you to write and read to and from the network.

The *MQTTSNGateway* directory contains an MQTT-SN to MQTT transparent/aggregating gateway (see the MQTT-SN specification for a description of that.)  It can
be used to connect the MQTT-SN client to an MQTT server.

The *MQTTSNClient* directory contains the next level C++ library.  This is intended to mirror the way the MQTTClient works in the Paho embedded
MQTT project, but it's not yet complete.

## Build requirements / compilation

CMake builds for MQTTSNPacket with a Makefile for MQTTSNGateway have been introduced, along with Travis-CI configuration for automated build & testing.

The travis-build.sh file has the full build and test sequence for Linux.


## Usage and API

See the samples directories for examples of intended use.  Doxygen config files are available in the doc directory.

## Runtime tracing


## Reporting bugs

This project uses GitHub Issues here: [github.com/eclipse/paho.mqtt-sn.embedded-c/issues](https://github.com/eclipse/paho.mqtt-sn.embedded-c/issues) to track ongoing development and issues.

## More information

Discussion of the Paho clients takes place on the [Eclipse Mattermost Paho channel](https://mattermost.eclipse.org/eclipse/channels/paho) and the [Eclipse paho-dev mailing list](https://dev.eclipse.org/mailman/listinfo/paho-dev).

General questions about the MQTT protocol are discussed in the [MQTT Google Group](https://groups.google.com/forum/?hl=en-US&fromgroups#!forum/mqtt).

More information is available via the [MQTT community](http://mqtt.org).

# MQTT-SN Transparent / Aggrigating Gateway

**MQTT-SN** requires a MQTT-SN Gateway which acts as a protocol converter to convert **MQTT-SN messages to MQTT messages**. MQTT-SN client over SensorNetwork can not communicate directly with MQTT broker(TCP/IP).   
This Gateway can run as a transparent or aggrigating Gateway by specifying the gateway.conf.

### **step1. Build the gateway**   
````
$ git clone -b experiment https://github.com/eclipse/paho.mqtt-sn.embedded-c   
$ cd paho.mqtt-sn.embedded-c/MQTTSNGateway       
$ make [SENSORNET={udp6|xbee}] 
$ make install   
$ make clean    
````      
By default, a gateway for UDP is built.    
In order to create a gateway for UDP6 or XBee, SENSORNET argument is required.  
 
MQTT-SNGateway, MQTT-SNLogmonitor and *.conf files are copied into ../ directory.    
If you want to install the gateway into specific directories, enter a command line as follows:
````
$ make install INSTALL_DIR=/path/to/your_directory CONFIG_DIR=/path/to/your_directory
````

    
### **step2. Execute the Gateway.**     

````    
$ cd ../   
$ ./MQTT-SNGateway [-f Config file name]
````   


### **How to Change the configuration of the gateway**    
**../gateway.conf**   Contents are follows: 
   
<pre><dev>    

# config file of MQTT-SN Gateway
#

BrokerName=iot.eclipse.org
BrokerPortNo=1883
BrokerSecurePortNo=8883

#
# When AggregatingGateway=YES or ClientAuthentication=YES,
# All clients must be specified by the ClientList File  
#

ClientAuthentication=NO
AggregatingGateway=NO
QoS-1=NO
Forwarder=NO

#ClientsList=/path/to/your_clients.conf

PredefinedTopic=NO
#PredefinedTopicList=/path/to/your_predefinedTopic.conf

#RootCAfile=/etc/ssl/certs/ca-certificates.crt
#RootCApath=/etc/ssl/certs/
#CertsFile=/path/to/certKey.pem
#PrivateKey=/path/to/privateKey.pem

GatewayID=1
GatewayName=PahoGateway-01
KeepAlive=900
#LoginID=your_ID
#Password=your_Password


# UDP
GatewayPortNo=10000
MulticastIP=225.1.1.1
MulticastPortNo=1883

# XBee
Baudrate=38400
SerialDevice=/dev/ttyUSB0
ApiMode=2

# LOG
ShearedMemory=NO;

</dev></pre>    

**BrokerName** to specify a domain name of the Broker, and **BrokerPortNo** is a port No of the Broker. **BrokerSecurePortNo** is for TLS connection.       
**MulticastIP** and **MulticastPortNo** is a multicast address for GWSEARCH messages. Gateway is waiting GWSEARCH  and when receiving it send GWINFO message via MulticastIP address. Clients can get the gateway address (Gateway IP address and **GatewayPortNo**) from GWINFO message by means of std::recvfrom().
Client should know the MulticastIP and MulticastPortNo to send a SEARCHGW message.    
**GatewayId** is used by GWINFO message.    
**KeepAlive** is a duration of ADVERTISE message in seconds.    
when **AggregatingGateway** or **ClientAuthentication** is **YES**, All clients which connect to the gateway must be declared by a **ClientsList** file.       
Format of the file is ClientId and SensorNetwork Address. e.g. IP address and Port No etc, in CSV. more detail see clients.conf.    
When **QoS-1** is **YES**, QoS-1 PUBLISH is available. All clients which send QoS-1 PUBLISH must be specified by Client.conf file. 
When **PredefinedTopic** is **YES**, **Pre-definedTopicId**s  specified by **PredefinedTopicList** are effective. This file defines Pre-definedTopics of the clients. In this file, ClientID,TopicName and TopicID are declared in CSV format.    
When **Forwarder** is **YES**, Forwarder Encapsulation Message is available. Connectable Forwarders must be declared by a **ClientsList** file.     
 
### ** How to monitor the gateway from remote. **
Change gateway.conf as follows:
```
# LOG
ShearedMemory=YES;
````

Restart the gateway with sudo only once to create shared memories.    

open ssh terminal and execute LogMonitor.

`$ ./MQTT-SNLogmonitor`    

Now you can get the Log on your terminal.


## ** Tips **
Uncomment the line 62, 63 in MQTTSNDefines.h then you can get more precise logs.
```
/*=================================
 *    Log controls
 ==================================*/
//#define DEBUG          // print out log for debug
//#define DEBUG_NWSTACK  // print out SensorNetwork log
```



###Gateway Test Program.    
**sample/mainTest.cpp** is a Test sample coading.   
Each test is described as one function. test1(), test2()...     
````
/*------------------------------------------------------
 *    Test functions
 *
 *    you can use 4 commands in Test functions
 *
 *    1) PUBLISH(const char* topicName,
 *               uint8_t*    payload,
 *               uint16_t    len,
 *               uint8_t     qos,
 *               bool        retain = false);
 *
 *    2) SUBSCRIBE(const char*   topicName,
 *                 TopicCallback onPublish,
 *                 uint8_t qos);
 *
 *    3) UNSUBSCRIBE(const char* topicName);
 *
 *    4) DISCONNECT(uint16_t sleepInSecs);
 *
 *------------------------------------------------------*/

void test1(void)
{
	char payload[300];
	sprintf(payload, "ESP8266-08b133 ");
	uint8_t qos = 0;
	PUBLISH(topic1,(uint8_t*)payload, strlen(payload), qos);
}

void test2(void)
{
	uint8_t qos = 1;
	SUBSCRIBE(topic2, on_publish02, qos);
}
````
**TEST_LIST** is a test senario. Test functions are executed one by one. 
```` 
/*------------------------------------------------------
 *    A List of Test Tasks
 *------------------------------------------------------*/

TEST_LIST = {// e.g. TEST( Label, Test),
			 TEST("Publish topic1",     test1),
			 TEST("Subscribe topic2",   test2),
			 TEST("Publish topic2",     test3),
			 TEST("Unsubscribe topic2", test4),
			 TEST("Publish topic2",     test3),
			 TEST("Disconnect",         test5),
			 END_OF_TEST_LIST
			};
```` 

### **step1. Build **   
````
$ git clone https://github.com/eclipse/paho.mqtt-sn.embedded-c 
$ cd paho.mqtt-sn.embedded-c/MQTTSNGateway/GatewayTester       
$ make   
$ make install   
$ make clean
```       
MQTT-SNGatewayTester program is copied into ../../../ directory.

    
### **step2. Execute Gateway Tester.**     

````    
$ cd ../../..   
$ ./MQTT-SNGatewayTester
  
 ***************************************************************************
 * MQTT-SN Gateway Tester
 * Part of Project Paho in Eclipse
 * (http://git.eclipse.org/c/paho/org.eclipse.paho.mqtt-sn.embedded-c.git/)
 *
 * Author : Tomoaki YAMAGUCHI
 * Version: 0.0.0
 ***************************************************************************

Attempting to Connect the Broker.....

sendto 225.1.1.1      :1883   03 01 00

recved 192.168.11.5   :1883   03 01 00
sendto 225.1.1.1      :1883   03 01 00

recved 192.168.11.5   :1883   03 01 00

recved 192.168.11.17  :10000  03 02 01
sendto 192.168.11.17  :10000  13 04 0c 01 03 84 47 61 74 65 77 61 79 54 65 73 74 65 72

recved 192.168.11.17  :10000  02 06
sendto 192.168.11.17  :10000  0c 07 00 77 69 6c 6c 54 6f 70 69 63

recved 192.168.11.17  :10000  02 08
sendto 192.168.11.17  :10000  0d 09 77 69 6c 6c 4d 65 73 73 61 67 65

recved 192.168.11.17  :10000  03 05 00


 Connected to the Broker

 Attempting OnConnect.....
sendto 192.168.11.17  :10000  13 12 20 00 01 74 79 34 74 77 2f 63 6c 69 65 6e 74 49 64

recved 192.168.11.17  :10000  08 13 20 00 01 00 01 00


 SUBSCRIBE complete. ty4tw/clientId

 OnConnect complete
 Test Ready.

Execute Publish topic1 Test ? ( Y/N ) :  

````    
#*******************************************************************************
#  Copyright (c) 2017 IBM Corp.
#
#  All rights reserved. This program and the accompanying materials
#  are made available under the terms of the Eclipse Public License v1.0
#  and Eclipse Distribution License v1.0 which accompany this distribution.
#
#  The Eclipse Public License is available at
#     http://www.eclipse.org/legal/epl-v10.html
#  and the Eclipse Distribution License is available at
#    http://www.eclipse.org/org/documents/edl-v10.php.
#
#  Contributors:
#     Ian Craggs - initial version
#*******************************************************************************/

PROJECT("paho-mqttsnpacket" C)

ADD_SUBDIRECTORY(src)
ADD_SUBDIRECTORY(samples)
ADD_SUBDIRECTORY(test)
#*******************************************************************************
#  Copyright (c) 2017 IBM Corp.
#
#  All rights reserved. This program and the accompanying materials
#  are made available under the terms of the Eclipse Public License v1.0
#  and Eclipse Distribution License v1.0 which accompany this distribution.
#
#  The Eclipse Public License is available at
#     http://www.eclipse.org/legal/epl-v10.html
#  and the Eclipse Distribution License is available at
#    http://www.eclipse.org/org/documents/edl-v10.php.
#
#  Contributors:
#     Ian Craggs - initial version
#*******************************************************************************/

PROJECT(mqtt-sn-samples)

INCLUDE_DIRECTORIES(../src)

ADD_EXECUTABLE(
  qos0pub
  qos0pub.c transport.c
)

TARGET_LINK_LIBRARIES(qos0pub MQTTSNPacketClient)

ADD_EXECUTABLE(
  qos0pub_register
  qos0pub_register.c transport.c
)

TARGET_LINK_LIBRARIES(qos0pub_register MQTTSNPacketClient)

ADD_EXECUTABLE(
  qos-1pub
  qos-1pub.c transport.c
)

TARGET_LINK_LIBRARIES(qos-1pub MQTTSNPacketClient)

ADD_EXECUTABLE(
  qos-1pub_extended
  qos-1pub_extended.c transport.c
)

TARGET_LINK_LIBRARIES(qos-1pub_extended MQTTSNPacketClient)

ADD_EXECUTABLE(
  qos1pub
  qos1pub.c transport.c
)

TARGET_LINK_LIBRARIES(qos1pub MQTTSNPacketClient)

ADD_EXECUTABLE(
  pub0sub1
  pub0sub1.c transport.c
)

TARGET_LINK_LIBRARIES(pub0sub1 MQTTSNPacketClient)
#*******************************************************************************
#  Copyright (c) 2017 IBM Corp.
#
#  All rights reserved. This program and the accompanying materials
#  are made available under the terms of the Eclipse Public License v1.0
#  and Eclipse Distribution License v1.0 which accompany this distribution.
#
#  The Eclipse Public License is available at
#     http://www.eclipse.org/legal/epl-v10.html
#  and the Eclipse Distribution License is available at
#    http://www.eclipse.org/org/documents/edl-v10.php.
#
#  Contributors:
#     Ian Craggs - initial version
#*******************************************************************************/


PROJECT(mqtt-sn-packet C)

ADD_LIBRARY(MQTTSNPacketClient SHARED MQTTSNConnectClient.c MQTTSNPacket.c MQTTSNSearchClient.c MQTTSNSubscribeClient.c
            MQTTSNUnsubscribeClient.c MQTTSNSerializePublish.c MQTTSNDeserializePublish.c)

ADD_LIBRARY(MQTTSNPacketServer SHARED MQTTSNConnectServer.c MQTTSNPacket.c MQTTSNSearchServer.c MQTTSNSubscribeServer.c
            MQTTSNUnsubscribeServer.c MQTTSNSerializePublish.c MQTTSNDeserializePublish.c)
#*******************************************************************************
#  Copyright (c) 2017 IBM Corp.
#
#  All rights reserved. This program and the accompanying materials
#  are made available under the terms of the Eclipse Public License v1.0
#  and Eclipse Distribution License v1.0 which accompany this distribution.
#
#  The Eclipse Public License is available at
#     http://www.eclipse.org/legal/epl-v10.html
#  and the Eclipse Distribution License is available at
#    http://www.eclipse.org/org/documents/edl-v10.php.
#
#  Contributors:
#     Ian Craggs - initial version
#*******************************************************************************/

PROJECT(mqtt-sn-tests)

INCLUDE_DIRECTORIES(../src)

ADD_EXECUTABLE(
  test1
  test1.c
)

TARGET_LINK_LIBRARIES(test1 MQTTSNPacketClient MQTTSNPacketServer)

ADD_TEST(NAME test1 COMMAND test1)

ADD_EXECUTABLE(
  test2
  test2.c
)

TARGET_LINK_LIBRARIES(test2 MQTTSNPacketClient MQTTSNPacketServer)
/*******************************************************************************
//www.eclipse.org/legal/epl-v10.html
//www.eclipse.org/org/documents/edl-v10.php.
//if (errno != EINTR && errno != EAGAIN && errno != EINPROGRESS && errno != EWOULDBLOCK)
//{
//}
/* prefer ip4 addresses */
//int opt = 1;
//if (setsockopt(mysock, SOL_SOCKET, SO_NOSIGPIPE, (void*)&opt, sizeof(opt)) != 0)
//	printf("Could not set SO_NOSIGPIPE for socket %d", mysock);
/* 30 Secs Timeout */
// Not init'ing this can cause strange errors
//printf("write rc %d\n", rc);
//printf("left %d ms\n", (res.tv_sec < 0) ? 0 : res.tv_sec * 1000 + res.tv_usec / 1000);
//if (res.tv_sec > 0 || res.tv_usec > 0)
//	printf("expired %d %d\n", res.tv_sec, res.tv_usec);
//printf("interval %d %d\n", interval.tv_sec, interval.tv_usec);
//printf("left %d ms\n", (res.tv_sec < 0) ? 0 : res.tv_sec * 1000 + res.tv_usec / 1000);
/****************************************************************************
//www.eclipse.org/legal/epl-v10.html
//www.eclipse.org/org/documents/edl-v10.php.
/*------------------------------------------------------
// ClientId
// Multicast group IP
// Multicast group Port
// Local PortNo
/*------------------------------------------------------
//KeepAlive [seconds]
//Clean session
//Sleep duration [seconds]
//WillTopic
//WillMessage
//WillQos
//WillRetain
/*------------------------------------------------------
/*------------------------------------------------------
// set null terminator
// set null terminator
// set null terminator
/*------------------------------------------------------
// e.g. SUB(TopicType, topicName, TopicId, callback, QoSx),
/*------------------------------------------------------
/*------------------------------------------------------
//#define CLIENT_MODE
// e.g. TEST( Label, Test),
/*------------------------------------------------------
// e.g. TASK( task, executing duration in second),
// publishTopic1() is executed every 4 seconds
// publishTopic2() is executed every 7 seconds
/*------------------------------------------------------
/*****************  END OF  PROGRAM ********************/
/****************************************************************************
//www.eclipse.org/legal/epl-v10.html
//www.eclipse.org/org/documents/edl-v10.php.
/*------------------------------------------------------
// ClientId
// Multicast group IP
// Multicast group Port
// Local PortNo
/*------------------------------------------------------
//KeepAlive [seconds]
//Clean session
//Sleep duration [seconds]
//WillTopic
//WillMessage
//WillQos
//WillRetain
/*------------------------------------------------------
/*------------------------------------------------------
/*------------------------------------------------------
// e.g. SUB(topic, callback, QoS),
/*------------------------------------------------------
/*------------------------------------------------------
//#define CLIENT_MODE
// e.g. TEST( Label, Test),
/*------------------------------------------------------
// e.g. TASK( task, executing duration in second),
// publishTopic1() is executed every 4 seconds
// publishTopic2() is executed every 7 seconds
/*------------------------------------------------------
/*****************  END OF  PROGRAM ********************/
/****************************************************************************
//www.eclipse.org/legal/epl-v10.html
//www.eclipse.org/org/documents/edl-v10.php.
/*------------------------------------------------------
// ClientId
// Multicast group IP
// Multicast group Port
// Local PortNo
/*------------------------------------------------------
//KeepAlive [seconds]
//Clean session
//Sleep duration [seconds]
//WillTopic
//WillMessage
//WillQos
//WillRetain
/*------------------------------------------------------
/*------------------------------------------------------
/*------------------------------------------------------
// e.g. SUB(TopicType, topicName, TopicId, callback, QoSx),
/*------------------------------------------------------
/*------------------------------------------------------
//#define CLIENT_MODE
// e.g. TEST( Label, Test),
/*------------------------------------------------------
// e.g. TASK( task, executing duration in second),
// publishTopic1() is executed every 4 seconds
// publishTopic2() is executed every 7 seconds
/*------------------------------------------------------
/*****************  END OF  PROGRAM ********************/
/****************************************************************************
//www.eclipse.org/legal/epl-v10.html
//www.eclipse.org/org/documents/edl-v10.php.
/*------------------------------------------------------
// ClientId
// Multicast group IP
// Multicast group Port
// Local PortNo
/*------------------------------------------------------
//KeepAlive [seconds]
//Clean session
//Sleep duration [seconds]
//WillTopic
//WillMessage
//WillQos
//WillRetain
/*------------------------------------------------------
/*------------------------------------------------------
// set null terminator
// set null terminator
// set null terminator
// set null terminator
/*------------------------------------------------------
// e.g. SUB(TopicType, topicName, TopicId, callback, QoSx),
// SUB(MQTTSN_TOPIC_TYPE_NORMAL, topic5, 0, on_Topic05, QoS1),
//SUB(MQTTSN_TOPIC_TYPE_NORMAL, topic2, 0, on_Topic02, QoS1),
/*------------------------------------------------------
/*------------------------------------------------------
//#define CLIENT_MODE
// e.g. TEST( Label, Test),
//TEST("Step2:Subscribe topic2",     subscribeTopic2),
/*------------------------------------------------------
// e.g. TASK( task, executing duration in second),
/*------------------------------------------------------
/*****************  END OF  PROGRAM ********************/
/**************************************************************************************
//www.eclipse.org/legal/epl-v10.html
//www.eclipse.org/org/documents/edl-v10.php.
/*=====================================
// SERCHGW
// WILLMSG
// WILLTOPIC
// CONNECT
// Not writeGwMsg() : not to reset the counter.
// SUBSCRIBEs are conducted
/* Wake up and starts from this point. */
//error
// Check PINGREQ required
// Check ADVERTISE valid
// Check Timeout of REGISTERs
// Check Timeout of PUBLISHes,
// Check Timeout of SUBSCRIBEs,
// create a forwarder encapsulation message  WirelessNodeId is a 4bytes fake data
/**************************************************************************************
//www.eclipse.org/legal/epl-v10.html
//www.eclipse.org/org/documents/edl-v10.php.
/*=====================================
/*-------------------------------------
/*=====================================
// ToDo:  set WDT and sleep mode
/**************************************************************************************
//www.eclipse.org/legal/epl-v10.html
//www.eclipse.org/org/documents/edl-v10.php.
/*=========================================
//if(recvLen != *len){
//	*len = 0;
//	return 0;
//}else{
//}
/*=========================================
// -20 for Escape sequence
// 50 msec
/**************************************************************************************
//www.eclipse.org/legal/epl-v10.html
//www.eclipse.org/org/documents/edl-v10.php.
/*========================================
// PUBLISH Done
// PUBLISH Done
// PUBLISH Done
/*
/**************************************************************************************
//www.eclipse.org/legal/epl-v10.html
//www.eclipse.org/org/documents/edl-v10.php.
/*=====================================
// Add Topic to TopicTable
// *msg is terminated with 0x00 by Network::getMessage()
/**************************************************************************************
//www.eclipse.org/legal/epl-v10.html
//www.eclipse.org/org/documents/edl-v10.php.
/**************************************************************************************
//www.eclipse.org/legal/epl-v10.html
//www.eclipse.org/org/documents/edl-v10.php.
/*========================================
//theClient->getGwProxy()->getTopicTable()->setCallback(elm->topicName, 0);
/* SubElement operations */
/**************************************************************************************
//www.eclipse.org/legal/epl-v10.html
//www.eclipse.org/org/documents/edl-v10.php.
/*=====================================
/**************************************************************************************
//www.eclipse.org/legal/epl-v10.html
//www.eclipse.org/org/documents/edl-v10.php.
//using namespace std;
/*=====================================
/**************************************************************************************
//www.eclipse.org/legal/epl-v10.html
//www.eclipse.org/org/documents/edl-v10.php.
/*=====================================
/*=====================================
/**************************************************************************************
//www.eclipse.org/legal/epl-v10.html
//www.eclipse.org/org/documents/edl-v10.php.
/*=====================================
/*======================
/*======================
/*
/**************************************************************************************
//www.eclipse.org/legal/epl-v10.html
//www.eclipse.org/org/documents/edl-v10.php.
/*=====================================
/*--- For Little endianness ---*/
/*--- For Big endianness ---*/
// CPU_LITTLEENDIANN
/**************************************************************************************
//www.eclipse.org/legal/epl-v10.html
//www.eclipse.org/org/documents/edl-v10.php.
/*
/**************************************************************************************
//www.eclipse.org/legal/epl-v10.html
//www.eclipse.org/org/documents/edl-v10.php.
/*
/**************************************************************************************
//www.eclipse.org/legal/epl-v10.html
//www.eclipse.org/org/documents/edl-v10.php.
/* convert MQTT ReturnCode to MQTT-SN one */
// update the client's status
/**************************************************************************************
//www.eclipse.org/legal/epl-v10.html
//www.eclipse.org/org/documents/edl-v10.php.
/**
/**
/* if there are more digits to encode, set the top bit of this digit */
/**
/**
/* enough length to read the integer? */
/**
/**
/**
/**
/**
/**
/* read First Byte of Packet */
/* read RemainingLength */
/* allocate buffer */
/* read Payload */
// Reserved
/**************************************************************************************
//www.eclipse.org/legal/epl-v10.html
//www.eclipse.org/org/documents/edl-v10.php.
/* client is sleeping. save PUBLISH */
/* create MQTTSN_topicid */
/* This message might be subscribed with wild card. */
/* add the Topic and get a TopicId */
/* create REGISTER */
/* send REGISTER */
/* send PUBLISH */
/**************************************************************************************
//www.eclipse.org/legal/epl-v10.html
//www.eclipse.org/org/documents/edl-v10.php.
/**************************************************************************************
//www.eclipse.org/legal/epl-v10.html
//www.eclipse.org/org/documents/edl-v10.php.
/*=====================================
/*
/* return CONNACK when the client is sleeping */
//* clear ConnectData of Client */
/* clear ConnectData of Client */
/* CONNECT was not sent yet. prepare Connect data */
/* reset the table of msgNo and TopicId pare */
/* renew the TopicList */
/* create & send WILLTOPICREQ message to the client */
/* Send WILLTOPICREQ to the client */
/* create CONNACK & send it to the client */
/*
//Connect* connectData = client->getConnectData();
/* save WillMsg in the client */
/* Send CONNACK to the client */
/*
/*
/* create and send PINGRESP to the PacketHandler */
// ToDo:  This version can't re-send PUBLISH when PUBACK is not returned.
// pop the que to delete element.
/**************************************************************************************
//www.eclipse.org/legal/epl-v10.html
//www.eclipse.org/org/documents/edl-v10.php.
/*=====================================
/*  ClientList and Adapters  Initialize  */
/*  Setup predefined topics  */
/* write prompts */
/* Run Tasks until CTRL+C entred */
/* stop Tasks */
/* wait until all Task stop */
/*=====================================
/*=====================================
/**************************************************************************************
//www.eclipse.org/legal/epl-v10.html
//www.eclipse.org/org/documents/edl-v10.php.
/*=====================================
/*=====================================
// blank
/**************************************************************************************
//www.eclipse.org/legal/epl-v10.html
//www.eclipse.org/org/documents/edl-v10.php.
/*=====================================
/**************************************************************************************
//www.eclipse.org/legal/epl-v10.html
//www.eclipse.org/org/documents/edl-v10.php.
/* Create Aggregated Clients */
//testMessageIdTable();
/* set Non secure client`s nextMsgId. otherwise Id is duplicated.*/
// ToDo: AggregateGW this method called when the client disconnect and erase it`s Topics. this method call */
// ToDo: AggregateGW this method called when the client disconnect and erase it`s Topics. this method call */
// ToDo: AggregateGW  */
// ToDo: AggregateGW  */
/**************************************************************************************
//www.eclipse.org/legal/epl-v10.html
//www.eclipse.org/org/documents/edl-v10.php.
/*=====================================
/*=====================================
/*=====================================
//ToDo: AggregateGW
//ToDo: AggregateGW
// ToDo: AggregateGW
/**************************************************************************************
//www.eclipse.org/legal/epl-v10.html
//www.eclipse.org/org/documents/edl-v10.php.
/*=====================================
/**
/**
// 500 msec
/* Prepare sockets list to read */
/* Check sockets is ready to read */
/* read sockets */
/* post a BrokerRecvEvent */
// Disconnected
/* delete client when the client is not authorized & session is clean */
/* disconnect the client */
/**
/**************************************************************************************
//www.eclipse.org/legal/epl-v10.html
//www.eclipse.org/org/documents/edl-v10.php.
/*=====================================
/**
/**
/* Check Client is managed by Adapters */
/* connect to the broker and send a packet */
/* disconnect the broker and the client */
/* send a packet */
/* Disconnect the client */
/**
/**************************************************************************************
//www.eclipse.org/legal/epl-v10.html
//www.eclipse.org/org/documents/edl-v10.php.
/*=====================================
/* save clientId into (char*)_clientId NULL terminated */
/* save willTopic into (char*)_willTopic  with NULL termination */
/* save willMsg into (char*)_willMsg  with NULL termination */
/*=====================================
/*=====================================
// Do not delete element. Element is deleted after sending to Client.
/**************************************************************************************
//www.eclipse.org/legal/epl-v10.html
//www.eclipse.org/org/documents/edl-v10.php.
/*=====================================
/**
/*  anonimous clients */
// full of clients
/* creat a new client */
/* add the list */
/*  anonimous clients */
// full of clients
/* creat a new client */
/* add the list */
// create Topic & Add it
/**************************************************************************************
//www.eclipse.org/legal/epl-v10.html
//www.eclipse.org/org/documents/edl-v10.php.
//#include "MQTTSNGWForwarder.h"
/*=====================================
/**
/*
/* write log and post Event */
/* get the packet from the encapsulation message */
/*   Check the client belonging to QoS-1Proxy  ?    */
/* write log and post Event */
/* new client */
/* create a new client */
/* Add to af forwarded client list of forwarder. */
/* Client exists. Set SensorNet Address of it. */
/* create a new client */
/* post Client RecvEvent */
/**************************************************************************************
//www.eclipse.org/legal/epl-v10.html
//www.eclipse.org/org/documents/edl-v10.php.
/*=====================================
/**************************************************************************************
//www.eclipse.org/legal/epl-v10.html
//www.eclipse.org/org/documents/edl-v10.php.
/*=====================================
/*
//broadcast
/*
/*
/* return CONNACK when the client is sleeping */
//* clear ConnectData of Client */
/* clear ConnectData of Client */
/* CONNECT was not sent yet. prepare Connect data */
/* reset the table of msgNo and TopicId pare */
/* renew the TopicList */
/* create & send WILLTOPICREQ message to the client */
/* Send WILLTOPICREQ to the client */
/* CONNECT message was not qued in.
/*
/* add the connectData for MQTT CONNECT message */
/* Send WILLMSGREQ to the client */
/*
/* save WillMsg in the client */
/* create CONNECT message */
/* Send CONNECT to the broker */
/*
/*
/* send NOT_SUPPORTED responce to the client */
/*
/* send NOT_SUPPORTED responce to the client */
/*
/* send PINGREQ to the broker */
// ToDo:  This version can't re-send PUBLISH when PUBACK is not returned.
// pop the que to delete element.
/**************************************************************************************
//www.eclipse.org/legal/epl-v10.html
//www.eclipse.org/org/documents/edl-v10.php.
/*
/*  Do not delete the MQTTSNPacket.  MQTTSNPacket is deleted by delete Event */
/**************************************************************************************
//www.eclipse.org/legal/epl-v10.html
//www.eclipse.org/org/documents/edl-v10.php.
/*=====================================
/*=====================================
/*
/**************************************************************************************
//www.eclipse.org/legal/epl-v10.html
//www.eclipse.org/org/documents/edl-v10.php.
/**************************************************************************************
//www.eclipse.org/legal/epl-v10.html
//www.eclipse.org/org/documents/edl-v10.php.
/*===============================
/*===============================
/**************************************************************************************
//www.eclipse.org/legal/epl-v10.html
//www.eclipse.org/org/documents/edl-v10.php.
//unsigned char* ptr = 0;
//ptr = _buf + p + 4;
//writeInt(&ptr, msgId);
//ptr = _buf + 4;
//writeInt(&ptr, msgId);
//ptr = _buf + 2;
//writeInt(&ptr, msgId);
//ptr = _buf + p + 2;
//writeInt(&ptr, msgId);
//ptr = _buf + 5;
//writeInt(&ptr, msgId);
/**************************************************************************************
//www.eclipse.org/legal/epl-v10.html
//www.eclipse.org/org/documents/edl-v10.php.
// 2000 msecs
/*=====================================
/**
/* wait Event */
/*------ Check Keep Alive Timer & send Advertise ------*/
/*------ Check Adapters   Connect or PINGREQ ------*/
/*------    Handle SEARCHGW Message     ---------*/
/*------    Handle Messages form Clients      ---------*/
/* Reset the Timer for PINGREQ. */
/*------  Handle Messages form Broker      ---------*/
/**************************************************************************************
//www.eclipse.org/legal/epl-v10.html
//www.eclipse.org/org/documents/edl-v10.php.
/*=====================================
/*
/*=====================================
/*=====================================
/*=====================================
/**************************************************************************************
//www.eclipse.org/legal/epl-v10.html
//www.eclipse.org/org/documents/edl-v10.php.
/* Reply PubAck with INVALID_TOPIC_ID to the client */
/* Save a msgId & a TopicId pare for PUBACK */
/* send PINGREQ to the broker */
/**************************************************************************************
//www.eclipse.org/legal/epl-v10.html
//www.eclipse.org/org/documents/edl-v10.php.
/*=====================================
/*  Create QoS-1 Clients */
/* initialize Adapter */
/**************************************************************************************
//www.eclipse.org/legal/epl-v10.html
//www.eclipse.org/org/documents/edl-v10.php.
//MQTTSN_TOPIC_TYPE_SHORT
/**************************************************************************************
//www.eclipse.org/legal/epl-v10.html
//www.eclipse.org/org/documents/edl-v10.php.
/*=====================================
/*=====================================
// For MQTTSN_TOPIC_TYPE_NORMAL */
/*=====================================
/**************************************************************************************
//www.eclipse.org/legal/epl-v10.html
//www.eclipse.org/org/documents/edl-v10.php.
/*========================================
/*========================================
//TCPStack::close();
/**************************************************************************************
//www.eclipse.org/legal/epl-v10.html
//www.eclipse.org/org/documents/edl-v10.php.
/*=====================================
/*=====================================
/*=========================================
// Buffer is empty.
// Buffer is empty.
// *_end < *_start
/*=====================================
/**************************************************************************************
//www.eclipse.org/legal/epl-v10.html
//www.eclipse.org/org/documents/edl-v10.php.
/*=====================================
/*============================================
/*=====================================
//Turn Green on & turn Red off
//Turn Green off & turn Red on
// eliminate unused warnning of compiler
/**************************************************************************************
//www.eclipse.org/legal/epl-v10.html
//www.eclipse.org/org/documents/edl-v10.php.
/*===========================================
/**
/*================================================================
/**
/*
/*  Prepare UDP sockets */
/*=========================================
/*------ Create unicast socket --------*/
/*------ Create Multicast socket --------*/
// 1 sec
/**************************************************************************************
//www.eclipse.org/legal/epl-v10.html
//www.eclipse.org/org/documents/edl-v10.php.
//using namespace std;
/*===========================================
/**
/**
/*===========================================
/*=========================================
// use IPv6
//use local IF address
//select the interface
//restrict the socket to IPv6 only
//init the structs for getaddrinfo
//according to: https://beej.us/guide/bgnet/output/html/multipage/
// use IPv6, whichever
// fill in my IP for me
//no specific address, bind to available ones...
//create the socket
//if given, set a given device name to bind to
//socket option: bind to a given interface name
//socket option: reuse address
//finally: bind...
//if given, set a broadcast address; otherwise it will be ::
//everything went fine...
// use IPv6
//TODO: test if this is working properly (GW works, but this function is not completely tested)
// 1 sec
//TODO: test if this is working properly (GW works, but this function is not completely tested)
//D_NWSTACK("recved from %s:%d length = %d\n", inet_ntoa(sender.sin_addr),ntohs(sender.sin_port), status);
/**************************************************************************************
//www.eclipse.org/legal/epl-v10.html
//www.eclipse.org/org/documents/edl-v10.php.
/*===========================================
/*===========================================
/*===========================================
// MSB length
// LSB length
// checksum
// Message Length
// Message Length
// Transmit Request API
// Frame ID
// Address64
// Address16
// Broadcast Radius
// Option: Use the extended transmission timeout 0x40
// Payload
/* wait Txim Status 0x8B */
/*=========================================
// 1 sec.
// 500ms
/**************************************************************************************
//www.eclipse.org/legal/epl-v10.html
//www.eclipse.org/org/documents/edl-v10.php.
//TestTask* task = new TestTask(test);
/**************************************************************************************
//www.eclipse.org/legal/epl-v10.html
//www.eclipse.org/org/documents/edl-v10.php.
/* Test command line parameter */
/* Test RingBuffer */
/* Test Timer */
/* Test Que */
/* Test Tree23 */
//printf("Test  Tree23         ");
//TestTree23* tree23 = new TestTree23();
//tree23->test();
//delete tree23;
/* Test TopicTable */
/* Test TopicIdMap */
/* Test EventQue */
/*
//MultiTaskProcess::run();
/**************************************************************************************
//www.eclipse.org/legal/epl-v10.html
//www.eclipse.org/org/documents/edl-v10.php.
/**************************************************************************************
//www.eclipse.org/legal/epl-v10.html
//www.eclipse.org/org/documents/edl-v10.php.
/**************************************************************************************
//www.eclipse.org/legal/epl-v10.html
//www.eclipse.org/org/documents/edl-v10.php.
//printf("msgid=%d id=%d type=%d\n", msgid, elm->getTopicId(), elm->getTopicType());
//printf("msgid=%d\n", msgid);
/**************************************************************************************
//www.eclipse.org/legal/epl-v10.html
//www.eclipse.org/org/documents/edl-v10.php.
/* create Topic */
/* Test EraseNorma() */
//printf("Topic=%s ID=%d\n", t->getTopicName()->c_str(), t->getTopicId());
/* Add Topic to Topics */
//printf("Topic=%s ID=%d\n", t->getTopicName()->c_str(), t->getTopicId());
//printf("Topic=%s ID=%d\n", t->getTopicName()->c_str(), t->getTopicId());
/* Get Topic by MQTTSN_topicid  by Name*/
//printf("Topic=%s ID=%d\n", t->getTopicName()->c_str(), t->getTopicId());
/* Get Topic by MQTTSN_topicid  by ID*/
//printf("Topic=%s ID=%d ID=%d\n", t->getTopicName()->c_str(), t->getTopicId(), st->getTopicId());
/* Test Wildcard */
/*
/*
/*
// examples from MQTT specification
/**************************************************************************************
//www.eclipse.org/legal/epl-v10.html
//www.eclipse.org/org/documents/edl-v10.php.
//printf("key=%d  val=%d\n", i, rc->_val);
//printf("key=%d  str=%s\n", i, r1[i]->_key.c_str());
//printf("key=%d  find=%d\n", i, rc);
//printf("key=%d  val=%d\n", i, val->_val);
//printf("key=%d  find=%d\n", i, rc);
//printf("key=%d  find=%d\n", i, rc);
//printf("key=%d  val=%d\n", i, val->_val);
/*******************************************************************************
//www.eclipse.org/legal/epl-v10.html
//www.eclipse.org/org/documents/edl-v10.php.
// Configuration values needed to connect to IBM IoT Cloud
// For a registered connection, replace with your org
// For a registered connection, replace with your id
// For a registered connection, replace with your auth-token
// For a registered connection, replace with your type
// mac without colons
// Auth_token is only used in non-quickstart mode
// Construct clientId - d:org:type:id
// MQTT Connect
// First 10 attempts try within 3 seconds, next 10 attempts retry after every 1 minute
// after 20 attempts, retry every 10 minutes
// if ipstack and client were on the heap we could deconstruct and goto a label where they are constructed
//  or maybe just add the proper members to do this disconnect and call attemptConnect(...)
//MMA.x(), MMA.y(), MMA.z(), sensor.temp(), joystickPos, ain1.read(), ain2.read());
// Command topic: iot-2/cmd/blink/fmt/json - cmd is the string between cmd/ and /fmt/
// Publish a message every second
// if we have lost the connection
// allow the MQTT client to receive messages
/*******************************************************************************
//www.eclipse.org/legal/epl-v10.html
//www.eclipse.org/org/documents/edl-v10.php.
/* wait for connack */
/* subscribe */
/* wait for suback */
/* publish with short name */
/* wait for puback */
/*******************************************************************************
//www.eclipse.org/legal/epl-v10.html
//www.eclipse.org/org/documents/edl-v10.php.
/* publish with short name */
/*******************************************************************************
//www.eclipse.org/legal/epl-v10.html
//www.eclipse.org/org/documents/edl-v10.php.
/*******************************************************************************
//www.eclipse.org/legal/epl-v10.html
//www.eclipse.org/org/documents/edl-v10.php.
//	char *topicname = "a long topic name";
/* wait for connack */
/* publish with short name */
/*******************************************************************************
//www.eclipse.org/legal/epl-v10.html
//www.eclipse.org/org/documents/edl-v10.php.
/* wait for connack */
/* register topic name */
/* wait for regack */
/* publish with obtained id */
// Publish a message every second
/*******************************************************************************
//www.eclipse.org/legal/epl-v10.html
//www.eclipse.org/org/documents/edl-v10.php.
/* wait for connack */
/* publish with short name */
/* wait for puback */
/*******************************************************************************
//www.eclipse.org/legal/epl-v10.html
//www.eclipse.org/org/documents/edl-v10.php.
/** error in socket operation */
/* default on Windows is 64 - increase to make Linux and Windows the same */
/**
//printf("received %d bytes count %d\n", rc, (int)count);
/**
/*******************************************************************************
//www.eclipse.org/legal/epl-v10.html
//www.eclipse.org/org/documents/edl-v10.php.
/** error in socket operation */
/* default on Windows is 64 - increase to make Linux and Windows the same */
/**
//printf("received %d bytes count %d\n", rc, (int)count);
/**
/*******************************************************************************
//www.eclipse.org/legal/epl-v10.html
//www.eclipse.org/org/documents/edl-v10.php.
/* wait for connack */
/* subscribe */
/* wait for suback */
/* publish with short name */
/* wait for puback */
/*******************************************************************************
//www.eclipse.org/legal/epl-v10.html
//www.eclipse.org/org/documents/edl-v10.php.
/* publish with short name */
/*******************************************************************************
//www.eclipse.org/legal/epl-v10.html
//www.eclipse.org/org/documents/edl-v10.php.
/*******************************************************************************
//www.eclipse.org/legal/epl-v10.html
//www.eclipse.org/org/documents/edl-v10.php.
//	char *topicname = "a long topic name";
/* wait for connack */
/* publish with short name */
/*******************************************************************************
//www.eclipse.org/legal/epl-v10.html
//www.eclipse.org/org/documents/edl-v10.php.
/* wait for connack */
/* register topic name */
/* wait for regack */
/* publish with obtained id */
/*******************************************************************************
//www.eclipse.org/legal/epl-v10.html
//www.eclipse.org/org/documents/edl-v10.php.
/* wait for connack */
/* publish with short name */
/* wait for puback */
/*******************************************************************************
//www.eclipse.org/legal/epl-v10.html
//www.eclipse.org/org/documents/edl-v10.php.
/**
/**
/* write length */
/* write message type */
/* protocol ID */
/**
/* read length */
/**
/**
/* write length */
/* write message type */
/**
/* write length */
/* write message type */
/**
/* read length */
/**
/* write length */
/* write message type */
/**
/**
/**
/* write length */
/* write message type */
/**
/**
/**
/* read length */
/**
/* read length */
/**
/* read length */
/**
/* read length */
/*******************************************************************************
//www.eclipse.org/legal/epl-v10.html
//www.eclipse.org/org/documents/edl-v10.php.
/**
/* read length */
/**
/* write length */
/**
/* read length */
/**
/* write length */
/**
/* write length */
/**
/* read length */
/**
/* write length */
/**
/* read length */
/**
/**
/**
/* read length */
/**
/**
/**
/* write length */
/**
/* write length */
/*******************************************************************************
//www.eclipse.org/legal/epl-v10.html
//www.eclipse.org/org/documents/edl-v10.php.
/**
/* read length */
/* special arrangement for long topic names in QoS -1 publishes.  The length of the topic is in the topicid field */
/* read length */
/**
/* read length */
/**
/* read length */
/**
/* read length */
/*******************************************************************************
//www.eclipse.org/legal/epl-v10.html
//www.eclipse.org/org/documents/edl-v10.php.
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/* the length of the whole packet including length field */
/* 1. read a packet - UDP style */
/* 2. read the length.  This is variable in itself */
/* there was an error */
/* return the packet type */
/* the length of the whole packet including length field */
/* 2. read the length.  This is variable in itself */
/* there was an error */
/* return the packet type */
/*******************************************************************************
//www.eclipse.org/legal/epl-v10.html
//www.eclipse.org/org/documents/edl-v10.php.
/**
/* read length */
/**
/* write length */
/* write message type */
/**
/* read length */
/*******************************************************************************
//www.eclipse.org/legal/epl-v10.html
//www.eclipse.org/org/documents/edl-v10.php.
/**
/* write length */
/* write message type */
/**
/* read length */
/**
/* write length */
/* write message type */
/*******************************************************************************
//www.eclipse.org/legal/epl-v10.html
//www.eclipse.org/org/documents/edl-v10.php.
/**
/**
/* write length */
/* write message type */
/* special arrangement for long topic names in QoS -1 publishes.  The length of the topic is in the topicid field */
/* topic length */
/* write length */
/* write message type */
/**
/* ack packet length */
/* write length */
/* write packet type */
/**
/**
/**
/**
/**
/* write length */
/* write message type */
/**
/* write length */
/* write message type */
/*******************************************************************************
//www.eclipse.org/legal/epl-v10.html
//www.eclipse.org/org/documents/edl-v10.php.
/**
/**
/* write length */
/* write message type */
/* now the topic id or name */
/* means long topic name */
/**
/* read length */
/*******************************************************************************
//www.eclipse.org/legal/epl-v10.html
//www.eclipse.org/org/documents/edl-v10.php.
/**
/* read length */
/**
/* write length */
/* write message type */
/*******************************************************************************
//www.eclipse.org/legal/epl-v10.html
//www.eclipse.org/org/documents/edl-v10.php.
/**
/* write length */
/* write message type */
/* now the topic id or name */
/* means long topic name */
/**
/* read length */
/*******************************************************************************
//www.eclipse.org/legal/epl-v10.html
//www.eclipse.org/org/documents/edl-v10.php.
/* read length */
/* write length */
/* write message type */
/*******************************************************************************
//www.eclipse.org/legal/epl-v10.html
//www.eclipse.org/org/documents/edl-v10.php.
/**< connection to system under test. */
//m2m.eclipse.org:1883",
/* TODO - unused - remove? static struct timeval start_time; */
/* data after should be the same as data before */
/* Pingreq without clientid */
/* data after should be the same as data before */
/* Pingreq with clientid */
/* data after should be the same as data before */
/* Disconnect without duration */
/* data after should be the same as data before */
/* Disconnect with duration */
/* data after should be the same as data before */
/* Pingreq with clientid */
/* exit: */
/* data after should be the same as data before */
/*exit:*/
/* exit: */
/* data after should be the same as data before */
/*exit:*/
/* data after should be the same as data before */
/*exit:*/
/* data after should be the same as data before */
/* exit: */
/* exit: */
/* exit: */
/* exit: */
/* exit: */
/* exit: */
/* exit: */
/* exit: */
/* run all the tests */
/* return number of failures.  0 = test succeeded */
/* run just the selected test */
/*******************************************************************************
//www.eclipse.org/legal/epl-v10.html
//www.eclipse.org/org/documents/edl-v10.php.
/** error in socket operation */
/* TODO - unused - remove? static struct timeval start_time; */
//printf("received %d bytes count %d\n", rc, (int)count);
/* wait for connack */
/* wait for connack */
/* subscribe */
/*msgid*/ 1, &topic);
/* wait for suback */
/*
/* exit: */
/* data after should be the same as data before */
/*exit:*/
/* data after should be the same as data before */
/* exit: */
/* data after should be the same as data before */
/* exit: */
/* data after should be the same as data before */
/* exit: */
/* run all the tests */
/* return number of failures.  0 = test succeeded */
/* run just the selected test */
