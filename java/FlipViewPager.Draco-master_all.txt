# Changes:

  * Made clickable views like a button clickable inside the FlipViewPager.
  * Use RecyclerView.
  * Updated to API 23.
  * Added support for close clicks on a MergePage e.g. to add a close button.

# FlipViewPager.Draco

This project aims to provide a working page flip implementation for usage in ListView. Made in [Yalantis] (https://yalantis.com/?utm_source=github)

![Preview](https://d13yacurqjgara.cloudfront.net/users/125056/screenshots/1758298/99miles-find-friends-interface-animation.gif)

* Check this [project on Dribbble] (https://dribbble.com/shots/1758298-Find-Friends-Interaction?list=users&offset=35)

* See how it works on [Youtube] (https://www.youtube.com/watch?v=zNRPjS53m5w)

#Usage

*For a working implementation, Have a look at the Sample Project - sample*

To achieve the same grid-looking view you should:

1. Include the library as local library project:

	``` groovy
	compile 'com.yalantis:flipviewpager:1.0.0'
	```

2. Create your main layout, it will be the view with 2 items merged together:
	``` xml
	<!-- ... -->

	<ImageView
	    android:id="@+id/first"
	    xmlns:android="http://schemas.android.com/apk/res/android"
	    android:layout_width="0dp"
	    android:layout_weight="1"
	    android:contentDescription="left image"
	    android:layout_height="wrap_content"
	    android:scaleType="fitXY" />

	<LinearLayout
	    android:layout_width="1dp"
	    android:layout_weight="0"
	    android:background="#000000"
	    android:layout_height="fill_parent"/>

	<ImageView
	    android:id="@+id/second"
	    android:layout_width="0dp"
	    android:layout_weight="1"
	    android:contentDescription="right image"
	    android:layout_height="wrap_content"
	    android:scaleType="fitXY" />

	<!-- ... -->
	```
3. Create layout for displaying an additional info for each merged item:
	``` xml
	<!-- ... -->

	<com.yalantis.flip.sample.views.FontTextView
	    style="@style/TextView.Nickname"
	    android:id="@+id/nickname" />

	<LinearLayout
	    android:layout_below="@+id/nickname"
	    android:id="@+id/interestsPrimary"
	    style="@style/LinearLayout.Interests">

	    <com.yalantis.flip.sample.views.FontTextView
	        style="@style/TextView.Interest"
	        android:id="@+id/interest_1" />

	    <!-- ... -->

	</LinearLayout>

	```

4. 	Create your adapter and extend it from ```BaseFlipAdapter<T>```

	``` java
	class FriendsAdapter extends BaseFlipAdapter<Friend> {

		@Override
		public View getPage(int position,
				    View convertView,
				    ViewGroup parent,
				    Friend friend1,
				    Friend friend2) {
			// ...
		}

		class FriendsHolder {
	    	// ...
	    }
	}
	```

5.  Set your adapter in ```ListView```
	``` java
	final ListView friends = (ListView) findViewById(R.id.friends);
	friends.setAdapter(new FriendsAdapter(this, Utils.friends, settings));
	```

6.  You can handle clicks just like in regular ```ListView```

``` java
friends.setOnItemClickListener(new AdapterView.OnItemClickListener() {
    @Override
    public void onItemClick(AdapterView<?> parent, View view, int position, long id) {
        Friend friend = (Friend) friends.getAdapter().getItem(position);
        Toast.makeText(FriendsActivity.this, friend.getNickname(), Toast.LENGTH_SHORT).show();
    }
});
```

More options will be added soon :)

#Customization

To customize page will be shown first - create and pass FlipSettings object into adapter

``` java
FlipSettings settings = new FlipSettings.Builder().defaultPage(1).build();
```

#Compatibility

  * Android 4.0+

# Changelog

### Version: 1.0

  * Initial Build

#### Let us know!

We’d be really happy if you sent us links to your projects where you use our component. Just send an email to github@yalantis.com And do let us know if you have any questions or suggestion regarding the animation. 

P.S. We’re going to publish more awesomeness wrapped in code and a tutorial on how to make UI for Android (iOS) better than better. Stay tuned!

## License

    Copyright 2017, Yalantis

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
/**
/**
/**
// Trick to divide list into 2 parts
// Used for cases when we have not an even size in incoming list
// Listener to store flipped page
// Checking if we need an additional row for single item
// Adapter merges 2 items together
// Stub
// Stub
/**
/**
// Internal interface to store page position
// Drawing prev half
// Drawing next half
// Drawing rotation
// Custom code starts here
// Custom code ends here
/**
//point is inside view bounds
// To prevent parent listview from scrolling
// For case we're showing row with less items than we storing
/**
/**
/**
//
//    @Override
//    protected void onCreate(Bundle savedInstanceState) {
//        super.onCreate(savedInstanceState);
//        setContentView(R.layout.activity_friends);
//        final ListView friends = (ListView) findViewById(R.id.friends);
//
//        FlipSettings settings = new FlipSettings.Builder().defaultPage(1).build();
//        friends.setAdapter(new FriendsAdapter(this, Utils.friends, settings));
//        friends.setOnItemClickListener(new AdapterView.OnItemClickListener() {
//            @Override
//            public void onItemClick(AdapterView<?> parent, View view, int position, long id) {
//                Friend f = (Friend) friends.getAdapter().getItem(position);
//
//                Toast.makeText(FriendsActivity.this, f.getNickname(), Toast.LENGTH_SHORT).show();
//            }
//        });
//    }
//
//    class FriendsAdapter extends BaseFlipAdapter {
//
//        private final int PAGES = 3;
//        private int[] IDS_INTEREST = {R.id.interest_1, R.id.interest_2, R.id.interest_3, R.id.interest_4, R.id.interest_5};
//
//        public FriendsAdapter(Context context, List<Friend> items, FlipSettings settings) {
//            super(context, items, settings);
//        }
//
//        @Override
//        public View getPage(int position, View convertView, ViewGroup parent, Object friend1, Object friend2, CloseListener closeListener) {
//            final FriendsHolder holder;
//
//            if (convertView == null) {
//                holder = new FriendsHolder();
//                convertView = getLayoutInflater().inflate(R.layout.friends_merge_page, parent, false);
//                holder.leftAvatar = (ImageView) convertView.findViewById(R.id.first);
//                holder.rightAvatar = (ImageView) convertView.findViewById(R.id.second);
//                holder.infoPage = getLayoutInflater().inflate(R.layout.friends_info, parent, false);
//                holder.nickName = (TextView) holder.infoPage.findViewById(R.id.nickname);
//
//                for (int id : IDS_INTEREST)
//                    holder.interests.add((TextView) holder.infoPage.findViewById(id));
//
//                convertView.setTag(holder);
//            } else {
//                holder = (FriendsHolder) convertView.getTag();
//            }
//
//            switch (position) {
//                // Merged page with 2 friends
//                case 1:
//                    holder.leftAvatar.setImageResource(((Friend) friend1).getAvatar());
//                    if (friend2 != null)
//                        holder.rightAvatar.setImageResource(((Friend) friend2).getAvatar());
//                    break;
//                default:
//                    fillHolder(holder, position == 0 ? (Friend) friend1 : (Friend) friend2);
//                    holder.infoPage.setTag(holder);
//                    return holder.infoPage;
//            }
//            return convertView;
//        }
//
//        @Override
//        public int getPagesCount() {
//            return PAGES;
//        }
//
//        private void fillHolder(FriendsHolder holder, Friend friend) {
//            if (friend == null)
//                return;
//            Iterator<TextView> iViews = holder.interests.iterator();
//            Iterator<String> iInterests = friend.getInterests().iterator();
//            while (iViews.hasNext() && iInterests.hasNext())
//                iViews.next().setText(iInterests.next());
//            holder.infoPage.setBackgroundColor(getResources().getColor(friend.getBackground()));
//            holder.nickName.setText(friend.getNickname());
//        }
//
//        class FriendsHolder {
//            ImageView leftAvatar;
//            ImageView rightAvatar;
//            View infoPage;
//
//            List<TextView> interests = new ArrayList<>();
//            TextView nickName;
//        }
//    }
/**
/**
