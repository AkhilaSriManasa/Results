/**
//www.eclipse.org/legal/epl-2.0
/**
// configuration is not yet ready or set
// value could be unset, we should reset it value
/**
//www.eclipse.org/legal/epl-2.0
/**
// https://tools.ietf.org/html/rfc6749#section-4.1
// https://tools.ietf.org/html/rfc6749#section-4.1
/**
//www.eclipse.org/legal/epl-2.0
/**
// Constructor params - static
/**
// Load parameters from Store
/**
// keep it to check against redirectUri in #getAccessTokenResponseByAuthorizationCode
// parse the redirectURL
// may contain multiple...
// This should not happen as the state is usually set
// else
// else
// check parameter redirectURI in #getAuthorizationUrl are the same as given
// store it
/**
// store it
// depending on usage, cannot guarantee every parameter is not null at the beginning
// store it
// The service may not return the refresh token so use the last refresh token otherwise it's not stored.
// store it
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//tools.ietf.org/html/rfc6749#section-4.1.1">rfc6749 section-4.1.1</a>
// never happens
/**
//tools.ietf.org/html/rfc6749#section-4.3">rfc6749 section-4.3</a>
/**
//tools.ietf.org/html/rfc6749#section-6">rfc6749 section-6</a>
/**
//tools.ietf.org/html/rfc6749#section-4.1.3">rfc6749 section-4.1.3</a>
/**
//tools.ietf.org/html/rfc6749#section-4.4">rfc6749 section-4.4</a>
// this is not supplied by the response
// Dont know what exception it is, wrap it up and throw it out
/**
// there is nothing we can do here
/**
//www.eclipse.org/legal/epl-2.0
/**
// close each service
// If parameters in storage and parameters are the same as arguments passed get the client from storage
// If no client with parameters or with different parameters create or update (if parameters are different)
// client in storage.
// This happens after reboot, or client was closed without factory knowing; create a new client
// the store has the handle/config data
// client was already closed, does not matter
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// easy mocking with protected access
// must be initialized
// this allows future implementations to change cipher by just setting the CIPHER_TARGET
// choose the cipher by the cipherTarget
/**
// this removes old entries
// DS will take care of other references
// token does not exist
// put empty
// do nothing if no cipher
// do nothing if no cipher
/**
// keep all ciphers
// (last used + 183 days < now) then it is expired
/**
// for all operations on the storage
// Add adapters for LocalDateTime
// empty
// update last used when it is an access token
// update all handles index
// update all handles index
// entry exists and successfully removed
// update all handles
// no need any locks, the other methods will take care of this
// dont want to wait too long during shutdown or update
// if lockGained within timeout, then try to remove old entries
// if lock is not acquired within the timeout or thread is interruted
// then forget about the old entries, do not try to delete them.
// re-setting thread state to interrupted
// never reach here normally
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// do not use high grade encryption due to export limit
/**
// load or generate the encryption key
// Generate IV
// copy iv to the start of array
// append encrypted text to tail
// base64 decode the base64CipherText
// Read IV
// Put encryption key back into config
// encryption key already present in config
// 128 bit key/ 8 bit = 16 bytes length
/**
//www.eclipse.org/legal/epl-2.0
/**
// delibrately not set to null to test on oauthClientService
// oauthClientService = null;
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// generate encryption key
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
// only when a delimiter was found and the prefix is not empty
/**
/**
// this will even work for null namepace
/**
// everything with a tag is matching
// Rule.getTags() is never null
/**
// Rule.getTags() is never null
/**
// everything containing _all_ given tags is matching
// (Rule might might have more tags than the given set)
/**
/**
// everything without a tag is matching
// everything containing _any_ of the given tags is matching (more than one tag might match)
// if the collections are NOT disjoint, they have something in common
/**
// everything without a tag is matching
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
// do nothing
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
// For now is initialized with the default locale, but when the
// localization is implemented, it will be initialized with a parameter
// of the command.
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
// the first argument is the subcommand name
// extract the remaining arguments except the first one
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
// get module type of the condition
// if module type not exists in the system - throws exception
// get inputs of the condition according to module type definition
// gets connected inputs from the condition module and put them into map
// checks is there unconnected required inputs
/**
/**
// get module type of the condition
// if module type not exists in the system - throws exception
// get inputs of the condition according to module type definition
// gets connected inputs from the condition module and put them into map
// checks is there unconnected required inputs
/**
/**
// we are referencing a value inside an existing data structure of the output and will not check if the
// property inside of it really exists and if its type is compatible, so the connection will be treated as
// valid
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
// enable the rules that are not persisted as Disabled;
/**
/**
/**
/**
/**
/**
// removing module types does not effect the rule
/**
/**
/**
/**
// change status to UNINITIALIZED
// change status to IDLE
// change status to UNINITIALIZED
/**
/**
/**
/**
/**
/**
/**
/**
/**
//
//
/**
/**
/**
// change status to IDLE
/**
/**
// for
/**
// the rule was unregistered
// change state to RUNNING
// change state to IDLE only if the rule has not been DISABLED.
// change state to RUNNING
// change state to IDLE only if the rule has not been DISABLED.
/**
/**
/**
/**
// get reference from context
/**
/**
/**
/**
/**
/**
// auto mapping of conditions
// the input is already connected. Skip it.
// update condition inputs
// auto mapping of actions
// the input is already connected. Skip it.
// update condition inputs
/**
// input tags must be subset of the output ones
// already exist candidate for autoMap
// this set of output tags already exists. (conflict)
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
// Do nothing - resolved rules are independent from templates
// Do nothing - resolved rules are independent from templates
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
// could be called with 'null' from dispose and might not be a
// trigger callback
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// explicit cast to List <? extends T> as JDK compiler complains
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
// It is a reference
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
// ${substring}
/**
/**
// starts with '${' and contains it only once contains '}' only once - last char reference is not empty '${}'
/**
/**
/**
/**
// Should never happen because we set the field to accessible.
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
//www.eclipse.org/legal/epl-2.0
// context from where references will be taken
// module configuration with references
// expected resolved module configuration
// composite child module input with references
// expected resolved child module context
// test trigger configuration.
// test condition configuration.
// test action configuration.
// test Composite child ModuleImpl(condition) context
// test Composite child ModuleImpl(action) context
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
// check condition connections
// check action connections
// do connections auto mapping
// check condition connections
// check action connections
/**
/**
/**
/**
// ruleEngine.update will update the RuleImpl2.moduleMap with the new module
/**
// ruleEngine.update will update the
// RuleImpl2.moduleMap with the new
// module
/**
// ruleEngine.update will update the RuleImpl2.moduleMap with the new module
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// checking RuleRegistry
////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// checking rule without tag
////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// checking that results from stream() have the same size as getAll() above
////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// checking predicates
////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// checking rule with 1 tag
////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// checking that results from stream() have the same size as getAll() above
////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// checking predicates
////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// checking rule with 2 tags
////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// checking that results from stream() have the same size as getAll() above
////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// checking predicates
////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// checking rule with 3 tags
////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// checking that results from stream() have the same size as getAll() above
////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// checking predicates
////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/**
//www.eclipse.org/legal/epl-2.0
/**
// no connection, missing condition tag
// conflict in2 -> out1 or in2 -> out3
// in2 -> out3
// conflict in3 -> out4 or in3 -> out5
// in4 -> out5
// in5 -> out3
// conflict in6 has user defined connection
/**
//www.eclipse.org/legal/epl-2.0
/**
// Registering eventSubscriber
// Creation of RULE
/*");
// TEST RULE
/**
//www.eclipse.org/legal/epl-2.0
/**
// keep storage with
// rules imported from
// json files
// sometimes assert fails because EventPublisher service is null
// WAIT until module type resources are parsed
// WAIT until Rule modules types are parsed and the rule becomes IDLE
/*"));
// def condition1 = rule.conditions.find{it.id.equals("ItemStateConditionID")} as Condition
// assertThat(condition1, is(notNullValue())
// assertThat(condition1.typeUID, is("core.GenericEventCondition")
// assertThat(condition1.configuration.get("topic"), is("smarthome/items/myMotionItem/state")
// assertThat(condition1.configuration.get("payload"), is(".*ON.*")
// WAIT until Rule modules types are parsed and the rule becomes IDLE
/*"));
// def condition1 = rule.conditions.find{it.id.equals("ItemStateConditionID")} as Condition
// assertThat(condition1, is(notNullValue())
// assertThat(condition1.typeUID, is("core.GenericEventCondition")
// assertThat(condition1.configuration.get("topic"), is("smarthome/items/myMotionItem/state")
// assertThat(condition1.configuration.get("payload"), is(".*ON.*")
// run the rule to check if the runtime rule has resolved module references and is executed successfully
/**
//www.eclipse.org/legal/epl-2.0
/**
// ADD
// UPDATE
// REMOVE
/*");
/*");
// def conditionInputs=[topicConnection] as Set
/*");
/*");
// def conditionInputs=[topicConnection] as Set
// this assumes that the sample.json bundle is started as part of the test, which is usually not the case
// (and we should not have a fixed dependency on it
// TEST RULE
/*"));
// TEST RULE
/*"));
// TEST RULE
// TEST RULE
// prepare the presenceItems state to be on to match the second condition of the rule
// causing the event to trigger the rule
// Creation of RULE
/*");
// causing the event to trigger the rule
// bring the rule to execution:
/**
/*");
// Creation of RULE
/*");
// WAIT until Rule modules types are parsed and the rule becomes IDLE
// TEST RULE
/**
//www.eclipse.org/legal/epl-2.0
/**
// first install the fragment
// assert that the host and fragment resources are not loaded
// then install the host
// assert that the host and fragment resources are loaded
// first uninstall the fragment
// assert that the host is updated and only its resources are available
// then uninstall the host
// assert that the host resources also are removed
// first install the fragment
// assert that the host and fragment resources are not loaded
// then install the host
// assert that the host and fragment resources are loaded
// first update the fragment
// then update the host
// first uninstall the fragment
// assert that the host is updated and only its resources are available
// then uninstall the host
// assert that the host resources also are removed
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
// Handle triggers
// Handle conditions
// Handle actions
/**
//www.eclipse.org/legal/epl-2.0
/**
// check if the moduleType has a configdescription with this input
// no annotation on parameter, try to fetch the generic parameter from the context
// we allow simple data types as return values and put them under the context key "result".
/**
//www.eclipse.org/legal/epl-2.0
/**
/*/triggered";
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// EQUALS
// Greater
// Greater or equal
// Matcher...
// values can not be compared, so assume that the condition is not satisfied
// should never happen but to be save here!
/**
//www.eclipse.org/legal/epl-2.0
/**
// automatically adding wildcards only for payload matching
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/*");
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
// execute each rule after the other; at the moment synchronously
// no outputs from this module
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// HandlerFactory:
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// we do not have an annotation with a name for this parameter
// check if a type is given, otherwise use the java type specified on the parameter
// we have a single service and thus no configuration at all
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/*"),
// Scene rule
// Outer rule
// Test rule
// trigger rule by switching triggerItem ON
/**
//www.eclipse.org/legal/epl-2.0
/**
// final ItemRegistry itemRegistry = getService(ItemRegistry.class);
// final SwitchItem myMotionItem = (SwitchItem) itemRegistry.getItem("myMotionItem");
// eventPublisher.post(ItemEventFactory.createStateEvent("myPresenceItem", OnOffType.ON));
/*"),
// Test rule
// Test rule
/**
//www.eclipse.org/legal/epl-2.0
/**
// we only have ONE type but TWO configurations for it
// if the annotation does not specify a type, we use the java type
// remove the first configuration
// check of the second configuration is still valid
// remove the second configuration and there should be none left
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
// does nothing because this provider does not change
// does nothing because this provider does not change
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/** Constant defining the configuration parameter of modules that specifies the mime type of a script */
/** Constant defining the configuration parameter of modules that specifies the script itself */
/**
// Add the rule's UID to the context and make it available as "ctx".
// Note: We don't use "context" here as it doesn't work on all JVM versions!
// Add the rule's UID to the global namespace.
// add the single context entries without their prefix to the scope
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// bundle may not be active yet
// ESH types
// services
// if any thingActions were queued before this got activated, add them now
// nothing todo
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
// can't happen for the 'file' protocol handler with a correctly formatted URI
// if already loaded, remove first
// ignore known file extensions for "temp" files
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
// ignore
/**
//www.eclipse.org/legal/epl-2.0
/**
// used for numbering the modules of the rule
// conditions are optional
// triggers are optional
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// WAIT until Rule modules types are parsed and the rule becomes IDLE
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
// If the current time equals the start time, the condition is always true.
// If the start time is before the end time, the condition will evaluate as true,
// if the current time is between the start time and the end time.
// If the start time is set after the end time, the time values wrap around the midnight mark.
// So if the start time is 19:00 and the end time is 07:00, the condition will be true from
// 19:00 to 23:59 and 00:00 to 07:00.
// If none of these conditions apply false is returned.
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/*
// prepare the execution
// now make the condition fail
// prepare the execution
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/*
/*
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
// Time is between start and end time -> should return true.
// Time is equal to start time -> should return true
// Time is equal to end time -> should return false
// Start value is in the future & end value is in the past
// -> should return false
// Start & end time are in the future & start time is after the end time
// -> should return true
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// A Gson instance to use by the parsers
//
//
//
//
//
//
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
// can't happen for the 'file' protocol handler with a correctly formatted URI
/**
// can't happen for the 'file' protocol handler with a correctly formatted URI
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// match all
// prefix parameter has been used
// works also for null prefix
// (empty prefix used if searching for rules without prefix)
// if tags is null or empty list returns all rules
// filter according to Predicates
// map matching rules
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
// the first argument is the subcommand name
// extract the remaining arguments except the first one
/**
/**
/**
// parsing command parameter values
// initialize the output of the trigger of the rule WelcomeHomeRulesProvider.AC_UID
// causes the execution of the rule WelcomeHomeRulesProvider.AC_UID
// parsing command parameter values
// initialize the output of the trigger of the rule WelcomeHomeRulesProvider.L_UID
// causes the execution of the rule WelcomeHomeRulesProvider.LRL_UID
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
// initialize the "AirConditionerSwitchOnRule" rule from template by using UID, templateUID and configuration.
// initialize the "LightsSwitchOnRule" rule from scratch by using trigger, condition, action, configDescriptions
// and configuration, tags.
// keep all listeners, interested about changing the rules to can inform them if
// there is change on some rules
// adding the provided rules into RuleManager
/**
// specific for this application
// inform all listeners, interested about changing of the rules
/**
/**
/**
/**
// initialize the trigger
// initialize the condition - here the tricky part is the referring into the condition input - trigger output.
// The syntax is a similar to the JUEL syntax.
// initialize the action - here the tricky part is the referring into the action configuration parameter - the
// template configuration parameter. The syntax is a similar to the JUEL syntax.
// initialize the configDescriptions
// initialize the configuration
// create the rule
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// initialize triggers
// initialize conditions
// here the tricky part is the giving a value to the condition configuration parameter.
// here the tricky part is the referring into the condition input - trigger output.
// The syntax is a similar to the JUEL syntax.
// here the tricky part is the referring into the condition configuration parameter - the
// template configuration parameter. The syntax is a similar to the JUEL syntax.
// here the tricky part is the referring into the condition input - trigger output.
// The syntax is a similar to the JUEL syntax.
// initialize actions - here the tricky part is the referring into the action configuration parameter - the
// template configuration parameter. The syntax is a similar to the JUEL syntax.
// initialize configDescriptions
// initialize tags
// create the template
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
// does nothing because this provider does not change
// does nothing because this provider does not change
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
// does nothing because this provider does not change
// does nothing because this provider does not change
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
//
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
// extract the remaining arguments except the first one
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// localize moduletype -> remove from map
/**
//www.eclipse.org/legal/epl-2.0
/**
/** The program argument name for setting the user data directory path */
/** The program argument name for setting the main config directory path */
/** The default main configuration directory name */
/** The default user data directory name */
/** The property to recognize a service instance created by a service factory */
/** The property to separate service PIDs from their contexts */
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/smarthome/documentation/development/bindings/xml-reference.html for the list
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
// Loop over all providers
// And for each provider, loop over all their config descriptions
// See if there already exists a configuration for this URI in the map
// Yes - Merge the groups and parameters
// And add the combined configuration to the map
// No - Just add the new configuration to the map
// Now convert the map into the collection
/**
/**
// Return the new configuration description
// Otherwise null
// Simply merge the groups and parameters
/**
/**
// Add all the existing options that may be provided by the initial config description provider
// Return the new parameter
// Otherwise return the original parameter
// Simply merge the options
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
// combine these partials because URI.toString() does not decode
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
// Loop through all the configuration parameters and localize them
// Loop through all the configuration groups and localize them
/**
/**
/**
/* key */option.getValue(), /* fallback */option.getLabel(),
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
// Don't try to write to final fields and ignore transient fields
// Consider RequiredField annotations
// Allows to have List<int>, List<Double>, List<String> etc
/**
// Handle the conversion case of BigDecimal to Float,Double,Long,Integer and the respective
// primitive types
// Handle the conversion case of String to Float,Double,Long,Integer,BigDecimal,Boolean and the respective
// primitive types
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// prevent instantiation
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
// If the parameter supports multiple selection, then it may be provided as an array
// Perform validation on each value in the list separately
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/** The key to be used for internationalization. */
/** The default message. */
/**
//www.eclipse.org/legal/epl-2.0
/**
// Allow specified options to be outside of the min/max value
// Option values are a string, so we can do a simple compare
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/** The name of the configuration parameter. */
/** The {@link Type} of the configuration status message. */
/** The key for the message to be internalized. */
/** The arguments to be injected into the internationalized message. */
/** The corresponding internationalized status message. */
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/** The id of the entity whose new configuration status is to be propagated. */
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/** The name of the configuration parameter whose value does not meet its {@link ConfigDescription} declaration. */
/** The default message describing the validation issue. */
/** The key of the message to be used for internationalization. */
/** The optional content to be passed as message parameters into the message. */
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
//@formatter:off
//@formatter:on
//@formatter:off
//@formatter:on
// nullable attributes
// list attributes
// boolean attributes
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// Register config registry
// Create config option list
/**
//www.eclipse.org/legal/epl-2.0
/**
// ensure conversions are null-tolerant and don't throw exceptions
// ensure copies, not views
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
//
//
//
//
//
//
/**
//www.eclipse.org/legal/epl-2.0
/**
// no chance -> leaving it untouched
// no chance -> leaving it untouched
// no chance -> leaving it untouched
/**
//www.eclipse.org/legal/epl-2.0
/**
// ConfigDescriptionParameterBuilder.create(name,
// type).withRequired(required).withMaximum(max).withMinimum(min).withPattern(pattern).build();
// ===========================================================================
// REQUIRED VALIDATIONS
// ===========================================================================
// ===========================================================================
// MIN MAX VALIDATIONS
// ===========================================================================
// ===========================================================================
// TYPE VALIDATIONS
// ===========================================================================
// ===========================================================================
// PATTERN VALIDATIONS
// ===========================================================================
// ===========================================================================
// MISC VALIDATIONS
// ===========================================================================
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
// we first stop any currently running scan and its scheduled stop
// call
// schedule an automatic call of stopScan when timeout is reached
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
// can be overridden
/**
// can be overridden
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
// fallback for discovery result which were created before the thingTypeUID field was added
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// Skip error logging for aborted scans
/**
//www.eclipse.org/legal/epl-2.0
/**
// Internal enumeration to identify the correct type of the event to be fired.
// Check if the key is present in the configuration.
// Normalize first
// If the value is equal to the one of the configuration, there is nothing to do.
// - the given key is part of the configuration
// - the values differ
// update value
// Attention: Do NOT fire an event back to the ThingRegistry otherwise circular
// events are fired! This event was triggered by the 'add(DiscoveryResult)'
// method within this class. -> NOTHING TO DO HERE
/**
// in case of EventType added/updated the listeners might have modified the result in the discoveryResultStorage
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.dns-sd.org/ServiceTypes.html)
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// should not remove anything
// start discovery again
// should remove one entry
// register another discovery service for the same thing type
// start discovery again
// should remove no entry, as there is no older entry discovery of this specific discovery service
// should remove only one entry
// 2 discovery services for the same thing type with different bridges - inbox must contain 2 elements
// should not remove anything
// should not remove anything
// start discovery again
// 2 discovery services for the same thing type with different bridges - inbox must now contain 4 elements
// should remove only 1 entry (of bridge1)
// should remove only 1 entry (of bridge2)
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
// Add discovery result with thing type THING_TYPE_UID and representation property value DEVICE_ID
// Then there is a discovery result which is NEW
// Now a thing with thing type THING_TYPE_UID3 goes online, with representation property value being also the
// device id
// Then there should still be the NEW discovery result, but no IGNORED discovery result
// insert thing with thing type THING_TYPE_UID3 and representation property value DEVICE_ID in registry
// Add discovery result with thing type THING_TYPE_UID3 and representation property value DEVICE_ID
// Do NOT ignore this discovery result because it has a different binding ID
// Then there is a discovery result which is NEW
// The following discovery result is automatically approved, as it has matching thing type UID
// The following discovery result is not automatically approved, as it does not have matching thing type UID
// Adding this inboxAutoApprovePredicate will auto-approve the first two discovery results as they have matching
// thing type UID.
// Adding this inboxAutoApprovePredicate will auto-approve the third discovery results as it has matching
// thing type UID.
// Before setting the always auto approve property, existing inbox results are not approved
// After setting the always auto approve property, all existing inbox results are approved.
// Newly added inbox results are also approved.
// The discovery result is auto-approved in the presence of the evil predicates
/**
//www.eclipse.org/legal/epl-2.0
// TODO: the test fails if this line is used
// inboxListeners.add(inboxListener)
// TODO: the test fails if this line is used
// inboxListeners.remove(inboxListener)
// Filter by nothing
// Filter by thingType
// Filter by bindingId
// Filter by DiscoveryResultFlag
// Filter by thingId
// Filter by thingType and DiscoveryResultFlag
// Filter by bindingId and DiscoveryResultFlag
// add discovery result
// update discovery result
// remove discovery result
// should not remove a result
// should remove a result
// should remove a result
/**
//www.eclipse.org/legal/epl-2.0
/**
//
//
// 1st call checks existence of the result in the storage (returns null)
// 2nd call retrieves the stored instance before the event gets emitted
// (modified due to storage mock configuration)
//
//
// 1st call checks existence of the result in the storage (returns the original result)
// 2nd call retrieves the stored instance before the event gets emitted
// (modified due to storage mock configuration)
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
//en.wikipedia.org/wiki/Sysfs) provided by Linux (a pseudo file system provided by
/**
//www.linux-usb.org/FAQ.html#i6), where there can be one or more USB port numbers separated by dots.
/**
/**
/**
/**
/**
// Warn if the configuration was actively changed
// Otherwise, only debug log - so that, in particular, on Non-Linux systems users do not see warning
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// Wait a little more than one second to give background scanning a chance to kick in.
// Expectation: discovery listener called with newly discovered devices usb1 and usb2; not called with removed
// devices.
// Expectation: discovery listener called once for removing usb1, and once for adding usb2/usb3 each.
// Expectation: discovery listener called once for each discovered device, and once for removal of usb1.
// Expectation: discovery listener never called, as usbSerialScanner indicates that no scans possible
/**
//www.eclipse.org/legal/epl-2.0
/**
// only run the tests on systems that support symbolic links
// with given test setup, scans can be performed
// Create the device file in /dev
// Create the USB device folder structure
// Create the symlink into the USB device folder structure
// Create the files containing information about the USB device
// Create the files containing information about the USB interface
/**
//www.eclipse.org/legal/epl-2.0
/**
// Background discovery is enabled by default, hence no need to set it explicitly again. In consequence,
// background discovery is started >=1 times (both in the activator and in startBackgroundDiscovery).
// with no discovery participants available, no thing types are supported.
// with two discovery participants available, the thing types supported by them are supported.
// register one discovery listener
// register two discovery participants
// when no discovery participant supports a newly discovered device, no device is discovered
// when only the first discovery participant supports a newly discovered device, the device is discovered
// when only the second discovery participant supports a newly discovered device, the device is also discovered
// register one discovery listener
// register one discovery participant
// when the discovery participant does not support a removed device, no discovery result is removed
// when the first discovery participant supports a removed device, the discovery result is removed
// get info about three added and one removed USB dongles from UsbSerialDiscovery
// register one discovery participant
// then this discovery participant is informed about USB devices usb2 and usb3, but not about usb1
// wait until the configuration is actually set in the usbSerialDiscoveryService
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/** The program argument name for setting the service pid namespace */
/** The property to recognize a service instance created by a service factory */
/** The property to separate service PIDs from their contexts */
/**
/** The default namespace for service pids */
/** The default services configuration filename */
// Sort the files by modification time,
// so that the last modified file is processed last.
/**
// it is a fully qualified namespace
// we need to remember which configuration needs to be updated
// because values have changed.
// also cache the already retrieved configurations for each pid
// configuration file contains a PID Marker
// split pid and context
// the pid was once from an exclusive file but there is either a second non-exclusive-file with config
// entries or the `pid:` marker was removed.
// if we have a context we need to create a service factory
// try to find configuration using our context property
// this file does only contain entries for this PID and no other files do contain further entries for this PID.
// no valid configuration line, so continue
// no override of the pid is default
// PID is not fully qualified, so prefix with namespace
/**
/**
/**
/**
// we expect a 1:1 relation between PID and path
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/** The program argument name for setting the service config directory path */
/** The default folder name of the configuration folder of services */
// Detect if a service specific configuration file was removed. We want to
// notify the service in this case with an updated empty configuration.
/**
//www.eclipse.org/legal/epl-2.0
/**
//www.eclipse.org/legal/epl-2.0
// Store the default values in order to restore them after all the tests are finished.
// Clear the configuration with the current pid from the persistent store.
// Set the system properties to their initial values.
// Assert that a file with local pid from the root configuration directory is processed.
// Assert that a file with local pid from the services directory is processed.
// Assert that more than one file with local pid from the services directory is processed.
// In this test case we need configuration files, which names contain dots.
/* Assert that the configuration is updated with the name of the file in the root directory as a pid. */
/* Assert that the configuration is updated with the name of the file in the services directory as a pid. */
// In this test case we need configuration files, which names don't contain dots.
/*
/*
/*
/*
// This test case is a corner case for the above test.
/*
/*
/*
/*
/*
/*
/*
/*
/*
/*
// Assert that a file with global pid from the root configuration directory is processed.
// Assert that a file with global pid from the services directory is processed.
// Assert that more than one file with global pid from the services directory is processed.
// Assert that the configuration is not updated with the global pid in the root directory.
// Assert that the configuration is updated with the local pid in the root directory.
// Assert that the configuration is not updated with the global pid in the services directory.
// Assert that the configuration is updated with the local pid in the services directory.
/*
/*
/*
/*
/*
/*
// Assert that an empty-string pid from a file in the services directory is processed.
/*
/*
// Modify this file, so that we are sure it is the last modified file in servicesDirectory.
/*
// Modify this file, so that we are sure it is the last modified file
/*
/*
// only ctx1 is overwritten by service-ctx1duplicate.cfg
/*
/*
/*
// remember the file content and delete the file:
/*
/*
// Modify this file, so that we are sure it is the last modified file in servicesDirectory.
/*
// Assert that the configuration is updated with all the properties for a pid from all the processed files.
/*
// Modify this file, so that we are sure it is the last modified file in servicesDirectory.
/*
/*
// Modify this file, so that we are sure it is the last modified file in servicesDirectory.
/*
/*
/*
/*
// We have to wait for all the files to be processed and the configuration to be updated.
// This method will return null, if there are no files in the directory.
/*
//stackoverflow.com/questions/2064694/how-do-i-find-the-last-modified-file-in-a-directory-in-java
/* A system property cannot be set to null, it has to be cleared */
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
// just make sure no old entry remains in the cache
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// read attributes
// the URI could be overridden by a context field if it could be
// automatically extracted
// create the lists to hold parameters and groups
// read values
// iterate through the nodes, putting the different types into their
// respective arrays
// create object
/**
//www.eclipse.org/legal/epl-2.0
/**
// read attributes
// read values
// fallback to deprecated "required" element
// read options and filter criteria
// create object
/**
//www.eclipse.org/legal/epl-2.0
/**
// Read values
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// nothing to do
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/*
/**
/**
/**
/**
// this should remain an anonymous class and not be converted to a lambda because of
// http://bugs.java.com/view_bug.do?bug_id=8073755
// Check if our OSGi instance is still active.
// If the component has been deactivated while the execution hide the exception.
// If we are not open, we can stop here.
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// nothing to do
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
// create a new one, because entries are removed during validation
// no duplicates are allowed
// there are still attributes in the validation mask left -> check if they are required
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
/**
// fixes a formatting problem with line breaks in text
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
// fixes a formatting problem with line breaks in text
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// install test bundle
//
//
//
//
//
//
//
//
//
/**
//www.eclipse.org/legal/epl-2.0
/**
// install test bundle
// uninstall test bundle
// install test bundle
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//tools.ietf.org/html/rfc6749#section-1.4">rfc6749 section-1.4</a>
//tools.ietf.org/html/rfc6749#section-10.3">rfc6749 section-10.3</a>
/**
//tools.ietf.org/html/rfc6749#section-7.1">rfc6749 section-7.1</a>
/**
//tools.ietf.org/html/rfc6749#section-4.2.2">rfc6749 section-4.2.2</a>
/**
//tools.ietf.org/html/rfc6749#section-1.5">rfc6749 section-1.5</a>
//tools.ietf.org/html/rfc6749#section-10.4">rfc6749 section-10.4</a>
/**
//tools.ietf.org/html/rfc6749#section-3.3">rfc6749 section-3.3</a>
/**
//tools.ietf.org/html/rfc6749#section-4.2.2">rfc6749 section-4.2.2</a>
/**
/**
// not possible
// Exact match since class is final
/**
//www.eclipse.org/legal/epl-2.0
/**
//tools.ietf.org/html/rfc6749#section-4.1
//tools.ietf.org/html/rfc6749#section-4.3
/**
//tools.ietf.org/html/rfc6749#section-4.1">Authorization Code Grant illustration - rfc6749
//tools.ietf.org/html/rfc6749#section-4.1.1">Concerning which parameters must be set and
//oauth.provider?response_type=code&client_id=myClientId&redirect_uri=redirectURI&scope=myScope&state=mySecureRandomState
/**
//client.example.com/cb?code=SplxlOBeZQQYbYS6WxSbIA&state=xyz
//tools.ietf.org/html/rfc6749#section-4.1">Authorization Code Grant illustration - rfc6749
/**
//tools.ietf.org/html/rfc6749#section-4.1.3">Access Token Request - rfc6749 section-4.1.3</a>
//tools.ietf.org/html/rfc6749#section-5.2">Error Response - rfc6749 section-5.2</a>
/**
//tools.ietf.org/html/rfc6749#section-4.3.2">rfc6749 section-4.3.2</>
/**
//tools.ietf.org/html/rfc6749#section-5.2">rfc6749 section-5.2</a>
/**
/**
//tools.ietf.org/html/rfc6749#section-4.2>Implicit Grant - rfc6749 section-4.2</a>
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
//tools.ietf.org/html/rfc6749#section-4.1.2.1">rfc6749 section-4.1.2.1</a>
//tools.ietf.org/html/rfc6749#section-5.2">rfc6749 section-5.2</a>
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
// There is already an ongoing refresh, just return that future
// We request a value update from the supplier now
// No request is ongoing anymore, update the value and expire time
// The @NonNullbyDefault annotation forces us to check the return value of thenApply.
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
//docs.oracle.com/javase/7/docs/api/java/util/concurrent/ThreadPoolExecutor.html">the official
/** we will use a core pool size of 1 since we allow to timeout core threads. */
/** Our queue for queueing tasks that wait for a thread to become available */
/** The thread for processing the queued tasks */
/**
/**
/**
// check again to make sure it has not been created by another thread
/**
// make sure that rejected tasks are executed before any new concurrently incoming tasks
// ignore incoming tasks when the executor is shutdown
// check if some thread from the pool is idle
// keep waiting for max 2 seconds if further tasks are pushed to the queue
// Set the queueThread member to null while holding the writeLock, so we signal
// that the thread will die. Without this approach the thread could be still
// alive and only the thread itself knows that he is dyeing.
// let's wait for a thread to become available, but max. 1 second
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
// use static factory method to create ThreadFactoryBuilder
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
// do a double check if it is still null or if another thread might have created it meanwhile
/**
// do a double check if it is still null or if another thread might have created it meanwhile
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
// handle fragment resources. return first one.
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/*
/**
/**
// The given "element" might not be the live instance but loaded from storage.
// Use the identifier to operate on the "real" element.
// The given "element" might not be the live instance but loaded from storage.
// Use the identifier to operate on the "real" element.
/**
/**
/**
/**
/**
/**
/**
// can be overridden by sub classes
/**
// can be overridden by sub classes
/**
// can be overridden by sub classes
/**
// can be overridden by sub classes
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//docs.oracle.com/javase/7/docs/api/java/util/regex/Pattern.html">Java Regex</a>
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/** The 'text' pattern (prefix) which marks constants. */
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// another call to the same identifier is (still) running,
// therefore queue it instead for async execution later on.
// Inform the caller about the timeout by means of the exception.
/**
//www.eclipse.org/legal/epl-2.0
/**
// The Future is the wrapper task around our scheduled Runnable. This is only "done" if an Exception
// occurred, the Task was completed, or aborted. A periodic Task (scheduleWithFixedDelay etc.) is NEVER
// "done" unless there was an Exception because the outer Task is always rescheduled.
// we are NOT interested in the result of the Future but we have to call get() to obtain a possible
// Exception from it
// ignore canceled tasks
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/** The event subscribers indexed by the event type. */
// Use a concurrent hash map because the map is written and read by different threads!
// Use a copy on write array set because the set is written and read by different threads!
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
// received an internal notification
/**
//www.eclipse.org/legal/epl-2.0
/**
// LocaleProvider
// TranslationProvider
// LocationProvider
// TimeZoneProvider
// UnitProvider
// at least the language must be defined otherwise the system default locale is used
// preserve old location or null if none was set before
// Only US and Liberia use the Imperial System.
/**
//www.eclipse.org/legal/epl-2.0
/**
/** The directory within the bundle where the resource files are searched. */
/** The file pattern to filter out resource files. */
/**
/**
/**
/**
/**
// Modify the search order so that the following applies:
// 1.) baseName + "_" + language + "_" + country
// 2.) baseName + "_" + language
// 3.) baseName
// 4.) null -> leads to a default text
// Not using the default fallback strategy helps that not the default locale
// search order is applied between 2.) and 3.).
// nothing to do
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// the group might not yet be registered, let's ignore this
// the group might not yet be registered, let's ignore this
/**
// fill group with its members
// add the item to all relevant groups
// the group might not yet be registered, let's ignore this
// don't use #initialize and retain order of items in groups:
// remove our metadata for that item
/**
//www.eclipse.org/legal/epl-2.0
/**
// in case the item does define a unit it takes precedence over all other conversions:
// explicit cast to Class<? extends Quantity> as JDK compiler complains
// convertedState is always returned because the state is an instance
// of QuantityType which never returns null for as(DecimalType.class)
/**
//www.eclipse.org/legal/epl-2.0
/**
// Look for class hierarchy
// Should never happen
// Should never happen
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// remove our metadata for that item
/**
//www.eclipse.org/legal/epl-2.0
/**
// make sure the static block gets executed.
/**
//www.eclipse.org/legal/epl-2.0
/**
//www.cronmaker.com/
//www.quartz-scheduler.org/documentation/quartz-1.x/tutorials/crontrigger
/**
/**
// Parse parts and add to the fields list. The order added should be maintained!
/**
/**
/**
// Skip the last entry it contains the cron expression no varables.
/**
/**
/**
// Check wild card.
// No field needed all values accepted
// Parse each sub expression
// If this is the year check, we create a conjunction with a check for the maximum year
/*
// Max and min for the current type
// No matches fall through to parse as a normal expression
// fall through, it is a normal expression
// Parse range and step expressions
// we had a / expression
// simple range/value check
/**
/**
/**
/**
/**
// the actual day
// target was on a Sunday
// target was Saturday 1
// not a work day
/**
// Never match the actual time, so since our basic
// unit is seconds, we add one second.
// We loop through the fields until they all match. If
// one of them does not match, its type is incremented
// and all lower fields are reset to their minimum. And
// we start over with this new time.
// All fields match!
/**
//
/**
/**
// Fall-through switch case. for example if type is year all cases below must also be handled.
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// Also cancel the scheduled timer if returned completable future is cancelled.
//
/**
// if already cancelled stop the new future directly.
// if an error occurs in the scheduled job propagate to parent
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/*
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// we pick up the first valid StateDescription here:
// if the current StateDescription does provide options
// and we don't already have some, we pick them up here:
// we recreate the StateDescription in case we found a valid one and state options are given,
// or readOnly is set:
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
// try to send the command to the bus
/**
/**
// if nothing has changed, we send update notifications
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
// only baseItem but no function set -> use Equality
/**
// we only allow GroupItem with BOTH, baseItem AND function set, or NONE of them set
/**
/**
/**
/**
/**
/**
// in case membership is constructed programmatically this sanitises
// the group names on the item:
/**
/**
/**
// try to send the command to the bus
// if a group does not have a function it cannot have a state
// we use the transformation method from the base item
// filter out group items w/o state. we had those in to detect cyclic membership.
// also add group items w/o state to detect cyclic membership.
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
// nothing to do
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
// retry failed creation attempts
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
// Default implementation: do nothing.
// Can be implemented by subclass in order to handle item commands.
/**
// Default implementation: do nothing.
// Can be implemented by subclass in order to handle item updates.
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
//en.wikipedia.org/wiki/Area_density
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// we map ON/OFF values to dark/bright, so that the hue and saturation values are not changed
// try conversion
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/* package */ DimmerItem(String type, String name) {
// try conversion
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//stackoverflow.com/questions/837872/calculate-distance-in-meters-when-you-know-longitude-and-latitude-in-
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
// DecimalType update for a NumberItem with dimension, convert to QuantityType:
// QuantityType update, check unit and convert if necessary:
// the state could not be converted to an accepted unit.
/**
/**
/**
/**
// explicit cast to Class<? extends Quantity> as JDK compiler complains
/**
//www.eclipse.org/legal/epl-2.0
/**
/* package */ PlayerItem(String type, String name) {
/**
//www.eclipse.org/legal/epl-2.0
/**
// try conversion
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/* package */ SwitchItem(String type, String name) {
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
// if we do not have any items, we return the passive state
/**
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// external format patterns for output
// this pattern returns the time zone in RFC822 format
// internal format patterns for parsing
/**
// direct parsing (date and time)
// time only
// date only
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// The value could be an integer value. Try to convert to BigInteger in
// order to have access to more conversion formats.
// Could not convert to integer value without loss of
// information. Fall through to default behavior.
// The conversion is not valid for the type BigInteger. This
// happens, if the format is like "%.1f" but the value is an
// integer. Fall through to default behavior.
/**
//www.eclipse.org/legal/epl-2.0
/**
// constants for the constituents
// constants for colors
// 1931 CIE XYZ to sRGB (D65 reference white)
// sRGB to 1931 CIE XYZ (D65 reference white)
/**
/**
/**
/**
/**
// Gamma compression (sRGB) for a single component, in the 0.0 - 1.0 range
// Gamma decompression (sRGB) for a single component, in the 0.0 - 1.0 range
/**
// This makes sure we keep color information even if brightness is zero
// if brightness is not completely off, we consider the state to be on
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// external format patterns for output
// The equatorial radius of WGS84 ellipsoid (6378137 m).
// constants for the constituents
// in decimal degrees
// in decimal degrees
// in decimal meters
/**
/**
//en.wikipedia.org/wiki/Haversine_formula">Haversine formula</a>
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// TYPE_BOUNDS can not be used here since
// javax.measure.quantity.* interfaces are not
// annotated.
// Regular expression to split unit from value
// split on any blank character, even none (\\s*) which occurs after a digit (?<=\\d) and before
// a "unit" character ?=[a-zA-Z°µ%'] which itself must not be preceded by plus/minus digit (?![\\+\\-]?\\d).
// The later would be an exponent from the scalar value.
/**
/**
// getQuantity needs a space between numeric value and unit
/**
// Avoid scientific notation for double
/**
/**
/**
// The value could be an integer value. Try to convert to BigInteger in
// order to have access to more conversion formats.
// Could not convert to integer value without loss of
// information. Fall through to default behavior.
// The conversion is not valid for the type BigInteger. This
// happens, if the format is like "%.1f" but the value is an
// integer. Fall through to default behavior.
/**
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
// initialise the sum from the first item
/**
// initialise the sum from the first item
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// constants
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// avoid external instantiation
/**
/** Additionally defined units to be used in ESH **/
/** Length **/
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// avoid external instantiation
/**
/**
// Override the default unit symbol ℃ to better support TTS and UIs:
/**
//www.eclipse.org/legal/epl-2.0
/**
// avoid external instantiation
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
// Utility method that could be used for non-secure and secure port.
// Try to find the port by using the service property (respect service ranking).
// This point of code should never be reached.
// If the service does not provide the port, try to use the system property.
// If the property could not be parsed, the HTTP servlet itself has to care and warn about.
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
// must be initialized before activate due to OSGi reference
// if none is specified we return the default one for backward compatibility
// if none is specified we return the one matching the primary ip
// an error has occurred, using first interface like nothing has been configured
// we do not seem to have any network interfaces
/**
/**
// These are NOT OSGi service injections, but listeners have to register themselves at this service.
// This is required in order to avoid cyclic dependencies, see https://github.com/eclipse/smarthome/issues/6073
/**
/**
// we do not seem to have any network interfaces
// an error has occurred, using broadcast address of first interface instead
/**
/**
// NetworkInterface.getInterfaceAddresses() should return only non-null
// addresses
/**
/**
/**
// use first IP within this subnet
/**
// no listeners listening, just update
// Look for added addresses to notify
// Look for removed addresses to notify
// Prevent listeners changing the list
// notify each listener with a timeout of 15 seconds.
// SafeCaller prevents bad listeners running too long or throws runtime exceptions
// safeCaller null must be checked between each round, in case it is deactivated
// notify each listener with a timeout of 15 seconds.
// SafeCaller prevents bad listeners running too long or throws runtime exceptions
// safeCaller null must be checked between each round, in case it is deactivated
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
// nothing to do for the default implementation
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
//en.wikipedia.org/wiki/Cron}.
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
//docs.oracle.com/javase/7/docs/api/java/nio/file/WatchService.html"
/**
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// ms
/**
// prevent instantiation
/**
// walk through all folders and follow symlinks
// Process the event only when a relative path to it is resolved
/**
//stackoverflow.com/questions/16777869/java-7-watchservice-ignoring-multiple-occurrences-of-the-same-event">this
// Context for directory entry event is the file name of entry.
// If the path has been registered in the watch service it relative path can be resolved
// The context path is resolved by its already registered parent path
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// prevent public instantiation
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
// we expect this exception in case the extracted string does not match any known unit
//
// Compare the unit symbols. For product units (e.g. 1km / 1h) the equality is not given in the Sets above.
//
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// used for hex conversions
// private constructor as we only have static methods
/**
/**
/**
// first convert to upper case to ease the rest
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// generic mp3 format without any further constraints
// generic wav format without any further constraints
// generic OGG format without any further constraints
// generic AAC format without any further constraints
/**
/**
//bit.ly/1TUW93t">WAV Format</a>
//bit.ly/1oRMKOt">Supported codecs</a>
//bit.ly/1TUWSlk">RIFF container format</a>
/**
//bit.ly/1oRMWNE">OGG</a>
/**
//wiki.multimedia.cx/?title=PCM#PCM_Types">PCM Types</a>
/**
//wiki.multimedia.cx/?title=PCM#PCM_Types">PCM Types</a>
/**
//wiki.multimedia.cx/?title=PCM#PCM_Types">PCM Types</a>
/**
//wiki.multimedia.cx/?title=PCM#PCM_Types">PCM Types</a>
/**
//wiki.multimedia.cx/index.php?title=MP3">MP3 Codec</a>
/**
//xiph.org/vorbis/doc/">Vorbis</a>
/**
/**
/**
/**
/**
//bit.ly/1OTydad">Bit Depth</a>
/**
//bit.ly/1OTy5rk">Bit Rate</a>
/**
/**
/**
/**
/**
/**
//bit.ly/1OTydad">Bit Depth</a>
/**
//bit.ly/1OTy5rk">Bit Rate</a>
/**
/**
/**
/**
// Return the first concrete AudioFormat found
// Check if currentAudioFormat is abstract
// Prefer WAVE container
// As currentAudioFormat is concrete, use it
// There's no concrete AudioFormat so we must create one
// Define AudioFormat to return
// Not all Codecs and containers can be supported
// Prefer WAVE container
// If required set BigEndian, BitDepth, BitRate, and Frequency to default values
// Define default values
// Obtain current values
// These values must be interdependent (bitRate = bitDepth * frequency)
// Return preferred AudioFormat
// Return null indicating failure
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// Java does not parse non-standard headers used by SHOUTCast
// Manipulate User-Agent to receive a stream
// getInputStream() method is more error-proof than openStream(),
// because openStream() does openConnection().getInputStream(),
// which opens a new connection and does not reuse the old one.
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
//
//
//
//
//
// constants for the configuration properties
// service maps
/**
// get current volume
// set notification sound volume
// restore volume only if it was set before
/**
//www.eclipse.org/legal/epl-2.0
/**
// try to set the content-type, if possible
// try to set the content-length, if possible
// we need to care about concurrent access and have a separate stream for each thread
// the stream has expired, we need to remove it!
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// wait for the server thread to be started
//%s:%s%s", protocol, hostname, port, path);
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// just to make sure there is no default source
// just to make sure there is no default sink
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// read attributes
// set automatically extracted URI for a possible 'config-description' section
// read values
// create object
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// nothing to do
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
// install test bundle
// install test bundle
// install test bundle
// Set german locale
// before running the test with a default locale make sure the locale has been set
// install test bundle
/* use default locale */ null);
/**
//www.eclipse.org/legal/epl-2.0
/**
// install test bundle
// uninstall test bundle
// install test bundle
// uninstall test bundle
// install test bundle
// uninstall test bundle
// install test bundle
/**
//www.eclipse.org/legal/epl-2.0
/**
//lmgtfy.com/?q=" + name;
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
// create intermediary directories
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// we first need to remove the cached value
// we first need to remove the cached value
/**
//www.eclipse.org/legal/epl-2.0
/**
/** Enumeration with all possible compare options */
/** Enumeration with all ordering options */
/** filter result to only contain entries for the given item */
/** filter result to only contain entries that are newer than the given date */
/** filter result to only contain entries that are older than the given date */
/** return the result list from starting index pageNumber*pageSize only */
/** return at most this many results */
/** use this operator to compare the item state */
/** how to sort the result list by date */
/** Filter result to only contain entries that evaluate to true with the given operator and state */
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// the scheduler used for timer events
/**
/**
/**
/**
// first check, if we should return them all
// otherwise, go through the detailed definitions
/**
// get the last persisted state from the persistence service if no state is yet set
/**
/**
/*
/**
//www.eclipse.org/legal/epl-2.0
/**
// if there is exactly one service available in the system, we assume that this should be used, if no
// default is specifically configured.
/**
//www.eclipse.org/legal/epl-2.0
/**
// check if the strategy is directly defined on the config
// if no strategies are given, check the default strategies to use
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// if (getClass() != obj.getClass()) {
// return false;
// }
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
// we haven't found any type as a tag, but if there is a Property tag, we can conclude that it is a Point
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// the namespace to use for the metadata
// holds the static definition of the relations between entities
// local cache of the created metadata as a map from itemName->Metadata
/**
/**
/**
/**
// process relations of locations
/**
// process relations of locations
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
// token created 20 seconds ago
// token only has a life time of 10 seconds
// token created 20 seconds ago
// token only has a life time of 30 seconds
// A token created now
// token has life time of 1 minute
// token created 20 seconds ago
// token has a life time of 60 seconds
/**
//www.eclipse.org/legal/epl-2.0
/**
// Fail if cache time is <= 0
// We should always be able to get the raw value, expired or not
// Define a supplier which returns a future that is immediately completed.
// We expect an immediate result with the value 10.0
// The value should be valid
// We expect an immediate result with the value 10.0, but not additional call to the supplier
// Wait
// We expect an immediate result with the value 10.0, and an additional call to the supplier
// We should always be able to get the raw value, expired or not
// Define a supplier which returns a future that is not yet completed
// Multiple get requests while the cache is still refreshing
// The refresh is finally done
/**
//www.eclipse.org/legal/epl-2.0
/**
// get all keys
// use the same key twice
// use a different key
// get all values
// use another different key
// wait until cache expires
// invalidate item
// invalidate all
// refresh item
// refresh all
// remove item
// clear cache
/**
//www.eclipse.org/legal/epl-2.0
/**
// use the same key twice
// put new value
// wait until cache expires
// invalidate item
// refresh item
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
// enable to see logging. See below how to include slf4j-simple
// enableLogging();
/**
// no threads created
/**
/**
// now expect that no threads have been created
// no need to wait after shutdown as no threads created
/**
// no queue thread
// needs to wait CORE_POOL_TIMEOUT + x until all threads are down again
/**
// pool 2 tasks, threads must exist
// thread will be NORM prio or max prio of this thread group, which can
// < than NORM
// thread will be NORM prio or max prio of this thread group, which can
// < than NORM
// 2 more tasks, will be queued, no threads
// as pool size is 2, no more active threads, will stay at 2
// 0 are yet executed
// needs to wait CORE_POOL_TIMEOUT + 2sec-queue-thread + x until all
// threads are down again
/**
// helper methods
// disable logging
/**
// get top level thread group
// make buffer 10 entries bigger
// enable printout to see threads
// System.out.println("getThread:" + l[i]);
// get top level thread group
// make buffer 10 entries bigger
// we can only test if name is at least one character,
// otherwise there will be threads found (handles poolName="")
// enable printout to see threads
// System.out.println("areThreadsFromPoolRunning: " +
// l[i].toString());
// Runnables for testing
// ignore
/**
//www.eclipse.org/legal/epl-2.0
/**
// Create a thread, to check that there are no exceptions.
// No more assertions on the name, as it depends only on the wrapped thread factory's naming strategy.
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// the duration that the called object should block for
// the standard timeout for the safe-caller used in most tests
// the grace period allowed for processing before a timing assertion should fail
// ensure all "inner" assertion errors are heard
// give it a chance to start
// give it a chance to start
// okay
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// LocationProvider translationProvider;
/**
//www.eclipse.org/legal/epl-2.0
/**
//www.eclipse.org/legal/epl-2.0
/**
//
//
//
//
//
//
//
//
//
//
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// change state
// wait for an event that change the state from OFF to ON
// there could be one remaining event from the 'ItemUpdater sets item state' test
// send update for same state
// wait a few milliseconds
// make sure no state changed event has been sent
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// Last weekday
// Fire at 10.15 every 10 days every month, starting on the first day of the month.
// Fire at 10:15am on the second Friday of every month
// Fire at 10:15am on the last Friday of every month
// Fire at 10:15am on the last day of every month
// Fire at 10:15am on the 15th day of every month
// Fire at 10:15am every Monday, Tuesday, Wednesday
// Fire at 2:10pm and at 2:44pm every Wednesday in the month of January.
// Fire every minute starting at 2pm and ending at 2:02pm, every day
/**
//www.eclipse.org/legal/epl-2.0
/**
//
//
//
//
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// Because starting scheduler takes some time and we don't know how long
// the first time set is the offset on which we check the next values.
/**
//www.eclipse.org/legal/epl-2.0
/**
// Pass a exception not very likely thrown by the scheduler it self to avoid missing real exceptions.
// Pass an exception not very likely thrown by the scheduler it self to avoid missing real exceptions.
// wait a little longer to see if not more are scheduled.
// wait a little longer to see if not more are scheduled.
// Pass a exception not very likely thrown by the scheduler it self to avoid missing real exceptions.
// wait a little longer to see if not more are scheduled.
// add some slack so don't check at exact time
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// State changes -> one change event is fired
// State doesn't change -> no event is fired
// can not be tested as stateDescriptionProviders is private in GenericItem
// assertThat(item.stateDescriptionProviders, is(nullValue()));
/**
// :-P
/**
//www.eclipse.org/legal/epl-2.0
/** Time to sleep when a file is created/modified/deleted, so the event can be handled */
// Main group uses AND function
// Sub-group uses NAND function
// subGroup and subMember state differ
// We expect ON here
// recalculate the state
// count: rootMember, sub1, sub2-1, sub2-2, sub2-3
// count: rootMember, sub1, group2
// from ItemEventFactory.GROUPITEM_STATE_CHANGED_EVENT_TOPIC
// State changes -> one change event is fired
// State doesn't change -> no events are fired
// State changes -> one change event is fired
// State changes -> one change event is fired
// wait to see that the event doesn't fire
// State changes -> one change event is fired
// we expect that the group should now have status "OFF"
// State changes -> one change event is fired
// we expect that the group should now have status "ON"
// State changes -> NO change event should be fired
// wait to see that the event doesn't fire
// any value >0 means on, so 50% means the group state should be ON
// initially this group has State UndefType.NULL
// a state conversion from NULL to OnOffType should not be possible
// init group
// any value >0 means on, so 50% means the group state should be ON
// initially this group has State UndefType.NULL
// a state conversion from NULL to PercentType should not be possible
// init group
// initially this group has State UndefType.NULL
// a state conversion from NULL to PercentType should not be possible
// init group
/**
//www.eclipse.org/legal/epl-2.0
/**
// setup ManageItemProvider with necessary dependencies:
// setup ItemRegistryImpl with necessary dependencies:
// test added item with group name is added as member to group
// test removed item is removed as member from group
// test added group item with gets all members set when it is added at last
// test update item
// old item has group: [group, group2], new item has [group, group3]
// !
// get item throws an exception if item is not present and counter is not incremented
// bad, but counter will not incremented -> test fails.
// add new item
// update item
// remove item
/**
//www.eclipse.org/legal/epl-2.0
/**
// put an item into the storage that cannot be handled (yet)
// start without the appropriate item factory - it's going to fail silently, leaving a debug log
// all good
// now register the item factory. The item should be there...
// put items into the storage that cannot be handled (yet)
// start without the appropriate item factory - it only creates the group item
// all good
// now register the item factory. Both items should be there...
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// testing Group:Number:Count(".*hello.*")
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// HSBType is supported because it is a sub-type of PercentType
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// should not be accepted as valid state
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// HSB supported because it is a sub-type of PercentType
/**
//www.eclipse.org/legal/epl-2.0
/**
// if we set null, the item should stay null
// the state should be set on the item now
// reset item
// test if the item accepts a state that is not in our test state list
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
// for simplicity we use always the same input time.
/**
// set default time zone
// get formatted time string
// Test
// set default time zone
// get formatted time string
// Test
/**
//www.eclipse.org/legal/epl-2.0
/**
// Basic test with an integer value.
// Again an integer value, but this time an "advanced" pattern.
// Again an integer value, but this time an "advanced" pattern.
// A float value cannot be converted into hex.
// That's what we expect.
// An integer (with different representation) with int conversion.
// We know that DecimalType calls "String.format()" without a locale. So
// we have to do the same thing here in order to get the right decimal
// separator.
// A float value with float conversion.
// "11.1"
// An integer value with float conversion. This has to work.
// "11.0"
// An integer value with float conversion. This has to work.
// "11.0"
// should not be possible => null
/**
//www.eclipse.org/legal/epl-2.0
/**
// red
// black
// white
// green
// blue
// blueish
// purple
// green
// red
// black
// white
// green
// blue
// green
// blueish
// purple
// should not be possible => null
/**
//www.eclipse.org/legal/epl-2.0
/**
// should not be possible => null
/**
//www.eclipse.org/legal/epl-2.0
/**
// should not be possible => null
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// Ensure presence of default constructor
// Check canonization of position
// Ensure that constructor and toString are consistent
// https://bugs.eclipse.org/bugs/show_bug.cgi?id=467612#c17
/**
//www.eclipse.org/legal/epl-2.0
/**
// we need an ordered set to guarantee the Unit of the first entry
/**
//www.eclipse.org/legal/epl-2.0
/**
// Dimensionless value that works
// Testing various quantities in order to ensure split and parsing is working
// as expected
// Check that the unit has correctly been identified
// Check that the unit has correctly been identified
// check that beside the fact that we've got the same value, we don't have the same unit
// That's what we expect.
// Inconvertible units
/**
//www.eclipse.org/legal/epl-2.0
/**
// Index is between 0 and number of elements -1
// That's what we expect.
// That's what we expect.
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// should not be possible => null
/**
//www.eclipse.org/legal/epl-2.0
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// Fail if no event has been received within the given timeout
// set the NO_EVENT_TIMEOUT_IN_SECONDS according to the operating system used
// File created in the watched directory
// File created in a subdirectory of the watched directory
// File created in a sub sub directory of the watched directory
// Activate the service when the subdir is also present. Else the subdir will not be registered
// Assure that the ordering of the events will be always the same
// Do not watch the subdirectories of the root directory
// Consequent creation and deletion in order to generate any watch events for the subdirectory
// Do watch the subdirectories of the root directory
// Make all the subdirectories before running the service
// Wait for a possible event for the maximum timeout
// Single event for file creation is present
// We have to be sure that all the subdirectories of the watched directory are created when the watched service
// is activated
// File modified
// File modified but identical content
// File deleted
// There is possibility that one more modify event is triggered on some OS
// so sleep a bit extra time
// Clear all the asserted events
/**
// As the implementation of the watch events is OS specific, it can happen that when the file is deleted two
// events are fired - ENTRY_MODIFY followed by an ENTRY_DELETE
// This is usually observed on Windows and below is the workaround
// Related discussion in StackOverflow:
// http://stackoverflow.com/questions/28201283/watchservice-windows-7-when-deleting-a-file-it-fires-both-entry-modify-and-e
// Remove the ENTRY_MODIFY element as it is not needed
// Synchronize list as several watcher threads can write into it
/**
//www.eclipse.org/legal/epl-2.0
/**
//
//
//
//
//
//
//
//
/**
//www.eclipse.org/legal/epl-2.0
/**
// https://en.wikipedia.org/wiki/Dobson_unit
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
//bugs.eclipse.org/bugs/show_bug.cgi?id=445137 considering default
// uid might not have been initialized by the default constructor.
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
// media channels
/**
/**
/**
/**
/**
// weather channels
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/** the key for the vendor property */
/** the key for the model ID property */
/** the key for the serial number property */
/** the key for the hardware version property */
/** the key for the firmware version property */
/** the key for the MAC address property */
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
// prevent NPE in case the class variable is changed between the two
// calls in the next line
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
// Avoid subclasses to require importing the o.e.sh.core.common package
// Avoid bindings to require importing the o.e.sh.core.common package
// Avoid bindings to require importing the o.e.sh.core.common package
// Avoid bindings to require importing the o.e.sh.core.common package
// Avoid bindings to require importing the o.e.sh.core.common package
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
// do nothing by default, can be overridden by subclasses
// do nothing by default, can be overridden by subclasses
/**
//www.eclipse.org/legal/epl-2.0
/**
// this must not be used by bindings!
// this must not be used by bindings!
/**
// can be overridden by subclasses
// can be overridden by subclasses
// persist new configuration and reinitialize handler
// persist new configuration and notify Thing Manager
/**
// can be overridden by subclasses
// can be overridden by subclasses
// should be overridden by subclasses!
/**
// can be overridden by subclasses
// standard behavior is to refresh the linked channel,
// so the newly linked items will receive a state update.
// can be overridden by subclasses
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
//bugs.eclipse.org/bugs/show_bug.cgi?id=445137 considering
/**
/**
/**
// we only add specific ThingHandlerServices, i.e. those that derive from the
// ThingHandlerService interface, NOT the ThingHandlerService itself. We do this to register
// them as specific OSGi services later, rather than as a generic ThingHandlerService.
/**
/**
// can be overridden
// can be overridden
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
//bugs.eclipse.org/bugs/show_bug.cgi?id=445137 considering default
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/** The key for the requires a factory reset property. */
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// Hardware version A
// Hardware version B
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/** The {@link FirmwareUpdateHandler} is going to transfer the firmware to the actual device. */
/** The {@link FirmwareUpdateHandler} is going to trigger the firmware update for the actual device. */
/** The {@link FirmwareUpdateHandler} is going to reboot the device. */
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/** The firmware of the thing is up to date. */
/**
/** There is a newer firmware of the thing available and the firmware update for the thing can be executed. */
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/** Constant for the firmware status info event type. */
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/** Constant for the firmware update progress info event type. */
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/** Indicates that the firmware update was successful. */
/** Indicates that the firmware update has failed. */
/** Indicates that the firmware update was canceled. */
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/** Constant for the firmware update result info event type. */
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
//
//
//
/**
//www.eclipse.org/legal/epl-2.0
/**
/*
/*
/*
/*
/*
// consider user-override via item meta-data
// check if there is any channel ONLINE
//
//
//
//
// none of the linked channels is able to process the command
// Look for class hierarchy
// Should never happen
// Should never happen
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// we wait until no further new links or items are announced in order to avoid creation of
// items which then must be removed again immediately.
// there is already an item, we do not need to create one
// Only create an item for state channels
// check, if it is our own item
// it is from some other provider, so remove ours, if we have one
// check, if it is our own item
// it is from some other provider, so create one ourselves if needed
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// the timeout to use for any item event processing
// link UID -> profile
// factory instance -> link UIDs which the factory has created profiles for
// ask advisors
// ask default advisor
//
//
//
//
//
//
//
//
// make sure the command event is not sent back to its source
// DecimalType command sent to a NumberItem with dimension defined:
// The command is sent to an item w/o dimension defined and the channel is legacy (created from a ThingType
// definition before UoM was introduced to the binding). The dimension information might now be defined on the
// current ThingType. The binding might expect us to provide a QuantityType so try to convert to the dimension
// the ChannelType provides.
// This can be removed once a suitable solution for https://github.com/eclipse/smarthome/issues/2555 (Thing
// migration) is found.
// Look for class hierarchy and convert appropriately
//
// DecimalType command sent via a NumberItem with dimension:
// DecimalType command sent via a plain NumberItem w/o dimension.
// We try to guess the correct unit from the channel-type's expected item dimension
// or from the item's state description.
// nothing to do
// no-op
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// If this is not a concrete thing, then return
// First, get the thing type so we get the generic config descriptions
// Get the config description URI for this thing type
// First, get the thing so we get access to the channel type via the channel
// Get the config description URI for this channel type
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
// If we want to override the label, add it...
// If we want to override the description, add it...
//
//
//
//
//
// Initialize channel configuration with default-values
/**
/**
// Set default values to thing-configuration
/**
//www.eclipse.org/legal/epl-2.0
/**
//bugs.eclipse.org/bugs/show_bug.cgi?id=450236 - Considering
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// note: all provoked operations based on a status update should be executed asynchronously!
// only allow REMOVING -> REMOVED transition, all others are illegal
// update thing status and send event about new status
// if thing is a bridge
// if thing has a bridge
// notify thing registry about thing removal
// bridge has just been initialized: initialize child things as well
// bridge status has been changed: notify child things about status change
// child thing has just been initialized: notify bridge about it
// Remove the ThingHandler, if any
// Set the new channels
// Set the given configuration
// Set the new properties (keeping old properties, unless they have the same name as a new property)
// Change the ThingType
// Register the new Handler - ThingManager.updateThing() is going to take care of that
// Wait a little to give running handler registrations a chance to complete...
// called from the thing handler itself, therefore
// it exists, is initializing/initialized and
// must not be informed (in order to prevent infinite loops)
/**
// call asynchronous to avoid deadlocks in thing handler
// Enable a thing
// A handler is already registered for that thing. Try to initialize it.
// No handler registered. Try to register handler and initialize the thing.
// Dispose handler if registered.
// Only set the correct status to the thing. There is no handler to be disposed
// Clear the disabled thing storage. Otherwise the handler will NOT be initialized later.
// Mark the thing as disabled in the storage.
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
// needed because the removed element was taken from the storage and lost its dynamic state
// better call it explicitly here, even if it is called in onRemoveElement
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/** The key for the requires a factory reset property. */
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// Used as workaround for the NonNull annotation implied to .isElse()
/**
//www.eclipse.org/legal/epl-2.0
/**
// restore previous firmware status info in order that transfer can be re-triggered
// the config description validator does not support option value validation at the moment; so we will validate
// the time unit here
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// no-op
// no-op
/**
//www.eclipse.org/legal/epl-2.0
/**
// we cannot adjust undef or null values, thus we simply return them without reporting an error or warning
// allow offsets without unit -> implicitly assume its the same as the one from the state, but warn
// the user
// take care of temperatures because they start at offset -273°C = 0K
// do the math in kelvin and afterwards convert it back to the unit of the state
// offset is already in kelvin
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
// if present the set is not empty by definition
/**
// if present the set is not empty by definition
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
// it is not needed to send an event, because links can not be updated
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// check whether we want to enable the automatic link creation or not
// Don't inform about the link if the item does not exist.
// The handler will be informed on item creation.
/*
// this channel does not exist anymore, so remove outdated links
// this channel did not exist before, so add a link
// Don't notify the thing if the thing isn't initialised
// Don't notify the thing if the thing isn't initialised
// when a thing handler is successfully initialized (i.e. it goes from INITIALIZING to UNKNOWN, ONLINE or
// OFFLINE), we need to make sure that channelLinked() is called for all existing links
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
//bugs.eclipse.org/bugs/show_bug.cgi?id=450236 - Considering
/**
// bridge
// configuration
// label
// location
// channels
/**
/**
/**
/**
// Update the label
// Update the location
// update bridge UID
// update thing configuration
// update thing properties
// Update the channels
// keep all child things in place on a merged bridge
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// trick the null-annotation tooling
/**
//www.eclipse.org/legal/epl-2.0
/**
//www.eclipse.org/legal/epl-2.0
/**
//www.eclipse.org/legal/epl-2.0
/**
// check getBridge works
// check that base thing handler does not implement config status provider
// the assertion is in handle command
// check that the config status provider is registered as OSGi service
// register ThingTypeProvider & ConfigurationDescription with 'required' parameter
// register thing handler factory
// add thing with empty configuration
// ThingHandler.initialize() has not been called; thing with status UNINITIALIZED.HANDLER_CONFIGURATION_PENDING
// ThingHandler.initialize() has been called; thing with status ONLINE.NONE
// not implemented
// set the config to an initial value
// let it fail next time...
// all good, we want that
// now check if the thing's configuration has been rolled back
// set bridge status to OFFLINE
// child things are OFFLINE with detail BRIDGE_OFFLINE
// set bridge status to ONLINE
// child things are ONLINE with detail NONE
/**
//www.eclipse.org/legal/epl-2.0
/**
//
// nop
// println "[ChangeThingTypeOSGiTest] SpecificThingHandler.initialize"
// nop
// println "[ChangeThingTypeOSGiTest] ======== assert changing the ThingType works"
// Pre-flight checks - see below
// Now do the actual migration
// println "[ChangeThingTypeOSGiTest] ======== assert changing thing type within initialize works"
// println "[ChangeThingTypeOSGiTest] Create thing"
// println "[ChangeThingTypeOSGiTest] Add thing to managed thing provider"
// println "[ChangeThingTypeOSGiTest] Wait for thing changed"
// println "[ChangeThingTypeOSGiTest] ======== assert changing thing type within initialize works even if
// service deregistration is slow"
// println "[ChangeThingTypeOSGiTest] Create thing"
// println "[ChangeThingTypeOSGiTest] Add thing to managed thing provider"
// println "[ChangeThingTypeOSGiTest] Wait for thing changed"
// println "[ChangeThingTypeOSGiTest] ======== assert loading specialized thing type works directly"
// Ensure that the ThingHandler has been registered as an OSGi service correctly
// Ensure it's initialized
// Ensure the Thing is ONLINE again
// Ensure that the ThingHandler has been registered as an OSGi service correctly
// Ensure it's initialized
// Ensure that the provided configuration has been applied and default values have been added
// Ensure that the new set of channels is there
// Ensure that the old properties are still there
// Ensure that the properties of the new thing type are there
// Ensure the new thing type got written correctly into the storage
// Ensure the Thing is ONLINE again
// Ensure the new thing type has been persisted into the database
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
//
//
//
//
//
//
//
//
/**
//www.eclipse.org/legal/epl-2.0
/**
//online.changelog");
//secure.com/changelog");
//secure.com/changelog");
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// Check for exact size and if the collection contains every element.
// So, the order of the elements is ignored.
/**
//www.eclipse.org/legal/epl-2.0
//url/changelog-v0.0.9?lang=en")).build();
//url/changelog-v1.1.1?lang=en")).build();
//url/changelog-v1.1.1-fix?lang=en")).build();
//url/changelog-v1.1.2?lang=en")).build();
//url/changelog-v1.1.3?lang=en"))
//url/changelog-v1.1.1?lang=de")).build();
//url/changelog-v1.1.1-fix?lang=de")).build();
//url/changelog-v1.1.2?lang=de")).build();
//url/changelog-valpha?lang=en")).build();
//url/changelog-vbeta?lang=en"))
//url/changelog-vgamma?lang=en"))
//url/changelog-valpha?lang=de")).build();
//url/changelog-vbeta?lang=de"))
//url/changelog-vgamma?lang=de"))
//url/changelog-v1.2.0?lang=en")).build();
//url/changelog-valpha?lang=en")).withModelRestricted(true).build();
/**
//www.eclipse.org/legal/epl-2.0
/**
// The info is serialized into the event payload
// Deserialize
// Deserialize
/**
//www.eclipse.org/legal/epl-2.0
/**
// Hardware version 1 things
// Hardware version 2 things
// Define restrictions for the hardware versions
// Build firmwares
// Mock the provider to return the firmwares
/**
//www.eclipse.org/legal/epl-2.0
/**
// Since firmware version 3.0.0 has prerequisite version 2.0.0, and the thing has firmware version 1.0.0, the
// expectation is that the version of the firmware to which one can update is 2.0.0.
// Since firmware version 3.0.0 has prerequisite version 2.0.0, and the thing has firmware version 2.0.0, the
// expectation is that the version of the firmware to which one can update is 3.0.0.
/**
//www.eclipse.org/legal/epl-2.0
/**
/** The thing type for all things used in this test class */
// given two things of the same thing type but with different models, both with firmware 1.0.0 installed
// given a firmware provider that provides different firmwares for the different models
// then there is an update to 1.0.1 available for thing1
// and then there is an update to 1.0.2 available for thing2
// given two things of the same thing type but with different models, both with firmware 1.0.0 installed
// given a firmware provider that provides different firmwares for the different models
// when the firmware on thing1 is updated to the firmware for model1
// then the new firmware is installed on thing 1 and no more update is available
// and when the firmware on thing2 is updated to the firmware for model2
// then the new firmware is installed on thing2 and no more update is available
// given two things of the same thing type but with different models and with different firmwares installed
// given a firmware provider that provides the current firmware for both things,
// and another firmware provider that provides a more recent firmware for the first model
// then there is an update to 1.0.3 available for thing1
// but there is no update available for thing2
// and when the firmware on thing1 is updated
// then the new firmware is installed on thing 1 and no more update is available
/**
/**
// do nothing
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// do nothing
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// no?
/**
//www.eclipse.org/legal/epl-2.0
/**
// Set the initialization delay to 40ms so we don't have to wait 2000ms to do the assertion
// this is crucial as it mimicks the real ItemRegistry's behavior
// this is crucial as it mimicks the real ItemRegistry's behavior
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//
/*
/**
//www.eclipse.org/legal/epl-2.0
/**
// Take unit from accepted item type (see channel built from STATE_CHANNEL_UID_3)
// Take unit from state description
// The command is sent to an item w/o dimension defined and the channel is legacy (created from a ThingType
// definition before UoM was introduced to the binding). The dimension information might now be defined on the
// current ThingType.
/**
//www.eclipse.org/legal/epl-2.0
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
//
//
// call thingUpdated() from within initialize()
// hang on a little to provoke a potential dead-lock
// ensure it didn't run into a dead-lock which gets resolved by the SafeCaller.
//
//
// verify a missing mandatory thing config prevents it from getting initialized
// verify a missing mandatory channel config prevents it from getting initialized
// verify a satisfied config does not prevent it from getting initialized anymore
// childHandlerInitialized(...) must be called
// thingUpdated(...) is not called
// childHandlerInitialized(...) must be called
// thingUpdated(...) is not called
// childHandlerInitialized(...) is not be called - framework calls ThingHandler.thingUpdated(...) instead.
// ThingHandler.thingUpdated(...) must be called
// call thingUpdated() from within initialize()
// hang on a little to provoke a potential dead-lock
// Reset the flag
// Disable the thing
// Reset the flag
// Enable the thing
// call thingUpdated() from within initialize()
// hang on a little to provoke a potential dead-lock
// enable the thing
// call thingUpdated() from within initialize()
// hang on a little to provoke a potential dead-lock
// ensure it didn't run into a dead-lock which gets resolved by the SafeCaller.
// call thingUpdated() from within initialize()
// hang on a little to provoke a potential dead-lock
// call thingUpdated() from within initialize()
// hang on a little to provoke a potential dead-lock
//
//
/**
//www.eclipse.org/legal/epl-2.0
/**
// add thing - provokes handler registration & initialization
// remove handler factory - provokes handler deregistration & disposal
// add handler factory - provokes handler registration & initialization
// remove thing - provokes handler deregistration & disposal
// add thing - no thing initialization, because bridge is not available
// add bridge - provokes bridge & thing initialization
// remove thing - provokes thing disposal
// add thing again - provokes thing initialization
// remove bridge - provokes thing & bridge disposal
// add bridge again
// unregister factory
// event should be delivered
// event should not be delivered, because the source is the same
// Create item
// thing manager posts the update to the event bus via EventPublisher
// set status to INITIALIZING
// set status to ONLINE
// set status to OFFLINE
// set status to UNINITIALIZED
// add thing (UNINITIALIZED -> INITIALIZING)
// set status to ONLINE (INITIALIZING -> ONLINE)
// set status to ONLINE again
// make sure no event has been sent
// add thing (UNINITIALIZED -> INITIALIZING)
// set status to ONLINE (INITIALIZING -> ONLINE)
// set status to OFFLINE (ONLINE -> OFFLINE)
// register ThingTypeProvider & ConfigurationDescriptionProvider with 'required' parameter
// add thing with empty configuration
// ThingHandler.initialize() not called, thing status is UNINITIALIZED.HANDLER_CONFIGURATION_PENDING
// set required configuration parameter
// ThingHandler.initialize() called, thing status is ONLINE.NONE
// wait for the XML processing to be finished, then remove the ready marker again
// just wait a little to make sure really nothing happens
// ThingHandler.initialize() called, thing status is INITIALIZING.NONE
// initial bridge initialization is not reported as status change
// the same status is also not reported, because it's not a change
// report a change to OFFLINE
// report a change to ONLINE
// Wait longer than the SafeMethodCaller timeout
/**
//www.eclipse.org/legal/epl-2.0
/**
// ensure usage is delayed until activation
// ensure it is directly used
/**
//www.eclipse.org/legal/epl-2.0
/**
// add new thing
// update thing
// remove thing
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// verify that the corresponding events are sent
// verify that the corresponding events are sent
// verify that the corresponding events are sent
// verify that the corresponding events are sent
// Simulate addition of extra firmware provider
// Simulate removed firmware provider - get back everything as it was initially
// verify that the corresponding events are sent
// Simulate update steps with delay
// Execute update and cancel it immediately
// Be sure that the cancel is executed before the completion of the update
// verify that the corresponding events are sent
// getFirmwareStatusInfo() method will internally generate and post one FirmwareStatusInfoEvent event.
// Wait for four FirmwareUpdateProgressInfoEvents plus one FirmwareStatusInfoEvent event.
/**
//www.eclipse.org/legal/epl-2.0
/**
/*
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// initialize parser with ImperialUnits, otherwise units like °F are unknown
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// set up a valid basic ChannelGroupTypeBuilder
// expected
/**
//www.eclipse.org/legal/epl-2.0
/**
// set up a valid basic ChannelTypeBuilder
/**
//www.eclipse.org/legal/epl-2.0
/**
// set up a valid basic ThingTypeBuilder
// expected
// expected
// expected
// expected
// expected
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
// read attributes
// set automatically extracted URI for a possible 'config-description' section
// read values
// create object
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// read attributes
// read values
// create object
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// Default for kind is 'state'
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
// Convert the channel properties into a map
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// read attributes
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// temporary cache
// create channel types
// create channel group types
// create thing and bridge types
// release temporary cache
/**
//www.eclipse.org/legal/epl-2.0
/**
//
//
//
//
//
//
//
//
//
//
//
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/***
// get ONLY the XMLChannelTypeProvider
/**
//www.eclipse.org/legal/epl-2.0
/***
// get ONLY the XMLChannelTypeProvider
// install test bundle
/**
//www.eclipse.org/legal/epl-2.0
// install test bundle
// uninstall test bundle
// install test bundle
// uninstall test bundle
// install test bundle
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// install test bundle
// uninstall test bundle
// install test bundle
/**
//www.eclipse.org/legal/epl-2.0
/**
// install test bundle
// uninstall test bundle
// install test bundle
// install test bundle
// install test bundle
// uninstall test bundle
// install test bundle
/**
//www.eclipse.org/legal/epl-2.0
// install test bundle
// install test bundle
// install test bundle
// install test bundle
// install test bundle
// install test bundle
/**
//www.eclipse.org/legal/epl-2.0
// install test bundle
// uninstall test bundle
// install test bundle
// uninstall test bundle
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
// Context for directory entry event is the file name of entry
/**
// the filename may already contain locale information
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/** generated serial Version UID */
/**
//www.eclipse.org/legal/epl-2.0
/**
/* RegEx to extract and parse a function String <code>'(.*?)\((.*)\):(.*)'</code> */
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
//www.w3.org/TR/jsgf/">JSpeech Grammar Format.</a>
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
//
//
//
//
//
// the default keyword to use if no other is configured
// constants for the configuration properties
// service maps
/**
// use the configured default, if set
// get current volume
// set notification sound volume
// restore volume only if it was set before
// it is a fully qualified unique id
// voiceId is not fully qualified
// Return the first concrete AudioFormat found
// Check if currentAudioFormat is abstract
// Prefer WAVE container
// As currentAudioFormat is concrete, use it
// There's no concrete AudioFormat so we must create one
// Define AudioFormat to return
// Not all Codecs and containers can be supported
// Prefer WAVE container
// If required set BigEndian, BitDepth, BitRate, and Frequency to default values
// Define default values
// Obtain current values
// These values must be interdependent (bitRate = bitDepth * frequency)
// Return preferred AudioFormat
// Return null indicating failure
// Express preferences with a Language Priority List
// Get collection of voice locales
// Determine preferred locale based on RFC 4647
// As a last resort choose some Locale
// Determine preferred voice
// Return preferred voice
// use defaults, if null
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/****************************** ENGLISH ******************************/
/* OnOffType */
/* item */ onOff),
/* item */),
/* IncreaseDecreaseType */
/*
/* item */),
/* ColorType */
/* item */ seq(to, color)),
/* UpDownType */
/* item */ cmd("up", UpDownType.UP)),
/* item */ cmd("down", UpDownType.DOWN)),
/* NextPreviousType */
/* item */ seq(opt("to"),
/* PlayPauseType */
/* item */),
/* item */),
/* RewindFastForwardType */
/* item */),
/* item */),
/* StopMoveType */
/* item */),
/* item */),
/* RefreshType */
/* item */)
/****************************** GERMAN ******************************/
/* OnOffType */
/* item */ einAnAus),
/* IncreaseDecreaseType */
/* item */),
/* item */ cmd(alt("dunkler", "weniger"), IncreaseDecreaseType.DECREASE)),
/* item */ cmd(alt("heller", "mehr"), IncreaseDecreaseType.INCREASE)),
/* ColorType */
/* item */ seq(opt("auf"), farbe)),
/* UpDownType */
/* item */ cmd("hoch", UpDownType.UP)),
/* item */ cmd("runter", UpDownType.DOWN)),
/* NextPreviousType */
/* item */ seq(opt(zu),
/* PlayPauseType */
/* item */),
/* item */)
/****************************** FRENCH ******************************/
/* OnOffType */
/* item */),
/* item */),
/* IncreaseDecreaseType */
/* item */),
/* item */),
/* item */),
/* item */),
/* ColorType */
/* item */),
/* PlayPauseType */
/* item */),
/* item */),
/* NextPreviousType */
/* item */),
/* UpDownType */
/* item */),
/* item */),
/* StopMoveType */
/* item */),
/* item */),
/* RefreshType */
/* item */)
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// this method will not be used in the tests
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// This method will not be used in the tests
// This method will not be used in the tests
// This method will not be used in the tests
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// this method will no be used in the tests
// this method will not be used in the tests
/**
//www.eclipse.org/legal/epl-2.0
/**
// this method will not be used in the tests
/**
//www.eclipse.org/legal/epl-2.0
/**
// If the specified filter contains an invalid filter expression that cannot be parsed.
// this method will not be used in the tests
/**
//www.eclipse.org/legal/epl-2.0
/**
// we need to return something different from null here (the real value is not important)
/**
//www.eclipse.org/legal/epl-2.0
/**
// if the configuration is not updated yet the startDialog method will throw and exception which will
// break the test
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/** returns a CR-separated list of usage texts for all available commands */
/** returns an array of the usage texts for all available commands */
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// allow adding/removing of tags only for managed items
// add or remove tag method is passed here
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
// Build argument list
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// Define a scope for all commands.
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// This collection contains all available / known commands.
// This map contains all registered commands.
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// Called for all commands there is no function found for.
// The first argument is the command.
// The CommandSession interface provides methods for executing commands and getting and setting session variables.
// We could return an Object or void.
/* CommandSession session, */String[] args) throws Exception {
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
//felix.apache.org/site/rfc-147-overview.html
// private static final String KEY_SCOPE = CommandProcessor.COMMAND_SCOPE;
// private static final String KEY_FUNCTION = CommandProcessor.COMMAND_FUNCTION;
/*
// Add our custom help console command extensions.
// Save bundle context to register services.
/*
// We are activated now, so the help command should be able to fetch all our commands.
// If we get deactivated, remove from help command (so GC could do their work).
/*
// Remove bundle context reference.
/**
// We could only register the service if the bundle context is known.
/**
// Fill set with registered commands only.
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// Add a method that name is equal to our command
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// this is major failure which couldn't be handled by catch handler, however we already
// processing a fault, there is nothing we can do about that beyond marking occurrence of error.
// It is definitely a fatality
// we didn't have an error and we have it now, meaning a current handler reported issue.
// so here reset cursor and restart execution forcing handleError method execution in reverse order.
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// configuration properties
// already handled
// force client redirect
// let other handler handle error
// TODO add decision logic so not all URIs gets secured but only these which are told to be
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.peterfriese.de/running-applescript-from-java/
/**
// some time later the result handler callback was invoked so we
// can safely request the exit code
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
/**
// this cast should be okay, a requested timeout should normally not exceed a long
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
// Referenced http client factory not available
// Get shared http client from factory "on-demand"
// Only configure a proxy if a host is provided
// add basic auth header, if url contains user info
// add content if a valid method is given ...
// Close this outmost stream again after use!
// Remove the proxy, that has been added for this request
/**
/**
// the nonProxyHots-pattern allows wildcards '*' which must
// be masked to be used with regular expressions
/**
// @formatter:off
// @formatter:on
/**
/**
/**
/**
/**
/**
// We try to get the type from the data
/**
// URLConnection.guessContentTypeFromStream(input) is not sufficient to detect all JPEG files
// Error on closing input stream -- nothing we can do here.
/**
//en.wikipedia.org/wiki/JPEG#Syntax_and_structure
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// @formatter:off
// @formatter:on
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// Get hold of the X509ExtendedTrustManager
/**
//www.eclipse.org/legal/epl-2.0
/**
// in s
// in s
// nothing else we can do here
// nothing else we can do here
// we need to set the stop timeout AFTER the client has been started, because
// otherwise the Jetty client sets it back to the default value.
// We need the stop timeout in order to prevent blocking the deactivation of this
// component, see https://github.com/eclipse/smarthome/issues/6632
/**
//www.eclipse.org/legal/epl-2.0
/**
//example.org/test";
/**
//www.eclipse.org/legal/epl-2.0
/**
// @formatter:off
// @formatter:on
// verify the headers to be added to the request
// verify the timeout to be forwarded
// verify the content to be added to the request
// verify just the content-type to be added to the request
/**
//www.eclipse.org/legal/epl-2.0
/**
//john:doe@example.org/")).thenReturn(requestMock);
//john:doe@example.org/", 500);
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
//www.eclipse.org/";
//www.heise.de")).thenReturn(Stream.empty());
//www.heise.de")).thenReturn(Stream.empty());
//www.heise.de");
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
// in case we have a http status code, report it
// in case there is an entity...
// return the existing object
// is there an exception?
// JSONify the Exception
// The PipedOutputStream will only be closed by the writing thread
// since closing it during this method call would be too early.
// The receiver of the response will read from the pipe after this method returns.
// we will not actively close the PipedInputStream since it is read by the receiving end
// and will be GC'ed once the response is consumed.
// daemonize thread to permit the JVM shutdown even if we stream JSON.
/**
/**
// in case the Exception is a WebApplicationException, it already carries a Status
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// URI path used for the REST API
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
// the current JSON element was completely streamed
// we are done streaming the collection
// get the next element into a new jsonElementStream
// IOException is thrown for invalid encoding. This will never happen with StandardCharsets.UTF_8.
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
//www.w3.org/TR/cors
// Disable the filter by default
/**
// Process the request only if if is an acceptable request method and if it is different from an OPTIONS request
// (OPTIONS requests are not processed here)
/**
// Look for the mandatory CORS preflight request headers
// Add the accepted request headers
/**
/**
// If the Vary header is not present, just add it.
// If it is already present and its value is not the Wildcard, append the Origin header.
/**
//www.eclipse.org/legal/epl-2.0
/**
// if our request does not have neither headers end right here
// if only one of our headers is missing replace it with default value
// create a new URI from the current scheme + host in order to validate
// it
//" + host;
// URI is valid replace base and request builder parts with ones
// obtained from the given headers
/**
//www.eclipse.org/legal/epl-2.0
/**
// current resource is always first as per documentation
/**
//www.eclipse.org/legal/epl-2.0
/**
// we will include all RESTResources that are currently satisfied
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
// the config admin does not support complex object types, so let's store the string representation
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/** The URI path to this resource */
/**
//www.eclipse.org/legal/epl-2.0
/**
/** The URI path to this resource */
/**
//www.eclipse.org/legal/epl-2.0
/**
/** The URI path to this resource */
//
/**
//www.eclipse.org/legal/epl-2.0
/**
/** The URI path to this resource */
/**
//www.eclipse.org/legal/epl-2.0
/**
/** The URI path to this resource */
// inbox.approve returns null if no handler is found that supports this thing
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/** The URI path to this resource */
//
//
//
// get item
// if it exists
/**
// get item
// if it exists
// we cannot use JSONResponse.createResponse() bc. MediaType.TEXT_PLAIN
// return JSONResponse.createResponse(Status.OK, item.getState().toString(), null);
// get Item
// if Item exists
// try to parse a State from the input
// set State and report OK
// State could not be parsed
// Item does not exist
//
//
//
//
//
/**
// If we didn't get an item bean, then return!
// Save the item
// item does not yet exist, create it
// item already exists as a managed item, update it
// Item exists but cannot be updated
/**
// If we didn't get an item list bean, then return!
// item does not yet exist, create it
// item already exists as a managed item, update it
// Item exists but cannot be updated
// build response
/**
/**
/**
// we only set it in the dto if there is really data available
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//
//
//
// merge configDescription namespaces and namespaces from the namespace selector:
// filter all name spaces which do not match the UID segment pattern (this will be the regex tokens):
/**
//www.eclipse.org/legal/epl-2.0
/**
/** The URI path to this resource */
/**
//www.eclipse.org/legal/epl-2.0
/**
// The URI path to this resource
// Benchmarking timer...
// If serviceId is null, then use the default service
// End now...
// Default to 1 days data if the times are the same or the start time is newer
// than the end time
// Default to 1 days data if the times are the same or the start time is newer
// than the end time
// If "boundary" is true then we want to get one value before and after the requested period
// This is necessary for values that don't change often otherwise data will start after the start of the graph
// (or not at all if there's no change during the graph period)
// Get the value before the start time.
// Iterate through the data
// For 'binary' states, we need to replicate the data
// to avoid diagonal lines
// Get the value after the end time.
/**
// If serviceId is null, then use the default service
// For deleting, we must specify a service id - don't use the default service
// First, get the value at the start time.
// This is necessary for values that don't change often otherwise data will start after the start of the graph
// (or not at all if there's no change during the graph period)
// If serviceId is null, then use the default service
// Try to parse a State from the input
// State could not be parsed
/**
//www.eclipse.org/legal/epl-2.0
/**
/** The URI path to this resource */
// requested to filter against an unknown channel type -> do not return a ProfileType
/**
//www.eclipse.org/legal/epl-2.0
/**
/** The URI path to this resource */
// all singleton services without multi-config services
// all multi-config services without singleton services
// for multi context services the label can be changed and must be read from config
// admin.
/**
//www.eclipse.org/legal/epl-2.0
/**
/** The URI path to this resource */
/**
// check if a thing with this UID already exists
// report a conflict
// turn the ThingDTO's configuration into a Configuration
// if there wasn't any ThingFactory capable of creating the thing,
// we create the Thing exactly the way we received it, i.e. we
// cannot take its thing type into account for automatically
// populating channels and properties.
// return Thing data if it does exist
/**
// check whether thing exists and throw 404 if not
// ask whether the Thing exists as a managed thing, so it can get
// updated, 409 otherwise
// only move on if Thing is known to be managed, so it can get updated
/**
// ask whether the Thing exists at all, 404 otherwise
// ask whether the Thing exists as a managed thing, so it can get
// updated, 409 otherwise
// check configuration
// update, returns null in case Thing cannot be found
// everything went well
/**
// ask whether the Thing exists at all, 404 otherwise
// ask whether the Thing exists as a managed thing, so it can get
// updated, 409 otherwise
// only move on if Thing is known to be managed, so it can get updated
// note that we create a Configuration instance here in order to
// have normalized types
// Check if the Thing exists, 404 if not
// Check if the Thing exists, 404 if not
// everything went well
// Check if the Thing exists, 404 if not
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/** The URI path to this resource */
// Default to the channelGroupDefinition label to override the
// channelGroupType
// Default to the channelGroupDefinition description to override the
// channelGroupType
// Default to the channelDefinition label to override the
// channelType
// Default to the channelDefinition description to override the
// channelType
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
// TransformationHelper is optional dependency, so ignore if class not found
// return state description as it is without transformation
// TransformationHelper is optional dependency, so ignore if class not found
// return state as it is without transformation
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
//www.eclipse.org/legal/epl-2.0
/**
//www.eclipse.org/legal/epl-2.0
/**
//www.eclipse.org/legal/epl-2.0
/**
//www.eclipse.org/legal/epl-2.0
// expect 2x created
// expect error and updated
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// pResource.httpGetPersistenceItemData(headers, serviceId, itemName, startTime, endTime, pageNumber,
// pageLength, boundary)
// since we added binary state type elements, all except the first have to be repeated but with the timestamp of
// the following item
/**
//www.eclipse.org/legal/epl-2.0
/**
// UIDs for state profile types
// UIDs for trigger profile types
// some other channel types for testing
// should be both state profiles because the second state profile supports ALL item types on the channel side
// should be only the second state profile because the first one is restricted to another item type on the
// channel side
// should be both trigger profiles because the second trigger profile supports ALL channel types
// should be only the second trigger profile because the first one is restricted to another channel type UID
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
//www.eclipse.org/legal/epl-2.0
/**
// Log and response message to express, that the log severity addressed is not handled.
// slf4j log pattern to format received log messages, params are URL and message
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//example.org\", \"message\": \"Error message\"}")
// Remove last element of Deque
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
//
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
// JAX-RS
// Eclipse SmartHome
// SSE
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/* subscription id -> sitemap+page */
/* subscription id -> callback */
/* subscription id -> creation date */
/* sitemap+page -> listener */
/* Max number of subscriptions at the same time */
/**
/**
// this was the only subscription listening on this page, so we can dispose the listener
/**
/**
/**
/**
// there is no listener for this page yet, so let's try to create one
// We add the page widget. It will help any UI to update the page title.
// no other callbacks are left here, so we can safely dispose the listener
// we process only sitemap modifications here
// Release the subscriptions that are not attached to a page
// Send an ALIVE event to all subscribers to trigger an exception for dead subscribers
// don't send out auto-update events for group items as those will calculate their state based on their
// members and predictions aren't really possible in that case (or at least would be highly complex).
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
// cleanup statechange listeners in case widgets were removed
// we transform the list of callbacks to a set in order to remove duplicates
/**
/**
// now scan visibility rules
// now scan label color rules
// now scan value color rules
// ignore
// For all items except group, send an event only when the event state is changed.
// For group item only, send an event each time the event state is updated.
// It allows updating the group label while the group state is unchanged,
// for example the count in label for Group:Switch:OR
// We skip the chart widgets having a refresh argument
// event.item contains data from the item including its state (in event.item.state)
// event.state is an adjustment of the item state to the widget type.
// In case this state is identical to the item state, its value is set to null.
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/** The sitemap name this event is for */
/** The page id this event is for */
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// The clean SSE subscriptions job sends an ALIVE event to all subscribers. This will trigger
// an exception when the subscriber is dead, leading to the release of the SSE subscription
// on server side.
// In practice, the exception occurs only after the sending of a second ALIVE event. So this
// will require two runs of the job to release an SSE subscription.
// The clean SSE subscriptions job is run every 5 minutes.
// Make the REST-API pseudo-compatible with openHAB 1.x
// The client asks Atmosphere for server push functionality,
// so we do a simply listening for changes on the appropriate items
// The blocking has a timeout of 30 seconds. If this timeout is reached,
// we notice this information in the response object.
/**
/**
// Disables proxy buffering when using an nginx http server proxy for this response.
// This allows you to not disable proxy buffering in nginx and still have working sse
// Test visibility
// In case the widget state is identical to the item state, its value is set to null.
//").append(uri.getHost());
/**
// let's get all items for these widgets
/**
// We skip the chart widgets having a refresh argument
// ignore
// Consider all items inside the frame
// Consider items involved in any visibility, labelcolor and valuecolor condition
// ignore
// ignore
/**
/**
// ignore if the state did not change
// the exception is usually "null" and onClose() is automatically called afterwards
// - so let's don't do anything in this method.
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// widget-specific attributes
// only for frames, other linkable widgets link to a page
/**
//www.eclipse.org/legal/epl-2.0
/**
// Disable long polling
// wait for the #getPageData call and listeners to attach to the
// item
// non-null is sufficient here.
// assert that the item state change did trigger the blocking method to
// return
// wait for the #getPageData call and listeners to attach to the
// item
// non-null is sufficient here.
// assert that the item state change did trigger the blocking method to
// return
// wait for the #getPageData call and listeners to attach to the
// item
// non-null is sufficient here.
// assert that the item state change did trigger the blocking method to
// return
// wait for the #getPageData call and listeners to attach to the
// item
// non-null is sufficient here.
// assert that the item state change did trigger the blocking method to
// return
// Disable long polling
// Initialize a sitemap containing 2 widgets linked to the same number item,
// one slider and one switch
// add visibility rules to the mock widget:
// add label color conditions to the item:
// add value color conditions to the item:
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
// construct an EventOutput that will only write out events that match
// the given filter
// Disables proxy buffering when using an nginx http server proxy for this response.
// This allows you to not disable proxy buffering in nginx and still have working sse
// if we don't have sevlet 3.0 async support, we want to make sure
// that the response is not compressed and buffered so that the
// client receives server sent events at the moment of sending them
// Response headers are written now, since the thread will be
// blocked later on.
// enable blocking for this thread
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// the qualifiedBy is needed in order for our implementation to be used
// if there are multiple implementations of AsyncContextDelegateProvider
/**
//www.eclipse.org/legal/epl-2.0
/**
// write a new line to the OutputStream and flush to
// check connectivity. If the other peer closes the
// connection, the first flush() should generate a
// TCP reset that is detected on the second flush()
// If an exception has occurred during write and
// flush we consider the connection closed, attempt
// to close the outputstream and stop blocking.
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// invalid
// valid
/*"), is(true));
////////////"), is(true));
/*/test/test/test/test,    smarthome/test/*/test/test/test, smarthome,qivicon");
/*/added, smarthome/items");
/**
//www.eclipse.org/legal/epl-2.0
/**
//www.eclipse.org/legal/epl-2.0
/**
//www.eclipse.org/legal/epl-2.0
/**
//eclipse.org";
// Not a CORS request, thus no CORS headers should be added.
// Not a CORS request, thus no CORS headers should be added.
// Since the requestMethod header is not present in the request, it is not a valid Preflight CORS request.
// Thus, no CORS header should be added to the response.
// Since the requestMethod header is not present in the request, it is not a valid Preflight CORS request.
// Thus, no CORS header should be added to the response.
// Not a CORS request, thus no CORS headers should be added.
/**
//www.eclipse.org/legal/epl-2.0
/**
//localhost:8080/rest";
//localhost:8080/rest/test";
//eclipse.org/rest");
//eclipse.org/rest/test");
//localhost:8080/rest";
//localhost:8080/rest/test";
//eclipse.org:8081/rest");
//eclipse.org:8081/rest/test");
//localhost:8080/rest";
//localhost:8080/rest/test";
//localhost:8080/rest";
//localhost:8080/rest/test";
//localhost:8080/rest");
//localhost:8080/rest/test");
//localhost/rest";
//localhost/rest/test";
//localhost/rest");
//localhost/rest/test");
//localhost/rest";
//localhost/rest/test";
//eclipse.org:8081/rest");
//eclipse.org:8081/rest/test");
//localhost:8080/rest";
//localhost:8080/rest/test";
//sometext\\\\///");
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.dns-sd.org/ServiceTypes.html)
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// add only one address per interface and family
// use configured primary address instead of first one
// Create one ServiceInfo object for each JmDNS instance
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// register queued services
// queue the service to register it as soon as the mDNS client is
// available
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/// Connection parameters
/// Configuration variables
/// Runtime variables
// Connection timeout handling
/* Connection timeout in milliseconds */
/**
// As soon as all subscriptions are performed, turn the connection future complete.
// If we tried to connect via start(), use the reconnect strategy to try it again
/** Client callback object */
/** Connection callback object */
/** Action callback object */
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
// url is given.
/**
/**
// The subscription will be performed on connecting.
/**
/**
// Remove from subscriber list
// No more subscribers to this topic. Unsubscribe topic on the broker
/**
/**
/**
/**
/**
// Make eclipse happy
/**
// We don't want multiple concurrent threads to start a connection
// Perform the connection attempt
// Ensure the reconnect strategy is started
// Close client if there is still one existing
//" : "tcp://");
//" : "ws://");
// Storage
// Create the client
// Assign to object
// Connect
// Connect timeout
/**
//host:port, tcp://host:port, ws[s]://host:port
/**
/**
/**
// Abort a connection attempt
// Cancel the timeout future. If stop is called we can safely assume there is no interest in a connection
// anymore.
// Stop the reconnect strategy
// Close connection
// We need to thread change here. Because paho does not allow to disconnect within a callback method
/**
/**
/**
/**
// publish message asynchronously
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// Optional connection name
// Connection parameters (host+port+secure)
// Authentication parameters
// MQTT parameters
/** Keepalive in seconds */
// Last will parameters
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
// Parse string if given.
// Use explicit given values.
// Check if valid
// Create MQTT Last Will and Testament object
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
// Parse configuration
// Compute brokerID and make sure it is not empty
// Add connection and make sure it succeeded
// Start connection
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// Extract further configurations
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
// If there is a scheduled task ensure it is canceled.
/**
// Check if we are running (has been started and not stopped) state.
// If there is already a scheduled task, we continue only if it has been done (shouldn't be the case at all).
// If the broker connections is not available anymore, stop the timed reconnect.
// Stop the reconnect task if existing.
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
//'. Register your implementation with
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// Add a subscriber while still offline
// Test if subscription is active
// Add a subscriber while still offline
// Expect no subscribers
// Add subscribers (while not connected)
// Remove subscribers (while not connected)
// Add subscriber (while connected)
// Remove subscriber (while connected)
// Check if the default policy is set and that the broker within the policy is set.
// Check setter
// Prepare a Mock to test if lostConnect is called and
// if the PeriodicReconnectPolicy indeed calls start()
// Fake a disconnect
/* Pretend that start did something */
// Check lostConnect
// Fake connection established
// Adjust test conditions
// Adjust test conditions
// Add an observer
// Adding a connection observer should not immediately call its connectionStateChanged() method.
// Cause a success callback
// Cause a failure callback with a mocked token
// Remove observer
// Check for non-secure port
// Check for default ssl context provider and reconnect policy
// Add test subscribers
// Let's observe the internal connection client
// Stop
// Restart strategy must be stopped
// Wait to complete stop
// Subscribers should be removed
/**
//www.eclipse.org/legal/epl-2.0
/**
// Tests addBrokersListener/removeBrokersListener
//123.123.123.123", null, false,
//123.123.123.123", null, false,
// Add
// Get/Enumerate
// Remove
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//") ? NET : LOCAL;
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/*
/*
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
// Get port providers which accept exactly the port with its scheme.
// Get port providers which accept the same type (local, net)
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
// see
// RXTXCommDriver#addSpecifiedPorts
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// TODO implement discovery here. https://github.com/eclipse/smarthome/pull/5560
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
// Check if the socket is not available for use, if true interpret as being owned.
// Unknown who owns a socket connection. Therefore return null.
/**
//www.eclipse.org/legal/epl-2.0
/**
/** Get the UDN of the participant **/
/** Called when the UPNP IO service receives a {variable,value} tuple for the given UPNP service **/
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// service not on the root device, we search the embedded devices as well
/**
// It is assumed that during addStatusListener() a check is made whether the participant is correctly
// registered
// The UDN is not reachable anymore
// The UDN functions correctly
// remove the previous polling job, if any
/**
//www.eclipse.org/legal/epl-2.0
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/** The service pid used for the managed service (without the "org.eclipse.smarthome" prefix */
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// don't use XMI as a default
// try again to retrieve the resource as it might have been created by now
// seems to be a new file
// don't use XMI as a default
// do not physically delete it, but remove it from the resource set
// Make a copy to avoid ConcurrentModificationException
// Make a copy to avoid ConcurrentModificationException
// It's not sufficient to discard the derived state.
// The quick & dirts solution is to reparse the whole resource.
// We trigger this by dummy updating the resource.
// Make a copy to avoid ConcurrentModificationException
/**
// use another resource for validation in order to keep the original one for emergency-removal in case of errors
// Check for syntactical errors
// Check for validation errors, but log them only
// see https://github.com/eclipse/smarthome/issues/3335
/**
//www.eclipse.org/legal/epl-2.0
/**
/* the model repository is provided as a service */
/* map that stores a list of valid file extensions for each folder */
/* set of file extensions for which we have parsers already registered */
/* set of files that have been ignored due to a missing parser */
// if the component isn't activated yet, ignoredFiles will be empty and thus this method does nothing
// we allow only simple alphanumeric names for model folders - everything else might be other service
// properties
// we omit parsing of hidden files possibly created by editors or operating systems
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/*
/**
/*
/**
/**
/**
/**
/**
/**
/*
/*
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/** to keep track of all binding config readers */
// process models which are already parsed by modelRepository:
/**
/**
// start binding configuration processing
// create items and read new binding configuration
// end binding configuration processing
// if the user did not specify a function the first value of the enum in xtext (EQUAL) will be used
// Catch badly behaving binding exceptions and continue processing
//
//
//
//
//
//
//
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
//www.eclipse.org/legal/epl-2.0
/**
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
/*[name()='liveStreams']/*[name()='stream']):%s]\"";
/*[name()='liveStreams']/*[name()='stream']):%s", item.getStateDescription().getPattern());
/**
//www.eclipse.org/legal/epl-2.0
/**
// only ItemAddedEvents for items test3 and test4 should be fired, NOT for test1 and test2 again
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// fall-back to the argument
/**
// org.eclipse.xtext.ide.server.UriExtensions:
// In Xtext 2.14 the method "String toPath(java.netURI)" has been deprecated but still exist.
// It delegate the logic internally to the new method "String toUriString(java.net.URI uri)".
// That new method seems to return a different result for folder / directories with respect to
// the present / absent of a trailing slash.
// The old logic removes trailing slashes if it has been present in the input.
// The new logic keeps trailing slashes if it has been present in the input.
// input: file:///d/
// output old: file:///d
// output new: file:///d
// input: file:///d/
// output old: file:///d
// output new: file:///d/
// We use this method now to keep the old behavior.
/**
//www.eclipse.org/legal/epl-2.0
/**
// go on, let the thread finish
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
//
//
///q:/conf", //
///q:/conf", //
//
//
///q:", //
///q:", //
//
//
//fqdn/openhab-conf", //
//fqdn/openhab-conf", //
//
//
//fqdn/openhab-conf/conf", //
//fqdn/openhab-conf/conf", //
//
//
///asdf/conf/items/test.items", //
///asdf/conf", //
//
//
///asdf/items/test.items", //
///asdf", //
//
//
//fqdn/openhab-conf/conf/items/test.items", //
//fqdn/openhab-conf/conf", //
//
//
//fqdn/openhab-conf/items/test.items", //
//fqdn/openhab-conf", //
//
// ensure test execution is independent from the current working directory
/**
//www.eclipse.org/legal/epl-2.0
/**
// default constructor, necessary for osgi-ds
/**
/**
/**
/**
/**
/**
// Can't get the state at the start time
// If we've got results more recent that this, it must have changed
/**
/**
/**
/**
// the maximum state is the current one, so construct a historic item on the fly
/**
/**
// the minimal state is the current one, so construct a historic item on the fly
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
// ((now - then) / then) * 100
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
//eclipse.org/smarthome/persistence/strategy.global"));
/**
//www.eclipse.org/legal/epl-2.0
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// delay before rule resources are refreshed after items or services have changed
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
// check if a context already exists on the resource
// no evaluation context found, so create a new one
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// This flag is used to signal that items are still being added and that we hence do not consider the rule engine
// ready to be operational.
// This field is package private to allow access for unit tests.
// read all rule files
// register us as listeners
// register us on all items which are already available in the registry
// unregister listeners
// execute all scripts that were registered for system shutdown
// noop - only make sure RuleRuntimeActivator gets "used", hence activated
// add the current items again
// ignore commands for non-existent items
// remove the rules from the trigger sets
// add new and modified rules to the trigger sets
// now execute all rules that are meant to trigger at startup
// now that we have scheduled the startup rules, we are ready for others as well
/**
//www.eclipse.org/legal/epl-2.0
/**
//www.eclipse.org/legal/epl-2.0
/**
// fires whenever a status update is received for an item
// same as UPDATE, but only fires if the current item state is changed by the update
// fires whenever a command is received for an item
// fires whenever a trigger is emitted on a channel
// fires when the rule engine bundle starts and once as soon as all required items are available
// fires when the rule engine bundle is stopped
// fires at a given time
// fires whenever the thing state is updated.
// fires if the thing state is changed by the update
// Group name prefix for maps
// lookup maps for different triggering conditions
// Maps from channelName -> Rules
// the scheduler used for timer events
// we want to defer timer rule execution until after the startup rules have been executed.
/**
// we really only want to return rules that are still loaded
/**
/**
/**
/**
// if the rule does not have a specific event , execute it on any event
/**
/**
/**
// add the rule to the lookup map for the trigger kind
/**
/**
/**
// first remove all rules of the model, if not null (=non-existent)
// now also remove all proxified rules from the set
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
/**
//www.eclipse.org/legal/epl-2.0
/**
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
/**
//www.eclipse.org/legal/epl-2.0
/**
//github.com/eclipse/xtext-extras/issues/144
/**
//www.eclipse.org/legal/epl-2.0
/**
// injected as a callback from the script engine, not via DS as it is a circular dependency...
// uninjected as a callback from the script engine, not via DS as it is a circular dependency...
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// as increasing 0 by x percent will still be 0, we have to set some initial positive value
// the getMasterVolume() may only returns integers, so we have to make sure that we
// increase the volume level at least by 1%.
// the getMasterVolume() may only returns integers, so we have to make sure that we
// decrease the volume level at least by 1%.
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
// static public JobKey timer(AbstractInstant instant, Object)
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.peterfriese.de/running-applescript-from-java/
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/** Constant which represents the content type <code>application/json</code> */
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
//www.eclipse.org/legal/epl-2.0
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// TODO Internationalize! Not an Error string, but a key...
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
// ?
/**
// ?
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// we do not care about locales, so we return null here to indicate this
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// the scheduler used for timer events
// fallback implementation
/**
//www.eclipse.org/legal/epl-2.0
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// delay before rule resources are refreshed after items or services have changed
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
// Calculation operators for numbers
// Comparison operations between numbers
// in case one of the Number instances is of type QuantityType they are never equal (except for
// SmartHomeUnit.ONE).
// for both instances being QuantityTypes the specific method
// operator_equals(QuantityType<?> left, QuantityType<?> right) is called by the script engine.
// Comparison operators between ESH types and numbers
// both might be null, then we should return true
// both might be null, then we should return
// false, otherwise true
// QuantityType support
// support SmartHomeUnit.ONE as Number representation
// support SmartHomeUnit.ONE as Number representation
// support SmartHomeUnit.ONE as Number representation
// support SmartHomeUnit.ONE as Number representation
// support SmartHomeUnit.ONE as Number representation
// support SmartHomeUnit.ONE as Number representation
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// jodatime static functions
/**
//www.eclipse.org/legal/epl-2.0
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
// IS-A XtextResource
// NOTE: The "filename extension" (".script") must match the file.extensions in the *.mwe2
/**
//www.eclipse.org/legal/epl-2.0
/**
/* package-local */
/* package-local */
// this can only happen on an InterpreterCancelledException,
// i.e. NEVER ;-)
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
// The code in our mock closure needs access to the timer object
// The code in our mock closure needs access to the timer object
/**
// Run the scheduler twice
// Check that the Timer ran
/**
// Run the scheduler
// Check that the Timer ran
// Now try to reschedule the Timer to run again after 10ms
// Run the scheduler
// Check that the Timer ran again
// Run the scheduler twice
// Check that the Timer ran
/**
//www.eclipse.org/legal/epl-2.0
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// Anything below this point is unsupported, but we want to know
// about it if tests break in the future (e.g. new version of
// Quartz), so we throw UnsupportedException if any of these
// methods are called
/**
//www.eclipse.org/legal/epl-2.0
/**
// Timer#isRunning() should return true
// from within the body of the closure
/**
//www.eclipse.org/legal/epl-2.0
/**
// cal
// jobIsRecovering
// fireTime
// scheduledFireTime
// prevFireTime
// nextFireTime)
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// if the sitemap file is empty it will not be in the repo and thus there is no need to cache it here
/**
//www.eclipse.org/legal/epl-2.0
/**
//www.eclipse.org/legal/epl-2.0
/**
//www.eclipse.org/legal/epl-2.0
/**
/** caches binding configurations. maps itemNames to {@link BindingConfig}s */
/**
// all item types are allowed
// we remove all binding configurations that were not processed
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
//www.eclipse.org/legal/epl-2.0
/**
// string escapes each segment which doesn't match:
// terminal ID: '^'?('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;
/**
//www.eclipse.org/legal/epl-2.0
/**
//www.eclipse.org/legal/epl-2.0
/**
// configure bridgeHandlerFactory to accept the bridge type UID and create a bridge:
// configure thingHandlerFactory to accept the thing type UID and create a thing:
// simulate a nested defined thing model with only type id & id given:
/**
//www.eclipse.org/legal/epl-2.0
/**
// Wait for the ChannelItemProvider to join the game
// Initially load the model
// Update the model to run into GenericItemChannelLinkProvider's amnesia
// Remove the model (-> the link and therefore the item is kept)
// Now add the model again
// -> ensure ChannelItemProvider cleans up properly
//
//
//
//
//
//
//
//
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
//
//
//
//
//
//
/**
//www.eclipse.org/legal/epl-2.0
//
//
//
//
//
//
//
//
//
//
//
// three channels should be defined, color and color_temperature from thingType and switch from dsl
//
//
//
//
//
//
//
//
//
//
//
//
//
// there should be color and color_temperature from thingType definition
// channels should be Color as defined in dsl and color_temperature from thingType
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
// default from thing type
// manual overrides default
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
// ensure a standard channel has its default values
// ensure a user-defined channel has its default values
//
//
//
//
//
//
//
// ensure the non-declared channel is there and has its default properties
// ensure the non-declared default property is there
// ensure overriding a default property worked
// ensure an additional property can be set
/**
//www.eclipse.org/legal/epl-2.0
//
//
//
//
//
//
//
//
//
//
//
//
/**
//www.eclipse.org/legal/epl-2.0
/**
//www.eclipse.org/legal/epl-2.0
/**
// create a "dumb" thing handler that acts as if the XML config was not yet loaded
//
//
//
//
//
// now become smart again...
// ensure thing type was considered and manual and predefined values are there.
// there is a default, so make sure the manually configured one (from the DSL) wins
// it's not manually configured, but the thing type defines a default, so ensure it's in
/**
//www.eclipse.org/legal/epl-2.0
/**
// wait for the XML processing to be finished, then remove the ready marker again
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
//bugs.eclipse.org/bugs/show_bug.cgi?id=450236 - Considering
// List all channels
// Bridge config properties
// Light config properties
/**
//www.eclipse.org/legal/epl-2.0
/**
//bugs.eclipse.org/bugs/show_bug.cgi?id=450236 - Considering
// List all channels
// Bridge config properties
// Light config properties
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//bugs.eclipse.org/bugs/show_bug.cgi?id=450236 - Considering
/**
//www.eclipse.org/legal/epl-2.0
/**
// Read the file
// If there was an error reading the file, then try one of the backup files
// If we've read data from a file, then add it to the map
/**
// nothing to deserialize
// load required class within the given bundle context
/**
// Stop any existing timer
// Write the database file
// And also write the backup
// delete the oldest
// Save the database
// Stop any existing timer
// Handle a maximum time for deferring the commit.
// This stops a pathological loop preventing saving
// as we committed the database now, there is no need to start a new commit
// timer
// Create the timer task
// Start the timer
/**
//www.eclipse.org/legal/epl-2.0
/**
//
//
//
//
//
/** the folder name to store database ({@code jsondb} by default) */
// Since we're using a delayed commit, we need to write out any data
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// in order to stay backwards compatible
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// clean up database files ...
// test cut after 127 chars
// test with valid file name
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// Use an unmodifiable map. After deletion no operation / modification should be called anymore.
/**
/**
// nothing to deserialize
// load required class within the given bundle context
/**
//www.eclipse.org/legal/epl-2.0
/**
//www.mapdb.org">MapDB</a>.
/** the name of the mapdb database ({@code storage.mapdb}) */
/** holds the local instance of the MapDB database */
/** the folder name to store mapdb databases ({@code mapdb} by default) */
/**
//www.eclipse.org/legal/epl-2.0
/**
// obtain the default type adapters for String and Object classes
// obtain default gson objects
// write remains unchanged
// gson implementation code is modified when deserializing numbers
// entry array
// modification
// modification
// if the next json token is a number we read it as a BigDecimal,
// otherwise use the default adapter to read it
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// clean up database files ...
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// List all Thing Type UIDs, related to the Magic Binding
// generic thing types
// bridged things
// List all channels
// Firmware update needed models
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// doing nothing here
/**
//www.eclipse.org/legal/epl-2.0
/**
// nop
/**
//www.eclipse.org/legal/epl-2.0
/**
// nop
/**
//www.eclipse.org/legal/epl-2.0
/**
// do not start the chatting job if interval is 0, just set the thing to ONLINE
/**
//www.eclipse.org/legal/epl-2.0
/**
// process the command for the color channel here
// if (channelUID.getId().equals(MagicBindingConstants.CHANNEL_COLOR)) {
// }
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// process the command for the contact channel here
// if (channelUID.getId().equals(MagicBindingConstants.CHANNEL_CONTACT)) {
// }
/**
//www.eclipse.org/legal/epl-2.0
/**
// schedule delayed job to set the thing to ONLINE
/**
//www.eclipse.org/legal/epl-2.0
/**
// process the command for the brightness channel here
// if (channelUID.getId().equals(MagicBindingConstants.CHANNEL_BRIGHTNESS)) {
// }
/**
//www.eclipse.org/legal/epl-2.0
/**
// nop
/**
//www.eclipse.org/legal/epl-2.0
/**
// Nothing to do
// not needed for now
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// process the command for the location channel here
// if (channelUID.getId().equals(MagicBindingConstants.CHANNEL_LOCATION)) {
// }
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// process the command for the switch channel here
// if (channelUID.getId().equals(MagicBindingConstants.CHANNEL_SWITCH)) {
// }
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// do some calculation stuff here and place the outputs into the result map
/**
//www.eclipse.org/legal/epl-2.0
/**
// one can pass any data to the handler of the selected thing, here we are passing the first input parameter
// passed into this module via the automation engine
// hint: one could also put handler results into the output map for further processing within the automation
// engine
/**
//www.eclipse.org/legal/epl-2.0
/**
//@formatter:off
// General firmware versions for the thing type
// Model restricted firmware versions
//@formatter:on
/**
//www.eclipse.org/legal/epl-2.0
/**
/** the root path of this web application */
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// this is a marker service and represents a service factory so multiple configuration instances of type
// "org.eclipse.smarthome.magicMultiInstance" can be created.
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
//www.eclipse.org/legal/epl-2.0
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// [seconds]
/**
/**
/**
/**
/**
/**
// Stop the bundle to update first
// we have to uninstall the bundle to update its contents
// New bytes are taken from the update path
// The updated bytes are installed with the same name
// Starting the bundle
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// Hidden utility class constructor
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/*");
// HTTP connector
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
//
//
//
//
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
//
//
// apply the predicate
// get the actual services from the references
// get the result as List
/**
/**
/**
/**
//
//
// get the actual services from the references
// check that are of implementationClass
// cast instances to implementationClass
// get the result as List
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// The URI of this servlet
/**
// Set scale to normal if the custom value is unrealistically low
// To avoid ambiguity you are not allowed to specify period, begin and end time at the same time.
// Read out the parameter period, begin and end and save them.
// use a day as the default period
// Set begin and end time and check legality.
// If a persistence service is specified, find the provider
// Read out the parameter 'dpi'
// Read out parameter 'legend'
// Set the content type to that provided by the chart provider
// this can happen if the request is terminated while the image is streamed, see
// https://github.com/openhab/openhab-distro/issues/684
// we also attach the stack trace
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
//
// red
// green
// blue
// magenta/purple
// orange
// cyan
// pink
// white
// yellow
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
//
// red
// green
// blue
// magenta/purple
// orange
// cyan
// pink
// white
// yellow
/**
//www.eclipse.org/legal/epl-2.0
/**
//
// red
// green
// blue
// magenta/purple
// orange
// cyan
// pink
// dark grey
// yellow/lime
/**
//www.eclipse.org/legal/epl-2.0
/**
//
//
// If a persistence service is specified, find the provider, or use the default provider
// Did we find a service?
//
//
//
//
// get theme
// get DPI
// Create Chart
// Define the time axis - the defaults are not very nice
// 10 minutes
// 1 day
// 1 week
// axis
// chart
// legend
// Loop through all the items
// Loop through all the groups and add each item from each group
// If there are no series, render a blank chart
// always hide the legend
// if the legend is not already hidden, check if legend parameter is supplied, or calculate a sensible value
// more than one series, show the legend. otherwise hide it.
// take value from supplied legend parameter
// Legend position (top-left or bottom-left) is dynamically selected based on the data
// This won't be perfect, but it's a good compromise
// hide the whole legend
// Write the chart as a PNG image
// Get the item label
// Get the item label
// Generate data collections
// Declare state here so it will hold the last value at the end of the process
// First, get the value at the start time.
// This is necessary for values that don't change often otherwise data will start
// after the start of the graph (or not at all if there's no change during the graph period)
// Now, get all the data between the start and end time
// Get the data from the persistence store
// Iterate through the data
// For 'binary' states, we need to replicate the data
// to avoid diagonal lines
// Lastly, add the final state at the endtime
// Add the new series to the chart - only if there's data elements to display
// The chart engine will throw an exception if there's no data
// If there's only 1 data point, plot it again!
// If the start value is below the median, then count legend position down
// Otherwise count up.
// We use this to decide whether to put the legend in the top or bottom corner.
/**
// if the static chartThemes hashmap is nul, we have to fill it first with all available themes,
// based on the theme name
// no theme name -> default theme
// no theme with the given name found -> default theme
/**
//www.eclipse.org/legal/epl-2.0
/**
/* the image location inside the installation folder */
/* RegEx to extract and parse a function String <code>'\[(.*?)\((.*)\):(.*)\]'</code> */
/* RegEx to identify format patterns. See java.util.Formatter#formatSpecifier (without the '%' at the very end). */
// use the category, if defined
// do some reasonable default
// try to get the item type from the item name
// we handle items here that have no specific widget,
// e.g. the default widget of a rollerblind is "Switch".
// We want to provide a dedicated default category for it
// like "rollerblind".
// do some reasonable default, if no provider had an answer
// if the itemType is not defined, try to get it from the item name
// now insert the value, if the state is a string or decimal value and there is some formatting pattern defined
// in the label
// (i.e. it contains at least a %)
// There is a known issue in the implementation of the method getStateDescription() of class Item
// in the following case:
// - the item provider returns as expected a state description without pattern but with for
// example a min value because a min value is set in the item definition but no label with
// pattern is set.
// - the channel state description provider returns as expected a state description with a pattern
// In this case, the result is no display of value by UIs because no pattern is set in the
// returned StateDescription. What is expected is the display of a value using the pattern
// provided by the channel state description provider.
// States which do not provide a Number will be converted to DecimalType.
// e.g.: GroupItem can provide a count of items matching the active state
// for some group functions.
// for fraction digits in state we dont want to risk format exceptions,
// so treat everything as floats:
// if the channel contains options, we build a label with the mapped option value
// sanity convert current state to the item state description unit in case it was updated in the
// meantime. The item state is still in the "original" unit while the state description will
// display the new unit:
// The widget may define its own unit in the widget label. Convert to this unit:
// The following exception handling has been added to work around a Java bug with formatting
// numbers. See http://bugs.sun.com/view_bug.do?bug_id=6476425
// Without this catch, the whole sitemap, or page can not be displayed!
// This also handles IllegalFormatConversionException, which is a subclass of IllegalArgument.
// if there is a label defined for the widget, use this
// check if any item ui provider provides a label for this item
// if there is no item ui provider saying anything, simply use the name as a label
// use an empty string, if no label could be found
/**
/*
// the default is the widget type name, e.g. "switch"
// if an icon is defined for the widget, use it
// otherwise check if any item ui provider provides an icon for this item
/**
// RollerShutter are represented as Switch in a Sitemap but need a PercentType state
// if returnState is null, a conversion was not possible
// we return the original state to not break anything
// see if the id is an itemName and try to get the a widget for it
// try to get the default widget instead
// no valid number, so the requested page id does not exist
/**
// make it two digits
// make it two digits
// if the widget is dynamically created and not available in the sitemap,
// use the item name as the id
// Check if the value is equal to the supplied value
// Remove quotes - this occurs in some instances where multiple types
// are defined in the xtext definitions
// Convert the condition string into enum
// Strings only allow = and !=
// Sanity check
// Check for the "arg". If it doesn't exist, assume there's just an
// static colour
// Loop through all elements looking for the definition associated
// with the supplied value
// Use a local state variable in case it gets overridden below
// If there's an item defined here, get its state
// Try and find the item to test.
// If it's not found, return visible
// Get the item state
// Handle the sign
// We have the color for this value - break!
// Remove quotes off the colour - if they exist
// Default to visible if parameters not set
// Try and find the item to test.
// If it's not found, return visible
// Default to visible!
// Get the item state
// Handle the sign
// We have the name for this value!
// The state wasn't in the list, so we don't display it
// we require the item to define a dimension, otherwise no unit will be reported to the UIs.
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
// We disable the timeout for video
// We request the browser to not cache the video
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/** Timeout for HTTP requests in ms */
// do the client request
// wait for the response headers to arrive or the timeout to expire
// get response headers
// copy all headers
// now copy/stream the body content
/**
//www.eclipse.org/legal/epl-2.0
/**
//user:pwd@localserver/image.jpg" -
/** the alias for this servlet */
/**
/**
// must specify for Jetty proxy servlet, per http://stackoverflow.com/a/27625380
// ignore, had not been registered before
/**
/**
/**
// Return any URI we've already saved for this request
// If we errored on this request before, there is no point continuing
// fall thru
// URI in this context should be valid URL. Therefore before creating URI, create URL,
// which validates the string.
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
// firstPart is not a number, pass on the full state
// let's treat all percentage-based categories
// does not seem to be a number, so ignore it
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
// we need to get the decimal separator of the default locale for our tests
// It doesn't matter that "FOO" doesn't exist - this is to assert it doesn't fail before because of the two "%s"
/**
//www.eclipse.org/legal/epl-2.0
/**
//www.eclipse.org/smarthome/item.jpg";
//www.eclipse.org/smarthome/item.mp4";
//www.eclipse.org/smarthome/test.jpg";
//www.eclipse.org/smarthome/test.mp4";
//testuser:testpassword@127.0.0.1:8080/content");
//testuser@127.0.0.1:8080/content");
//127.0.0.1:8080/content");
/**
//www.eclipse.org/legal/epl-2.0
/**
/** Constructor */
// things
// events
// event channelIds
/**
//www.eclipse.org/legal/epl-2.0
/**
/** Logger Instance */
/** Scheduler to schedule jobs */
/**
/**
/**
// Daily Job
// Execute daily startup job immediately
// Repeat positional job every configured seconds
// Use scheduleAtFixedRate to avoid time drift associated with scheduleWithFixedDelay
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
//www.computus.de/mondphase/mondphase.htm azimuth/elevation and
//lexikon.astronomie.info/java/sunmoon/
/**
/**
/**
/**
/**
/**
/**
/**
// no moon eclipse
// no partial moon eclipse
// no total moon eclipse
// no sun eclipse
// no partial sun eclipse
// no ring or total sun eclipse
// no total sun eclipse
/**
/**
/**
/**
/**
/**
/**
/**
// zodiac
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
//stellafane.org/misc/equinox.html
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
//www.suncalc.net
// Solar constant in W/m²
// sun diameter
// nautical twilight angle
// astronomical twilight
// angle
// darkness angle
// 20 minutes
/**
/**
// Direct Solar Radiation (in W/m²) at the atmosphere entry
// At sunrise/sunset - calculations limits are reached
// Direct radiation after atmospheric layer
// 0.6 = Coefficient de transmissivité
// Diffuse Radiation
/**
/**
// daylight
// morning night
// evening night
// night
// eclipse
// phase
/**
// all the following methods are translated to java based on the javascript
// calculations of http://www.suncalc.net
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
// schedule republish jobs
// schedule phase jobs
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/** Logger Instance */
/**
/**
/**
/**
// depending on the location you might not have a valid range for day/night, so skip the events:
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/** Constructor */
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/** Constructor */
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// Required from the AstroThingHandler to send the status update
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// These test result timestamps are adapted for the +03:00 time zone
// Anonymous implementation of the service to adapt the time zone to the tested longitude and latitude
// do nothing
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
//www.suncalc.net">http://www.suncalc.net</a> and
//www.mooncalc.org">http://www.mooncalc.org</a>
/**
//www.eclipse.org/legal/epl-2.0
/**
/* non-null if initialized */)
/* non-null if initialized */)
/* non-null if initialized */)
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
// Check address - 2 bytes should be hex, and then a colon
// fall through
/**
//www.eclipse.org/legal/epl-2.0
/**
// List of all Thing Type UIDs
// List of all Channel Type IDs
// Bluetooth profile UUID definitions
/**
//www.eclipse.org/legal/epl-2.0
/**
//www.bluetooth.com/specifications/gatt/characteristics
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
// Fall-through intended
// Fall-through intended
// Fall-through intended
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
// Characteristic
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
// Devices in the COMPUTER major class
// Devices in the PHONE major class
// Minor classes for the AUDIO_VIDEO major class
// Devices in the WEARABLE major class
// Devices in the TOY major class
// Devices in the HEALTH major class
// Devices in PERIPHERAL major class
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
//www.bluetooth.com/specifications/gatt/descriptors
/**
/**
/**
/**
/**
/**
// Descriptors
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
// Check if we already know about this service
// Create a new service and add it to the device
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
//www.bluetooth.com/specifications/gatt/services
// The service UUID
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
// List of GATT Services
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// internal flag for the service resolution status
// we do not set the Thing status here, because we will anyhow receive a call to onConnectionStateChange
// Handle REFRESH
// if there is no signal, we can be sure we are OFFLINE, but if there is a signal, we also have to check whether
// we are connected.
// The device is now known on the Bluetooth network, so we can do something...
// the byte has values from 0-255, which we need to map to 0-100
// use the type id as a fallback
// the channel does not exist yet, so let's add it
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// We did not find a thing type for this device, so let's treat it as a generic one
// Create the discovery result and add to the inbox
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// List of all Thing Type UIDs
/**
//www.eclipse.org/legal/epl-2.0
/**
// BlueGiga needs to know the address type when connecting
// Used to correlate the scans so we get as much information as possible before calling the device "discovered"
// The dongle handler
// An enum to use in the state machine for interacting with the device
// Somewhere to remember what characteristic we're working on
// The connection handle if the device is connected
/**
// We're already connected
// We're already disconnected
// Start by requesting all the services
// Check if this is addressed to this device
// Set device properties
// If the packet contains data, then process it and add anything relevant to the device...
// addServices((List<UUID>) eir.getRecord(record));
// We want to wait for an advertisement and a scan response before we call this discovered.
// The intention is to gather a reasonable amount of data about the device given devices send
// different data in different packets...
// Note that this is possible a bit arbitrary and may be refined later.
// Set our state to disconnected
// But notify listeners that the state is now DISCOVERED
// Notify the bridge - for inbox notifications
// Notify listeners of all scan records - for RSSI, beacon processing (etc)
// A Service has been discovered
// If this is not our connection handle then ignore.
// A Characteristic has been discovered
// If this is not our connection handle then ignore.
// If this is not our connection handle then ignore.
// The current procedure is now complete - move on...
// We've downloaded all services, now get the characteristics
// We've downloaded all characteristics
// The read failed
// The write completed - failure or success
// Check if this is addressed to this device
// If we're connected, then remember the connection handle
// If this is not our connection handle then ignore.
// A read request has completed - update the characteristic
// If this is the characteristic we were reading, then send a read completion
// Notify the user of the updated value
/**
//www.eclipse.org/legal/epl-2.0
/**
// The serial port.
// The serial port input stream.
// The serial port output stream.
// The BlueGiga API handler
// The maximum number of connections this interface supports
// Our BT address
// internal flag for the discovery configuration
// Map of Bluetooth devices known to this bridge.
// This is all devices we have heard on the network - not just things bound to the bridge
// Map of open connections
// Set of discovery listeners
// List of device listeners
// being a BluetoothAdapter, we use the UID of our bridge
// No commands supported for the bridge
// Create and send the reset command to the dongle
// Stop any procedures that are running
// Close all transactions
// Close all connections so we start from a known position
// Get our Bluetooth address
// Set mode to non-discoverable etc.
// Not doing this will cause connection failures later
// Start passive scan
// ignore if handler wasn't set at all
// RXTX serial port library causes high CPU load
// Start event listener, which will just sleep and slow down event loop
// We use the scan event to add any devices we hear to the devices list
// The device gets created, and then manages itself for discovery etc.
// Stop the passive scan
// Start a active scan
// Stop the active scan
// Start a passive scan
// This method always needs to return a device, even if we don't currently know about it.
/*
/**
// Check the connection to make sure we're not already connected to this device
// FIXME: When getting here, I always found all connections to be already taken and thus the code never
// proceeded. Relaxing this condition did not do any obvious harm, but now guaranteed that the services are
// queried from the device.
// Connect...
/**
/**
/**
/**
/**
/**
/*
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// Octet 0 7 1 bit Message Type (MT) 0: Command
// -------6:3 4 bits Technology Type (TT) 0000: Smart Bluetooth
// -------2:0 3 bits Length High (LH) Payload length (high bits)
// Octet 1 7:0 8 bits Length Low (LL) Payload length (low bits)
// Octet 2 7:0 8 bits Class ID (CID) Command class ID
// Octet 3 7:0 8 bits Command ID (CMD) Command ID
/**
/**
/**
// TODO this probably needs to support longer UUIDs?
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// TODO Auto-generated constructor stub
/**
/**
/**
/**
// This is a uint8array type so first byte is the length
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
// The BGAPI protocol has no packet framing, and no error detection, so we do a few
// sanity checks on the header to try and allow resyncronisation should there be an
// error.
// Byte 0: Check technology type is bluetooth and high length is 0
// Byte 1: Check length is less than 64 bytes
// Byte 2: Check class ID is less than 8
// Byte 3: Check command ID is less than 16
// Process the header to get the length
// End of packet reached - process
// wait until the daemon thread kicks off, e.g. when it is ready to receive any commands
/* ignore */ }
/**
/**
/**
// Synchronize this method to ensure a packet gets sent as a block
// Send the data
// Synchronize this method so we can do the window check without interruption.
// Otherwise this method could be called twice from different threads that could end up with
// more than the TX_WINDOW number of frames sent.
// Nothing to send
/**
/**
/**
// Register a listener
// Send the transaction
// Wait for the transaction to complete
// Remove the listener
// Check if this response completes our transaction
// ignoring response if it was not requested
/**
/**
// Stop any existing timer
// Create the timer task
// Stop any existing timer
/**
// Notify the listeners
/**
/**
// It should be safe enough not to use the NotificationService as this is a fatal error, no any further actions
// can be done with the handler, a new handler should be re-created
// There is another reason why NotificationService can't be used - the listeners should be notified immediately
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
// Super creates deserializer and reads header fields
// Deserialize the fields
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
// Serialize the header
// Serialize the fields
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
// Super creates deserializer and reads header fields
// Deserialize the fields
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
// Serialize the header
// Serialize the fields
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
// Super creates deserializer and reads header fields
// Deserialize the fields
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
// Serialize the header
// Serialize the fields
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
// Super creates deserializer and reads header fields
// Deserialize the fields
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
// Serialize the header
// Serialize the fields
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
// Super creates deserializer and reads header fields
// Deserialize the fields
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
// Super creates deserializer and reads header fields
// Deserialize the fields
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
// Super creates deserializer and reads header fields
// Deserialize the fields
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
// Serialize the header
// Serialize the fields
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
// Super creates deserializer and reads header fields
// Deserialize the fields
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
// Super creates deserializer and reads header fields
// Deserialize the fields
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
/**
// Serialize the header
// Serialize the fields
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
// Super creates deserializer and reads header fields
// Deserialize the fields
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
// Super creates deserializer and reads header fields
// Deserialize the fields
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
/**
// Serialize the header
// Serialize the fields
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
// Super creates deserializer and reads header fields
// Deserialize the fields
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
// Serialize the header
// Serialize the fields
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
// Super creates deserializer and reads header fields
// Deserialize the fields
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
/**
// Serialize the header
// Serialize the fields
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
// Super creates deserializer and reads header fields
// Deserialize the fields
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
// Serialize the header
// Serialize the fields
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
// Super creates deserializer and reads header fields
// Deserialize the fields
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
// Serialize the header
// Serialize the fields
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
// Super creates deserializer and reads header fields
// Deserialize the fields
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
// Super creates deserializer and reads header fields
// Deserialize the fields
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
// Serialize the header
// Serialize the fields
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
// Super creates deserializer and reads header fields
// Deserialize the fields
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
// Super creates deserializer and reads header fields
// Deserialize the fields
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
// Serialize the header
// Serialize the fields
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
// Super creates deserializer and reads header fields
// Deserialize the fields
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
// Serialize the header
// Serialize the fields
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
// Super creates deserializer and reads header fields
// Deserialize the fields
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
// Serialize the header
// Serialize the fields
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
// Super creates deserializer and reads header fields
// Deserialize the fields
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
// Super creates deserializer and reads header fields
// Deserialize the fields
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
// Serialize the header
// Serialize the fields
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
// Super creates deserializer and reads header fields
// Deserialize the fields
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
// Serialize the header
// Serialize the fields
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
// Super creates deserializer and reads header fields
// Deserialize the fields
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
// Super creates deserializer and reads header fields
// Deserialize the fields
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
// Serialize the header
// Serialize the fields
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
// Super creates deserializer and reads header fields
// Deserialize the fields
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
// Serialize the header
// Serialize the fields
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
// Super creates deserializer and reads header fields
// Deserialize the fields
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
// Super creates deserializer and reads header fields
// Deserialize the fields
/**
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
// Serialize the header
// Serialize the fields
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
// Super creates deserializer and reads header fields
// Deserialize the fields
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
// Super creates deserializer and reads header fields
// Deserialize the fields
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
// Super creates deserializer and reads header fields
// Deserialize the fields
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
// Serialize the header
// Serialize the fields
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
// Super creates deserializer and reads header fields
// Deserialize the fields
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
// Serialize the header
// Serialize the fields
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
// Super creates deserializer and reads header fields
// Deserialize the fields
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
// Serialize the header
// Serialize the fields
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
// Super creates deserializer and reads header fields
// Deserialize the fields
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
// Super creates deserializer and reads header fields
// Deserialize the fields
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
// Serialize the header
// Serialize the fields
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
// Super creates deserializer and reads header fields
// Deserialize the fields
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
/**
// Serialize the header
// Serialize the fields
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
// Super creates deserializer and reads header fields
// Deserialize the fields
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
// Serialize the header
// Serialize the fields
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
// Super creates deserializer and reads header fields
// Deserialize the fields
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// Serialize the header
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
// Super creates deserializer and reads header fields
// Deserialize the fields
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
// Super creates deserializer and reads header fields
// Deserialize the fields
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
// Serialize the header
// Serialize the fields
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
// Super creates deserializer and reads header fields
// Deserialize the fields
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
// Serialize the header
// Serialize the fields
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
// Super creates deserializer and reads header fields
// Deserialize the fields
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
// Serialize the header
// Serialize the fields
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
// Super creates deserializer and reads header fields
// Deserialize the fields
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
// Serialize the header
// Serialize the fields
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
// Super creates deserializer and reads header fields
// Deserialize the fields
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
// Super creates deserializer and reads header fields
// Deserialize the fields
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
// Super creates deserializer and reads header fields
// Deserialize the fields
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
// Serialize the header
// Serialize the fields
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
// Super creates deserializer and reads header fields
// Deserialize the fields
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
// Serialize the header
// Serialize the fields
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
// Super creates deserializer and reads header fields
// Deserialize the fields
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// Serialize the header
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
// Super creates deserializer and reads header fields
// Deserialize the fields
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
// Serialize the header
// Serialize the fields
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
// Super creates deserializer and reads header fields
// Deserialize the fields
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
// Super creates deserializer and reads header fields
// Deserialize the fields
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
// Super creates deserializer and reads header fields
// Deserialize the fields
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
// Serialize the header
// Serialize the fields
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
// Super creates deserializer and reads header fields
// Deserialize the fields
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
// Serialize the header
// Serialize the fields
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
// Super creates deserializer and reads header fields
// Deserialize the fields
/**
//www.eclipse.org/legal/epl-2.0
/**
// Serialize the header
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
// Super creates deserializer and reads header fields
// Deserialize the fields
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// Serialize the header
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
// Super creates deserializer and reads header fields
// Deserialize the fields
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
/**
// Super creates deserializer and reads header fields
// Deserialize the fields
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
// Super creates deserializer and reads header fields
// Deserialize the fields
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
// Super creates deserializer and reads header fields
// Deserialize the fields
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// Serialize the header
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
// Super creates deserializer and reads header fields
// Deserialize the fields
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// Serialize the header
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
// Super creates deserializer and reads header fields
// Deserialize the fields
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// Serialize the header
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
/**
// Super creates deserializer and reads header fields
// Deserialize the fields
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// Serialize the header
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
// Super creates deserializer and reads header fields
// Deserialize the fields
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
// Super creates deserializer and reads header fields
// Deserialize the fields
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
// Super creates deserializer and reads header fields
// Deserialize the fields
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
// Serialize the header
// Serialize the fields
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
// Super creates deserializer and reads header fields
// Deserialize the fields
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
// Serialize the header
// Serialize the fields
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
// Super creates deserializer and reads header fields
// Deserialize the fields
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// Serialize the header
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
// Super creates deserializer and reads header fields
// Deserialize the fields
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
// Serialize the header
// Serialize the fields
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
// Super creates deserializer and reads header fields
// Deserialize the fields
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
//www.bluetooth.com/specifications/assigned-numbers/generic-access-profile
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/* service1 */ 0x10, 0x8e, 0xe7, 0x74, /* service2 */ 0x11, 0x8e, 0xe7, 0x64 };
/* service1 */ 0x6d, 0x66, 0x70, 0x44, 0x73, 0x66, 0x62, 0x75, 0x66, 0x45, 0x76, 0x64,
/* service2 */ 0x6e, 0x66, 0x70, 0x44, 0x73, 0x66, 0x62, 0x75, 0x66, 0x45, 0x76,
/* length 0x05, */ 0xFF, 0xFF, 0x02, 0x00, 0xFF };
/* length 0x05, */ /* service data 16 bit UUID */ 0x16, 0x0F, 0x18, 0x45 };
/* service data 32 bit UUID */ 0x20, /* UUID */ 0x10, 0x8e, 0xe7, 0x74, /* data */ 0x74, 0x01,
/* service data 32 bit UUID */ 0x21, /* UUID */ 0x6d, 0x66, 0x70, 0x44, 0x73, 0x66, 0x62, 0x75,
/* data */ 0x74, 0x01, 0x0d, 0x01, (byte) 0xec };
/**
//www.eclipse.org/legal/epl-2.0
/**
// List of all Thing Type UIDs
// Properties
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
// we need to replace the instance - let's deactivate notifications on the old one
// this device does not seem to be connectable at all - let's log a warning and ignore it.
// let's retry in 10 seconds
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// Our BT address
// internal flag for the discovery configuration
// Map of Bluetooth devices known to this bridge.
// This is all devices we have heard on the network - not just things bound to the bridge
// Set of discovery listeners
/**
// we do not get anything more specific from TinyB here
// let's update the rssi and txpower values
// The Bluetooth discovery expects a complete list on every scan,
// so we also have to report the already known devices.
// nothing do do here, we need to keep the adapter in discovery mode as we otherwise won't get any RSSI updates
// either
// clean up orphaned entries
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// we cannot initialize the BlueZ stack
// we do not get anything more specific from TinyB here
/**
//www.eclipse.org/legal/epl-2.0
/**
// List of all Thing Type UIDs
// Channel IDs
/**
//www.eclipse.org/legal/epl-2.0
/**
// It isn't easy to get a heading from these values without any calibration, so we ignore those
// right
// now.
/**
//www.eclipse.org/legal/epl-2.0
/**
// Create the discovery result and add to the inbox
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
//www.eclipse.org/legal/epl-2.0
/**
// List of all Thing Type UIDs
// List of all Channel IDs
// Device information parameters;
/**
//www.eclipse.org/legal/epl-2.0
/**
// Device configuration parameters;
// Not an actual configuration field, but it will contain the name of the group (in case of Stereo Pair)
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
// don't update channel if it's not linked (in case of Stereo Pair slave device)
// refresh makes no sense... ?
/**
/**
/**
/**
/**
/**
/**
// we don't expect binary data so just dump if we get some...
// we need longer timeouts for web socket.
// Port seems to be hard coded, therefore no user input or discovery is necessary
//" + getIPAddress() + ":8080/";
// try to reconnect....
// Stereo pair
// NO Stereo Pair
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
// if (presetID >= 1 && presetID <= 6) {
// StringBuilder buffer = new StringBuilder();
// buffer.append("PRESET_");
// buffer.append(presetID);
// return buffer.toString();
// }
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
// Only binding presets get saved
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// unprocessed / ignored data
// unprocessed / ignored data
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
// save for switch statement
// set default value; we avoid default in select to have the compiler
// showing a
// warning for unhandled states
// it just seems to be a ping - havn't seen any data on it..
// message
// TODO implement request id / response tracking...
/*
// source changed
// reset enabled states
// clear all "nowPlaying" details on source change...
// reset the current playerPrests
// auto go trough the state map
// all entities without any children expected..
// currently this dosn't provide any zone details..
// all further things are also unprocessed
// update now playing name...
// handle special tags..
// request current bass level
// no actions...
// @TODO - find out how to dynamically change "channel-type" bass configuration
// based on these values...
// this are currently unprocessed values.
// drop quietly..
// We download the cover art in a different thread to not delay the other operations
// do nothing
/**
//www.eclipse.org/legal/epl-2.0
/**
// initializes our XML parsing state machine
// ignored..
// only confirmation of our key presses...
// only confirmation of commands sent to device...
// only confirmation of our key presses...
// info message states
// can we get anything useful of that?
// TODO this seems to be quite a useful info
// what is currently played..
// just notifies but dosn't provide details
// TODO active when Source==Bluetooth
// TODO active when Source==Pandora and maybe also other sources - seems to be rating related
// ContentItem specifies a resource (that also could be bookmarked in a preset)
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// remove the domain from the name
//" + addrs[0].getHostAddress() + ":8090/getGroup");
// we expect only one address per device..
// Set manufacturer as thing property (if available)
//" + ip + ":8090/info");
// Check if it's a Stereo Pair
//" + ip + ":8090/getGroup");
// Stereo Pair - Master Device
// Stereo Pair - Secondary Device - should not be paired
// Single player
// sometimes we see empty messages - ignore them
/**
//www.eclipse.org/legal/epl-2.0
/**
// List of all Thing Type IDs
// List of all Thing Type UIDs
// scene
// sensor
// options combined switches
/* config URIs */
/* Bridge config properties */
/* Device info properties */
// Device properties scene
// + number of scene
// Sensor data channel properties
/* Scene config */
// circuit properties
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/* DS-Manager */
/**
// Start an extra thread to readout the configuration and check the connection, because it takes sometimes more
// than 5000 milliseconds and the handler will suspend (ThingStatus.UNINITIALIZED).
// Parameters can't be null, because of an existing default value.
// load and check connection and authorization data
// Inform Thing-Child's about removed bridge.
/* methods to store listener */
/**
/**
/**
/**
/**
/**
// not needed
// reset connection timeout counter
// ignore the first connection timeout
// reset connection timeout counter
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
// Set status to OFFLINE if no bridge is available e.g. because the bridge has been removed and the
// Thing was reinitialized.
// the same handling like total metering values
// load first channel values
// check device info
// nothing to do, will be registered again
// nothing to do
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
// Set status to OFFLINE if no bridge is available e.g. because the bridge has been removed and the
// Thing was reinitialized.
// load scene configurations persistently into the thing
// load sensor priorities into the device and load sensor channels of the thing
// check and load output channel of the thing
// load channel for set the angle of jalousie devices
// load first channel values
/**
// check device info
// load sensor priorities into the device
// By devices with output mode WIPE the active power always will be read out to check, if the device is not
// in standby any more.
// check and load sensor channels of the thing
// if sensor channels with priority never are loaded delete these channels
// if the device have no output channel or it is disabled all output channels will be deleted
// persist the new property
// super.updateThing(editThing().build());
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
// check zoneID error codes
/**
// Set status to OFFLINE, if no bridge is available e.g. because the bridge has been removed and the
// Thing was reinitialized.
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
// if no name is set, the dSID will be used as name
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
// nothing to do
// nothing to do
// nothing to do
// nothing to do
// currently only this thing-type exists
// nothing to do
// nothing to do
// nothing to do
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/*
/*
/*
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/*
/*
/*
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/*
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
/*
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/*
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/*
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/*
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/*
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
/*
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/*
/**
//www.eclipse.org/legal/epl-2.0
/**
/* Client configuration */
// connection configuration
/**
/**
// Timeouts
/**
/**
/**
/**
/**
/**
/* Internal Configurations */
// Trash Bin Config
/**
/**
// in milliseconds
// in milliseconds
// Device update config
/**
// in milliseconds
// in milliseconds
/* Sensordata */
// Sensodata read config
/**
/**
/**
// sensor data Prioritys
/**
/**
/**
/**
// max sensor reading cyclic to wait
/**
/**
/**
/**
/**
/**
// config with default values
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// error message
// Complete text: "Event subscription token not
// found."
/**
/**
/**
/**
/**
/**
/**
/**
/**
// Because of the json-call unsubscribe?eventName=XY&subscriptionID=Z doesn't work like it is explained
// in the dS-JSON-API, the whole EventListener will be restarted. The problem is, that not only the
// given eventName, rather all events of the subscitionID will be deleted.
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// general
// scene event
// device/zone sensor value
// state changed
// operation mode
// binary input
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/*
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/* Connection-States */
/**
/**
/**
/**
/* Not authentication reasons */
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/*(*)";
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
// if an application-token for the application exists, use this application-token and test host is
// reachable
// application-token check
// found application-token, set as application-token
// no token found, generate applicationToken
// enable applicationToken
// if enable failed set application-token = null so thats not will be set
// remove password and username, to don't store them persistently
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/*(*)/*(*)/*(*)";
/*(*)/groups/*(*)/*(*)";
/**
/**
/**
/**
/**
/**
/**
// update the current total power consumption
// check circuits
// check device state updates
// only informs discovery, if the device is a output or a sensor device
/**
/**
/**
/**
// check device availability has changed and informs the deviceStatusListener about the change.
// NOTE:
// The device is not availability for the digitalSTROM-Server, it has not been deleted and therefore it is set
// to
// OFFLINE.
// An alternate algorithm is responsible for deletion.
/**
// check device state updates
/**
/**
// By UPDATE_SLAT_ANGLE_DECREASE, UPDATE_SLAT_ANGLE_INCREASE with value unequal 1 which will
// handled in the pollingRunnable and UPDATE_OPEN_CLOSE_ANGLE the value will be set without
// checking, because it was triggered by setting the slat position.
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
// sometimes the dS-event has a dSUID saved in the dSID
// ... we want to ignore own 'command-echos'
// ... we want to ignore own 'command-echos'
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/*(ZoneID,name)/groups/*(group,name)";
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
// val=0
/**
// val=1
/**
// val=2
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
// can be Overridden to implement a priority
/**
// can be overridden to implement a priority
/**
// can be overridden to implement a priority
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
//developer.digitalstrom.org/Architecture/v1.1/dss-json.pdf
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/*(ZoneID,name)’.
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// GENERAL
// STRUCTURE
// SENSORS
// device
// meter sensors
// zone/apartment sensors
// IDs
// DEVICE
// status
// descriptions
// config
// event table
// EVENTS
// SYSTEM & LOGIN
// CLIMATE
// UNDEF
// Circuit
// Binary inputs
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/*(dSID)";
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
// Check SSL Certificate
//")) {
//" + fixedURI;
// NOTE: We will only show exceptions in the debug level, because they will be handled in the checkConnection()
// method and this changes the bridge state. If a command was send it fails than and a sensorJob will be
// execute the next time, by TimeOutExceptions. By other exceptions the checkConnection() method handles it in
// max 1 second.
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// states
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/*
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/*
/*
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
//www.digitalstrom.com/Partner/Support/Techn-Dokumentation/
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
// follow methods added by Michael Ochel and Matthias Siegele
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/** digitalSTROM dim step for lights (this value is not in percent!) */
/** move step for roller shutters (this value is not in percent!) */
/** move step for slats angle by blind/jalousie (this value is not in percent!) */
/** default move step (this value is not in percent!) */
/** default max output value */
/** max output value if device (lamp - yellow) is on */
/** is open (special case: awning/marquee - closed) */
/** is closed (special case: awning/marquee - open) */
/** max slat angle by blind/jalousie */
/** min slat angle by blind/jalousie */
/** you can't dim deeper than this value */
/** this is the index to get the output value (min-, max value) of almost all devices */
/** this is the index to get the output value (min-, max value) of shade devices */
/** this index is needed to get the angle of the slats (if device is a blind/jalousie) */
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// Update types
// in certain circumstances it is also better to rename SLAT_ANGLE to e.g. SECONDARY_OUTPUT
// light
// shades
// sensor data
// metering data
// binary inputs
// scene
/** A scene call can have the value between 0 and 127. */
// general
/** command to refresh the output value of an device. */
// standard values
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/*
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
//developer.digitalstrom.org/Architecture/ds-basics.pdf">ds-basics.pdf
/*
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
//developer.digitalstrom.org/Architecture/ds-basics.pdf">ds-basics.pdf,
/*
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// currently null by request getLast
// energyDelta(Lists.newArrayList(MeteringUnitsEnum.Wh, MeteringUnitsEnum.Ws)),
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
//developer.digitalstrom.org/Architecture/ds-basics.pdf">Table 36: Output Mode Register, page
/*
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
//developer.digitalstrom.org/Architecture/ds-basics.pdf">ds-basics.pdf, Table 40: Sensor Types
/*
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
/*
/*
/*
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/*
/*
/*
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
// ignore it
/**
//www.eclipse.org/legal/epl-2.0
/**
// Config
// Metering
// currently energyDelta not exist
// private CachedMeteringValue energyDeltaWh;
// private CachedMeteringValue energyDeltaWs;
/**
/*
/*
/**
//www.eclipse.org/legal/epl-2.0
/**
// for scenes
// saves outstanding commands
/*
/*
// Preparing for the advance device property setting "Turn 'switched' output off if value below:", but the
// configuration currently not work in digitalSTROM, because of that the value is fix 1.
/**
/* Begin-Scenes */
// on scenes
// off scenes
// increase scenes
// decrease scenes
// Stop scenes
// Area Stepping continue scenes
// off scenes
/* End-Scenes */
// Device sensors
// temperature resolution is not correct, so waiting for device sensor-event
// Sensor get/set helper methods
/**
/**
// ignore
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// fields: 0 = namedScenes, 1 = apartmentScenes, 2 = zoneScenes, 3 = reachableScenes
/*(ZoneID)/groups/*(group)/scenes/*(scene,name)";
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/*
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/*
/* Area scene commands */
// Set output value to Preset Area 1 Off (Default: Off)
// Set output value to Preset Area 1 On (Default: On)
// Initial command to increment output value
// Initial command to decrement output value
// Stop output value change at current position
// Next step to increment or decrement
// Set output value to Area 2 Off (Default: Off)
// Set output value to Area 2 On (Default: On)
// Initial command to increment output value
// Initial command to decrement output value
// Stop output value change at current position
// Set output value to Area 3 Off (Default: Off)
// Set output value to Area 3 On (Default: On)
// Initial command to increment output value
// Initial command to decrement output value
// Stop output value change at current position
// Set output value to Area 4 Off (Default: Off)
// Set output value to Area 4 On (Default: On)
// Initial command to increment output value
// Initial command to decrement output value
// Stop output value change at current position
/* local pushbutton scene commands */
// Local on
// Local off
// Stop output value change at current position
/* special scene commands */
// Minimum output value
// Maximum output value
// Stop output value change at current position
// slowly fade down to off
/* stepping scene commands */
// Increment output value (in the basic.pdf it is 11 but its wrong)
// Decrement output value (in the basic.pdf it is 12 but its wrong)
/* presets */
// Set output value to Preset 0 (Default: Off)
// Set output value to Preset 1 (Default: On)
// Set output value to Preset 2
// Set output value to Preset 3
// Set output value to Preset 4
// Set output value to Preset 10 (Default: Off)
// Set output value to Preset 11 (Default: On)
// Set output value to Preset 12
// Set output value to Preset 13
// Set output value to Preset 14
// Set output value to Preset 20 (Default: Off)
// Set output value to Preset 21 (Default: On)
// Set output value to Preset 22
// Set output value to Preset 23
// Set output value to Preset 24
// Set output value to Preset 30 (Default: Off)
// Set output value to Preset 31 (Default: On)
// Set output value to Preset 32
// Set output value to Preset 33
// Set output value to Preset 34
// Set output value to Preset 40 (Default: Off)
// Set output value to Preset 41 (Default: On)
// Set output value to Preset 42
// Set output value to Preset 43
// Set output value to Preset 44
/* group independent scene commands */
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
// Can be overridden by subclasses
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// channelID building (effect group type + (nothing || SEPERATOR + item type || SEPERATOR + extended item type) e.g.
// light_switch, shade or shade_angle
// channel effect group type
// and tag
// and tag
// and tag
// channel extended item type
// pre stageses e.g. 2+STAGE_SWITCH
// item types
// tags
// categories
/**
// check metering channel
// if total_
// check through IllegalArgumentException, if channel is metering
/**
// the digitalSTROM resolution for temperature in kelvin is not correct but sensor-events and cached values are
// shown in °C so we will use this unit for temperature sensors
/**
// ignore
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
// ThingType, responsible ThingHanlder, Device config-description with power-sensors
// ignore
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// restore old chase config
/**
//www.eclipse.org/legal/epl-2.0
/**
// register feedback listeners
/**
//www.eclipse.org/legal/epl-2.0
/**
// register feedback listener
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// register feedback listeners
/**
//www.eclipse.org/legal/epl-2.0
/**
// List of all Thing Type UIDs
// List of all config options
// List of all channels
// Listener Type for channel updates
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
// parse channel config
// parse fade config
// do action
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/** Time in ms to hold the target value. -1 is indefinite */
/** Time in ms to fade from current value to new target value */
/** Channel output value on action start. **/
/** Desired channel output value. **/
/**
// calculate fade details
// calculate new fade value
// we reached the target already, check if we need to hold longer
// mark action as completed
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/* init Artnet header, total length 38 bytes */
// packet identifier, 8 bytes
// OpCode, 2 bytes
// protocol version, 2 bytes
// sequence number, 1 byte
// physical input
// universe, 15 bit
// payload size, 2 bytes
/* observe limits from standard (coerce to range) */
/* set universe in packet to universe-1 */
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/* init E1.31 root layer, total length 38 bytes */
// preamble size, 2 bytes
// postamble size, 2 bytes
// packet identifier, 12 bytes
// flags & length, 2 bytes
// vector, 4 bytes;
// UUID 16 bytes
/* init sACN/E1.31 framing layer, total length 77 bytes */
// flags & length, 2 bytes
// vector, 4 bytes;
// senderName, 64 bytes
// priority (default 100), 1 byte
// reserved, 2 bytes
// sequence number, 1 byte
// options, 1 byte
// universe, 2 bytes
/* sACN/E1.31 DMP layer, total length 11 + channel count */
// flags & length, 2 bytes
// vector, 1 byte
// address type, 1 byte
// start address, 2 bytes
// address increment, 2 bytes
// payload size, 2 bytes (including start code)
// DMX start code, 1 byte
/* root Layer */
/* framing layer */
/* DMP layer */
/* set universe in packet */
/* set sender name in packet */
/**
/* observe limits (coerce to range) */
/**
//www.eclipse.org/legal/epl-2.0
/**
// this static declaration is needed because of the static fromString method
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
// remove action listener
/**
/**
/**
/**
// push action to the back of the action list
/**
/**
// send updates not more than once in a second, and only on value change
// notify value listeners if value changed
// notify on/off listeners if on/off state changed
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
// formula taken from: Poynton, C.A.: “Gamma” and its Disguises: The Nonlinear Mappings of
// Intensity in Perception, CRTs, Film and Video, SMPTE Journal Dec. 1993, pp. 1099 - 1108
// inverted
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// check that thing turns online if properly configured
// check that thing properly follows bridge status
// set 30%
// set 0%
// set 100%
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// check that thing is offline if no bridge found
// step I
// step II (holds forever)
// step I
// step II
// step I (repeated)
// step I
// step II
// resume old state
/**
//www.eclipse.org/legal/epl-2.0
/**
// check that thing is offline if no bridge found
// on
// off
// turn on with arbitrary value
// turn off and hopefully store last value
// turn on and restore value
// setting of color
// color dimming
/**
//www.eclipse.org/legal/epl-2.0
/**
// check that thing is offline if no bridge found
// on
// off
// turn on with arbitrary value
// turn off and hopefully store last value
// turn on and restore value
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//github.com/eclipse/smarthome/issues/6015#issuecomment-411313627")
//github.com/eclipse/smarthome/issues/6015")
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// check that thing is offline if no bridge found
// on
// off
// turn on with arbitrary value
// turn off and hopefully store last value
// turn on and restore value
// cool white
// warm white
// intermediate white
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// overrange
// underrange
// inrange
// borders
// middle
// borders
// middle
// target already reached
// full fade
// fraction
/**
//www.eclipse.org/legal/epl-2.0
/**
// stored values
// repetitions
// times
// values
/**
//www.eclipse.org/legal/epl-2.0
/**
// overrange
// underrange
// inrange & universe
// set universe
// to string
// single channel from string with universe
// single channel from string without universe
// two channels with channel width
// to channels with comma
// complex string
/**
//www.eclipse.org/legal/epl-2.0
/**
// has action
// clear action
// check first action completes
// check second action completes
// check first action completes again
// check action completes
// check state is restored
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// List of all Thing Type UIDs
// List of all Channel ids
// config properties
// further properties
/**
//www.eclipse.org/legal/epl-2.0
/**
/** Job that runs {@link #updateRunnable}. */
/** Runnable for job {@link #updateJob} for periodic refresh. */
// radio is not set, so set all channels to 'undefined'
// now let's silently check if it's back online
// if login is successful, this method is called again :-)
// if radio is off, set all channels (except for 'POWER') to 'undefined'
// update all channels that are linked
// preset is write-only, ignore
// set it back online, maybe it was offline before
// read configuration
// configuration incomplete
// Long running initialization should be done asynchronously in background
// also schedule a thread for polling with configured refresh rate
// Thing initialized. If done set status to ONLINE to indicate proper working.
// now update all channels!
// connection to radio is not initialized, log ignored command and set status, if it is not already offline
// now all items should be updated! (wait some seconds so that text items are up-to-date)
// absolute value should also be updated now, so let's update all items
// percent value should also be updated now, so let's update all items
// make sure that device state is online
// set device state to offline
/**
//www.eclipse.org/legal/epl-2.0
/**
/** Map from UPnP manufacturer to model number for supported radios; filled in static initializer below. */
// to allow case-insensitive match: add all values UPPER-CASE!
// format: MANUFACTURER -> MODEL NAME, as shown e.g. by UPnP Tester as explained here:
// https://community.openhab.org/t/internet-radio-i-need-your-help/2131
// list of medion internet radios taken from: http://internetradio.medion.com/
// list of hama internet radios taken from:
// https://www.hama.com/action/searchCtrl/search?searchMode=1&q=Internet%20Radio
// as reported in: https://community.openhab.org/t/internet-radio-i-need-your-help/2131/19
// and: https://community.openhab.org/t/internet-radio-i-need-your-help/2131/20
// and: https://community.openhab.org/t/internet-radio-i-need-your-help/2131/23
// these radios do not provide model number, but the model name should also be ok
// empty manufacturer / model name
// missing manufacturer / model name
// as reported in: https://community.openhab.org/t/internet-radio-i-need-your-help/2131/5
// as reported in: https://community.openhab.org/t/internet-radio-i-need-your-help/2131/7
// as reported in: https://community.openhab.org/t/internet-radio-i-need-your-help/2131/10
// and: https://community.openhab.org/t/internet-radio-i-need-your-help/2131/21
// as reported in: https://community.openhab.org/t/internet-radio-i-need-your-help/2131/11
// as reported in: https://community.openhab.org/t/internet-radio-i-need-your-help/2131/22
// as reported in: https://community.openhab.org/t/internet-radio-i-need-your-help/2131/25
// add manufacturer and model, if provided
/**
// check manufacturer and model number
// check model name and number
// maybe we can add further indicators, whether the device is a supported one
// device not supported
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/** The http connection/session used for controlling the radio. */
/** the volume of the radio. we cache it for fast increase/decrease. */
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/** Timeout for HTTP requests in ms */
/** Hostname of the radio. */
/** Port number, usually 80. */
/** Access pin, passed upon login as GET parameter. */
/** The session ID we get from the radio after logging in. */
/** http clients, store cookies, so it is kept in connection class. */
/** Flag indicating if we are successfully logged in. */
/**
// reset login flag
//" + hostname + ":" + port + FrontierSiliconRadioConstants.CONNECTION_PATH
// login successful :-)
// login not successful
/**
/**
// 3 retries upon failure
// not logged in and login was not successful - try again!
//" + hostname + ":" + port + FrontierSiliconRadioConstants.CONNECTION_PATH + "/"
/*-
// try again
// 3 tries failed. log in again next time, maybe our session went invalid (radio restarted?)
/**
//www.eclipse.org/legal/epl-2.0
/**
/** URL path, must begin with a slash (/) */
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// default device variables used in the tests
// default radio variables used in most of the tests
//radioDescriptiveURL"), null, null);
//radioBaseURL");
/*
// taken from the binding.xml file
// taken from the thing-types.xml file
/**
/**
/**
/**
/**
//unknownDescriptorURL"), null, null);
//unknownBaseUrl");
/**
//www.eclipse.org/legal/epl-2.0
/**
// The request send for preset is "SET/netRemote.nav.action.selectPreset";
/**
/**
/**
// default configuration properties
/** The default refresh interval is 60 seconds. For the purposes of the tests it is set to 1 second */
/**
/**
/**
/**
/**
// create a thing with two channels - the power channel and any of the others
/*
// try to handle a command
/**
// create a thing with two channels - the power channel and any of the others
// turn-on the radio
/*
// try to handle a command
/**
/**
/*
/**
/*
/**
/*
/**
/**
/**
// Trying to set a value that is greater than the maximum volume
// Trying to increase the volume more than its maximum value using the INCREASE command
// Trying to increase the volume more than its maximum value using the UP command
// Trying to set a value that is lower than the minimum volume value
/*
// trying to set the volume
/**
/*
/**
/*
/**
/*
// First we have to make sure that the item state is 0
// Trying to decrease one more time
// First we have to make sure that the item state is 0
// Trying to decrease one more time
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/*
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// scan for already known devices (new devices will not be discovered,
// since installMode==true is only achieved if the bridge is online
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// update properties
// update data point list for reconfigurable channels
// update configurations
// update thing channel list for reconfigurable channels (relies on the new value of the
// CHANNEL_FUNCTION datapoint fetched during configuration update)
/**
// remove thing channels that were configured for a different function
// Channel is already present -> channel configuration likely hasn't changed
/**
/**
/**
// special case with stop type (rollershutter)
/**
/**
/**
// update configuration
// update channel
// ignore
/**
/**
/**
/**
/**
/**
/**
/**
// thing removal was initiated on ESH side
// device removal was initiated on homematic side, thing is not removed
/**
// ignore
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
//" + gatewayAddress + ":8181/tclrega.exe";
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// loads all virtual datapoints
// Homegear
// CCU
// other
// delay the newDevice event handling at startup, reduces some API calls
/**
/**
/**
/**
// recoverable exception, therefore only debug
/**
/**
/**
/**
/**
/**
// load all device descriptions
// loading datapoints for all channels
// speed up metadata generation a little bit for equal channels in the gateway devices
// clone all datapoints
// Make sure to only cache non-reconfigurable channels. For reconfigurable channels,
// the data point set might change depending on the selected mode.
/**
/**
/**
/**
// since the homematic virtual device exist: try setting install mode via its dataPoints
// collect virtual datapoints to be accessed
// first set duration on the datapoint
// notify thing if exists
// now that the duration is set, we can enable / disable
// notify thing if exists
// no gwExtrasHm available (or previous approach failed), therefore use rpc client directly
// ignore
/**
/**
// ignore
/**
/**
// thrown by getDevice(address) if no device for the given address is paired on the gateway
/**
// the CCU1 does not support the ping command, we need a workaround
// if there is no exception, connection is valid
// ignore
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// not supported
// not supported
// not supported
// not supported
// not supported
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
//" + config.getCallbackHost() + ":" + config.getBinCallbackPort();
/**
/**
// throw immediately, don't retry the message
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
//openhab.validation:1000");
/**
/**
/**
// The configuration channel only has a MASTER Paramset, so there is nothing to load
/**
// The configuration channel only has a MASTER Paramset, so there is nothing to load
/**
/**
// can't load gateway infos via RF interface
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
// ignore
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//" + config.getCallbackHost() + ":" + config.getXmlCallbackPort();
/**
//%s:%s", config.getGatewayAddress(), port);
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
// placeholder content length
// placeholder arguments
/**
// read rpc values
// Array
// Struct
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// should never happen, but in case ...
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// should never happen, but in case ...
// suppress warning for this datapoint due wrong CCU metadata
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// channel
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
// ignore
/**
// ignore
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
// ignore
// ignore
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// two (or more) PRESS_SHORT events were received
// within AbstractHomematicGateway#DEFAULT_DISABLE_DELAY seconds
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// replace special chars while encoding
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
// set number of beeps
// set interval between two beeps
// LED value must always set (same as beeps)
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
// ignore
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// this literal is required because some gateway types are mixing up encodings in their XML-RPC responses
// "100%" is a commonly used "unit" in datapoints. Generated channel-type is of DecimalType,
// but clients may define a QuantityType if preferred
// datapoint is dimensionless, nothing to convert
// convert the given QuantityType to a QuantityType with the unit of the target datapoint
// According to datapoint documentation, the following values are remaining
// °C, V, %, s, min, mHz, Hz, hPa, km/h, mm, W, m3
// create a QuantityType from the datapoint's value based on the datapoint's unit
// increase logging verbosity for this type of converter
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// only start once at startup
/**
/**
/**
// ignore
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
// ignore
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
// We were called from initialization, which was preceded by initial metadata fetch, so everything
// should be fine by now
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// delegate to excluders
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// delegate to excluders
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// delegate to excluders
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// delegate to excluders
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// Omit thing channel definitions for reconfigurable channels;
// those will be populated dynamically during thing initialization
// generate channel
// generate group
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// loads all Homematic device names
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
// determine QuantityType
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
//ccu";
/**
/**
// load datapoint descriptions
// load device descriptions
// write device descriptions
// write datapoint descriptions
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// the binding is backwards compatible, so clients may still use DecimalType, even if a unit is used
/**
//www.eclipse.org/legal/epl-2.0
/**
// the binding is backwards compatible, so clients may still use DecimalType, even if a unit is used
// at some points datapoints come with such unit instead of °C
// not really a unit, but it occurs in homematic datapoints
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
//github.com/Q42/Jue)
/**
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
//github.com/Q42/Jue)
/**
//www.eclipse.org/legal/epl-2.0
/**
//github.com/Q42/Jue)
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
//github.com/Q42/Jue)
/**
//developers.meethue.com/documentation/hue-system-performance
/**
//www.eclipse.org/legal/epl-2.0
/**
//github.com/Q42/Jue)
/**
//www.eclipse.org/legal/epl-2.0
/**
//github.com/Q42/Jue)
/**
//www.eclipse.org/legal/epl-2.0
/**
//github.com/Q42/Jue)
/**
//www.eclipse.org/legal/epl-2.0
/**
//github.com/Q42/Jue)
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
//github.com/Q42/Jue)
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
//github.com/Q42/Jue)
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
//github.com/Q42/Jue)
// Not really appropriate for exposure
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
//github.com/Q42/Jue)
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
//github.com/Q42/Jue)
/**
//www.eclipse.org/legal/epl-2.0
/**
// List all Thing Type UIDs, related to the Hue Binding
// bridge
// generic thing types
// List all channels
// List all triggers
// Bridge config properties
// Light config properties
/**
//www.eclipse.org/legal/epl-2.0
/**
//github.com/Q42/Jue)
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
// Temporarily reroute requests to a fake HTTP client
// GET requests cannot be scheduled, so will continue working normally for convenience
//[^/]+(.+)$", address);
// Return a fake result that will cause an exception and the callback to end
// Run command
// Command will automatically fail to return a result because of deferred execution
// Restore HTTP client
/**
/**
/**
/**
/**
/**
/**
/**
// Used as assert in requests that require authentication
// Methods that convert gson exceptions into ApiExceptions
// Used as assert in all requests to elegantly catch common errors
// Not an error
// UTF-8 URL encode
// throw new EndOfTheWorldException()
//" + ip + "/api";
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
//github.com/Q42/Jue)
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// remove discovery service, if bridge handler is removed
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
//github.com/Q42/Jue)
/**
//www.eclipse.org/legal/epl-2.0
/**
//github.com/Q42/Jue)
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
//github.com/Q42/Jue)
/**
//www.eclipse.org/legal/epl-2.0
/**
//github.com/Q42/Jue)
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
//github.com/Q42/Jue)
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
//github.com/Q42/Jue)
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
//github.com/Q42/Jue)
/**
//www.eclipse.org/legal/epl-2.0
/**
//github.com/Q42/Jue)
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
//github.com/Q42/Jue)
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
//github.com/Q42/Jue)
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
//github.com/Q42/Jue)
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
//github.com/Q42/Jue)
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
//github.com/Q42/Jue)
// This is used to check what byte size strings have, because the bridge doesn't natively support UTF-8
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
//www.meethue.com/api/nupnp";
//HOST/description.xml";
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// @formatter:off
// @formatter:on
// search for unpaired lights
// nothing to do
// nothing to do
/**
//www.eclipse.org/legal/epl-2.0
/**
//github.com/Q42/Jue)
/**
//www.eclipse.org/legal/epl-2.0
/**
//github.com/Q42/Jue)
/**
//www.eclipse.org/legal/epl-2.0
/**
//github.com/Q42/Jue)
/**
//www.eclipse.org/legal/epl-2.0
/**
//github.com/Q42/Jue)
/**
//www.eclipse.org/legal/epl-2.0
/**
//github.com/Q42/Jue)
/**
//www.eclipse.org/legal/epl-2.0
/**
//github.com/Q42/Jue)
/**
//www.eclipse.org/legal/epl-2.0
/**
//github.com/Q42/Jue)
/**
//www.eclipse.org/legal/epl-2.0
/**
// if user is not set in configuration try to create a new user on Hue bridge
// note that InetAddress.isReachable is unreliable, see
// http://stackoverflow.com/questions/9922543/why-does-inetaddress-isreachable-return-false-when-i-can-ping-the-ip-address
// That's why we do an HTTP access instead
// If there is no connection, this line will fail
// this seems to be only an authentication issue
// Check for removed sensors
// Check for removed lights
// not needed
// If there is only a change of the color temperature, we do not want the light
// to be turned on (i.e. change its brightness).
// This should not happen - if it does, it is most likely some bug that should be reported.
// This should not happen - if it does, it is most likely some bug that should be reported.
// start light polling only if a light handler has been registered, otherwise stop polling
// start sensor polling only if a sensor handler has been registered, otherwise stop polling
/**
/**
/**
/**
// start light polling only if a light handler has been registered
// inform the listener initially about all lights and their states
// stop stop light polling
// start sensor polling only if a sensor handler has been registered
// inform the listener initially about all sensors and their states
// stop sensor polling
/**
/**
// The bridge IP address to be used for checks
// Check whether an IP address is provided
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// @formatter:off
// @formatter:on
// Flag to indicate whether the bulb is of type Osram par16 50 TW or not
// note: this call implicitly registers our handler as a listener on
// the bridge
// make sure that the light also has the latest color temp
// this might not have been yet set in the light, if it was off
// make sure that the light also has the latest color temp
// this might not have been yet set in the light, if it was off
// Unsupported StringType is passed. Log a warning
// message and return.
// Cache values which we have sent
/*
//www.everyhue.com/vanilla/discussion/1756/solved-lightify-turning-off
// update status (ONLINE, OFFLINE)
// we assume OFFLINE without any error (NONE), as this is an
// expected state (when bulb powered off)
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// note: this call implicitly registers our handler as a listener on the bridge
// no commands
// update generic sensor config
// update specific sensor config
// do nothing
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
// even if color mode is reported to be XY, xy field of lightState might be null, while hsb is available
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// do nothing
/**
//www.eclipse.org/legal/epl-2.0
/**
// calculate lux, according to
// https://developers.meethue.com/documentation/supported-sensors#clip_zll_lightlevel
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// do nothing
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// mock HttpClient
/**
//www.eclipse.org/legal/epl-2.0
/**
// 0 percent should not be sent to the Hue interface
// a brightness of 0 should result in 0 percent
// a brightness greater than 1 should result in a percentage greater than 1
// 0 percent should not be sent to the Hue interface
// a brightness of 0 should result in 0 percent
// a brightness greater than 1 should result in a percentage greater than 1
// a saturation greater than 1 should result in a percentage greater than 1
/**
//www.eclipse.org/legal/epl-2.0
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
//
//
//
//
//
//
//
//$IP:80/</URLBase>" + //
//
//
//
//
//www.philips.com</manufacturerURL>" + //
//
//
//
//www.meethue.com</modelURL>" + //
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
// Mock class which only overrides the doGetRequest method in order to make the class testable
// missing ip
// missing id
// id < 10
// bridge indicator not part of id
// bridge indicator at wrong position (-1)
// bridge indicator at wrong position (+1)
// bridge not reachable
// invalid bridge description
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
//hue"), null, null),
//1.2.3.4/"), "Hue Bridge", new ManufacturerDetails("Philips"),
//acme"), null, null),
/**
//www.eclipse.org/legal/epl-2.0
/**
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
/**
//www.eclipse.org/legal/epl-2.0
/**
// The LIFX LAN Protocol Specification states that lights can process up to 20 messages per second, not more.
// Port constants
// Minimum and maximum of MultiZone light indices
// Fallback light state defaults
// List of all Channel IDs
// List of all Channel Type UIDs
// Config property for the LIFX device id
// Config property for channel configuration
// Property keys
// List of all Thing Type UIDs
/**
//www.eclipse.org/legal/epl-2.0
/**
// retain non-zone channels
// add zone channels
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// Listeners are notified in a separate thread for better concurrency and to prevent deadlock.
/**
//www.eclipse.org/legal/epl-2.0
/**
// milliseconds
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// Iterate through the discovered lights that have to be set up, and the packets that have to be sent
// Workaround to avoid a ConcurrentModifictionException on the selector.SelectedKeys() Set
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
// sendPacket will set the sequence number
// resendPacket will reuse the sequence number
// the acknowledgement is used to resend the packet in case of packet loss
// the LIFX LAN protocol spec indicates that the response returned for a request would be the
// previous value
// Nothing to handle
// when these packets get lost the current state will still be updated by the
// LifxLightCurrentStateUpdater
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// do nothing
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// silently ignore
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// do nothing
/**
//www.eclipse.org/legal/epl-2.0
/**
// do nothing
/**
//www.eclipse.org/legal/epl-2.0
/**
// do nothing
/**
//www.eclipse.org/legal/epl-2.0
/**
// do nothing
/**
//www.eclipse.org/legal/epl-2.0
/**
// do nothing
/**
//www.eclipse.org/legal/epl-2.0
/**
// do nothing
/**
//www.eclipse.org/legal/epl-2.0
/**
// do nothing
/**
//www.eclipse.org/legal/epl-2.0
/**
// do nothing
/**
//www.eclipse.org/legal/epl-2.0
/**
// do nothing
/**
//www.eclipse.org/legal/epl-2.0
/**
// do nothing
/**
//www.eclipse.org/legal/epl-2.0
/**
// do nothing
/**
//www.eclipse.org/legal/epl-2.0
/**
// empty
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// do nothing
/**
//www.eclipse.org/legal/epl-2.0
/**
// do nothing
/**
//www.eclipse.org/legal/epl-2.0
/**
// do nothing
/**
//www.eclipse.org/legal/epl-2.0
/**
// do nothing
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
// empty
// empty
// empty
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
// a response can have a power level between 0 and 65535 when the light
// has just been switched ON or OFF
/**
//www.eclipse.org/legal/epl-2.0
/**
//lan.developer.lifx.com/docs/lifx-products
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// hidden utility class constructor
/**
//www.eclipse.org/legal/epl-2.0
/**
// upper bound of the MTUs of all available IPv4 network interfaces
// hidden utility class constructor
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// continue until all keys are cancelled
// when a StateServiceResponse packet is handled a new unicastChannel may be registered
// in the selector which causes this exception, recover from it by restarting the iteration
/**
//www.eclipse.org/legal/epl-2.0
/**
// hidden utility class constructor
/**
// When iterating over all trackers another thread may have inserted this object so this thread may not
// have a lock on it. When the thread does not have the lock, it also did not send a packet.
/**
// for better performance only synchronize when necessary
// another thread may just have added a tracker in this synchronized block, so reevaluate
/**
//www.eclipse.org/legal/epl-2.0
/**
// List of all Thing Type UIDs
// List of all channel ids
// List of all supported thing types
// List of all properties
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// command instanceof RefreshType is not supported
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// Consider adding support for Unix Domain sockets as well.
// This would allow us to autodiscover the local LIRC server.
// The junixsocket library should work nicely
/**
/**
/**
// The last parameter is the number of times the command should be repeated.
// For example, the command "SEND_ONCE TV KEY_VOLUMEUP 4" will transmit
// the volume up code 5 times.
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// Ignore this remote as we already know about it
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// List of all Thing Type UIDs
// Bridge configuration settings
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//my.meteoblue.com/packages/";
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
// Request new weather data
// build forecasts from the data
// Update all channels from the updated weather data
/**
// get the set of channel parameters.
// the first will be the forecast day (eg. forecastToday),
// and the second will be the datapoint (eg. snowFraction)
// Build a State from this value
// Update the channel
// Request new weather data from the service
// get the base url for the HTTP query
// fill in any optional parameters for the HTTP query
// Run the HTTP request and get the JSON response
// Run the HTTP request and get the JSON response
// Convert a json string response into a json data object
// For now, no distinction is made between commercial and non-commercial data;
// This may need to be changed later based on user feedback.
/*
/**
//www.eclipse.org/legal/epl-2.0
/**
// metadata fields
// units fields
// data_day fields
// derived fields
// extract the metadata fields
// extract the units fields
// extract the data_day fields
// generic getter
// metadata getters
// units getters
// data_day getters
// derived getters
/*
// @formatter:off
/*
// @formatter:on
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// default values
// constants
//my.meteoblue.com/dataApi/dispatch.pl?type=json_7day_3h_firstday&";
//my.meteoblue.com/packages/basic-day?";
// required parameters
// servicetype - either Commercial or NonCommercial
// location - lat., long., and alt. in a single string
// optional parameters
// refresh - time period in minutes between pulls
// latitude - the latitude of this location in degrees (-90 to 90)
// longitude - the longitude of this location in degrees (-180 to 180)
// altitude - the height above sea level of the location, in meters
// timeZone - the timezone of the location (see https://en.wikipedia.org/wiki/List_of_tz_database_time_zones)
// returns the URL for the specified serviceType
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
// get the error message
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// [sic]
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// List of all Thing Type UIDs
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/* timeout in milliseconds */
/**
/**
/**
// No commands to handle
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// Store generated client ID if none was set by the user
/**
// We don't need to handle this here, because the {@link PinningSSLContextProvider}
// will throw a CertificateException if the connection fails.
/**
/**
// Empty passwords are allowed
/**
//www.eclipse.org/legal/epl-2.0
/**
// For more security, the following optional parameters can be altered
/**
//www.eclipse.org/legal/epl-2.0
/**
// Check condition
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// Properties
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//", "_") + "_" + String.valueOf(port);
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html#Signature.
// All pins have to accept the connection
// If in learning mode: Learn new signature algorithm and hash and notify listeners
// Check if hash is equal
// This pin does not accept the connection
// All pin instances passed, the connection is accepted
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// List of all Thing Type UIDs
// Generic thing channel types
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// Component location fields
// Channels and configuration
// The hash code ({@link String#hashCode()}) of the configuration string
// Used to determine if a component has changed.
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// Channel state (value)
// ESH Channel
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
//www.home-assistant.io/docs/mqtt/discovery/
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// Randomly chosen channel "ID"
// Randomly chosen channel "ID"
// Randomly chosen channel "ID"
// Randomly chosen channel "ID"
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// Randomly chosen channel "ID"
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// Randomly chosen channel "ID"
/**
//
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// Randomly chosen channel "ID"
/**
//
/**
//www.eclipse.org/legal/epl-2.0
/**
// Randomly chosen channel "ID"
/**
//
/**
//www.eclipse.org/legal/epl-2.0
/**
// Randomly chosen channel "ID"
// Randomly chosen channel "ID"
// Randomly chosen channel "ID"
/**
// Defines when on the payload_on is sent. Using last (the default) will send any style (brightness, color, etc)
// topics first and then a payload_on to the command_topic. Using first will send the payload_on and then any
// style topics. Using brightness will only send brightness commands instead of the payload_on to turn the light
// on.
// Create three MQTT subscriptions and use this class object as update listener
//
//
//
//
//
//
//
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// Randomly chosen channel "ID"
/**
// We do not support all HomeAssistant quirks
/**
//www.eclipse.org/legal/epl-2.0
/**
// Randomly chosen channel "ID"
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// Randomly chosen channel "ID"
/**
// We do not support all HomeAssistant quirks
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
// Subscribe to the wildcard topics and start receive MQTT retained topics
// Set up a scheduled future that will stop the discovery after the given time
// No timeout -> complete immediately
// Cancel timeout
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// The device attributes, statistics and nodes of this device
// The corresponding ThingUID and callback of this device object
// Unique identifier and topic
/**
/**
/**
// On success, create all nodes and tell the handler about the ready state
// No matter if values have been received or not -> the subscriptions have been performed
/**
/**
/**
/**
/**
/**
// Restores the properties attribute object via the channels configuration.
/**
/**
/**
// Special case: Not all fields were known before
/**
//www.eclipse.org/legal/epl-2.0
/**
// Lower-case enum value names required. Those are identifiers for the MQTT/homie protocol.
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// Homie
// Runtime
// ESH
/**
/**
// On success, create all properties and tell the handler about this node
// No matter if values have been received or not -> the subscriptions have been performed
/**
/**
/**
/**
/**
/**
// Special case: Not all fields were known before
/**
//www.eclipse.org/legal/epl-2.0
/**
// Type has no meaning for ESH yet and is currently purely of textual, descriptive nature
/**
//www.eclipse.org/legal/epl-2.0
/**
// Homie data
// Runtime state
// ESH
/**
// Dummy value
// Dummy value
/**
// On success, create the channel and tell the handler about this property
// No matter if values have been received or not -> the subscriptions have been performed
/**
/**
// Apply formatter to only publish integers
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// Lower-case enum value names required. Those are identifiers for the MQTT/homie protocol.
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
// Remove results that are restored after a restart
/**
//www.eclipse.org/legal/epl-2.0
/**
//www.home-assistant.io/docs/mqtt/discovery/).
/**
/**
// For HomeAssistant we need to subscribe to a wildcard topic, because topics can either be:
// homeassistant/<component>/<node_id>/<object_id>/config OR
// homeassistant/<component>/<object_id>/config.
// We check for the last part to filter all non-config topics out.
// We will of course find multiple of the same unique Thing IDs, for each different component another one.
// Therefore the components are assembled into a list and given to the DiscoveryResult label for the user to
// easily recognise object capabilities.
// Reset the found-component timer.
// We will collect components for the thing label description for another 2 seconds.
// We need to keep track of already found component topics for a specific object_id/node_id
// If we already know about this object component, ignore the discovered topic.
// First remove an already discovered thing with the same ID
// Because we need the new properties map with the updated "components" list
/**
//www.eclipse.org/legal/epl-2.0
/**
//github.com/homieiot/convention).
/**
/**
// Retrieve name and update found discovery
// The name is nice to have, but not required
/**
//www.eclipse.org/legal/epl-2.0
/**
/** This is either a state topic or a trigger topic, depending on {@link #trigger}. */
/**
/** If true publishes messages as retained messages */
/** If true, the state topic will not update a state, but trigger a channel instead. */
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// Immutable channel configuration
/** Channel value **/
// Runtime variables
/**
/**
/**
/**
/**
/**
/**
// String value: Apply transformations
// Is trigger?: Special handling
// Map the string to an ESH command, update the cached value and post the command to the framework
/**
/**
/**
/**
/**
// Cancel timeout
// Cancel timeout
/**
/**
/**
// Formatter: Applied before the channel state value is published to the MQTT broker.
// Outgoing transformations
// Send retained messages if this is a stateful channel
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// Timeout for the entire tree parsing and subscription
/**
/**
/**
// Start up (subscribe to MQTT topics). Limit with a timeout and catch exceptions.
// We do not set the thing to ONLINE here in the AbstractBase, that is the responsibility of a derived
// class.
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
// Stop all MQTT subscriptions
// Remove all state descriptions of this handler
/**
// Incoming value transformations
// Outgoing value transformations
// If some channels could not start up, put the entire thing offline and display the channels
// in question to the user.
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
// Already restored component?
// Unsubscribe from all components and component channel MQTT topics and more importantly
// remove the reference to this handler.
// Ignore any interrupts and timeouts on finish
/**
// Start all known components and channels within the components and put the Thing offline
// if any subscribing failed ( == broker connection lost)
// reduce to one
// haComponents does not need to be synchronised -> the discovery thread is disabled
// sync whenever discoverComponents is started
/**
/**
// sync whenever discoverComponents is started
// Is component already known?
// Don't wait for the future to complete. We are also not interested in failures.
// The component will be replaced in a moment.
// Add channel and group types to the types registry
// Add component to the component map
// Start component / Subscribe to channel topics
// Add channels to Thing
/**
//www.eclipse.org/legal/epl-2.0
/**
/** The timeout per attribute field subscription */
/**
/**
// We have mostly retained messages for Homie. QoS 1 is required.
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
// We first need to unsubscribe old subscriptions if any
/**
/**
/**
/**
/**
// The attribute class is now complete but wasn't before...
/**
// This object holds only a weak reference to connection and scheduler.
// Attribute classes should perform an unsubscribe when a connection is lost.
// We fail the future exceptionally here if that didn't happen so that everyone knows.
// Set field. It is not a reason to fail the future exceptionally if a field could not be set.
// But at least issue a warning to the log.
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
// Handle the conversion case of BigDecimal to Float,Double,Long,Integer and the respective
// primitive types
// Handle the conversion case of String to Float,Double,Long,Integer,BigDecimal and the respective
// primitive types
/**
// Cancel timeout
// Check if there is a manipulation annotation attached to the field
// Add a prefix/suffix to the value
// Split the value if the field is an array. Convert numbers/enums if necessary.
// Convert numbers/enums if necessary
/**
// Cancel timeout
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
// Add all entries to the map, that are not in there yet.
// Remove any entries that are not listed in the 'childIDs'.
// Apply the 'addedAction' function for all new entries.
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// Formular: value*max/100+min
// Calculation need to happen with big decimals to either return a straight integer or a decimal depending on
// the value.
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
/**
// URLConnection.guessContentTypeFromStream(input) is not sufficient to detect all JPEG files
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
// Wait for the EmbeddedBrokerService internal connection to be connected
// If the connection state changes in between -> fail
// Create topic string and config for one example HA component (a Switch)
// Publish component configurations and component states to MQTT
// The DiscoverComponents object calls ComponentDiscovered callbacks.
// In the following implementation we add the found component to the `haComponents` map
// and add the types to the channelTypeProvider, like in the real Thing handler.
// Start the discovery for 100ms. Forced timeout after 300ms.
// No failure expected and one discoverd result
// For the switch component we should have one channel group type and one channel type
// We expect a switch component with an OnOff channel with the initial value UNDEF:
// We should have received the retained value, while subscribing to the channels MQTT state topic.
// Value should be ON now.
/**
//www.eclipse.org/legal/epl-2.0
/**
// The handler is not tested here, so just mock the callback
// A handler mock is required to verify that channel value changes have been received
/**
// Wait for the EmbeddedBrokerService internal connection to be connected
// If the connection state changes in between -> fail
// Add homie node topics
// Add homie property topics
// Create a scheduler
// Receive property value
// Inject a spy'ed property
// Inject a spy'ed node
// Create the node
// Intercept creating a property in the next call and inject a spy'ed property.
// Create a Homie Device object. Because spied Nodes are required for call verification,
// the full Device constructor need to be used and a ChildMap object need to be created manually.
// Intercept creating a node in initialize()->start() and inject a spy'ed node.
// initialize the device, subscribe and wait.
// Check device attributes
// Expect 1 node
// Check node and node attributes
// Expect 2 property
// Check property and property attributes
// Check property and property attributes
// The device->node->property tree is ready. Now subscribe to property values.
// Watch the topic. Publish a retain=false value to MQTT
// Publish a retain=false value to MQTT.
// This test is flaky if the MQTT broker does not get a time to "forget" this non-retained value
// No value is expected to be retained on this MQTT topic
/**
//www.eclipse.org/legal/epl-2.0
/**
// Create a scheduler
/**
//www.eclipse.org/legal/epl-2.0
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
//www.eclipse.org/legal/epl-2.0
/**
// 0%
// 100%
// 50%
// Normal on state
// Custom off state
// Brightness only
// HSB
// rgb -> hsv -> rgb is quite lossy
// Normal on state
// Custom off state
// Brightness only
/**
//www.eclipse.org/legal/epl-2.0
/**
// Mock the thing: We need the thingUID and the bridgeUID
// Return the mocked connection object if the bridge handler is asked for it
// Return the bridge handler if the thing handler asks for it
// We are by default online
// Test process message
/**
//www.eclipse.org/legal/epl-2.0
/**
// Mock the thing: We need the thingUID and the bridgeUID
// Return the mocked connection object if the bridge handler is asked for it
// Return the bridge handler if the thing handler asks for it
// The broker connection bridge is by default online
// Test process message
/**
//www.eclipse.org/legal/epl-2.0
/**
// A completed future is returned for a subscribe call to the attributes
// Return the mocked connection object if the bridge handler is asked for it
// Return the bridge handler if the thing handler asks for it
// We are by default online
// // A completed future is returned for a subscribe call to the attributes
// Prevent a call to accept, that would update our thing.
// Pretend that a device state change arrived.
// Expect a call to the bridge status changed, the start, the propertiesChanged method
// A non completed future is returned for a subscribe call to the attributes
// Prevent a call to accept, that would update our thing.
// A completed future is returned for a subscribe call to the attributes
// Prevent a call to accept, that would update our thing.
// Create mocked homie device tree with one node and one read-only property
// Create mocked homie device tree with one node and one writable property
// Pretend we called start()
// Check non writable property
// Assign old value
// Try to update with new value
// Expect old value and no MQTT publish
// Create a property with the same ID and insert it instead
// Create the node
// Intercept creating a property in the next call and inject a spy'ed property.
// Create mocked homie device tree with one node and one property
// Intercept creating a node in initialize()->start() and inject a spy'ed node.
// Simulate waiting for the delayed processor
// Called for the updated property + for the new channels
/**
//www.eclipse.org/legal/epl-2.0
/**
// Common ThingUID and ChannelUIDs
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// A completed future is returned for a subscribe call to the attributes
// Assign "abc,def" to the
/**
//www.eclipse.org/legal/epl-2.0
/**
// A completed future is returned for a subscribe call to the attributes
// Subscribe now to all fields
// TODO timeout
// Subscribe now to all fields
// We expect 10 subscriptions now
// Assign each field the value of the test annotation via the processMessage method
// A non-annotated field means a Mockito injected field.
// Ignore that and complete the corresponding future.
// Simulate a received MQTT value and use the annotation data as input.
// Check each value if the assignment worked
// Consider if a mapToField was used that would manipulate the received value
/**
//www.eclipse.org/legal/epl-2.0
/**
// Simulate a received MQTT message
// No timeout should happen
/**
//www.eclipse.org/legal/epl-2.0
/**
// Test with command
// Test with string, representing the command
// Test with custom string, setup in the constructor
// Test with command
// Test with string, representing the command
// Test with custom string, setup in the constructor
// Test with command
// Test with custom string
/**
//www.eclipse.org/legal/epl-2.0
/**
//123.1.2.3";
// We do not expect a status change, because brokerAdded will do nothing with invalid connections.
// First connecting then connected and another connected after the future completes
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// Assume it is a real handler and not a mock as defined above
/**
// First we expect a CONNECTING state and then a CONNECTED unique state change
// First we expect a CONNECTING state and then a CONNECTED state change
// (and other CONNECTED after the future completes)
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// First we expect a CONNECTING state and then a DISCONNECTED state change
/**
//www.eclipse.org/legal/epl-2.0
/**
// Simulate receiving
// Simulate receiving
// No observed broker handler, because no connection created yet within the handler
// Init handler -> create connection
// Simulate receiving
// Simulate receiving
/**
//www.eclipse.org/legal/epl-2.0
/**
//123.123.123.123", null, false, null));
//123.123.123.123", null, true, null));
// Setting the MqttService will enable the background scanner
// We expect 3 discoveries. An embedded thing, a textual configured one, a non-textual one
// Add another thing
//123.123.123.123", null, false, null));
/**
//www.eclipse.org/legal/epl-2.0
/**
// Load test certificate
// Test if X509Certificate.getEncoded() is called if it is a certificate pin and
// X509Certificate.getPublicKey().getEncoded() is called if it is a public key pinning.
// Mock a certificate
// Test if X509Certificate.getEncoded() is called if it is a certificate pin and
// X509Certificate.getPublicKey().getEncoded() is called if it is a public key pinning.
// Mock a certificate
/**
// Add a certificate pin in learning mode to a trust manager
// Mock a callback
// Mock a certificate
// Perform an SSL certificate check
// After a first connect learning mode should turn into check mode. It should have learned the hash data and
// message digest, returned by PinTrustManager.getMessageDigestForSigAlg().
// We expect callbacks
// Add a certificate pin in checking mode to a trust manager
// Mock a callback
// Mock a certificate
// Perform an SSL certificate check
// After a first connect learning mode should turn into check mode
// We expect callbacks
/**
//www.eclipse.org/legal/epl-2.0
/**
// List of all Thing Type UIDs
// List of all Channel ids
// Custom Properties
/**
//www.eclipse.org/legal/epl-2.0
/**
/** timeout for requests to the NTP server */
/** for logging purposes */
/** for publish purposes */
/** NTP host */
/** NTP server port */
/** refresh interval */
/** NTP refresh frequency */
/** Timezone */
/** Locale */
/** NTP refresh counter */
/** NTP system time delta */
// No specific commands tied to this, but we will trigger an update
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
// force closing of the socket
/**
//www.eclipse.org/legal/epl-2.0
/**
// No bundle in ESH is exporting a package from which we can use item types
// as constants, so we will use String.
// Initializing a new local server on this port
// Starting the local server
/*
/*
// Stopping the local time server
// Set the default time zone and locale to their initial value.
/*
/*
// Initialize with configuration with no time zone property set.
// Initialize with configuration with no time zone property set.
//github.com/eclipse/smarthome/issues/5224")
// Initialize with configuration with no time zone property set.
// Initialize with configuration with no property for formatting set.
// Empty string
// There are 2 tests which require wrong hostnames.
// Wait for the NTP thing to be added to the ManagedThingProvider.
// Wait for the item , linked to the NTP thing to be added to the
// ManagedThingProvider.
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
// two DS2438 (first THS, second TV), DS18B20, DS2413
// two DS2438 (first TH, second TV), DS18B20, DS2413
/**
//www.eclipse.org/legal/epl-2.0
/**
// List of all Thing Type UIDs
// DEPRECATED
// List of all config options
// list of all properties
// List of all channel ids
// Maps for Discovery
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// remove discovery service, if bridge handler is removed
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
// saturation vapor pressure in kg/(m s^2)
// absolute humidity in kg/m^3
/**
// dewpoint in °C
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// determine subsensorType
/**
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// find all valid sensors
// scan hub sub-directories
// add found sensor to list
// remove duplicates
// make discovery results
/**
//www.eclipse.org/legal/epl-2.0
/**
// temperature channel
// use DS18B20 for temperature
// use standard temperature channel
// always use HIH-4000 on ElabNet sensors.
// standard channels on all AMS/BMS
// light/current sensor
// additional sensors on AMS
// default 10ms
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// add sensors
// temperature channel (present on all devices)
// supply voltage (all sensors, except DS1923)
// analog channel
// DS1923 has fixed humidity sensor on-board
// DS2438 can have different sensors
// use voltage channel as default
/**
//www.eclipse.org/legal/epl-2.0
/**
// override default of 300s from base thing handler if no user-defined value is present
/**
//www.eclipse.org/legal/epl-2.0
/**
// sensor configuration
// override default of 300s from base thing handler if no user-defined value is present
/**
//www.eclipse.org/legal/epl-2.0
/**
// add sensors
// humidity sensor
// pressure sensor
// light sensor
/**
//www.eclipse.org/legal/epl-2.0
/**
// override default of 300s from base thing handler if no user-defined value is present
/**
//www.eclipse.org/legal/epl-2.0
/**
// set by implementation when bridge is ready
// thing update
/**
// refresh thing channels
// update thing properties (only one per refresh cycle)
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// in ms
// check if all required properties are present. update if not
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// in ms
// makes it possible for unit tests to differentiate direct update and
// postponed update through the owserverConnection:
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// reset to 0 after successful request
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
// answer to value write is always empty
/**
// open socket & set timeout to 3000ms
// socket already open, clear input buffer
/**
/**
/**
/**
/**
// nothing to read
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// 6x4 bytes
/**
/**
// header
// payload
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
// already null terminated strings skip the termination character
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// internal/temporary types, DS2409 (MicroLAN Coupler), DS2431 (EEPROM)
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// needed to determine initialization is finished
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// needed to determine initialization is finished
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// wait for the server thread to start
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// Bridge
// Thing
// List of all properties
// Channel group types
// List of all channel groups
// List of all channels
// List of all configuration
/**
//www.eclipse.org/legal/epl-2.0
/**
// supported languages (see https://openweathermap.org/current#multi)
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// Current weather data (see https://openweathermap.org/current)
//api.openweathermap.org/data/2.5/weather";
// 5 day / 3 hour forecast (see https://openweathermap.org/forecast5)
//api.openweathermap.org/data/2.5/forecast";
// 16 day / daily forecast (see https://openweathermap.org/forecast16)
//api.openweathermap.org/data/2.5/forecast/daily";
// UV Index (see https://openweathermap.org/api/uvi)
//api.openweathermap.org/data/2.5/uvi";
//api.openweathermap.org/data/2.5/uvi/forecast";
// Weather icons (see https://openweathermap.org/weather-conditions)
//openweathermap.org/img/w/%s.png";
/**
/**
/**
/**
/**
/**
// API key (see http://openweathermap.org/appid)
// Units format (see https://openweathermap.org/current#data)
// By geographic coordinates (see https://openweathermap.org/current#geo)
// Multilingual support (see https://openweathermap.org/current#multi)
// TODO disable refresh job temporarily (see https://openweathermap.org/appid#Accesslimitation)
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// register discovery service
// remove discovery service, if bridge handler is removed
/**
//www.eclipse.org/legal/epl-2.0
/**
// keeps track of the parsed location
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// keeps track of the parsed config
/**
//www.eclipse.org/legal/epl-2.0
/**
// keeps track of the parsed count
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// keeps track of the parsed counts
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// TODO track and limit folder size
// TODO support user specific folder
/**
/**
/**
// return get(key);
/**
/**
/**
/**
/**
/**
/**
/**
// TODO: store / cache file internally for faster operations
/**
// exclude file names starting with a dot
/**
// Now we need to zero pad it if you actually want the full 32 chars
// should not happen
/**
//www.eclipse.org/legal/epl-2.0
/**
// List of all Thing Type UIDs
// List of all Channel ids
// Config parameters
/**
//www.eclipse.org/legal/epl-2.0
/**
// parse ports and if the port is found, initialize the reader
// initialize serial port
// activate the DATA_AVAILABLE notifier
// we get here if data has been received
// read data from serial device
// add wait states around reading the stream, so that interrupted transmissions are merged
// ignore interruption
// we do not have any state channels, so nothing to do here
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// public DateTime getStartTime() {
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// in case the audioStream is null, this should be interpreted as a request to end any currently playing
// stream.
// it is an external URL, the speaker can access it itself and play it.
// we serve it on our own HTTP server and treat it as a notification
// Note that we have to pass a FixedLengthAudioStream, since Sonos does multiple concurrent requests to
// the AudioServlet, so a one time serving won't work.
// Instead of throwing an exception, we could ourselves try to wrap it into a
// FixedLengthAudioStream, but this might be dangerous as we have no clue, how much data to expect from
// the stream.
/**
//www.eclipse.org/legal/epl-2.0
/**
// List of all Thing Type UIDs
// Column (:) is not used for PLAY:1, PLAY:3, PLAY:5 and CONNECT:AMP because of
// ThingTypeUID and device pairing name restrictions
// List of all Channel ids
// List of properties
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// optional OPML URL that can be configured through configuration admin
// url (scheme+server+port) to use for playing notification sounds
// register the speaker as an audio sink
// we do not use SSL as it can cause certificate validation issues.
//" + ipAddress + ":" + port;
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
//purl.org/dc/elements/1.1/\" "
/**
/**
/**
/**
// This should never happen - we're not performing I/O!
// This should never happen - we're not performing I/O!
// This should never happen - we're not performing I/O!
// This should never happen - we're not performing I/O!
// This should never happen - we're not performing I/O!
// This should never happen - we're not performing I/O!
// Maintain a set of elements about which it is unuseful to complain about.
// This list will be initialized on the first failure case
// shouldn't be used outside of this package.
// The resource description is needed for playing favorites on pandora
// shouldn't be used outside of this package.
// shouldn't be used outside of this package.
// <opml version="1">
// <head>
// <status>200</status>
//
// </head>
// <body>
// <outline type="text" text="Q-Music 103.3" guide_id="s2398" key="station"
// image="http://radiotime-logos.s3.amazonaws.com/s87683q.png" preset_id="s2398"/>
// <outline type="text" text="Bjorn Verhoeven" guide_id="p257265" seconds_remaining="2230" duration="7200"
// key="show"/>
// <outline type="text" text="Top 40-Pop"/>
// <outline type="text" text="37m remaining"/>
// <outline type="object" text="NowPlaying">
// <nowplaying>
// <logo>http://radiotime-logos.s3.amazonaws.com/s87683.png</logo>
// <twitter_id />
// </nowplaying>
// </outline>
// </body>
// </opml>
// private String logo;
/*
//192.168.1.1/Storage4/Sonos%20Music/Queens%20Of%20The%20Stone%20Age/Lullabies%20To%20Paralyze/Queens%20Of%20The%20Stone%20Age%20-%20Lullabies%20To%20Paralyze%20-%2012%20-%20Broken%20Box.wma"
//purl.org/dc/elements/1.1/&quot; xmlns:upnp=&quot;urn:schemas-upnp-org:metadata-1-0/upnp/&quot; xmlns:r=&quot;urn:schemas-rinconnetworks-com:metadata-1-0/&quot; xmlns=&quot;urn:schemas-upnp-org:metadata-1-0/DIDL-Lite/&quot;&gt;&lt;item id=&quot;-1&quot; parentID=&quot;-1&quot; restricted=&quot;true&quot;&gt;&lt;res protocolInfo=&quot;x-file-cifs:*:audio/x-ms-wma:*&quot; duration=&quot;0:03:02&quot;&gt;x-file-cifs://192.168.1.1/Storage4/Sonos%20Music/Queens%20Of%20The%20Stone%20Age/Lullabies%20To%20Paralyze/Queens%20Of%20The%20Stone%20Age%20-%20Lullabies%20To%20Paralyze%20-%2012%20-%20Broken%20Box.wma&lt;/res&gt;&lt;r:streamContent&gt;&lt;/r:streamContent&gt;&lt;dc:title&gt;Broken Box&lt;/dc:title&gt;&lt;upnp:class&gt;object.item.audioItem.musicTrack&lt;/upnp:class&gt;&lt;dc:creator&gt;Queens Of The Stone Age&lt;/dc:creator&gt;&lt;upnp:album&gt;Lullabies To Paralyze&lt;/upnp:album&gt;&lt;r:albumArtist&gt;Queens Of The Stone Age&lt;/r:albumArtist&gt;&lt;/item&gt;&lt;/DIDL-Lite&gt;"
//192.168.1.1/Storage4/Sonos%20Music/Queens%20Of%20The%20Stone%20Age/Lullabies%20To%20Paralyze/Queens%20Of%20The%20Stone%20Age%20-%20Lullabies%20To%20Paralyze%20-%2013%20-%20&apos;&apos;You%20Got%20A%20Killer%20Scene%20There,%20Man...&apos;&apos;.wma"
//purl.org/dc/elements/1.1/&quot; xmlns:upnp=&quot;urn:schemas-upnp-org:metadata-1-0/upnp/&quot; xmlns:r=&quot;urn:schemas-rinconnetworks-com:metadata-1-0/&quot; xmlns=&quot;urn:schemas-upnp-org:metadata-1-0/DIDL-Lite/&quot;&gt;&lt;item id=&quot;-1&quot; parentID=&quot;-1&quot; restricted=&quot;true&quot;&gt;&lt;res protocolInfo=&quot;x-file-cifs:*:audio/x-ms-wma:*&quot; duration=&quot;0:04:56&quot;&gt;x-file-cifs://192.168.1.1/Storage4/Sonos%20Music/Queens%20Of%20The%20Stone%20Age/Lullabies%20To%20Paralyze/Queens%20Of%20The%20Stone%20Age%20-%20Lullabies%20To%20Paralyze%20-%2013%20-%20&amp;apos;&amp;apos;You%20Got%20A%20Killer%20Scene%20There,%20Man...&amp;apos;&amp;apos;.wma&lt;/res&gt;&lt;dc:title&gt;&amp;apos;&amp;apos;You Got A Killer Scene There, Man...&amp;apos;&amp;apos;&lt;/dc:title&gt;&lt;upnp:class&gt;object.item.audioItem.musicTrack&lt;/upnp:class&gt;&lt;dc:creator&gt;Queens Of The Stone Age&lt;/dc:creator&gt;&lt;upnp:album&gt;Lullabies To Paralyze&lt;/upnp:album&gt;&lt;r:albumArtist&gt;Queens Of The Stone Age&lt;/r:albumArtist&gt;&lt;/item&gt;&lt;/DIDL-Lite&gt;"
//purl.org/dc/elements/1.1/&quot; xmlns:upnp=&quot;urn:schemas-upnp-org:metadata-1-0/upnp/&quot; xmlns:r=&quot;urn:schemas-rinconnetworks-com:metadata-1-0/&quot; xmlns=&quot;urn:schemas-upnp-org:metadata-1-0/DIDL-Lite/&quot;&gt;&lt;item id=&quot;A:ALBUMARTIST/Queens%20Of%20The%20Stone%20Age&quot; parentID=&quot;A:ALBUMARTIST&quot; restricted=&quot;true&quot;&gt;&lt;dc:title&gt;Queens Of The Stone Age&lt;/dc:title&gt;&lt;upnp:class&gt;object.container&lt;/upnp:class&gt;&lt;desc id=&quot;cdudn&quot; nameSpace=&quot;urn:schemas-rinconnetworks-com:metadata-1-0/&quot;&gt;RINCON_AssociatedZPUDN&lt;/desc&gt;&lt;/item&gt;&lt;/DIDL-Lite&gt;"
/*
// this means that localName isn't defined in EventType, which is expected for some elements
// unknown element
// All services are of the form <services Id="value" Name="value">...</Service>
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// ignore and use default label
// Try with the model name all in uppercase
// In case a new "unknown" Sonos player is discovered a generic ThingTypeUID will be used
/**
//www.eclipse.org/legal/epl-2.0
/**
//opml.radiotime.com/Tune.ashx";
/**
/**
/**
/**
/**
// First check if the Sonos zone is set in the UPnP service registry
// If not, set the thing state to OFFLINE and wait for the next poll
// Check if the Sonos zone can be joined
// If not, set the thing state to OFFLINE and do nothing else
// we change the type, so we might need a different handler -> let's finish
// Rewind and Fast Forward are currently not implemented by the binding
// pre-process some variables, eg XML processing
// Update the transport state after the update of the media information
// to not break the notification mechanism
// Translate AVTransportURI/AVTransportURIMetaData to CurrentURI/CurrentURIMetaData
// for a compatibility with the result of the action GetMediaInfo
// update the appropriate channel
// Update coordinator after a change is made to the grouping of Sonos players
// Update state and control channels for the group members with the coordinator values
// Update shuffle and repeat channels for the group members with the coordinator values
// service ContentDirectoy
// service ContentDirectoy
// For favorite radios, we should have checked the state variable named RadioFavoritesUpdateID
// Due to a bug in the data type definition of this state variable, it is not set.
// As a workaround, we check the state variable named ContainerUpdateIDs.
// service ContentDirectoy
// We download the cover art in a different thread to not delay the other operations
/**
/**
// Set up GENA Subscriptions
// Set up GENA Subscriptions
// use default if not specified
// if currentURI == null, we do nothing
// Reset data
// if (currentURI.contains(GROUP_URI)) we do nothing, because
// The Sonos is a slave member of a group
// The media information will be updated by the coordinator
// Notification of group change occurs later, so we just check the URI
// Radio stream (tune-in)
// radio name should be first field
// isPlayingRadio(currentURI) is true for Google Play Music radio or Apple Music radio
/**
// Execute this action synchronously
/**
/**
// we are streaming music, like tune-in radio or Google Play Music radio
// we are a slave to some coordinator
// we are streaming from the Line In connection
// we are playing something that sits in the queue
// we are playing a real 'saved' playlist
// we are playing some other sort of
// 'container' - we will save that to a
// playlist for our convenience
// save the playlist
// get all the playlists and a ref to our
// saved list
/**
// put settings back
// check if we have a playlist to deal with
/**
/**
// At least one "ZoneName" differs so we have an AdHoc group
/**
/**
/**
/**
// if no value is set we use the current volume instead
/**
/**
// check if player has a line-in connected
// stop whatever is currently playing
// set the URI
// take the system off mute
// start jammin'
/**
// If the group topology was not yet received, return at least the current Sonos zone
/**
// find the nearest alarm - take the current time from the Sonos system,
// not the system where we are running
// Set the Alarm
// check if sourcePlayer has a line-in connected
// first remove this player from its own group if any
// add all other players to this new group
// set the URI of the group to the line-in
/**
//host/folder/filename.mp3
// stop whatever is currently playing
// clear any tracks which are pending in the queue
// add the new track we want to play to the queue
// The url will be prefixed with x-file-cifs if it is NOT a http URL
// default to file based url
// set the current playlist to our new queue
// take the system off mute
// start jammin'
/**
//host/folder/filename.mp3
/**
//host/folder/filename.mp3
/**
//host/folder/filename.mp3
/**
//host/folder/filename.mp3
/**
//host/folder/filename.mp3
/**
//host/folder/filename.mp3
/**
// check Sonos state events to determine the end of the notification sound
/**
// If range input is incorrect, remove the first song by default
// set the current playlist to our new queue
// take the system off mute
// start jammin'
// search for the appropriate radio based on its name (title)
// set the URI of the group coordinator
// search for the TuneIn music service based on its name
// set the URI of the group coordinator
// It is a comma separated list of service types (integers) in the same order as the services
// declaration in "AvailableServiceDescriptorList" except that there is no service type for the
// TuneIn service
// Add the service type integer value from "AvailableServiceTypeList" to each service
// except TuneIn
// Use 65031 as service type value for TuneIn service
/**
// search for the appropriate favorite based on its name (title)
// set the URI of the group coordinator
/**
// seek the track - warning, we do not check if the tracknumber falls in the boundary of the queue
// take the system off mute
// start jammin'
// search for the appropriate play list based on its name (title)
// set the URI of the group coordinator
/*
/**
//www.eclipse.org/legal/epl-2.0
/**
// List of all Thing Type UIDs
// List of thing parameters names
// List of all Channel ids
// Used for Discovery service
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// Start the status updater
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
//(\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}):(\\d+)([^<]*)");
// String scalar_host = matcher.group(0);
/**
//www.eclipse.org/legal/epl-2.0
/**
// if there is an old web socket then clean up and destroy
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
//%s:%d/%s", host, port, path)).normalize();
//%s:%d/%s", host, port, path);
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// List of all Thing Type UIDs
// List of all Gateway Configuration Properties
// Not yet used - included for future support
// List of all Channel IDs
// IPSO Objects
/**
//www.eclipse.org/legal/epl-2.0
/**
// keeps track of the current state for handling of increase/decrease
/**
//www.eclipse.org/legal/epl-2.0
/**
// there are no channels on the gateway yet
// older firmware - fall back to authentication with security code
// in this case the Thing configuration will not be persisted
// show warning only if we already have set the firmware property
// Running async operation to retrieve new <'identity','key'> pair
//" + configuration.host + ":" + configuration.port + "/" + DEVICES;
//" + configuration.host + ":" + configuration.port + "/" + GATEWAY + "/"
// schedule a new scan every minute
/**
//" + configuration.host + ":" + configuration.port + "/15011/9063";
// seems we ran in a timeout, which potentially also happens
/**
/**
/**
// we are reusing our coap client and merely temporarily set a gateway info to call
// restore root URI
// we are reusing our coap client and merely temporarily set a sub-URI to call
// restore root URI
// are we still connected at all?
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// step size for increase/decrease commands
// keeps track of the current state for handling of increase/decrease
// if we are turned off, we do not set any brightness value
// color lights do not have brightness channel
// PaperUI sends PercentType on color channel when changing Brightness
// increase or decrease only the brightness, but keep color
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// keeps track of the current state for handling of increase/decrease
/**
//www.eclipse.org/legal/epl-2.0
/**
// the unique instance id of the device
// used to check whether we have already been disposed when receiving data asynchronously
// we are offline and lost our observe relation - let's try to establish the connection in 10 seconds again
// the status might have changed because the bridge is completely reconfigured - so we need to re-establish
// our CoAP connection as well
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
//github.com/eclipse/californium/pull/452#issuecomment-341703735
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// Tradfri uses the CIE color space (see https://en.wikipedia.org/wiki/CIE_1931_color_space),
// which uses x,y-coordinates.
// Its own app comes with 3 predefined color temperature settings (0,1,2), which have those values:
/**
/**
/**
/**
/**
/**
// we calculate a value that is between preset 0 and 1
// we calculate a value that is between preset 1 and 2
/**
/**
/**
// is it between preset 1 and 2?
// is it between preset 0 and 1?
// hint: in the above line we calculate 2.0 to PRESET_X[1] because
// some bulbs send slighty higher x values for this preset (maybe rounding errors?)
// cooler than coolest preset (full color bulbs)
// warmer than warmest preset (full color bulbs)
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// default port
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// Color temperature light:
// We do not always receive a COLOR attribute, even the light supports it - but the gateway does not
// seem to have this information, if the bulb is unreachable. We therefore also check against
// concrete model names.
// Color light:
// As the protocol does not distinguishes between color and full-color lights,
// we check if the "CWS" identifier is given in the model name
//
// Smart plug
// Remote control and wireless dimmer
// As protocol does not distinguishes between remote control and wireless dimmer,
// we check for the whole model name
// Motion sensor
// we didn't identify any device, so let's quit
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// XY color coordinates plus brightness is needed for color calculation
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// restore original value
// restore original value
/**
//www.eclipse.org/legal/epl-2.0
/**
// We do not always receive a COLOR = "5706" attribute, even the light supports it - but the gateway does not
// seem to have this information, if the bulb is unreachable.
/**
//www.eclipse.org/legal/epl-2.0
/**
// convert from HSBType
// convert the result again based on the XY values
// coldest color temperature -> preset 1
// middle color temperature -> preset 2
// warmest color temperature -> preset 3
// 30 percent must be between preset 1 and 2
// 70 percent must be between preset 2 and 3
// preset 1 -> coldest -> 0 percent
// preset 2 -> middle -> 50 percent
// preset 3 -> warmest -> 100 percent
// preset 3 -> warmest -> 100 percent
// preset 3 -> warmest -> 100 percent
// mixed case 1
// mixed case 1
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// List all Thing Type UIDs, related to the WeatherUnderground Binding
// Channel configuration Properties
// Bridge config properties
/**
//www.eclipse.org/legal/epl-2.0
/**
//api.wunderground.com/api/%APIKEY%/";
// Check if an api key has been provided during the bridge creation
/**
// Check if the provided api key is valid for use with the weatherunderground service
// Run the HTTP request and get the JSON response from Weather Underground
// Catch Illegal character in path at index XX: http://api.wunderground.com/...
// Map the JSON response to an object
// The API key provided is valid
// Update the thing status
// not needed
/**
//www.eclipse.org/legal/epl-2.0
/**
//api.wunderground.com/api/%APIKEY%/%FEATURES%/%SETTINGS%/q/%QUERY%.json";
// Codes from https://www.wunderground.com/weather/api/d/docs?d=language-support
// Chinese - Simplified => CN
// Low German => ND
// Mandinka => GM
// Plautdietsch => GN
// Swiss => CH
// Yiddish - transliterated => JI
// British English
// French Canadian
/**
// Request new weather data to the Weather Underground service
// Update all channels from the updated weather data
/**
// Update the channel
/**
// Request new weather data to the Weather Underground service
// If language is not set in the configuration, you try deducing it from the system language
// Run the HTTP request and get the JSON response from Weather Underground
// catch Illegal character in path at index XX: http://api.wunderground.com/...
// Map the JSON response to an object
// Update the thing status
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/* We override this method to allow a call from the thing handler factory */
/* We override this method to allow a call from the thing handler factory */
/**
//www.eclipse.org/legal/epl-2.0
/**
// Commented members indicate properties returned by the API not used by the binding
// private Object image;
// private Location display_location;
// private Object estimated;
// private String observation_time;
// private String observation_time_rfc822;
// private String local_time_rfc822;
// private String local_epoch;
// private String local_tz_short;
// private String local_tz_long;
// private String local_tz_offset;
// private String ;temperature_string;
// private String wind_string;
// private String dewpoint_string;
// private String heat_index_string;
// private String windchill_string;
// private String feelslike_string;
// private String precip_1hr_string;
// private String precip_today_string;
// private String forecast_url;
// private String history_url;
// private String ob_url;
// private String nowcast;
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
// We check that the index is not negative
/**
// We check that the index is not negative
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// Commented members indicate properties returned by the API not used by the binding
// private Object txt_forecast;
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// Commented members indicate properties returned by the API not used by the binding
// private String skyicon;
// private ForecastPrecipitation qpf_day;
// private ForecastPrecipitation qpf_night;
// private ForecastPrecipitation snow_day;
// private ForecastPrecipitation snow_night;
// private Integer minhumidity;
// private Integer maxhumidity;
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
// Commented members indicate properties returned by the API not used by the binding
// private String pretty;
// private Integer day;
// private Integer month;
// private Integer year;
// private Integer yday;
// private Integer hour;
// private String min;
// private Integer sec;
// private String isdst;
// private String monthname;
// private String monthname_short;
// private String weekday_short;
// private String weekday;
// private String ampm;
// private String tz_short;
// private String tz_long;
/**
//www.eclipse.org/legal/epl-2.0
/**
// Commented members indicate properties returned by the API not used by the binding
// private Object nearby_weather_stations;
/**
//www.eclipse.org/legal/epl-2.0
/**
// Commented members indicate properties returned by the API not used by the binding
// private String version;
// private String termsofService;
// private Object features;
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// List of all Thing Type UIDs
// List of all Channel ids
// List of thing configuration properties
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// Not needed, all commands are handled in the {@link WemoLightHandler}
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//schemas.xmlsoap.org/soap/envelope/\" s:encodingStyle=\"http://schemas.xmlsoap.org/soap/encoding/\">"
// if command.equals(OnOffType.OFF) we do nothing because WeMo Coffee Maker cannot be switched off
// remotely
// We can subscribe to GENA events, but there is no usefull response right now.
/**
//schemas.xmlsoap.org/soap/envelope/\" s:encodingStyle=\"http://schemas.xmlsoap.org/soap/encoding/\">"
// Due to Belkins bad response formatting, we need to run this twice.
// iterate the attributes
// convert s to ms
/**
//www.eclipse.org/legal/epl-2.0
/**
// protected static final int SUBSCRIPTION_DURATION = WemoBindingConstants.SUBSCRIPTION_DURATION;
/**
//schemas.xmlsoap.org/soap/envelope/\" s:encodingStyle=\"http://schemas.xmlsoap.org/soap/encoding/\">"
// convert s to ms
// natively given in W
// recalculate
// mW to W
// recalculate mW-mins to Wh
// recalculate mW-mins to Wh
// recalculate
// mW to W
/**
//schemas.xmlsoap.org/soap/envelope/\" s:encodingStyle=\"http://schemas.xmlsoap.org/soap/encoding/\">"
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
// initialize() is only called if the required parameter 'deviceID' is available
//schemas.xmlsoap.org/soap/envelope/\" s:encodingStyle=\"http://schemas.xmlsoap.org/soap/encoding/\">"
/**
//schemas.xmlsoap.org/soap/envelope/\" s:encodingStyle=\"http://schemas.xmlsoap.org/soap/encoding/\">"
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//schemas.xmlsoap.org/soap/envelope/\" s:encodingStyle=\"http://schemas.xmlsoap.org/soap/encoding/\">"
/**
//schemas.xmlsoap.org/soap/envelope/\" s:encodingStyle=\"http://schemas.xmlsoap.org/soap/encoding/\">"
// Due to Belkins bad response formatting, we need to run this twice.
// iterate the attributes
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// ignore and use default label
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
//schemas.xmlsoap.org/soap/envelope/\" s:encodingStyle=\"http://schemas.xmlsoap.org/soap/encoding/\">"
// check if there are already paired devices with WeMo Link
// Build parser for received <DeviceList>
// iterate the devices
/**
//www.eclipse.org/legal/epl-2.0
/**
// throw new IllegalStateException("Could not call WeMo", e);
/**
//www.eclipse.org/legal/epl-2.0
/**
// UpnP service information
/**
//www.eclipse.org/legal/epl-2.0
/**
//wemo"), null, null),
//1.2.3.4/")),
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// Thing information
// UPnP information
// The device is registered as UPnP Device after the initialization, this will ensure that the polling job will
// not start
// Binary state 0 is equivalent to OFF
// The device is registered as UPnP Device after the initialization, this will ensure that the polling job will
// not start
/**
//www.eclipse.org/legal/epl-2.0
/**
/** Used for all tests, where expected value is time in seconds **/
/** Represents a state parameter, where 1 stays for ON and 0 stays for OFF **/
/** Represents power in Wats **/
// Example string looks like "1|1427230660|4702|25528|82406|1209600|39|40880|15620649|54450534.000000|8000"
/**
//www.eclipse.org/legal/epl-2.0
/**
// Command ON for this channel sends the following data to the device
// ON is equal to brightness value of 255
// Set brightness value to 20 Percent
// 20 Percent brightness is equal to a brightness value of 51
// The value is increased by 5 Percents by default
// 5 Percents brightness is equal to a brightness value of 12
// The value can not be decreased below 0
// Command ON for this channel sends the following data to the device
// The device is registered as UPnP Device after the initialization, this will ensure that the polling job will
// not start
// we might catch multiple calls. iterate through them to find the one matching our settings
/**
//www.eclipse.org/legal/epl-2.0
/**
// Specific Thing information
// Specific UpnP service information
// The Device is registered as UPnP Device after the initialization, this will ensure that the polling job will
// not start
// Binary state 0 is equivalent to OFF
// The Device is registered as UPnP Device after the initialization, this will ensure that the polling job will
// not start
/**
//www.eclipse.org/legal/epl-2.0
/**
// Thing information
// UPnP service information
/**
//www.eclipse.org/legal/epl-2.0
/**
// This port is included in the run configuration
// Thing information
// UPnP Device information
//127.0.0.1:" + ORG_OSGI_SERVICE_HTTP_PORT;
// StorageService is required from the ManagedThingProvider
// Mock the UPnP Service, that is required from the UPnP IO Service
// UPnP IO Service is required from the WemoDiscoveryService and WemoHandlerFactory
// Use the same URI for control, event subscription and device description
/**
//www.eclipse.org/legal/epl-2.0
/**
// constants used to construct extension IDs
// extension types from marketplace
// extension package formats from marketplace
// we mark them as transient, so that they are not serialized through GSON
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// this is for backwards compatibility; if we don't see BUNDLE_FILE but
// we do see this, we migrate its contents to BUNDLE_FILE
// extension types supported by this handler
// we support only certain extension types, and only as pure OSGi bundles
// we do not have such a bundle, so let's remove it from our internal map
// ignore and just return an empty map
/**
//www.eclipse.org/legal/epl-2.0
/**
//
//
//
//
/**
/**
/**
/**
/**
// increased visibility for unit tests
// checks for the existence of any xml element
// checks for the existence of
// some
// invalid elements
// configured package type inclusion settings, keyed by package typeName
// workaround for bug https://bugs.eclipse.org/bugs/show_bug.cgi?id=512493
/**
//www.eclipse.org/legal/epl-2.0
/**
//marketplace.eclipse.org/taxonomy/term/4988%2C4396/api/p?client=org.eclipse.smarthome";
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// ignore what we do not know
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// we support only rule templates in JSON format so far
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
//marketplace.eclipse.org/marketplace-client-intro";
//m.eclipse.org/marketplace-client-intro?extensionId=3305842";
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
// get available mixers
// needs to be a multiple of 4 and 6, to support both 16 and 24 bit stereo
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// we accept anything that is WAVE with signed PCM codec
// we accept any stream
// we use a cache of the value as the script execution is pretty slow
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
// In bytes
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// private NetworkServerTls networkServerTls; //TODO wait for NetworkServerTls implementation
// TODO wait for NetworkServerTls implementation
// @Reference(cardinality = ReferenceCardinality.MANDATORY)
// public void setNetworkServerTls(NetworkServerTls networkServerTls) {
// this.networkServerTls = networkServerTls;
// }
// Create MqttBrokerConnection
// Close the existing connection and remove it from the service
// Start embedded server
// Clean shutdown: Stop connection, wait for process to finish, shutdown server
// Do not allow this connection to be removed. Add it again.
// Host and port
// with SSL_PORT_PROPERTY_NAME set, netty tries to evaluate the SSL context and shuts down immediately.
// properties.put(BrokerConstants.SSL_PORT_PROPERTY_NAME, BrokerConstants.DISABLED_PORT_BIND);
// Authentication
// Persistence: If not set, an in-memory database is used.
// We may provide ACL functionality at some point as well
// Secure connection support
// TODO wait for NetworkServerTls implementation
// try {
// final SSLContext sslContext = networkServerTls.createSSLContext("mqtt");
// server.startServer(new MemoryConfig(properties), null, () -> sslContext, authentificator, authorizer);
// } catch (GeneralSecurityException | IOException e) {
// logger.error("No SSL available", e);
// }
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
//Dummy to make moquette happy. Will not be used
/**
//www.eclipse.org/legal/epl-2.0
//Dummy to make moquette happy. Will not be used
/**
//www.eclipse.org/legal/epl-2.0
//Dummy to make moquette happy. Will not be used
/**
//www.eclipse.org/legal/epl-2.0
//Dummy to make moquette happy. Will not be used
/**
//www.eclipse.org/legal/epl-2.0
//Dummy to make moquette happy. Will not be used
/**
//www.eclipse.org/legal/epl-2.0
//Dummy to make moquette happy. Will not be used
/**
//www.eclipse.org/legal/epl-2.0
//Dummy to make moquette happy. Will not be used
/**
//www.eclipse.org/legal/epl-2.0
//Dummy to make moquette happy. Will not be used
/**
//www.eclipse.org/legal/epl-2.0
//Dummy to make moquette happy. Will not be used
/**
//www.eclipse.org/legal/epl-2.0
//Dummy to make moquette happy. Will not be used
/**
//www.eclipse.org/legal/epl-2.0
//Dummy to make moquette happy. Will not be used
/**
//www.eclipse.org/legal/epl-2.0
//Dummy to make moquette happy. Will not be used
/**
//www.eclipse.org/legal/epl-2.0
// Dummy to make moquette happy. Will not be used
/**
//www.eclipse.org/legal/epl-2.0
//Dummy to make moquette happy. Will not be used
/**
//www.eclipse.org/legal/epl-2.0
/**
// Create an accept all trust manager for a client SSLContext
// TODO: wait for NetworkServerTls implementation to enable secure connections as well
// @Mock
// NetworkServerTls networkServerTls;
// subject.setNetworkServerTls(networkServerTls);
// SSLContext c = SSLContext.getInstance("TLS");
// c.init(null, new X509ExtendedTrustManager[] { new X509ExtendedTrustManagerEx() }, new SecureRandom());
// when(networkServerTls.createSSLContext(anyObject())).thenReturn(c);
// Start the connection and wait until timeout or connected callback returns.
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// in case the audioStream is null, this should be interpreted as a request to end any currently playing
// stream.
// it is an external URL, so we can directly pass this on.
// we need to serve it for a while and make it available to multiple clients, hence only
// FixedLengthAudioStreams are supported.
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
//www.mapdb.org/">website</a>.
/** holds the local instance of the MapDB database */
// PersistenceManager passes SimpleItemConfiguration.alias which can be null
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// clean up database files ...
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// SOURCE_FORMAT_PARAM is an advanced parameter and we assume "%s" if it is not set
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/* keep memory foot print low. max 2 concurrent threads are estimated */
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// SOURCE_FORMAT_PARAM is an advanced parameter and we assume "%s" if it is not set
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// SOURCE_FORMAT_PARAM is an advanced parameter and we assume "%s" if it is not set
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// method under test
// Asserts
//
//
//
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// SOURCE_FORMAT_PARAM is an advanced parameter and we assume "%s" if it is not set
// map transformation service returns an empty string if the entry is not found in the map, we will use
// the original value
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// Test that we find a translation in an existing file
// This tests that the requested transformation file has been removed from
// the cache
// Checks that an unknown input in an existing file give the expected
// transformed response that shall be empty string (Issue #1107) if not found in the file
// Test that an inexisting file raises correct exception as expected
// That's what we expect.
// Test that we find a localized version of desired file
// as we don't know the real locale at the moment the
// test is run, we test that the string has actually been transformed
// Standard behaviour with no default value
// Modified behaviour with a file containing default value definition
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// SOURCE_FORMAT_PARAM is an advanced parameter and we assume "%s" if it is not set
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// method under test
// Asserts
// method under test
// Asserts
// method under test
// Asserts
// method under test
// Asserts
// method under test
// Asserts
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/** RegEx to extract a scale definition */
/**
/**
// Scale can only be used with numeric inputs, so lets try to see if ever its a valid quantity type
/**
//www.eclipse.org/legal/epl-2.0
/**
// SOURCE_FORMAT_PARAM is an advanced parameter and we assume "%s" if it is not set
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// need to be sure we'll have the german version
// Testing upper bound opened range
// Testing lower bound opened range
// Testing unfinite up and down range
// check that for undefined/non numeric value we return empty string
// Issue #1107
// the tested file contains inputs that generate a conversion error of the bounds
// of range
// awaited result
// checks that an error is raised when trying to scale an erroneous value
// Ensures that only first matching scale as presented in the file is taken in account
// This value matches two lines of the scale file
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// SOURCE_FORMAT_PARAM is an advanced parameter and we assume "%s" if it is not set
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// method under test
//current_conditions/temp_c/@data", source);
// Asserts
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// SOURCE_FORMAT_PARAM is an advanced parameter and we assume "%s" if it is not set
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// method under test
// Asserts
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/* the file extension of the snippets */
/* the snippet location inside this bundle */
/* a local cache so we do not have to read the snippets over and over again from the bundle */
/**
// Optimization: avoid calling 3 times itemUIRegistry.getLabel(w)
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// if legend parameter is given, add corresponding GET parameter
// add theme GET parameter
// add timestamp to circumvent browser cache
/**
//www.eclipse.org/legal/epl-2.0
/**
// set the default send-update frequency to 200ms
// get RGB hex value
// Should be called before preprocessSnippet
/**
//www.eclipse.org/legal/epl-2.0
/**
// Process the color tags
/**
//www.eclipse.org/legal/epl-2.0
/**
// Process the color tags
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// Process the color tags
/**
//www.eclipse.org/legal/epl-2.0
/**
// Process the color tags
// set default height to something viewable
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
// if the label contains a value span, we remove this span as
// the title of a page/layer cannot deal with this
// Note: we can have a span here, if the parent widget had a label
// with some value defined (e.g. "Windows [%d]"), which getLabel()
// will convert into a "Windows <span>5</span>".
// put a single frame around all children widgets, if there are no explicit frames
// no %children% placeholder found or at the end
// %children% section found
// multiple %children% sections found -> log an error and ignore all code starting from the second
// occurance
/**
//www.eclipse.org/legal/epl-2.0
/**
// Process the color tags
// convert the item state to the command value for proper
// comparison and "checked" attribute calculation
/**
//www.eclipse.org/legal/epl-2.0
/**
// set defaults for min, max and step
// if the current state is a valid value, we calculate the up and down step values
// Process the color tags
/**
//www.eclipse.org/legal/epl-2.0
/**
// set the default send-update frequency to 200ms
// Process the color tags
/**
//www.eclipse.org/legal/epl-2.0
/**
// Render with buttons only when a max of MAX_BUTTONS options are defined
// Truncate the button label to MAX_LABEL_SIZE characters
// Process the color tags
// convert the item state to the command value for proper
// comparison and buttonClass calculation
/**
//www.eclipse.org/legal/epl-2.0
/**
// Process the color tags
/**
//www.eclipse.org/legal/epl-2.0
/**
// we handle mjpeg streams as an html image as browser can usually handle this
// For HTTP Live Stream we don't proxy the URL and we set the appropriate media type
/**
//www.eclipse.org/legal/epl-2.0
/**
// Process the color tags
// set default height to something viewable
/**
//www.eclipse.org/legal/epl-2.0
/**
/** the root path of this web application */
/**
//www.eclipse.org/legal/epl-2.0
/**
// all additional webapp params start with "__" and should be ignored
// we need a special treatment for the "TOGGLE" command of switches;
// this is no command officially supported and must be translated
// into real commands by the webapp.
/**
//www.eclipse.org/legal/epl-2.0
/**
//
//
//
//
//
/** the name of the servlet to be used in the URL */
// read request parameters
// we are at the homepage, so we render the children of the sitemap root node
// we are on some subpage, so we have to render the children of the widget that has been selected
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/* the file extension of the snippets */
/* the snippet location inside this bundle */
/* a local cache so we do not have to read the snippets over and over again from the bundle */
/**
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// set the default send-update frequency to 200ms
// get RGB hex value
/**
//www.eclipse.org/legal/epl-2.0
/**
// Process the color tags
/**
//www.eclipse.org/legal/epl-2.0
/**
// Process the color tags
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// Process the color tags
/**
//www.eclipse.org/legal/epl-2.0
/**
// Process the color tags
// set default height to something viewable
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
// if the label contains a value span, we remove this span as
// the title of a page/layer cannot deal with this
// Note: we can have a span here, if the parent widget had a label
// with some value defined (e.g. "Windows [%d]"), which getLabel()
// will convert into a "Windows <span>5</span>".
// put a single frame around all children widgets, if there are no explicit frames
// no %children% placeholder found or at the end
// %children% section found
// multiple %children% sections found -> log an error and ignore all code starting from the second
// occurance
// Check if this widget is visible
/**
//www.eclipse.org/legal/epl-2.0
/**
// Process the color tags
// convert the item state to the command value for proper
// comparison and "checked" attribute calculation
/**
//www.eclipse.org/legal/epl-2.0
/**
// set defaults for min, max and step
// if the current state is a valid value, we calculate the up and down step values
// Process the color tags
/**
//www.eclipse.org/legal/epl-2.0
/**
// set the default send-update frequency to 200ms
// Process the color tags
/**
//www.eclipse.org/legal/epl-2.0
/**
// Render with buttons only when a max of MAX_BUTTONS options are defined
// Truncate the button label to MAX_LABEL_SIZE characters
// Process the color tags
// convert the item state to the command value for proper
// comparison and buttonClass calculation
// button with red color
// button with blue color
/**
//www.eclipse.org/legal/epl-2.0
/**
// Process the color tags
/**
//www.eclipse.org/legal/epl-2.0
/**
// we handle mjpeg streams as an html image as browser can usually handle this
// For HTTP Live Stream we don't proxy the URL and we set the appropriate media type
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/** the root path of this web application */
/**
//www.eclipse.org/legal/epl-2.0
/**
// all additional webapp params start with "__" and should be ignored
// we need a special treatment for the "TOGGLE" command of switches;
// this is no command officially supported and must be translated
// into real commands by the webapp.
/**
//www.eclipse.org/legal/epl-2.0
/**
//
//
//
//
//
/**
/** the name of the servlet to be used in the URL */
// read request parameters
// if there are no parameters, display the "default" sitemap
// we are at the homepage, so we render the children of the sitemap root node
// we have reached the timeout, so we do not return any content as nothing has changed
// we are on some subpage, so we have to render the children of the widget that has been selected
// we have reached the timeout, so we do not return any content as nothing has changed
/**
/**
// let's get all items for these widgets
/**
// We skip the chart widgets having a refresh argument
// ignore
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
/**
/**
// Mono
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
// Validate arguments
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
// Default to null's
// Parse line into tokens
// Get next token
// Ignore <Sentence>
// Check that we are parsing <Label> or <Locale> for Scotland
// Check we're dealing with <Label>
// Else we're dealnig with <Locale> for Scotland
// Parse non-Scottish <Locale>
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// List of all Thing Type UIDs
// List of all Channel ids
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// TODO: handle data refresh
// TODO: handle command
// Note: if communication with thing fails for some reason,
// indicate that by setting the status with detail information:
// updateStatus(ThingStatus.OFFLINE, ThingStatusDetail.COMMUNICATION_ERROR,
// "Could not control device at IP address x.x.x.x");
// logger.debug("Start initializing!");
// TODO: Initialize the handler.
// The framework requires you to return from this method quickly. Also, before leaving this method a thing 
// status from one of ONLINE, OFFLINE or UNKNOWN must be set. This might already be the real thing status in 
// case you can decide it directly.
// In case you can not decide the thing status directly (e.g. for long running connection handshake using WAN
// access or similar) you should set status UNKNOWN here and then decide the real status asynchronously in the
// background.
// set the thing status to UNKNOWN temporarily and let the background task decide for the real status.
// the framework is then able to reuse the resources from the thing handler initialization.
// we set this upfront to reliably check status updates in unit tests.
// Example for background initialization:
// <background task with long running initialization here>
// when done do:
// logger.debug("Finished initializing!");
// Note: When initialization can NOT be done set the status with more details for further
// analysis. See also class ThingStatusDetail for all available status details.
// Add a description to give user information to understand why thing does not work as expected. E.g.
// updateStatus(ThingStatus.OFFLINE, ThingStatusDetail.CONFIGURATION_ERROR,
// "Can not access device as username and/or password are invalid");
/**
//www.eclipse.org/legal/epl-2.0
/**
/**
//www.eclipse.org/legal/epl-2.0
/**
// mock getConfiguration to prevent NPEs
// we expect the handler#initialize method to call the callback during execution and
// pass it the thing and a ThingStatusInfo object containing the ThingStatus of the thing.
// the argument captor will capture the argument of type ThingStatusInfo given to the
// callback#statusUpdated method.
// verify the interaction with the callback and capture the ThingStatusInfo argument:
// assert that the (temporary) UNKNOWN status was given first:
// assert that ONLINE status was given later:
// See the documentation at 
// https://www.eclipse.org/smarthome/documentation/development/testing.html#assertions 
// to see when to use Hamcrest assertions (assertThat) or JUnit assertions. 
/**
//www.eclipse.org/legal/epl-2.0
/**
