/**
//www.gnu.org/licenses/>.
/**
//www.gnu.org/licenses/>.
/**
//www.gnu.org/licenses/>.
/**
//www.gnu.org/licenses/>.
/**
//www.gnu.org/licenses/>.
/**
//www.gnu.org/licenses/>.
/**
//www.gnu.org/licenses/>.
/**
//www.gnu.org/licenses/>.
//
// tomcat 8 is picky when we include the drivers in the war
//
/**
//[username]:[password]@[host]:[port]/[database name]
//%s:%s%s", scheme(dbUri), dbUri.getHost(), dbUri.getPort(),
/**
//www.gnu.org/licenses/>.
//
//
//
// initialize cookie
//
//definition order = execution order, the first executed filter is CSFRFilter
/*");
/*");
/*");
/*");
//
//
/*", "/admin/*", "/me/",//
//
//
/*", "/admin/*", "/me/",//
/**
//www.gnu.org/licenses/>.
/**
//www.gnu.org/licenses/>.
//has form jar:file:/path/to/war/lavagna-jetty-console.war!/WEB-INF/classes!/
/**
//www.gnu.org/licenses/>.
/**
// because mysql don't support check constraints :(
// mysql does not support check constraints
/**
//www.gnu.org/licenses/>.
/**
//www.gnu.org/licenses/>.
// scan only the web controller, the rest is done statically
// enable serving static files through default servlet
/**
//www.gnu.org/licenses/>.
/**").permitAll()
/**").permitAll()
/**").denyAll()
/**").permitAll()
/**").requireAuthenticated()
/**", "/logout");
/**").permitAll()
/**").permitAll()
/**").permitAll()
/**").permitAll()
/**
//www.gnu.org/licenses/>.
/**
//www.gnu.org/licenses/>.
/**
//www.gnu.org/licenses/>.
/**
//www.gnu.org/licenses/>.
/**
/**
//www.gnu.org/licenses/>.
/**
//www.gnu.org/licenses/>.
//
/**
//www.gnu.org/licenses/>.
//
//
/**
//www.gnu.org/licenses/>.
/**
/**
//www.gnu.org/licenses/>.
// pgsql need to have a typecast...
/**
//www.gnu.org/licenses/>.
//----------------------
//----------------------
/**
//www.gnu.org/licenses/>.
/**
//www.gnu.org/licenses/>.
/**
//www.gnu.org/licenses/>.
// Profile
/**
//www.gnu.org/licenses/>.
/**
//www.gnu.org/licenses/>.
/**
//www.gnu.org/licenses/>.
/**
//www.gnu.org/licenses/>.
/**
//www.gnu.org/licenses/>.
//
//
/**
//www.gnu.org/licenses/>.
//
//
//
//
//
//
//
//
//
//
//
//
//
/**
//www.gnu.org/licenses/>.
/**
//www.gnu.org/licenses/>.
// Average users per card
// Average cards per user
// Cards by label
// Created cards by date
// Closed cards by date
// Most active card
// Milestones
/**
//www.gnu.org/licenses/>.
//
//
//
//
//
//
//
//
//
//
//
/**
//www.gnu.org/licenses/>.
//remove all disabled scripts
// check project access if necessary
// check access
/**
//www.gnu.org/licenses/>.
/**
/**
// keep only the columns that are inside the boardId and have location=board
//
// copy the column definition id of the default one
//
/**
//www.gnu.org/licenses/>.
/**
// Add the ARCHIVE and BACKLOG columns
/**
//www.gnu.org/licenses/>.
// we remove the cards that have _already_ the user assigned
//
// remove all assigned labels
//
//
// to update only if the label value has changed
// to add
/**
/**
//www.gnu.org/licenses/>.
// <- this use secure random
// Milestones
// Cards
// Milestones
// Cards
//Lavagna//iCal4j 1.0//EN"));
// Milestones
// Cards
/**
//www.gnu.org/licenses/>.
// prepare a {:order, :id, :cardId} list
/**
// we filter out wrong ids
//
/**
/**
//www.gnu.org/licenses/>.
// look for duplicates, the event model will keep the entire history of
// the description
// never null because the object's fields are always initialized
/**
// checks
//
// save old comment as history and update the reference id of the event
// insert new data
// if no data is returned, then create the description
// there can (should) be only one
// save old description as history and update the reference id of the
// event
// insert new data
/**
//www.gnu.org/licenses/>.
/**
// type cannot be changed!
// Label list values
/**
// ---
/**
//www.gnu.org/licenses/>.
// prepare a {:cardOrder, :cardId, :columnId} list
//
//
/**
/**
/**
/**
/**
//
//
/**
// skip
//TODO: not happy about the interface of this one...
// ignore
/**
//www.gnu.org/licenses/>.
//
// Copy the description
// Copy comments
// Copy action lists
/**
//www.gnu.org/licenses/>.
/**
//www.gnu.org/licenses/>.
// FIXME remove the validation = false when the schemas will be stable
//
/**
//www.gnu.org/licenses/>.
// ------------ project
// ------------ board
// ------------ column
// updated position will not be exposed to the api hooks
// ------------ card
// updated position will not be exposed to the api hooks
// apihook: this will be handled by emitCardHasMoved
// apihook: this will be handled by emitCardHasMoved
// ------------ permission
// ------------ card description
// ------------ comment
// ------------ action list handling
// ------------
// ------------
// user profile update
//
//
//
//
//
//
//
// role and permission
//
//
//
//
//
//
//
// ------------
/**
//www.gnu.org/licenses/>.
// profile
/**
//www.gnu.org/licenses/>.
/**
// aggregate the events by card id
/**
//www.gnu.org/licenses/>.
/**
//www.gnu.org/licenses/>.
// Board
// ID
// Name
// Column
// ColumnDefinition - status
// Description
// Creation date
// Created by
// Labels
// Auto size the columns except for the description
/**
//www.gnu.org/licenses/>.
/**
/**
//www.gnu.org/licenses/>.
/**
//www.gnu.org/licenses/>.
/**
//www.gnu.org/licenses/>.
// Cache the user mappings
// Cache the checklists
// Cache the board members
// Fetch the columns with every card in it
// Checklists
// Comments
// Assigned users
// Labels
// Labels
// Import the boards
//case "blue":
// Due date
// Checklists
// Comments
// Archive if closed
// Assigned users
// Labels
/**
//www.gnu.org/licenses/>.
/**
//www.gnu.org/licenses/>.
//
//
// TODO not optimal
//
//
// TODO CLEANUP
/**
//www.gnu.org/licenses/>.
//
// add missing base permissions
// add users to roles
//
//we can have null permission enum value if the enum is no more present
/**
// add users to roles
// import label list value
// save the old column to new column id mapping.
// Update default column order for side locations
// TODO: not optimal in term of performance, use a bulk insert
/**
//www.gnu.org/licenses/>.
// imported from
// https://www.owasp.org/index.php/Preventing_LDAP_Injection_in_Java .
// Checked against spring implementation too...
/**
//www.gnu.org/licenses/>.
/**
//www.gnu.org/licenses/>.
/**
//www.gnu.org/licenses/>.
//imported from https://stackoverflow.com/a/28626302 and modified
//will return null if no date is present
//finding the first date mentioned in received header
//
/*")) {
//"
//"
/**
//www.gnu.org/licenses/>.
/**
/**
//www.gnu.org/licenses/>.
/**
/**
// select users that have pending notifications that were not present in this check round
//
//
//
//
/**
//
/**
//www.gnu.org/licenses/>.
/**
/**
/**
// step 1: remove all permissions
// step 2: add the enabled permission
// step 1: remove all permissions
// step 2: add the enabled permission
/**
//www.gnu.org/licenses/>.
/**
// Add default labels to the Project
// create default column definitions
//
//
/**
/**
// ---------
// FIXME: fetch directly the project short name?
/**
//www.gnu.org/licenses/>.
/**
/**
//www.gnu.org/licenses/>.
// string
// int
// timestamp from/to
// user
// card
// list value
// for card sequence number
// for card name
// for card data
//
// TODO: refactor/cleanup
// TODO: internazionalization...
//
/**
//www.gnu.org/licenses/>.
/**
// if a user don't have access to the specified project id we skip the
// whole search
//
//
// fetch all possible user->id, card->id in the value types with string
// (thus unknown use)
//
//
// add filter conditions
//
/* AS CARD_IDS -> table alias for mysql */
// limit
// offset
//
//
// super ugly :(
// reorder:
//
// used by HSQLDB, obviously not optimized at all (as it's only for dev
// purpose)
/**
//www.gnu.org/licenses/>.
/**
//www.gnu.org/licenses/>.
// Average users per card
// Average cards per user
// Cards by label
// Created / closed cards
// Most active card
// Milestones
/**
//www.gnu.org/licenses/>.
/**
/**
//www.gnu.org/licenses/>.
/**
/**
//
// <- this use secure random
/**
//www.gnu.org/licenses/>.
/**
/**
//www.gnu.org/licenses/>.
/**
//www.gnu.org/licenses/>.
/**
//www.gnu.org/licenses/>.
// Reminder on milestone's date
// Url
// Organizer
// Reminder on label's date
// Organizer
// Url
// Description
/**
//www.gnu.org/licenses/>.
/**
//www.gnu.org/licenses/>.
/**
//www.gnu.org/licenses/>.
/**
//www.gnu.org/licenses/>.
/**
//www.gnu.org/licenses/>.
/**
//www.gnu.org/licenses/>.
/**
//www.gnu.org/licenses/>.
/**
//www.gnu.org/licenses/>.
/**
//www.gnu.org/licenses/>.
/**
//www.gnu.org/licenses/>.
/**
//www.gnu.org/licenses/>.
/**
//www.gnu.org/licenses/>.
/**
//www.gnu.org/licenses/>.
/**
//www.gnu.org/licenses/>.
/**
//www.gnu.org/licenses/>.
/**
//www.gnu.org/licenses/>.
/**
//www.gnu.org/licenses/>.
/**
//www.gnu.org/licenses/>.
/**
//www.gnu.org/licenses/>.
/**
//www.gnu.org/licenses/>.
//
//
/**
//www.gnu.org/licenses/>.
/**
//www.gnu.org/licenses/>.
// imported from the spring-integration-mail project and modified (the accept method)
/*
//www.apache.org/licenses/LICENSE-2.0
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
// Copy messages to cause an eager fetch
/**
/**
/**
/**
/**
/*
/*
// imported from the spring-integration-mail project and modified (the accept method)
/*
//www.apache.org/licenses/LICENSE-2.0
/**
/**
/**
/**
/**
/**
/**
// INT-3859
// resets idle state
/**
// this will return the flow to the idle call
/**
//www.gnu.org/licenses/>.
// imported from the spring-integration-mail project and modified (the accept method)
/*
//www.apache.org/licenses/LICENSE-2.0
/**
// -1 indicates default port
/**
// expunge deleted mails, and make sure we've retrieved them before closing the folder
/**
//www.gnu.org/licenses/>.
/**
//www.gnu.org/licenses/>.
/**
//www.gnu.org/licenses/>.
/**
/**
//www.gnu.org/licenses/>.
/**
//www.gnu.org/licenses/>.
/**
/**
//www.gnu.org/licenses/>.
// <- no validation on the output
/**
//www.gnu.org/licenses/>.
/**
// TODO: check that columnId is effectively inside the board named shortName
//
//
//
//
//
// Validate.isTrue(col.getLocation() == BoardColumnLocation.BOARD);
/**
//www.gnu.org/licenses/>.
// look for duplicates, the event model will keep the entire history of
// the comment
// never null because the object's fields are always initialized
//
// images
//
//
// TODO: fix exception handling
// -- activity extension
/**
//www.gnu.org/licenses/>.
//
//
// metadata
//
/**
//www.gnu.org/licenses/>.
/**
/**
//www.gnu.org/licenses/>.
// match stuff like "/project/{projectShortName}" or /{projectShortName}/value
/** can be null */
/**
//www.gnu.org/licenses/>.
/**
//www.gnu.org/licenses/>.
/**
//www.gnu.org/licenses/>.
/**
//www.gnu.org/licenses/>.
/**
/**
//www.gnu.org/licenses/>.
/**
/**
//www.gnu.org/licenses/>.
/**
//www.gnu.org/licenses/>.
/**
/**
/**
// TODO: ugly code
/**
//www.gnu.org/licenses/>.
// TODO: move to a helper, as it has the same code as the one in the ExportImportController
//
/**
//www.gnu.org/licenses/>.
// user is resolved through UserArgumentResolver
/**
//www.gnu.org/licenses/>.
/**
//www.gnu.org/licenses/>.
/**
/**
//www.gnu.org/licenses/>.
// we have an internal regex
/**
// nope
/**
//www.gnu.org/licenses/>.
/**
//www.gnu.org/licenses/>.
/**
/**
//www.gnu.org/licenses/>.
// add the exceptions from the less generic to the more one
/**
/**
//www.gnu.org/licenses/>.
/**
//stackoverflow.com/a/5099622
//stackoverflow.com/a/8728500
/**
//www.gnu.org/licenses/>.
/**
//www.gnu.org/licenses/>.
/**
//www.gnu.org/licenses/>.
/**
// check the base permission
// check if the resource has a custom ownership checker (the user must
// have a read permission)
//
// TODO: in some cases the user pass a list of ids as a _body_. This
// kind of bulk operation will need to ensure the correctness with the
// right filter.
// project level check
// project level ownership check
/***
/**
//www.gnu.org/licenses/>.
/**
//www.gnu.org/licenses/>.
// delete cookie because it's invalid
//
// 1 year
/**
//www.gnu.org/licenses/>.
// if it's not in the context path of the application, the security
// filter will not be triggered
/**
//www.gnu.org/licenses/>.
// handle the case when the user is logged as a anonymous user but it's
// no more enabled
/**
//www.gnu.org/licenses/>.
//continue...
/**
// ignore the websocket fallback...
// ------------------------------------------------------------------------
// this function has been imported from KeyCzar.
/*
//www.apache.org/licenses/LICENSE-2.0
/**
/**
//www.gnu.org/licenses/>.
/**
//www.gnu.org/licenses/>.
/**
//www.gnu.org/licenses/>.
/**
//www.gnu.org/licenses/>.
/**
//www.gnu.org/licenses/>.
//
// fallback to default logout handler
// handle the static page for the login, we expect that it's a GET
// request _and_ it match the configured path (/login)
// -------------------------------
// given /login/demo/ -> return demo
// subPath will be demo/ldap/oauth
// given /login/demo/ -> return demo
/**
//www.gnu.org/licenses/>.
/**
// the action has been handled by the url matcher, no
// further processing is required
/**
// TODO check if the no caching directives could be removed/or at least
// changed... (?)
/**
//www.gnu.org/licenses/>.
// yes, it's stupid...
// FIXME refactor out
/**
//www.gnu.org/licenses/>.
// FIXME refactor out
/**
//www.gnu.org/licenses/>.
//TODO: move the strings directly in the factory.
/**
/**
//www.gnu.org/licenses/>.
/**
//www.gnu.org/licenses/>.
// ignore state parameter as it's not present
/**
//www.gnu.org/licenses/>.
/**
//confluence.atlassian.com/display/BITBUCKET/OAuth+on+Bitbucket
//bitbucket.org/site/oauth2/access_token";
//bitbucket.org/site/oauth2/authorize?client_id=" + encode(config.getApiKey()) + "&redirect_uri="
//basic auth, as described at https://developer.atlassian.com/static/bitbucket/concepts/oauth2.html
//basic auth
/**
//www.gnu.org/licenses/>.
//
//api.bitbucket.org/2.0/user",//
//
//
//
//
/**
//www.gnu.org/licenses/>.
//github.com/login/oauth/access_token";
//github.com/login/oauth/authorize?client_id=" + encode(config.getApiKey()) + "&redirect_uri="
/**
//www.gnu.org/licenses/>.
//
//api.github.com/user",//
//
//
//
//
/**
//www.gnu.org/licenses/>.
// based from doc: http://doc.gitlab.com/ce/api/oauth2.html
// https://gitlab.com/oauth/token
// https://gitlab.com/oauth/authorize
// well, the doc is not correct, see https://github.com/gitlabhq/gitlabhq/issues/9141
/**
//www.gnu.org/licenses/>.
//
//
//
//
//
//
//
//gitlab.com")),
//
//
// https://gitlab.com/api/v3/user
//gitlab.com"), "/") + "/api/v3/user");
// http://doc.gitlab.com/ce/api/users.html#current-user
/**
//www.gnu.org/licenses/>.
/**
//svn.codehaus.org/tynamo/tags/tynamo-federatedaccounts-parent-0.3.0/tynamo-federatedaccounts-scribebasedoauth/src/main/java/org/tynamo/security/federatedaccounts/scribe/google/Google20Api.java
//accounts.google.com/o/oauth2/auth?client_id=%s&redirect_uri=%s&response_type=code&scope=%s";
//accounts.google.com/o/oauth2/token";
/**
//www.gnu.org/licenses/>.
//
//www.googleapis.com/oauth2/v3/userinfo/",//
//
//
//
//
/**
//www.gnu.org/licenses/>.
/**
//www.gnu.org/licenses/>.
// google, github, bitbucket, twitter
//support for self hosted oauth2 provider (e.g. gitlab)
/**
//www.gnu.org/licenses/>.
//
// scribe does not support out of the box the state parameter, must
// be overridden to be removed
// only for services that support the state parameter, must be
// overridden to be ignored
// verify token
// fetch user profile
/**
//www.gnu.org/licenses/>.
/**
/**
/**
//www.gnu.org/licenses/>.
/**
//www.gnu.org/licenses/>.
//api.twitter.com/1.1/account/verify_credentials.json", UserInfo.class,
/**
//www.gnu.org/licenses/>.
/**
//www.gnu.org/licenses/>.
// we don't care if the values are set more than one time
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
/**
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//concatenateResourcesWithExtension(context, "/app/app.js", ".js", allJs, ba);
//
//
//
//make sure we add the css in the right order
/* begin " + file + " */ \n\n").getBytes(StandardCharsets.UTF_8));
/* end " + file + " */ \n\n").getBytes(StandardCharsets.UTF_8));
/**
//www.gnu.org/licenses/>.
/**
//
// create user labels
// update milestone label
/**
/**
//
//
// build 200 cards for archive, backlog, trash
/**
/**
// description
// milestone
// assigned user
// watched by user
// label 1, 2
// action list
/**
//www.gnu.org/licenses/>.
/**
//www.gnu.org/licenses/>.
/**
//www.gnu.org/licenses/>.
/**
//www.gnu.org/licenses/>.
//
// token has length <= 4
/**
//www.gnu.org/licenses/>.
/**
//www.gnu.org/licenses/>.
/**
/**
//www.gnu.org/licenses/>.
//TODO complete cover
//
//
/**
//www.gnu.org/licenses/>.
//localhost");
//localhost/TEST/TEST-BRD-1", event1.getUrl().getUri().toASCIIString());
/**
//www.gnu.org/licenses/>.
/**
//www.gnu.org/licenses/>.
//TODO, FIXME: wall of copy paste, what will your oshi say about that?
// when updating a card that has no description, a fresh one is created
// add action item
// add action item
// add action item
// add action item
// add action item
// add action item
// move middle item of list 2 to the beginning of list 1
// create destination list IDs
// add action item
// InputStream input = new
// ByteArrayInputStream(testData.getBytes("UTF-8"));
// without reference
// with reference
/**
//www.gnu.org/licenses/>.
/**
//www.gnu.org/licenses/>.
/**
//TODO: check use and correctness for this case
//
//creation
//update
//delete
/**
//www.gnu.org/licenses/>.
// nothing should happen
// invert the order
// move the first card in the second column
// find by card "title"
// find by card sequenceNr
// find by board short name
// find by board short name + seq nr
// find by card "title"
// find by card sequenceNr
// find by board short name
// find by board short name + seq nr
//
//card creation activity
//card update activity
/**
//www.gnu.org/licenses/>.
/**
//www.gnu.org/licenses/>.
/**
//www.gnu.org/licenses/>.
/**
//www.gnu.org/licenses/>.
// private BoardColumn col2;
// simulate CardDataService here
// right now, user alt is the last updater
// simulate CardDataService here, user1 deletes user2 comment
/**
//www.gnu.org/licenses/>.
// Init new card
// Init milestone
// Add labels
// 0 based -> 1 means 2 rows (header + 1 card)
// 0 based -> 1 means 2 rows (header + 1 card)
/**
//www.gnu.org/licenses/>.
// TODO additional checks
/**
//www.gnu.org/licenses/>.
/**
//www.gnu.org/licenses/>.
// Cards
// Run the import
// Asserts
// Labels
// Card
// Run the import
// Asserts
// Run the import
// Asserts
/**
//www.gnu.org/licenses/>.
// mismatch between card label type and value (string, value is null)
/**
//www.gnu.org/licenses/>.
//localhost:10389";
// first call
// we check the escape too..
// first call
// second call with the user dn
// first call
// second call with the user dn
/**
//www.gnu.org/licenses/>.
/**
//www.gnu.org/licenses/>.
/**
//www.gnu.org/licenses/>.
//base.application.lavagna.io/");
// assign card
/**
//www.gnu.org/licenses/>.
/**
//www.gnu.org/licenses/>.
/**
//www.gnu.org/licenses/>.
// Throw DuplicateKeyException on double create
// empty because the user don't have the correct role READ
// empty, because the role is system wide and not attached to the
// specific project
//
//4 system labels
/**
//www.gnu.org/licenses/>.
/**
//www.gnu.org/licenses/>.
// Average cards per user
// Cards by label
// Created / closed cards
// Most active card
// Milestones
// Double check that everything is in the right place
/**
//www.gnu.org/licenses/>.
//user does not have role READ
/**
//www.gnu.org/licenses/>.
/**
//www.gnu.org/licenses/>.
//localhost:3306/lavagna?useUnicode=true&characterEncoding=utf-8", "root", ""));
//localhost:5432/lavagna", "postgres", "password"));
//localhost:5432/lavagna", "postgres", ""));
/**
//www.gnu.org/licenses/>.
/**
//www.gnu.org/licenses/>.
/**
//www.gnu.org/licenses/>.
/**
//www.gnu.org/licenses/>.
//Lavagna//iCal4j 1.0//EN"));
/**
//www.gnu.org/licenses/>.
//TODO complete with verify
/**
//www.gnu.org/licenses/>.
//TODO complete with verify
// comment 1
// comment 2
// comment 3
/**
//www.gnu.org/licenses/>.
//TODO complete with verify
/**
//www.gnu.org/licenses/>.
/**
//www.gnu.org/licenses/>.
/**
//www.gnu.org/licenses/>.
/**
//www.gnu.org/licenses/>.
/**
//www.gnu.org/licenses/>.
/**
//www.gnu.org/licenses/>.
/**
//www.gnu.org/licenses/>.
/**
//www.gnu.org/licenses/>.
//
//
// check that we are going in the correct branch
//
//
// check that we are going in the correct branch
/**
//www.gnu.org/licenses/>.
/**
//www.gnu.org/licenses/>.
/**
//www.gnu.org/licenses/>.
/**
//www.gnu.org/licenses/>.
/**
//www.gnu.org/licenses/>.
/**
//www.gnu.org/licenses/>.
/**
//www.gnu.org/licenses/>.
/**
//www.gnu.org/licenses/>.
/**
//www.gnu.org/licenses/>.
/**
//www.gnu.org/licenses/>.
//TODO COMPLETE
/**").denyAll()
/**", "/login/", new LoginPageGenerator() {
/**", "/logout");
/**");
/**
//www.gnu.org/licenses/>.
//TODO COMPLETE the various path....: auth/not auth user. CSRF check
//
//
/**
//www.gnu.org/licenses/>.
// POST, username and password not equal
/**
//www.gnu.org/licenses/>.
/**
//www.gnu.org/licenses/>.
//baseUrl", Arrays.asList(
//TODO: fixme
//verify(authResultHandler).handleAuthorizationUrl(req, resp);
//TODO: fixme
//verify(authResultHandler).handleCallback(req, resp);
/**
//www.gnu.org/licenses/>.
/**
//www.gnu.org/licenses/>.
//TODO add check
