________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\client\java\teammates\client\remoteapi\package-info.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\client\java\teammates\client\remoteapi\RemoteApiClient.java
/**
//cloud.google.com/appengine/docs/standard/java/tools/remoteapi">https://cloud.google.com/appengine/docs/standard/java/tools/remoteapi</a>
//", "");
// Dev Server doesn't require credential.
// Your Google Cloud SDK needs to be authenticated for Application Default Credentials
// in order to run any script in production server.
// Refer to https://developers.google.com/identity/protocols/application-default-credentials.
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\client\java\teammates\client\scripts\DataBundleRegenerator.java
/**
// script-like, not meant to be instantiated
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\client\java\teammates\client\scripts\DataMigrationEntitiesBaseScript.java
/**
// the folder where the cursor position and console output is saved as a file
// 100 is the optimal batch size as there won't be too much time interval
// between read and save (if transaction is not used)
// cannot set number greater than 300
// see https://stackoverflow.com/questions/41499505/objectify-queries-setting-limit-above-300-does-not-work
/*
// buffer of entities to save
/**
/**
/**
/**
/**
//cloud.google.com/appengine/docs/standard/java/datastore/transactions#what_can_be_done_in_a_transaction">What can be done in a transaction</a>
//cloud.google.com/appengine/docs/standard/java/tools/remoteapi#transaction-efficiency">Transactions are less efficient</a>
/**
/**
/**
// the read place a "lock" on the object to migrate
// even transaction is enabled, there is no need to use transaction in preview mode
// migrate
/**
/**
/**
/**
/**
/**
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\client\java\teammates\client\scripts\DataMigrationForInstructorFeedbackResponseComments.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\client\java\teammates\client\scripts\DataMigrationForInstructorNullIsArchivedField.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\client\java\teammates\client\scripts\DataMigrationForSanitizedDataInCourseAttributes.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\client\java\teammates\client\scripts\DataMigrationForSanitizedDataInInstructorAttributes.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\client\java\teammates\client\scripts\DataMigrationForSanitizedDataInStudentAttributes.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\client\java\teammates\client\scripts\DataMigrationForSanitizedInstructorName.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\client\java\teammates\client\scripts\EntityScanningBaseScript.java
/**
/**
// scanning won't do write operation
// scanning won't do write operation
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\client\java\teammates\client\scripts\GenerateFeedbackReport.java
/**
// if file doesnt exists, then create it
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\client\java\teammates\client\scripts\GoogleIdMigrationBaseScript.java
/**
// update students and instructors
// recreate account and student profile
/**
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\client\java\teammates\client\scripts\package-info.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\client\java\teammates\client\scripts\SingleAccountGoogleIdMigrationScript.java
/**
// if the user uses his own email address to register Google Services, the googleId is his own email address
// if the user registers a Google Account (e.g. 'alice@gmail.com'),
// the googleId is the string before '@gmail.com' (e.g. 'alice')
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\client\java\teammates\client\scripts\TeamEvalResultCalculations.java
/**
// script-like, not meant to be instantiated
// CHECKSTYLE.OFF:SingleSpaceSeparator vertical alignment of values for readability
// CHECKSTYLE.ON:SingleSpaceSeparator
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\client\java\teammates\client\scripts\statistics\CourseToInstituteCache.java
/**
// will approximately occupy 100MB memory space
/**
/**
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\client\java\teammates\client\scripts\statistics\CursorIterator.java
/**
// cannot set number greater than 300
// see https://stackoverflow.com/questions/41499505/objectify-queries-setting-limit-above-300-does-not-work
/**
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\client\java\teammates\client\scripts\statistics\FileStore.java
/**
/*
// utility class
/**
// parse courseToInstituteCacheFile
/**
/**
// parse metadata
// parse institutesStats
// construct bundle
/**
// save metadata
// save institutesStats
// false positive
/**
/**
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\client\java\teammates\client\scripts\statistics\package-info.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\client\java\teammates\client\scripts\statistics\StatisticsBundle.java
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
// time when TEAMMATES project begins
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\client\java\teammates\client\scripts\statistics\StatisticsPerInstitute.java
/**
// generate stats incrementally
// construct queries
// generate institute stats by scanning student entities
// generate institute stats by scanning account (instructor) entities
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\client\java\teammates\client\util\ClientProperties.java
/**
/** The value of "client.target.url" in client.properties file. */
// access static fields directly
//localhost:[0-9]+(/.*)?");
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\client\java\teammates\client\util\LoopHelper.java
/**
/**
/**
/**
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\client\java\teammates\client\util\package-info.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\e2e\java\teammates\e2e\cases\BaseTestCaseWithBackDoorApiAccess.java
/**
// Not necessary as BackDoor API is used instead
// Not necessary as BackDoor API is used instead
// Not necessary as BackDoor API is used instead
// Not necessary as BackDoor API is used instead
// BackDoor.getAccount(googleId);
// BackDoor.getStudentProfile(studentProfileAttributes.googleId);
// BackDoor.getFeedbackQuestion(courseId, feedbackSessionName, qnNumber);
// BackDoor.getFeedbackResponse(fr.feedbackQuestionId, fr.giver, fr.recipient);
// BackDoor.getFeedbackSession(courseId, feedbackSessionName);
// BackDoor.getInstructorByEmail(instructorEmail, courseId);
// BackDoor.getEncryptedKeyForInstructor(courseId, instructorEmail);
// BackDoor.getStudent(student.course, student.email);
// BackDoor.putDocuments(testData);
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\e2e\java\teammates\e2e\cases\package-info.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\e2e\java\teammates\e2e\cases\e2e\AdminHomePageE2ETest.java
/**
// no test data used in this test
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\e2e\java\teammates\e2e\cases\e2e\BaseE2ETestCase.java
/**
/**
/**
///" + new File(".").getCanonicalPath() + "/"
/**
//ignore and try to logout and login again if fail.
// logout and attempt to load the requested URL. This will be
// redirected to a dev-server/google login page
// This workaround is necessary because the front-end has not been optimized
// to enable masquerade mode yet
// login based on the login page type
// After login, the browser should be redirected to the page requested originally.
// No need to reload. In fact, reloading might results in duplicate request to the server.
/**
/**
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\e2e\java\teammates\e2e\cases\e2e\package-info.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\e2e\java\teammates\e2e\cases\e2e\StudentCourseDetailsPageE2ETest.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\e2e\java\teammates\e2e\cases\e2e\StudentHomePageE2ETest.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\e2e\java\teammates\e2e\cases\e2e\StudentProfilePageE2ETest.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\e2e\java\teammates\e2e\cases\e2e\SystemErrorEmailReportE2ETest.java
/**
// no test data used in this test
// this test does not require any browser
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\e2e\java\teammates\e2e\cases\e2e\TimezoneSyncerTest.java
/**
//www.iana.org/time-zones";
// no test data used in this test
// ensure the front-end and the back-end have the same timezone database version
// Show diff when running test in Gradle
// ensure the timezone databases are up-to-date
// find the release day
// This will process raw offset strings, e.g. Zone1 1 Zone2 -2 Zone3 3 ... to:
// Zone1 1
// Zone2 -2
// Zone3 3
// ...
// to facilitate easy diff-ing when the need arises
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\e2e\java\teammates\e2e\cases\lnp\BaseLNPTestCase.java
/**
/**
/**
/**
/**
/**
// Write data to the file; overwrite if it already exists
/**
/**
// Write headers and data to the CSV file
/**
/**
/**
/**
/**
// Add result collector to the test plan for generating results file
// Run JMeter Test
// TODO: As mentioned in the docs, good to fail the test if there is an Exception, or if the `success` value of
//  requests is `false`. An example of when this occurs is if the JMeter test properties are not set or if `email`
//  is used for logging in instead of `googleid`. Tests should fail if this assertion fails:
//      assertTrue(resultsErrorRate < this.getAcceptableErrorRate());
/**
/**
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\e2e\java\teammates\e2e\cases\lnp\InstructorStudentEnrollmentLNPTest.java
/**
// Create a course for each instructor
// Create and add student enrollment data with a team number corresponding to each section number
// Add HTTP sampler for test endpoint
/**
// There is no need to add the newly enrolled students to the JSON DataBundle#students. This is because the new
// CourseStudent entities that were created are automatically deleted when the corresponding course is deleted.
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\e2e\java\teammates\e2e\cases\lnp\package-info.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\e2e\java\teammates\e2e\cases\lnp\StudentProfileLNPTest.java
/**
// "googleId" is used for logging in, not "email"
// Add HTTP sampler for test endpoint
// TODO: Generate summary report from .jtl results file + ReportGenerator, and log to console:
//  Replace "summariser.out" with Reporter.log("JMeter summary: ", true);
//  Also, consider displaying the link to the JMeter HTML report.
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\e2e\java\teammates\e2e\cases\util\package-info.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\e2e\java\teammates\e2e\cases\util\TestNgXmlTest.java
/**
// <class name, package name>
/**
/**
// If the package name is in TestNG in the form of <package name="teammates.test.cases.package.name" />
// then files in the current directory are excluded because the whole package would be tested by TestNG.
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\e2e\java\teammates\e2e\cases\util\TestPropertiesTest.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\e2e\java\teammates\e2e\pageobjects\AdminHomePage.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\e2e\java\teammates\e2e\pageobjects\AppPage.java
/**
//code.google.com/p/selenium/wiki/PageObjects">https://code.google.com/p/selenium/wiki/PageObjects</a>
/** Browser instance the page is loaded into. */
/** Firefox change handler for handling when `change` events are not fired in Firefox. */
/**
//legit firefox
// To minimize test failures due to eventual consistency, we try to
//  reload the page and compare once more.
/**
/**
/**
/**
/**
/**
/**
/**
/**
// Possible exploration: Change to listening to modal shown event as
// this is based on the implementation detail assumption that once modal-backdrop is added the modal is shown
// Possible exploration: Change to listening to modal hidden event as
// this is based on the implementation detail assumption that once modal-backdrop is removed the modal is hidden
/**
/**
/**
/**
// This method is a close mirror of HtmlUnitWebElement#clear(), except that events are not handled. Note that
// HtmlUnitWebElement is mirrored as opposed to RemoteWebElement (which is used with actual browsers) for convenience
// and the implementation can differ.
// Adapted from ExpectedConditions#stalenessOf which forces a staleness check. This allows a meaningful
// StaleElementReferenceException to be thrown rather than just getting a boolean from ExpectedConditions.
// Fail safe in case the implementation of staleness checks is changed
// It is important that a text box element is clickable before we fill it but due to legacy reasons we continue
// attempting to fill the text box element even if it's not clickable (which may lead to an unexpected failure
// later on)
// If the intended value is empty `clear` works well enough for us
// Otherwise we need to do special handling of entering input because `clear` and `sendKeys` work differently.
// See documentation for `clearAndSendKeys` for more details.
// Add event hook before blurring the text box element so we can detect the event.
// blur the element to receive events
// Although events should not be manually fired, the `change` event does not fire when text input is changed if
// Firefox is not in focus. Setting profile option `focusmanager.testmode = true` does not help as well.
// A temporary solution is to fire the `change` event until the buggy behavior is fixed.
// More details can be found in the umbrella issue of related bugs in the following link:
// https://github.com/mozilla/geckodriver/issues/906
// The firing of `change` event is also imperfect because no check for the type of the elements is done before firing
// the event, for instance a `change` event will be wrongly fired on any content editable element. The firing time of
// `change` events is also incorrect for several `input` types such as `checkbox` and `date`.
// See: https://developer.mozilla.org/en-US/docs/Web/Events/change
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
// Note: Should first check if the button can actually dismiss the modal otherwise the state will be consistent.
// However, it is too difficult to check.
/**
//github.com/w3c/webdriver/issues/1005">Missing "scroll into view" Actions primitive</a>.
// TODO: migrate to `scrollIntoView` when Geckodriver is adopted
/**
/**
/**
/**
/**
/**
/**
/**
/**
// The `change` event is fired with bubbling enabled to simulate how browsers fire them.
// See: https://developer.mozilla.org/en-US/docs/Web/Events/change
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\e2e\java\teammates\e2e\pageobjects\Browser.java
/**
/**
// TODO change this to private once all legacy UI tests are migrated
/**
/**
/**
/**
/**
/**
/**
// Allow CSV files to be download automatically, without a download popup.
// This method is used because Selenium cannot directly interact with the download dialog.
// Taken from http://stackoverflow.com/questions/24852709
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\e2e\java\teammates\e2e\pageobjects\BrowserPool.java
/**
// This class is implemented as a Singleton class.
// The reason we're not implementing this class as static because we want to use wait() and notify().
/**
// +1 in case a sequential ui test uses a browser other than the first in pool
/**
/**
// Synchronized to ensure thread-safety
// Synchronized to ensure thread-safety
// Look for instantiated and available object.
// If less than capacity, create new object
// Wait if no more free objects and no more capacity.
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\e2e\java\teammates\e2e\pageobjects\DevServerLoginPage.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\e2e\java\teammates\e2e\pageobjects\GenericAppPage.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\e2e\java\teammates\e2e\pageobjects\GoogleLoginPage.java
/**
// the login panel will have attribute `aria-busy="true"` while in animation
//div[contains(text(), 'Use another account')]");
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\e2e\java\teammates\e2e\pageobjects\HomePage.java
/**
// The load state of this page cannot be determined using Angular testability
// as there is a setInterval operation in the page (for the testimonial container),
// which causes Angular testability to never stabilize as per their specification.
//
// Since this page is a static page, we can fall back to the old way of
// just checking the document.readyState variable.
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\e2e\java\teammates\e2e\pageobjects\LoginPage.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\e2e\java\teammates\e2e\pageobjects\NotAuthorizedPage.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\e2e\java\teammates\e2e\pageobjects\NotFoundPage.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\e2e\java\teammates\e2e\pageobjects\package-info.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\e2e\java\teammates\e2e\pageobjects\StudentCourseDetailsPage.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\e2e\java\teammates\e2e\pageobjects\StudentHelpPage.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\e2e\java\teammates\e2e\pageobjects\StudentHomePage.java
/**
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\e2e\java\teammates\e2e\pageobjects\StudentProfilePage.java
/**
/**
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\e2e\java\teammates\e2e\util\BackDoor.java
/**
// Utility class
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\e2e\java\teammates\e2e\util\EmailAccount.java
/**
/**
/**
// assume user is authenticated before
// touch one API endpoint to check authentication
// existing credential missing or not working, should do authentication for the account again
/**
/**
/**
// While we are not actually sending or receiving an email, a session is required so there will be strict parsing
// of address headers when we create a MimeMessage. We are also passing in empty properties where we are expected to
// supply some values because we are not actually sending or receiving any email.
/**
/*")) {
/**
// as per the RFC2046 specification, other multipart subtypes are recognized as multipart/mixed
/*");
/**
// search in reverse order as a multipart/alternative should have their most preferred format last
// Since we are looking in reverse order, if we did not encounter a text/html first we can return the plain
// text because that is the best preferred format that we understand. If a text/html comes along later it
// means the agent sending the email did not set the html text as preferable or did not set their preferred
// order correctly, and in that case we do not handle that.
/*") || bodyPart.isMimeType("message/rfc822")) {
// we do not know how to handle the text in the multipart or there is no text
/*")) {
/*")) {
//*If prompted to log in
/*If prompted to log in
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\e2e\java\teammates\e2e\util\GmailServiceMaker.java
/**
/** Global instance of the JSON factory. */
/** Global instance of the HTTP transport. */
/**
/**
// if the scopes need to change, the user will need to manually delete
// <TestProperties.TEST_GMAIL_API_FOLDER>/StoredCredential
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\e2e\java\teammates\e2e\util\JMeterElements.java
/**
//jmeter.apache.org/usermanual/component_reference.html">Apache JMeter: Component Reference</a></p>
// Utility class
// Intentional private constructor to prevent instantiation
/**
/**
/**
/**
/**
/**
/**
/**
//localhost:8080/webapi/auth");
/**
/**
// Find regex matches in response headers
/**
/**
/**
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\e2e\java\teammates\e2e\util\LNPTestData.java
/**
/**
/**
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\e2e\java\teammates\e2e\util\package-info.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\e2e\java\teammates\e2e\util\Priority.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\e2e\java\teammates\e2e\util\PriorityInterceptor.java
/**
// This class prioritizes methods based on the following:
// 1) Orders methods based on package name as ordered/found in testng.xml
// 2) Orders methods based on package name in lexical order
// 3) Orders methods by class priority e.g. Add "@Priority(1)" to class
// 4) Orders methods by class name in lexical order
// 5) Orders methods by priority e.g. Add "@Priority(1)" to method
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\e2e\java\teammates\e2e\util\TestProperties.java
/**
/** The directory where the L&P test data files are stored. */
/** The directory where the L&P test configuration files are stored. */
/** The directory where the L&P test results are stored. */
/** The directory where HTML files for testing pages are stored. */
/** The directory where HTML files for testing email contents are stored. */
/** The directory where JSON files used to create data bundles are stored. */
/** The value of "test.app.url" in test.properties file. */
/** The version number of the application under test. */
/** The Google ID of the test instructor account. */
/** The password of the test instructor account. */
/** The Google ID of the first test student account. */
/** The password of the first test student account. */
/** The Google ID of the second test student account. */
/** The password of the second test student account. */
/** The Google ID of the test admin account. */
/** The password of the test admin account. */
/** The Google ID of the test unregistered account. */
/** The password of the test unregistered account. */
/** The value of "test.csrf.key" in test.properties file. */
/** The value of "test.backdoor.key" in test.properties file. */
/** The value of "test.selenium.browser" in test.properties file. */
/** One of the allowed values of "test.selenium.browser" in test.properties file. */
/** One of the allowed values of "test.selenium.browser" in test.properties file. */
/** The value of "test.firefox.path" in test.properties file. */
/** The value of "test.chromedriver.path" in test.properties file. */
/** The value of "test.geckodriver.path" in test.properties file. */
/** The value of "test.timeout" in test.properties file. */
/** The value of "test.persistence.timeout" in test.properties file. */
/** The value of "test.jmeter.home" in test.properties file. */
/** The value of "test.jmeter.properties" in test.properties file. */
/** The directory where credentials used in Gmail API are stored. */
// access static fields directly
//localhost:[0-9]+(/.*)?");
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\common\datatransfer\AttributesDeletionQuery.java
/**
// use builder to construct query
/**
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\common\datatransfer\CommonAccountSearchResult.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\common\datatransfer\CourseDetailsBundle.java
/**
//TODO: [CourseAttribute] remove desanitization after data migration
//creating a new course with possibly desanitized name as course name cannot be accessed directly
/**
/**
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\common\datatransfer\CourseRoster.java
/**
/**
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\common\datatransfer\CourseStats.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\common\datatransfer\CourseSummaryBundle.java
/**
/**
//TODO: [CourseAttribute] remove desanitization after data migration
//desanitization is applied to course name to ensure a well-defined order of the courses by course name
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\common\datatransfer\DataBundle.java
/**
/**
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\common\datatransfer\FeedbackParticipantType.java
// booleans represent: isValidGiver?, isValidRecipient? isValidViewer?
// Strings represents: option shown in giver select box, option shown in recipient select box,
// text displayed during feedback submission respectively.
//used to generate options for MCQ & MSQ:
// Used by feedbackResponseComment:
/**
/**
/**
/**
// Fallthrough
// Fallthrough
// Fallthrough
// Fallthrough
// Fallthrough
/**
/**
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\common\datatransfer\FeedbackResponseCommentSearchResultBundle.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\common\datatransfer\FeedbackSessionDetailsBundle.java
/**
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\common\datatransfer\FeedbackSessionQuestionsBundle.java
/**
/**
/**
/**
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\common\datatransfer\FeedbackSessionResponseStatus.java
// Sorts by studentName
// Sorts by teamName
// Compare between instructor and student
// Instructor should be at higher order compared to student
// Team 1 has higher sorting order when team 1 belongs instructor and team 2 belongs to student
// -1 represents team 1 is at higher order
// Team 2 has higher sorting order when team 2 belongs instructor and team 1 belongs to student
// 1 represents team 2 is at higher order
// Both teams belong to instructor
// Therefore team name 1 and 2 are the same, which is indicated by 0
// Both teams belong to student
// Compare on team names
// Sorts by teamName > studentName
/**
/**
/**
/**
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\common\datatransfer\FeedbackSessionResultsBundle.java
/**
/**
// For contribution questions.
// Key is questionId, value is a map of student email to StudentResultSumary
// Key is questionId, value is a map of team name to TeamEvalResult
/*
// Sorts by giverName > recipientName > qnNumber
// General questions and team questions at the bottom.
// Sorts by giverName > recipientName
// Sorts by teamName > giverName > recipientName > qnNumber
// Sorts by recipientName > giverName > qnNumber
// Sorts by teamName > recipientName > giverName > qnNumber
// Sorts by giverName > question > recipientTeam > recipientName
// Sorts by giverTeam > giverName > question > recipientTeam > recipientName
// Sorts by recipientName > question > giverTeam > giverName
// Sorts by recipientTeam > recipientName > question > giverTeam > giverName
// Sorts by recipientTeam > question > recipientName > giverTeam > giverName
// Sorts by giverTeam > question > giverName > recipientTeam > recipientName
// Sorts by recipientName > recipientEmail > giverName > giverEmail
// We change user email to team name here for display purposes.
// for TEAMS giver type, for older responses,
// the giverEmail is stored as the student giver's email in the database
// so we convert it to the team name for use in FeedbackSessionResultsBundle
// Copy the data before hiding response recipient and giver.
// unlike emailTeamNameTable, emailLastNameTable and emailTeamNameTable,
// roster.*Table is populated using the CourseRoster data directly
/**
// Hide recipient details if its not visible to the current user
// recipient type for self-feedback is the same as the giver type
// Hide giver details if its not visible to the current user
/**
/**
/**
// return person name if participant is a student
// return person name if participant is an instructor
// return team name if participantIdentifier is a team name
// return team name if participant is team identified by a member
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
// use giver type to determine recipients if recipient is "self"
// TODO code duplication between this function and in FeedbackQuestionsLogic getRecipientsForQuestion
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
// response.getResponseDetails().getAnswerHtml(response, question, this);
/**
/**
/**
/**
// An email must at least contains '@' character
/*
// TODO consider removing this to increase cohesion
// TODO: make responses to the student calling this method always on top.
/**
// sorts the questions by its natural ordering, which is by question number
// sorts the questions by its natural ordering, which is by question number
/**
/**
/**
/**
/**
/**
/**
/**
// There is a response not written by the student
// which is visible to the student
// There is a response comment visible to the student
/**
// Make class feedback always appear on top, and team responses at bottom.
/**
/**
/**
// If a instructor is also a student, the response should be considered as student's response.
/**
// getSectionFromRoster will return NO_SPECIFIC_SECTION for recipient who is Instructor or Nobody specific.
/**
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\common\datatransfer\FeedbackSessionStats.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\common\datatransfer\InstructorAccountSearchResult.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\common\datatransfer\InstructorPrivileges.java
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\common\datatransfer\InstructorSearchResultBundle.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\common\datatransfer\package-info.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\common\datatransfer\SearchResultBundle.java
/**
// prevents instantiation; to be instantiated as children classes
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\common\datatransfer\SectionDetail.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\common\datatransfer\SectionDetailsBundle.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\common\datatransfer\StudentAccountSearchResult.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\common\datatransfer\StudentResultSummary.java
/**
/** The normalized 'claimed contribution' value to be shown to the instructor. */
/** The normalized 'perceived contribution' value to be shown to the instructor. */
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\common\datatransfer\StudentSearchResultBundle.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\common\datatransfer\TeamDetailsBundle.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\common\datatransfer\TeamEvalResult.java
/**
/** submitted value is uninitialized. */
/** submitted 'Not SUre'. */
/** did Not SuBmit. */
/** submission values originally from students of the team. */
/** submission values to be shown to instructor (after normalization). */
/** average perception of team shown to instructor. Excludes self evaluations */
/** team perception shown to students. denormalized to match their own claims */
/** the values that were used to calculate normalizedAveragePerceived values. */
// List of student email's.
// The index of the student in the list is used as the index for the int arrays.
// The 2d int arrays are of the format [giverIndex][recipientIndex]
/*This is the only method that should be public. However, many of the
/**
// remove from each array values matching special values in the other
// if the student did not submit
// TODO: methods like these private and use reflection to test
// TODO: make this private and use reflection to test
// TODO: make this private and use reflection to test
// omit calculation if no data points
/** replaces 999 etc. with NA, NSB, NSU etc.
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\common\datatransfer\UserInfo.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\common\datatransfer\UserRole.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\common\datatransfer\attributes\AccountAttributes.java
/**
/**
/**
// No validation for isInstructor and createdAt fields.
/**
/**
/**
/**
/**
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\common\datatransfer\attributes\CourseAttributes.java
/**
/**
// no additional sanitization required
/**
/**
/**
/**
/**
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\common\datatransfer\attributes\EntityAttributes.java
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\common\datatransfer\attributes\FeedbackQuestionAttributes.java
/**
/** NOTE: Only use this to match and search for the ID of a known existing question entity. */
/**
/*
// These can't be changed anyway. Copy values to defensively avoid invalid parameters.
// There are `FeedbackTextQuestion` with plain text, Json without `recommendedLength`, and complete Json
// in data store. Gson cannot parse the plain text case, so we need to handle it separately.
/**
/**
/**
/**
/**
/**
// questionDescription can be null
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\common\datatransfer\attributes\FeedbackResponseAttributes.java
/**
/**
// nothing to sanitize before saving
// For Text questions, the questionText simply contains the question, not a JSON
// This is due to legacy data in the data store before there are multiple question types
/**
/**
/**
/**
/**
/**
/**
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\common\datatransfer\attributes\FeedbackResponseCommentAttributes.java
/**
/**
// Determines the type of comment giver- instructor, student, or team
// true if comment is given by response giver
/**
/**
/**
// Converts image in comment text to link.
/**
//TODO: handle the new attributes showCommentTo and showGiverNameTo
/**
/**
/**
/**
/**
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\common\datatransfer\attributes\FeedbackSessionAttributes.java
/**
// Compares end times
// If the end time is same, compares start times
// If both end and start time is same, compares session name
/**
// Check for null fields.
// Early return if any null fields
// Early return if any null fields
// If now and start are almost similar, it means the feedback session
// is open for only 24 hours.
// Hence we do not send a reminder e-mail for feedback session.
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\common\datatransfer\attributes\InstructorAttributes.java
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\common\datatransfer\attributes\package-info.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\common\datatransfer\attributes\StudentAttributes.java
/**
/**
// id is allowed to be null when the student is not registered
/**
/**
/**
/**
/**
/**
/**
/**
/**
// google id can be set to null
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\common\datatransfer\attributes\StudentProfileAttributes.java
/**
/**
// accept empty string values as it means the user has not specified anything yet.
// No validation for modified date as it is determined by the system.
// No validation for More Info. It will properly sanitized.
/**
/**
/**
/**
/**
/**
/**
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\common\datatransfer\questions\FeedbackConstantSumDistributePointsType.java
/**
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\common\datatransfer\questions\FeedbackConstantSumQuestionDetails.java
// Add two empty options by default
// TODO
/**
/**
/**
/**
/**
// Constant sum has two options for user to select.
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\common\datatransfer\questions\FeedbackConstantSumResponseDetails.java
/**
//[1, 2, 3] format
//remove []
// distribute to recipient must have array size one
// difficult to do cross-responses validation
//Check that all points are >= 0
//Check that points sum up properly
//Check that points are given unevenly for all/at least some options as per the question settings
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\common\datatransfer\questions\FeedbackContributionQuestionDetails.java
/**
//for instructor, only question view has stats.
//Student view of stats.
//List of teams with at least one response
//Each team's member(email) list
//Each team's responses
//Get each team's submission array. -> int[teamSize][teamSize]
//Where int[0][1] refers points from student 0 to student 1
//Where student 0 is the 0th student in the list in teamMembersEmail
//Each team's contribution question results.
//List of teams visible to the instructor and in the selected section
//Each team's member(email) list
//Each team's responses
//Get each team's submission array. -> int[teamSize][teamSize]
//Where int[0][1] refers points from student 0 to student 1
//Where student 0 is the 0th student in the list in teamMembersEmail
//Each team's eval results.
//Each person's results summary
//Check visibility of recipient
// TODO
//List of teams visible to the instructor and in the selected section
//Each team's member(email) list
//Each team's responses
//Get each team's submission array. -> int[teamSize][teamSize]
//Where int[0][1] refers points from student 0 to student 1
//Where student 0 is the 0th student in the list in teamMembersEmail
//Each team's eval results.
//Each person's results summary
//Check visibility of recipient
// Replace all Unset values
//For sorting purposes
/**
/**
//Initialize all as not submitted.
//Fill in submitted points
// skip instructors team (contrib questions should only have responses from student teams)
/**
// Valid answers: 0, 10, 20, .... 190, 200
// giver type can only be STUDENTS
// recipient type can only be OWN_TEAM_MEMBERS_INCLUDING_SELF
// restrictions on visibility options
/*
/**
/**
// Not sure, Equal Share, Not Submitted
// Negative share
// Positive share
/**
// Do more
// Do same
// Do less
// Do none
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\common\datatransfer\questions\FeedbackContributionResponseDetails.java
/**This is the claimed points from giver to recipient.
/**
// Not used for contribution question, due to calculations required. See corresponding function below.
// Need to get actual team name and giver/recipient emails here,
// only for getting the responseAnswer.
// TODO: check if this can be made non-static
// Valid answers: 0, 10, 20, .... 190, 200
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\common\datatransfer\questions\FeedbackMcqQuestionDetails.java
// Do not add weight to mcqWeights if the weight cannot be parsed
// Do not assign value to mcqOtherWeight if the weight can not be parsed.
// TODO change this when implementing "other, please specify" field
// Create MCQ options
// Create MCQ weights
// Create MCQ other weight value
// Add two empty options by default
// Do not calculate weighted percentage if weights are not enabled.
// If weights are allowed, show the corresponding weights of a choice.
// If weights are assigned, create the per recipient statistics table,
// otherwise pass an empty string in it's place.
// Sort the list of responseAttributes based on recipient team and recipient name.
// TODO
// Add the Response Summary Statistics to the CSV String.
// If weights are assigned, add the 'Per Recipient Statistics' to the CSV string.
// If there are Empty Mcq options entered trigger this error
// If weights are enabled, number of choices and weights should be same.
// If user enters an invalid weight for a valid choice,
// the mcqChoices.size() will be greater than mcqWeights.size(),
// in that case, trigger this error.
// If weights are not enabled, but weight list is not empty or otherWeight is not 0
// In that case, trigger this error.
// If weights are enabled, but other option is disabled, and mcqOtherWeight is not 0
// In that case, trigger this error.
// If weights are enabled, and any of the weights have negative value,
// trigger this error.
// If 'Other' option is enabled, and other weight has negative value,
// trigger this error.
//If there are duplicate mcq options trigger this error
/**
/**
/**
// Replace the value by the actual weighted percentage.
/**
/**
/**
// Get the weight of the choice.
// Add the total weight of all responses of this choice to total.
/**
/**
// If weights are assigned, CSV file should include 'Weight' and 'Weighted Percentage' column as well.
/**
/**
// Add each column data in fragments
/**
/**
/**
/**
// construct default value for responseCount
// update responseCount here
// Generate Recipient Response statistics for csv files.
/**
// Get the response attributes sorted based on Recipient Team name and recipient name.
// Generate Recipient Response statistics for result page.
/**
/**
// Generate HTML for all <td> entries using template
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\common\datatransfer\questions\FeedbackMcqResponseDetails.java
//content of other field if "other" is selected as the answer
/*
/*
// if other option is not selected and selected answer is not part of Mcq option list trigger this error.
// if other option is selected but not text is provided trigger this error
// answer given by the student
// "1" (other is selected) or "0" (other is not selected)
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\common\datatransfer\questions\FeedbackMsqQuestionDetails.java
// Do not add weight to msqWeights if the weight cannot be parsed
// Do not assign value to msqOtherWeight if the weight can not be parsed.
// Delete responses if max selectable restriction is newly added
// Delete responses if min selectable restriction is newly added
// A more strict min selectable choices restriction is placed
// A more strict max selectable choices restriction is placed
// additional checkbox for user to submit a blank response ("None of the above")
// additional checkbox for user to submit a blank response ("None of the above")
// Create MSQ weights
// Create MSQ other weight value
// Add two empty options by default
// Do not calculate weighted percentage if weights are not enabled.
// If weights are allowed, show the corresponding weights of a choice.
// Reuse Mcq result template until there is any reason to use a separate template.
// If weights are assigned, create the per recipient statistics table,
// otherwise pass an empty string in it's place.
// Sort responses based on recipient team and recipient name.
// Reuse Mcq result template until there is any reason to use a separate template.
// Reuse MCQ result templates until there is a reason to use separate templates.
// TODO
// Create 'Per recipient Stats' for csv if weights are enabled.
// Get the response attributes sorted based on Recipient Team name and recipient name.
// Add per recipient stats to csv string
// If there are Empty Msq options entered trigger this error
// If weights are enabled, number of choices and weights should be same.
// If a user enters an invalid weight for a valid choice,
// the msqChoices.size() will be greater than msqWeights.size(), in that case
// trigger this error.
// If weights are not enabled, but weight list is not empty or otherWeight is not 0
// In that case, trigger this error.
// If weight is enabled, but other option is disabled, and msqOtherWeight is not 0
// In that case, trigger this error.
// If weights are negative, trigger this error.
// If 'Other' option is enabled, and other weight has negative value,
// trigger this error.
//If there are duplicate mcq options trigger this error
/**
/**
/**
/**
// we will only show stats if there is at least one nonempty response
/**
/**
/**
// remove other answer temporarily to calculate stats for other options
// Answer string is empty when 'None of the above' option is selected,
// in that case, don't count that response.
// restore other answer if any
/**
// construct default value for responseCount
// update responseCount here
/**
// Generate HTML for all <td> entries using template
// Reuse Mcq result template until there is any reason to use a separate template.
/**
// Reuse Mcq result template until there is any reason to use a separate template.
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\common\datatransfer\questions\FeedbackMsqResponseDetails.java
// answers contain the "other" answer, if any
//content of other field if "other" is selected as the answer
// "1" if other is selected, "0" if other is not selected, null if other is disabled by the instructor
// number of Msq options selected including other option
// if other is not enabled and other is selected as an answer trigger this error
// if selected answers are not a part of the Msq option list trigger this error
// if other option is selected but no text is provided trigger this error
// if total choices selected exceed maximum choices allowed trigger this error
// if total choices selected is less than the minimum required choices
// if minimumSelectableChoices is enabled and None of the Above is selected as an answer trigger this error
// if none of the above is selected AND other options are selected trigger this error
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\common\datatransfer\questions\FeedbackNumericalScaleQuestionDetails.java
// Set default values
// need to know which recipients are hidden since anonymised recipients will not appear in the summary table
// hidden recipients do not appear in the summary table, so ignore responses with hidden recipients
/**
// Move current user to the head of the recipient list
// Skip current user as it is added to the head of the list
// need to know which recipients are hidden since anonymised recipients will not appear in the summary table
// hidden recipients do not appear in the summary table, so ignore responses with hidden recipients
// Replace current user name with "You"
// Replace general identifier with "General"
// Replace current user team with "" when recipient type is not student
// Display other recipients' team name
// Display a dash if the user has only self response
// TODO
// need to know which recipients are hidden since anonymised recipients will not appear in the summary table
// hidden recipients do not appear in the summary table, so ignore responses with hidden recipients
// General recipient type would not give self response
// Therefore average exclude self response will always be hidden
// There exists at least one average score exclude self
// Compute number of responses including user's self response
// Compute number of responses excluding user's self response
// Compute minimum score received
// Compute maximum score received
// Compute total score received
// Compute total score received excluding self
// totalScoreExcludingSelf == null when the user has only self response
// Compute average score received
// Compute average score received excluding self
// List of recipients to hide
/**
// At least 2 responses are given to any recipient other than current user
//TODO: strengthen check for step
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\common\datatransfer\questions\FeedbackNumericalScaleResponseDetails.java
/**
// out of range
// when the answer is within range but not one of the possible values
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\common\datatransfer\questions\FeedbackQuestionDetails.java
/**
/** Gets the header for detailed responses in csv format. Override in child classes if necessary. */
// Retrieve giver details
// Retrieve recipient details
// Append feedback participant comments if allowed
// Append instructor comments if allowed
/**
/**
/**
/**
/**
/**
/**
// The following function handle the display of rows between possible givers
// and recipients who did not respond to a question in feedback sessions
/**
// we do not show all possible responses
/**
/** Checks if the question has been skipped. */
// Json string contains all attributes of a `FeedbackQuestionDetails` object,
// so it is sufficient to use it to compare two `FeedbackQuestionDetails` objects.
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\common\datatransfer\questions\FeedbackQuestionType.java
/**
// TODO: dummy enum, need to migrate CONSTSUM to either CONSTSUM_OPTIONS or CONSTSUM_RECIPIENTS
/**
/**
/**
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\common\datatransfer\questions\FeedbackRankOptionsQuestionDetails.java
// Add two empty options by default
// TODO
/**
// remove the last comma
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\common\datatransfer\questions\FeedbackRankOptionsResponseDetails.java
/**
//[1, 2, 3] format
//remove []
// remove last comma
// if duplicate ranks are not allowed but have been assigned trigger this error
// if number of options ranked is less than the minimum required trigger this error
// if number of options ranked is more than the maximum possible trigger this error
// if rank assigned is invalid trigger this error
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\common\datatransfer\questions\FeedbackRankQuestionDetails.java
/**
/**
/**
// group the options/feedback response by its rank
// every answer in the same group is given the same rank
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\common\datatransfer\questions\FeedbackRankRecipientsQuestionDetails.java
/**
// at least should be able to be viewed by other students for team recipient
// at least should be able to be viewed by own team members for non-team recipient
// If response recipient is instructor, responses for current student/team will not exist.
// TODO
/**
/**
/**
// collect each giver's responses
// generate response-responseDetails pair
// resolve ties for each giver's responses
/**
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\common\datatransfer\questions\FeedbackRankRecipientsResponseDetails.java
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\common\datatransfer\questions\FeedbackRankResponseDetails.java
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\common\datatransfer\questions\FeedbackResponseDetails.java
/** A class holding the details for the response of a specific question type.
/**
// For Text questions, the answer simply contains the response text, not a JSON
// This is due to legacy data in the data store before there were multiple question types
/**
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\common\datatransfer\questions\FeedbackRubricQuestionDetails.java
// Set details
// If description sizes are invalid, default to empty descriptions.
/**
// No weights should be parsed for a null or empty sub question.
/**
/**
// TODO: need to check for exact match.
// Responses require deletion if choices change
// Responses require deletion if sub-questions change
// Create submission form
// Create submission form
// TODO display numerical value of option
// Check if existing choice for sub-question == current choice
// Get entire row
// Check if existing choice for sub-question == current choice
// Create table row header fragments
// Create table body
// Create rubric weight cell
// Get entire row
// Create rubric column options as the last row of the table
// Create edit form
// Add some choices by default
// Add some sub-questions by default
/**
// Create table row header fragments
/**
// Get entire row
/**
/**
// TODO
// table header
// table body
// Retrieve giver details
// Retrieve recipient details
// To show feedback participant comment only once for each response.
// To show instructor comment only once for each response.
// For rubric questions,
// 1) Description size should be valid
// 2) At least 2 choices
// 3) At least 1 sub-question
// 4) Choices and sub-questions should not be empty
// 5) Weights must be assigned to all cells if weights are assigned, which means
//    weight size should be equal to (numOfRubricChoices * numOfRubricSubQuestions).
// This should not happen.
// Set descriptions to empty if the sizes are invalid when extracting question details.
//Rubric choices are now allowed to be empty.
/*
/**
/**
// count frequencies
/**
/**
// calculate percentage frequencies and average value
//continue to next row if no response for this sub-question
// divide responsesFrequency by totalForSubQuestion to get percentage
// calculate the average for each sub-question
/**
/**
// <td> entries which display recipient identification details and rubric subQuestion
// <td> entries which display number of responses per subQuestion per rubric choice,
// and the corresponding weight of that choice of the specific sub-question.
// <td> entries which display aggregate statistics
// Generate HTML for all <td> entries using template
/**
// Append recipient identification details and rubric subQuestion
// Append number of responses per subQuestion per rubric choice
// Append aggregate statistics
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\common\datatransfer\questions\FeedbackRubricResponseDetails.java
/**
/*
// Parse and extract answers
// Expected length is 2.
// Failed to parse, ignore response.
// else the indexes are invalid.
// Failed to parse, ignore response.
/**
// -1 indicates no choice chosen
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\common\datatransfer\questions\FeedbackTextQuestionDetails.java
/*
//TODO: evaluate what statistics are needed for text questions later.
// TODO
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\common\datatransfer\questions\FeedbackTextResponseDetails.java
//For essay questions the response is saved as plain-text due to legacy format before there were multiple question types
// no need to do validation
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\common\datatransfer\questions\package-info.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\common\exception\ActionMappingException.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\common\exception\EnrollException.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\common\exception\EntityAlreadyExistsException.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\common\exception\EntityDoesNotExistException.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\common\exception\EntityNotFoundException.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\common\exception\ExceedingRangeException.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\common\exception\InvalidHttpParameterException.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\common\exception\InvalidHttpRequestBodyException.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\common\exception\InvalidParametersException.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\common\exception\NullHttpParameterException.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\common\exception\package-info.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\common\exception\TeammatesException.java
/**
// Utility class
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\common\exception\UnauthorizedAccessException.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\common\util\ActivityLogEntry.java
/**
// The following constants describe the positions of the attributes
// in the log message. i.e
// TEAMMATESLOG|||ACTION_NAME|||ACTION_RESPONSE|||TO_SHOW|||ROLE|||NAME|||GOOGLE_ID|||EMAIL
// |||MESSAGE(IN HTML)|||URL|||TIME_TAKEN
// Required fields
// id can be in the form of <googleId>%<time> e.g. bamboo3250%20151103170618465
// or <studentemail>%<courseId>%<time> (for unregistered students)
//     e.g. bamboo@gmail.tmt%instructor.ema-demo%20151103170618465
// Optional fields
// this field will always be true in log message for history reason
// private constructor to prevent instantiation
/**
// TEAMMATESLOG|||SERVLET_NAME|||ACTION|||TO_SHOW|||ROLE|||NAME|||GOOGLE_ID|||EMAIL|||MESSAGE(IN HTML)|||URL|||ID
/**
/**
// the number of fields is not enough, which should be an error
// TEAMMATESLOG|||ACTION_NAME|||ACTION_RESPONSE|||TO_SHOW|||ROLE|||NAME|||GOOGLE_ID|||EMAIL
// |||MESSAGE(IN HTML)|||URL|||TIME_TAKEN
/**
// Required parameters
// Optional parameters - initialized to default values
// use builder to build ActivityLogEntry
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\common\util\AppUrl.java
/**
// must either be http or https
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\common\util\Assumption.java
/**
// utility class
// Intentional private constructor to prevent instantiation.
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
// TODO remove this after all controller classes have been migrated
// Reason 1: Not all HTTP requests are POST, but null parameters for any HTTP request are equally undesirable
// Reason 2: This is applicable only at controller level
/**
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\common\util\Config.java
/**
/** The value of the application URL, or null if no server instance is running. */
/** The value of the "app.id" in build.properties file. */
/** The value of the "app.version" in build.properties file. */
/** The value of the "app.frontenddev.url" in build.properties file. */
/** The value of the "app.production.gcs.bucketname" in build.properties file. */
/** The value of the "app.backup.gcs.bucketname" in build.properties file. */
/** The value of the "app.csrf.key" in build.properties file. */
/** The value of the "app.backdoor.key" in build.properties file. */
/** The value of the "app.encryption.key" in build.properties file. */
/** The value of the "app.captcha.secretkey" in build.properties file. */
/** The value of the "app.crashreport.email" in build.properties file. */
/** The value of the "app.email.senderemail" in build.properties file. */
/** The value of the "app.email.sendername" in build.properties file. */
/** The value of the "app.email.replyto" in build.properties file. */
/** The value of the "app.email.service" in build.properties file. */
/** The value of the "app.sendgrid.apikey" in build.properties file. */
/** The value of the "app.mailgun.apikey" in build.properties file. */
/** The value of the "app.mailgun.domainname" in build.properties file. */
/** The value of the "app.mailjet.apikey" in build.properties file. */
/** The value of the "app.mailjet.secretkey" in build.properties file. */
/** The value of the "app.enable.datastore.backup" in build.properties file. */
// access static fields directly
//" : "https://") + hostname;
/**
/**
//cloud.google.com/appengine/docs/standard/java/how-requests-are-handled">https://cloud.google.com/appengine/docs/standard/java/how-requests-are-handled</a>
// This will be the case in dev server
/**
// In production, the back-end and front-end lives under the same domain
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\common\util\Const.java
/**
/*
/*
/*
// Utility class containing constants
/** This is the limit after which TEAMMATES will send error message.
/** e.g. "2014-04-01 11:59 PM UTC" */
/** Number to trim the Google ID when displaying to the user. */
/* Field sizes and error messages for invalid fields can be found
/* Text displayed to the user when the mouse hover over certain elements in
// Mcq
// Msq
// Numscale
// Contribution
// Constant sum
// Rubric
// Text Question
// TODO: rename FEEDBACK_QUESTION_CONSTSUMPOINTSPEROPTION to a more accurate name
//Email parameters
//Submission parameters for Task Queue
//Parameters for checking persistence of data during Eventual Consistency
/**
/* _PAGE/Page in the Action URI name means 'show page' */
/**
/* We omit adding the 'page' prefix to views because all of them are "pages" */
/* These are status messages that may be shown to the user */
// TODO: Let undo process to be in the Course page for now.
// Should implement to be able to undo the archiving from the home page later.
// Messages that are templates only
/** Template String. Parameters: Student's name, Course ID */
/** Template String. Parameters:  Course ID */
/**
/**
/**
/**
/**
/**
/* These indicate status of an operation, but they are not shown to the user */
// Backdoor responses
// General Error codes
// Error message used across DB level
// POST parameter null message
// HTTP parameter null message
// body parameter null message
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\common\util\EmailSendingStatus.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\common\util\EmailType.java
/**
// CHECKSTYLE.OFF:JavadocVariable enum names are self-documenting
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\common\util\EmailWrapper.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\common\util\FieldValidator.java
/**
/////////////////
// FIELD TYPES //
/////////////////
// name-related
// one more than longest official nationality name
// email-related
// others
/*
////////////////////
// ERROR MESSAGES //
////////////////////
// possible reasons for invalidity
// error message components
// generic (i.e., not specific to any field) error messages
// field-specific error messages
///////////////////////////////////////
// VALIDATION REGEX FOR INTERNAL USE //
///////////////////////////////////////
/**
/**
/**
/**
/**
/*
// utility class
// Intentional private constructor to prevent instantiation.
/////////////////////////////////////////
// VALIDATION METHODS FOR EXTERNAL USE //
/////////////////////////////////////////
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
// return early if error already exists because session name is too long etc.
// checks for unsanitized HTML characters
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
//Fails if sanitized value is not same as value
/**
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\common\util\FileHelper.java
/**
// utility class
/**
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\common\util\GoogleCloudStorageHelper.java
/**
// utility class
/**
/**
/**
/**
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\common\util\HttpRequest.java
/**
// Utility class
// Intentional private constructor to prevent instantiation.
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\common\util\HttpRequestHelper.java
/**
// utility class
/**
/**
/**
// Do not include cookie header in production for privacy reasons
/**
/**
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\common\util\JsonUtils.java
/**
// utility class
/**
/**
/**
/**
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\common\util\Logger.java
/**
/**
/**
/**
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\common\util\LogMessageGenerator.java
/**
/**
/**
/**
/**
// || Const.ActionURIs.INSTRUCTOR_COURSE_STATS_PAGE.contains(actionName);
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\common\util\NationalityHelper.java
/**
/**
//mytaskhelper.com/forums/5-faq-s/topics/98-nationality-dropdown-list"
// utility class
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\common\util\package-info.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\common\util\RecaptchaVerifier.java
/**
//developers.google.com/recaptcha/docs/verify">reCAPTCHA user response verification API</a>
/** The Google reCAPTCHA API URL to verify the response token. */
//www.google.com/recaptcha/api/siteverify";
/** The shared secret key between the TEAMMATES site and reCAPTCHA. */
/**
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\common\util\SanitizationHelper.java
/**
// utility class
/**
/**
/**
/**
/**
/**
/**
/**
//To ensure when apply sanitizeForHtml for multiple times, the string's still fine
//Regex meaning: replace '&' with safe encoding, but not the one that is safe already
/**
/**
/**
/**
/**
/**
/**
/**
//general case for punctuation
//to prevent injection
/**
//tools.ietf.org/html/rfc4180">http://tools.ietf.org/html/rfc4180</a>
/**
//tools.ietf.org/html/rfc4180">http://tools.ietf.org/html/rfc4180</a>
/**
// currentPos iterates one position beyond text length to include last chain
// format text.substring(startOfChain, currentPos) and append to result
// flip isSingleQuotationChain if chain is broken
/**
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\common\util\StatusMessage.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\common\util\StatusMessageColor.java
/**
// CHECKSTYLE.OFF:JavadocVariable
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\common\util\StringHelper.java
/**
// utility class
/**
/**
/**
/**
// Important to use the CANON_EQ flag to make sure that canonical characters
// such as é is correctly matched regardless of single/double code point encoding
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
// NOPMD loop variable deliberately increased
/**
// 1 => a, not 0 => a
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\common\util\TaskWrapper.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\common\util\Templates.java
// utility class
/**
/**
// TEXT
// MCQ
// MSQ
// Numscale
// Constant Sum
// Contribution
// Rank
// Rubric
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\common\util\ThreadHelper.java
/**
// utility class
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\common\util\TimeHelper.java
/**
// utility class
/**
// ZoneRulesProvider uses the system class loader for loading a custom provider as the default provider.
// However, GAE's system class loader includes only the Java runtime and not the application. Hence, we
// use reflection to temporarily replace the system class loader with the class loader for the current context.
// ZoneRulesProvider reads this system property to determine which provider to use as the default.
// This first reference to ZoneRulesProvider executes the class's static initialization block,
// performing the actual registration of our custom provider named in the system property above.
// The system class loader is used to load the class from the name.
// If any exceptions occur, an Error is thrown.
// Restore the original system class loader.
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
// Round to the nearest hour
// Adjust 00:00 -> 23:59
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\common\util\TzdbResourceZoneRulesProvider.java
/**
/** Type for ZoneRules. */
/** Type for ZoneOffsetTransition. */
/** Type for ZoneOffsetTransitionRule. */
/**
/**
/**
/**
// forCaching flag is ignored because this is not a dynamic provider
/**
// follow original method signature
// group
// versions
// regions
// rules
// link version-region-rules
/**
// ZoneRules.readExternal(in)
// ZoneOffsetTransition.readExternal(in)
// ZoneOffsetTransitionRule.readExternal(in)
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\common\util\Url.java
/**
// parse and validate the urlString with the built-in URL object
//" + url.getAuthority();
/**
//localhost:8080/index.jsp").getRelativeUrl()</code>
//google.com").getRelativeUrl()</code>
//teammatesv4.appspot.com/page/studentHomePage?user=abc").getRelativeUrl()</code>
/**
//localhost:8080/index.jsp").getBaseUrl()</code>
//localhost:8080</code></li>
//teammatesv4.appspot.com/index.jsp").getBaseUrl()</code>
//teammatesv4.appspot.com</code></li>
/**
/*
/**
// return the url if any of the key or the value is null or empty
// or if the key is already included in the url
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\common\util\retry\MaximumRetriesExceededException.java
/**
/**
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\common\util\retry\package-info.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\common\util\retry\Retryable.java
/**
/**
/**
/**
/**
/**
// Does nothing by default so that it can be skipped entirely in anonymous classes when not used.
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\common\util\retry\RetryableTask.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\common\util\retry\RetryableTaskReturns.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\common\util\retry\RetryableTaskReturnsThrows.java
/**
/**
/**
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\common\util\retry\RetryableTaskThrows.java
/**
/**
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\common\util\retry\RetryManager.java
/**
/**
/**
/**
/**
/**
/**
/**
// allow users to catch specific errors e.g. AssertionError
// continue retry process
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\logic\api\EmailGenerator.java
/**
// status-related strings
// feedback action strings
/**
/**
/**
/**
/**
/**
/**
// Course or session cannot be found for one student => it will be the case for all students
// Do not waste time looping through all students
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\logic\api\EmailSender.java
/**
/**
/**
// GAE Javamail is used when we need a service that is not prone to configuration failures
// and/or third-party API failures. The trade-off is the very little quota of 100 emails per day.
// GAE Javamail requires the sender email address to be of this format
/**
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\logic\api\GateKeeper.java
/**
/**
/**
/**
/**
// These methods ensures the logged in user is of a particular type.
/**
/**
/**
/**
// These methods ensures that the nominal user specified has access to a given entity
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
// These methods ensures that the nominal user specified can perform the specified action on a given entity.
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\logic\api\Logic.java
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\logic\api\package-info.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\logic\api\TaskQueuer.java
/**
// The following methods are facades to the actual logic for adding tasks to the queue.
// Using this method, the actual logic can still be black-boxed
// while at the same time allowing this API to be mocked during test.
/**
/**
// The following methods are the actual API methods to be used by the client classes
/**
/**
/**
/**
/**
/**
/**
/**
/**
// Equally spread out the emails to be sent over 1 hour
// Sets interval to a maximum of 5 seconds if the interval is too large
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\logic\core\AccountsLogic.java
/**
// prevent initialization
/**
// Retrieve institute field from one of the instructors of the course
/**
// Register the student
/**
// Register the instructor
// Update the googleId of the student entity for the instructor which was created from sample data.
// Check if this Google ID has already joined this course
// Check if this Google ID has already joined this course
/**
/**
/**
// to prevent orphan course
// the instructor is the last instructor in the course
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\logic\core\CoursesLogic.java
/**
/* Explanation: This class depends on CoursesDb class but no other *Db classes.
// prevent initialization
/**
/**
/* Create the initial instructor for the course */
// roll back the transaction
/**
/**
/**
/**
/**
//TODO Remove excessive logging after the reason why s can be null is found
//TODO Failing might not be the best course of action here.
//Maybe throw a custom exception and tell user to wait due to eventual consistency?
// Skip the course existence check since the course ID is obtained from a
// valid CourseAttributes resulting from query
/**
/**
// First student of first section
// first student of subsequent section
/**
// First student of first section
// first student of subsequent section
/**
// first student of first team
// student in the same team as the previous student
// first student of subsequent teams (not the first team)
// if last iteration
/**
// TODO: reduce calls to this function, use above function instead.
/**
/**
/**
/**
/**
/**
/**
/**
// Check that all courseIds queried returned a course.
/**
/**
/**
// Check that all courseIds queried returned a course.
/**
/**
/**
/**
/**
/**
// Check that all courseIds queried returned a course.
/**
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\logic\core\DataBundleLogic.java
/**
// prevent initialization
/**
// For ensuring only one account per Google ID is created
// For updating the student and instructor respondent lists in sessions before they are persisted
/**
// query the entity in db first to get the actual data and create document for actual entity
// contains question number before injection
/**
// question ID already injected
/**
// question ID already injected
// format of feedbackResponseId: questionNumber%giverEmail%recipient
/**
// Questions and responses will be deleted automatically.
// We don't attempt to delete them again, to save time.
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\logic\core\EmailSenderService.java
/**
/**
// accounts for the many different Exceptions from different email services
/**
// accounts for the many different Exceptions from different email services
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\logic\core\FeedbackQuestionsLogic.java
/**
// prevent initialization
/**
/**
/**
/**
// check whether the question numbers are consistent
// TODO can be removed once we are sure that question numbers will be consistent
/**
/**
/**
/**
// Return all self (creator) questions
/**
/**
// Ensure student does not evaluate himself
// Ensure instructor does not evaluate himself
// Ensure student('s team) does not evaluate own team.
// recipientEmail doubles as team name in this case.
// accepts self feedback too
/**
// remove hidden instructors
/**
// TODO the below will cause slow queries when recipients are large, find a better way
// instructor can only see students in allowed sections for him/her
// instructor can only see teams in allowed sections for him/her
/**
// Ensure student does not evaluate himself
// Ensure instructor does not evaluate himself
// Ensure student('s team) does not evaluate own team.
// recipientEmail doubles as team name in this case.
// accepts self feedback too
/**
// other question types
//fallthrough
//fallthrough
/**
// get questions in session before update
// update question
// shift other feedback questions (generate an empty "slot")
// adjust responses
/**
/**
// Silently fail if question does not exist.
// cascade delete responses for question.
// delete question
// adjust question numbers
/**
// Shifts all question numbers after questionNumberToShiftFrom down by one.
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\logic\core\FeedbackResponseCommentsLogic.java
/**
// prevent initialization
/**
/*
// right now this method only updates comment's giverSection and receiverSection for a given response
/**
/**
/**
/**
/**
/**
//in the old ver, name is always visible
//comment giver can always see
/**
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\logic\core\FeedbackResponsesLogic.java
/**
// prevent initialization
/**
/**
/**
/**
/**
/**
// Add responses that the user submitted himself
// Add responses that user is a receiver of when question is visible to
// receiver.
// many queries
// Early return if user is giver
// if response is given by team, then anyone in the team can see the response
// Refers to Giver's Team Members
// Response to team
// this is a team name
// Response to individual
// Response to team; recipient = teamName
// this is a team name
// Response to individual
/**
/**
/**
// key is feedback session name, value is a set of student emails that need respondents update
// key is feedback session name, value is a set of student emails that need respondents update
// deletes all responses given by the user to team members or given by the user as a representative of a team.
// Deletes all responses given by other team members to the user.
// update respondents
/**
// Deletes all responses given by the team.
// Deletes all responses received by the team.
/**
/**
/**
/**
/**
/**
/**
// record all giver and prepare respondents update
// delete all responses, comments of the question
/**
// key is feedback session name, value is a set of student emails that need respondents update
// key is feedback session name, value is a set of student emails that need respondents update
// update respondents
/**
// key is feedback session name, value is a set of student emails that need respondents update
// key is feedback session name, value is a set of student emails that need respondents update
// update respondents
/**
// key is feedback session name, value is a set of student emails that need respondents update
// key is feedback session name, value is a set of student emails that need respondents update
// update respondents
/**
// delete responses from the entity
// delete responses to the entity
/**
// Early return as STUDENTS covers all other student types.
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\logic\core\FeedbackSessionsLogic.java
/**
// prevent initialization
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
// instructor can only see students in allowed sections for him/her
// instructor can only see teams in allowed sections for him/her
/**
/**
// Remove responses to the hidden instructors if they have been stored already
/**
/**
/**
// Load details of students and instructors once and pass it to callee
// methods
// (rather than loading them many times).
/**
/**
/**
/**
/**
/**
/**
/**
// sort responses by giver > recipient > qnNumber
// keep track of possible recipients with no responses
// print missing responses from the current giver
// add the rows for the possible givers and recipients who have missing responses
/**
/**
/**
/**
// automated emails are required only for custom publish times
// if there is no question for students, session is complete
// if there is no question for instructor, session is complete
/**
// adjust email sending status
// reset sentOpenEmail if the session has opened but is being un-opened
// now, or else leave it as sent if so.
// reset sentClosedEmail if the session has closed but is being un-closed
// now, or else leave it as sent if so.
// also reset sentClosingEmail
// reset sentPublishedEmail if the session has been published but is
// going to be unpublished now, or else leave it as sent if so.
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
// is session closed in the past 1 hour
/**
/**
/**
/**
/**
/* Get the feedback results for user in a section iterated by questions */
// Load details of students and instructors once and pass it to callee
// methods
// (rather than loading them many times).
/* Get the feedback results for user in a section iterated by questions */
// create empty data containers to store results
// default for 'all' section selected will be EITHER case
// either giver or recipient needs to be in the selected section
// both giver and recipient must be from the selected section
//Show all questions even if no responses, unless is an ajax request for a specific question.
// create empty data containers to store results
/*
// If instructors are not restricted to view the giver's section,
// they are allowed to view responses to GENERAL, subject to visibility options
// keys of emailNameTable are participantIdentifiers,
// which consists of students' email, instructors' email, team names, or %GENERAL%.
// participants identifiers of anonymous responses are not anonymised in the tables
// return a pair of String that contains Giver/Recipient'sName (at index 0)
// and TeamName (at index 1)
// Email represents that there is no specific recipient.
// The email represents a missing *Attribute.
// It might be a team name or the *Attribute has been deleted.
// If any question is not completely answered, session is not
// completed
/**
// Allow all instructors to view always
// Allow viewing if session is viewable to students
// Allow students to view the feedback session if there are questions for them
// Allow students to view the feedback session
// if there are any questions for instructors to answer
// where the responses of the questions are visible to the students
/**
// change constant to actual maximum size.
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\logic\core\InstructorsLogic.java
/**
// prevent initialization
/* ====================================
/**
/**
/* ====================================
/**
/**
/**
/**
// cascade responses
// cascade comments
// cascade respondents
/**
/**
/**
/**
// cascade delete instructors
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\logic\core\JavamailService.java
/**
//cloud.google.com/appengine/docs/java/mail/">https://cloud.google.com/appengine/docs/java/mail/</a>
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\logic\core\MailgunService.java
/**
//cloud.google.com/appengine/docs/java/mail/mailgun">https://cloud.google.com/appengine/docs/java/mail/mailgun</a>
/**
//api.mailgun.net/v3/" + Config.MAILGUN_DOMAINNAME + "/messages");
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\logic\core\MailjetService.java
/**
//cloud.google.com/appengine/docs/java/mail/mailjet">https://cloud.google.com/appengine/docs/java/mail/mailjet</a>
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\logic\core\package-info.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\logic\core\ProfilesLogic.java
/**
// prevent initialization
/**
/**
/**
/**
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\logic\core\SendgridService.java
/**
//cloud.google.com/appengine/docs/flexible/java/sending-emails-with-sendgrid">https://cloud.google.com/appengine/docs/flexible/java/sending-emails-with-sendgrid</a>
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\logic\core\StudentsLogic.java
/**
// prevent initialization
/**
/**
/**
/**
// cascade email change, if any
// adjust submissions if moving to a different team
// update the new section name in responses
// TODO: check to delete comments for this section/team if the section/team is no longer existent in the course
/**
/**
// no conflicts
/**
// no conflicts
/**
/**
// the student is the only student in the team
/**
// Cascade delete students
/**
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\logic\core\TaskQueuesLogic.java
/**
/**
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\storage\api\AccountsDb.java
/**
/**
/**
// update only if change
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\storage\api\CoursesDb.java
/**
/**
/**
/**
// update only if change
/**
/**
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\storage\api\EntitiesDb.java
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\storage\api\FeedbackQuestionsDb.java
/**
/**
/**
/**
/**
/**
// update only if change
/**
/**
/**
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\storage\api\FeedbackResponseCommentsDb.java
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
// update only if change
/**
/**
/**
/**
/**
/**
/**
/**
// comment does not have unique constraint
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\storage\api\FeedbackResponsesDb.java
/**
/**
// the following process makes use of the key pattern of feedback response entity
// see generateId() in FeedbackResponse.java
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
// update only if change
// need to recreate the entity
/**
/**
/**
// responses in section with giver or recipient as None are added to respective section selected
// also show responses in section with giver but without recipient
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\storage\api\FeedbackSessionsDb.java
/**
/**
// remove duplications
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
// The objectify library does not support throwing checked exceptions inside transactions
// update only if change
/**
/**
/**
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\storage\api\InstructorsDb.java
/**
/**
// defensive coding for legacy data
/**
// defensive coding for legacy data
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
// update only if change
/**
// update only if change
/**
/**
/**
// cannot use direct key query as email of an instructor can be changed
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\storage\api\OfyHelper.java
/**
/**
// enable the ability to use java.time.Instant to issue query
// Invoked by GAE at application startup.
// GAE does not currently invoke this method.
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\storage\api\package-info.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\storage\api\ProfilesDb.java
/**
/**
/**
// NOPMD
// update only if change
/**
/**
/**
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\storage\api\StudentsDb.java
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
// invalid registration key cannot be decrypted
/**
/**
/**
/**
/**
/**
// delete the old student
// update only if change
/**
/**
// If registration key detected is not unique, something is wrong
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\storage\entity\Account.java
/**
// required by Objectify
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\storage\entity\BaseEntity.java
// CHECKSTYLE.OFF:IllegalImport can be removed after upgrading to Objectify V6
// CHECKSTYLE.ON:IllegalImport
/**
/**
//github.com/objectify/objectify/blob/v5.2/src/main/java/com/googlecode/objectify/annotation/Translate.java">@Translate annotation</a>
//github.com/objectify/objectify/blob/v5.2/src/main/java/com/googlecode/objectify/impl/translate/TranslatorFactory.java">TranslatorFactory</a></p>
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\storage\entity\Course.java
/**
// required by Objectify
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\storage\entity\CourseStudent.java
/**
/**
/**
// required by Objectify
/**
/**
/**
/**
// for legacy data. do not remove even if not covered in test.
/**
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\storage\entity\FeedbackQuestion.java
/**
// TODO: where applicable, we should specify fields as @Unindex to prevent GAE from building unnecessary indexes.
/**
// Check for consistency in questionLogic/questionAttributes.
// (i.e. if type is own team, numberOfEntities must = 1).
// required by Objectify
// Allow GAE to generate key.
/**
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\storage\entity\FeedbackResponse.java
/**
/**
/**
// required by Objectify
/**
// Format is feedbackQuestionId%giverEmail%receiver
// i.e. if response is feedback for team: qnId%giver@gmail.com%Team1
//         if response is feedback for person: qnId%giver@gmail.com%reciever@email.com
/**
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\storage\entity\FeedbackResponseComment.java
/**
/** The foreign key to locate the Course object. */
/** The foreign key to locate the FeedbackSession object. */
/** The foreign key to locate the FeedbackQuestion object. */
/** The giver of the comment.
/** Role of a comment giver.
/** The foreign key to locate the FeedbackResponse object commented on. */
/** Response giver section. */
/** Response receiver section. */
/** True if the comment is given by a feedback participant. */
/** The creation time of this comment. */
/** The comment from giver about the feedback response. */
/** The e-mail of the account that last edited the comment. */
/** The time in which the comment is last edited. */
// required by Objectify
// Auto generated by GAE
/**
/**
// true as the default value if the field is null
/**
/**
// TODO: Remove after data migration
/**
// TODO: Remove after data migration
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\storage\entity\FeedbackSession.java
/**
// PMD.UnusedPrivateField and SingularField are suppressed
// as feedbackSessionId is persisted to the database
/**
// required by Objectify
/**
// Format is feedbackSessionName%courseId
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\storage\entity\Instructor.java
/**
/**
/**
/** The foreign key to locate the Course object. */
/** Whether the associated course is archived. */
/** The instructor's name used for this course. */
/** The instructor's email used for this course. */
/** The instructor's registration key used for joining. */
// required by Objectify
// setId should be called after setting email and courseId
/**
// Format: email%courseId e.g., adam@gmail.com%cs1101
/**
/**
/**
// the legacy data corresponding to isArchived is stored as a null value (not a missing value)
// in the datastore
/**
/**
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\storage\entity\package-info.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\storage\entity\StudentProfile.java
/**
// PMD.UnusedPrivateField and Singular field as suppressed
// as this is used by Objectify to specify Account as @Parent entity
/* only accepts "male", "female" or "other" */
// required by Objectify
/**
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\storage\search\FeedbackResponseCommentSearchDocument.java
/**
// prepare the response giver name and recipient name
// it's actually a team name here
// populate related Students/Instructors information
// in case of exceeding size limit for document
// produce searchableText for this feedback comment document:
// it contains courseId, courseName, feedback session name, question number, question title,
// response answer commentGiverEmail, commentGiverName, related people's information, and commentText
// courseId are used to filter documents visible to certain instructor
// searchableText and createdDate are used to match the query string
/**
// get instructor's information
// get FeedbackResponseComment from results
// search engine out of sync as SearchManager may fail to delete documents due to GAE error
// the chance is low and it is generally not a big problem
// get related response from results
// get related question from results
// get related session from results
// construct responseId to comment map
// construct questionId to response map
// construct session name to question map
// construct session name to session map
// get giver and recipient names
// in the old ver, name is always visible
// comment giver can always see
// giver can always see
// TODO: also need to decrease the size for (fr)CommentSearchResults|studentSearchResults
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\storage\search\FeedbackResponseCommentSearchQuery.java
/**
//TODO: verify section
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\storage\search\InstructorSearchDocument.java
/**
// produce searchableText for this instructor document:
// contains courseId, courseName, instructorName, instructorEmail, instructorGoogleId, instructorRole, displayedName
// searchableText is used to match the query string
/**
// search engine out of sync as SearchManager may fail to delete documents due to GAE error
// the chance is low and it is generally not a big problem
//TODO TO REMOVE AFTER DATA MIGRATION - needed to work with code before the sanitizing was removed
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\storage\search\InstructorSearchQuery.java
/**
/**
// method not used
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\storage\search\package-info.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\storage\search\SearchDocument.java
/**
/**
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\storage\search\SearchManager.java
/**
//cloud.google.com/appengine/docs/java/search/">https://cloud.google.com/appengine/docs/java/search/</a>
// utility class
/**
/**
/*
// Update the final message to be shown if the task fails after maximum retries
// A transient error can be retried
// A non-transient error signals that the operation should not be retried
/**
/**
/*
// Update the list of documents to be put during the next retry
// Update the final message and data to be shown if the task fails after maximum retries
// If there is at least one transient error, continue retrying
// If all errors are non-transient, do not continue retrying
/**
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\storage\search\SearchQuery.java
/**
/**
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\storage\search\StudentSearchDocument.java
/**
// produce searchableText for this student document:
// it contains courseId, courseName, studentEmail, studentName studentTeam and studentSection
// this is used to filter documents visible to certain instructor
// searchableText and createdDate are used to match the query string
/**
/**
// search engine out of sync as SearchManager may fail to delete documents due to GAE error
// the chance is low and it is generally not a big problem
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\storage\search\StudentSearchQuery.java
/**
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\automated\AutomatedAction.java
/**
/**
/**
/**
/**
/**
// Sets an arbitrary retry code outside of the range 200-299 so GAE will automatically retry upon failure
/** Executes the action. */
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\automated\AutomatedActionExceptionTestAction.java
/**
// deliberately done for testing
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\automated\AutomatedActionFactory.java
/**
// Cron jobs
// Task queue workers
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\automated\AutomatedServlet.java
/**
// used as fallback
// Do not log task queue worker actions to prevent excessive logging
// Response status is not set to 4XX to 5XX to prevent GAE retry mechanism because
// if the cause of the exception is improper request URL, no amount of retry is going to help.
// The action will be inaccurately marked as "success", but the severe log can be used
// to trace the origin of the problem.
// Task will be recognised as failed and GAE retry mechanism can kick in
// Task will be recognised as failed and GAE retry mechanism can kick in
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\automated\CompileLogsAction.java
/**
// Sets the range to 6 minutes to slightly overlap the 5 minute email timer
// Do not send any emails if there are no severe logs; prevents spamming
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\automated\CronJobServlet.java
/**
//cloud.google.com/appengine/docs/standard/java/config/cron">https://cloud.google.com/appengine/docs/standard/java/config/cron</a>
// Cron job schedulers use GET request
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\automated\DatastoreBackupAction.java
/**
//cloud.google.com/datastore/docs/export-import-entities">https://cloud.google.com/datastore/docs/export-import-entities</a>
//cloud.google.com/datastore/docs/reference/admin/rest/v1/projects/export">https://cloud.google.com/datastore/docs/reference/admin/rest/v1/projects/export</a>
//www.googleapis.com/auth/datastore");
//datastore.googleapis.com/v1/projects/" + appId + ":export");
// Documentation is wrong; the param name is output_url_prefix instead of outputUrlPrefix
//" + Config.BACKUP_GCS_BUCKETNAME + "/datastore-backups/" + timestamp);
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\automated\FeedbackSessionClosedRemindersAction.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\automated\FeedbackSessionClosingRemindersAction.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\automated\FeedbackSessionOpeningRemindersAction.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\automated\FeedbackSessionPublishedEmailWorkerAction.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\automated\FeedbackSessionPublishedRemindersAction.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\automated\FeedbackSessionRemindEmailWorkerAction.java
/**
// Filter out instructors who have submitted the feedback session
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\automated\FeedbackSessionRemindParticularUsersEmailWorkerAction.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\automated\FeedbackSessionResendPublishedEmailWorkerAction.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\automated\FeedbackSessionUnpublishedEmailWorkerAction.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\automated\FeedbackSessionUpdateRespondentWorkerAction.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\automated\InstructorCourseJoinEmailWorkerAction.java
/**
// The instructor is queried using the `id`of instructor as it ensures that the
// instructor is retrieved (and not null) even if the index building for
// saving the new instructor takes more time in GAE.
// The instructor `id` can be constructed back using (instructorEmail%courseId)
// because instructors' email cannot be changed before joining the course.
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\automated\package-info.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\automated\SendEmailWorkerAction.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\automated\StudentCourseJoinEmailWorkerAction.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\automated\TaskQueueServlet.java
/**
//cloud.google.com/appengine/docs/standard/java/taskqueue/">https://cloud.google.com/appengine/docs/standard/java/taskqueue/</a>
// Task queue workers use POST request
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\controller\Action.java
/** An 'action' to be performed by the system. If the logged in user is allowed
/** This is used to ensure unregistered users don't access certain pages in the system. */
/** The regkey may also contain a next url parameter as well. */
/** This will be the admin user if the application is running under the masquerade mode. */
/** This is the 'nominal' user. Need not be the logged in user */
/** This is the unregistered and not loggedin student's attributes. */
/** The full request URL e.g., {@code /page/instructorHome?user=abc&course=c1}. */
/** Parameters received with the request. */
/** Execution status info to be shown to he admin (in 'activity log'). */
// TODO: make this a list?
/** Execution status info to be shown to the user. */
/**
/** Session that contains status message information. */
/** Session token used in forms/links to actions requiring origin validation. */
/** This is to get the blobInfo for any file upload from prev pages. */
/** This is for authentication at Action Level. */
/** Initializes variables.
// validateOriginIfRequired(); // This has been migrated to new action class
// Set error status forwarded from the previous action
/**
/*
// These methods are used for user authentication
/**
// Unregistered but loggedin user
// Unregistered and not logged in access given to page
// !Const.SystemParams.PAGES_ACCESSIBLE_WITHOUT_GOOGLE_LOGIN.contains(request.getRequestURI());
// Allowing admin to masquerade as another user
// Unregistered user
// since admin is masquerading, fabricate a regkey
// let the user go through as this is a persistence issue
// TODO: encrypt the email as currently anyone with the regkey can
//       get the email because of this redirect:
// boolean userNeedsRegistrationForPage =
//         !Const.SystemParams.PAGES_ACCESSIBLE_WITHOUT_REGISTRATION.contains(request.getRequestURI())
//         && !Const.SystemParams.PAGES_ACCESSIBLE_WITHOUT_GOOGLE_LOGIN.contains(request.getRequestURI());
// return userNeedsRegistrationForPage && userIsNotRegistered;
// These methods are used for CRUD operations on urls used for redirecting users to login page
/* ------------------------------------------------ */
/**
// get the result from the child class.
// set error flag of the result
// Set the common parameters for the response
// Pass status message using session to prevent XSS attack
/**
/**
// TODO handle the EntityDoesNotExistException properly in the method body so it does not
// have to be re-thrown here
/**
/**
/**
/**
/**
/**
/**
/**
//TODO: Replace this with a overloaded constructor in AjaxResult?
/**
/**
/**
/**
/**
/**
// ===================== Utility methods used by some child classes========
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\controller\ActionFactory.java
// CHECKSTYLE.OFF:AvoidStarImport as there would be many (>100) import lines added if we were to import all of the ActionURIs
// CHECKSTYLE.ON:AvoidStarImport
/**
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\controller\ActionResult.java
/**
/** The URI that represents the result.
/** True if the action did not complete successfully. */
/** The 'nominal' user for whom the action was executed. */
/** A list of status messages to be shown to the user. */
/**
/**
/**
/**
/**
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\controller\AjaxResult.java
/** The data that will be sent back to the caller. */
/**
// If the list of status messages can be found in the session and it is not empty,
// means there are status messages to be shown to the user, add them to the page data.
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\controller\FileDownloadResult.java
/*
// Content-Disposition is a header on the HTTP response to suggest a filename
// if the contents of the response is saved to a file.
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\controller\InstructorFeedbackResultsDownloadAction.java
// Parameter is used to throw the exceeding range exception in test
// initialize SectionDetail correctly
// not tested as the test file is not large enough to reach this catch block
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\controller\InstructorFeedbackResultsPageAction.java
// this is for ajax loading of the html table in the modal
// "(Non-English characters not displayed properly in the downloaded file? click here)"
// TODO move into another action and another page data class
// default view: sort by question, statistics shown, grouped by team.
// bundle for all questions and all sections
// Warning for section wise viewing in case of many responses.
// Warning for section wise does not make sense if there are no multiple sections.
// load page structure without responses
// all sections and all questions for question view
// set up question tables, responses to load by ajax
// set isComplete to true to prevent behavior when there are too many responses,
// such as the display of warning messages
// bundle for all questions, with a selected section and selected section detail
// depending on the section detail, this function will filter accordingly
// bundle for a specific question, with all sections
// bundle for a specific question and a specific section
// not tested as the test file is not large enough to reach this catch block
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\controller\InstructorSearchPageAction.java
/**
//display search tips and tutorials
//Start searching
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\controller\InstructorStudentRecordsAjaxPageAction.java
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\controller\package-info.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\controller\RedirectResult.java
/** A 'redirect' type result. That is, the Browser will be required to make
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\controller\ShowPageResult.java
/**
/** The data that will be used to render the page. */
/* These two are required for the 'status message' section of the page
/**
// If the list of status messages can be found in the session and it is not empty,
// means there are status messages to be shown to the user, add them to the page data.
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\datatransfer\InstructorFeedbackResultsPageViewType.java
// replace _ to - to keep it consistent with old behavior
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\datatransfer\package-info.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\pagedata\InstructorFeedbackResultsPageData.java
// isLargeNumberOfRespondents is an attribute used for testing the ui, for ViewType.Question
// used for html table ajax loading
// for question view
// for giver > question > recipient, recipient > question > giver,
// giver > recipient > question, recipient > giver > question
// TODO multiple page data classes inheriting this for each view type,
// rather than an enum determining behavior in many methods
/**
// if there is more than one question, we omit generation of responseRows,
// and load them by ajax question by question
/**
// results page to be loaded by ajax
// Note that if the page needs to load by ajax, then responses may be empty too,
// therefore the check for ajax to come before this
// no responses, nothing to initialize
// Iterate through the primary participant
// construct missing participant panels for the previous team
// Build participant panel for the current primary participant
// for the last section with responses
/**
// Iterate through the primary participant
// construct missing participant panels for the previous team
// Build participant panel for the current participant
// for the last section with responses
// first build secondary participant panels for the primary participant panel
// construct the primary participant panel
// questionToDetailsMap.get(question).getQuestionAdditionalInfoHtml(
// question.getQuestionNumber(), String.format(additionalInfoId, giverIndex, recipientIndex));
// participant has no responses for the current question
// Construct InstructorFeedbackResultsGroupByQuestionPanel for the current giver
// Moderation button on the participant panels are only shown is the panel is a giver panel,
// and if the participant is a student
// teamsWithResponses can include teams of anonymous student ("Anonymous student #'s Team")
// and "-"
// update the teams for the previous section
// create for every remaining team in the section, participantResultsPanels for every team member
// Create missing participants panels for the previous team
/**
/**
// skip team if no responses,
// or if the team is an anonymous student's team or an anonymous team, or is "-"
/**
// questionDetails.getQuestionAdditionalInfoHtml(question.questionNumber, additionalInfoId);
// setup classes, for loading responses by ajax
// ajax_submit: user needs to click on the panel to load
// ajax_auto: responses are loaded automatically
/**
/**
// keep track of possible givers who did not give a response
// keep track of possible recipients without a response from the current giver
// keep track of possible participant who did not give/receive a response to/from the participantIdentifier
/**
// Legacy data has "student's Team" as response giver when response giver is a team
// TODO consider using Url in future
// TODO the check for determining whether to show a profile picture
// can be improved to use isStudent
/**
// questionDetails.getNoResponseTextInHtml(giverIdentifier, possibleRecipient, bundle, question);
/**
// questionDetails.getNoResponseTextInHtml(recipientIdentifier, possibleGiver, bundle, question);
/**
/**
/*
// TODO: place below getter methods for template objects in some init method common to all views
// Only used for testing the ui
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\pagedata\InstructorSearchPageData.java
/**
/* Whether checkbox is checked for search input */
/* Whether search results are empty */
/* Tables containing search results */
// 1 table for each course
// question.getQuestionDetails().getQuestionAdditionalInfoHtml(questionNumber, "");
// responseEntry.getResponseDetails().getAnswerHtmlInstructorView(question.getQuestionDetails());
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\pagedata\InstructorStudentRecordsAjaxPageData.java
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\pagedata\package-info.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\pagedata\PageData.java
/**
/** The user for whom the pages are displayed (i.e. the 'nominal user').
/* These util methods simply delegate the work to the matching *Helper
/**
/**
/**
/**
/**
// TODO investigate and fix the differences between question.isResponseVisibleTo and this method
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\template\ElementTag.java
/**
/**
/**
/**
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\template\FeedbackResponseCommentRow.java
//TODO TO REMOVE AFTER DATA MIGRATION
// For feedback participant comment
// for adding comments
// meta data for form
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\template\FeedbackResponsePersonRow.java
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\template\FeedbackResponseRow.java
// questionDetails.getQuestionAdditionalInfoHtml(this.questionNumber,
// personType + "-" + personIndex + "-session-" + fbIndex);
// response.getResponseDetails().getAnswerHtmlInstructorView(questionDetails);
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\template\FeedbackResultsTable.java
// Checks and find the perceived contrib response for a student without submission
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\template\FeedbackSessionPublishButton.java
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\template\FeedbackSessionRow.java
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\template\InstructorFeedbackResponseComment.java
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\template\InstructorFeedbackResultsFilterPanel.java
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\template\InstructorFeedbackResultsGroupByParticipantPanel.java
/**
// One InstructorFeedbackResultsSecondaryParticipantPanelBody for each secondary participant
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\template\InstructorFeedbackResultsGroupByQuestionPanel.java
/**
/**
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\template\InstructorFeedbackResultsModerationButton.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\template\InstructorFeedbackResultsNoResponsePanel.java
// TODO: Support for users who are both instructor and student
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\template\InstructorFeedbackResultsParticipantPanel.java
// if false, then participant is a recipient
// email, team name, or %GENERAL%
// Shift panels for representing missing responses to the bottom
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\template\InstructorFeedbackResultsQuestionTable.java
// store the attributes of the question for the non-display purposes
// such as form inputs
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\template\InstructorFeedbackResultsRemindButton.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\template\InstructorFeedbackResultsResponsePanel.java
// The indexes are used for the parameters of js functions for handling response comments
// TODO  investigate using question number instead of tracking an index
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\template\InstructorFeedbackResultsResponseRow.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\template\InstructorFeedbackResultsSecondaryParticipantPanelBody.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\template\InstructorFeedbackResultsSectionPanel.java
// A mapping from team name to a list of participant panels. Each participant panel is for one member of the team
/**
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\template\InstructorFeedbackResultsSessionPanel.java
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\template\package-info.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\template\QuestionTable.java
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\template\ResponseRow.java
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\template\SearchFeedbackSessionDataTable.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\template\SearchStudentsTable.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\template\StudentListSectionData.java
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\template\StudentListStudentData.java
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\template\StudentListTeamData.java
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\webapi\action\Action.java
/**
// buffer to store the request body
/**
/**
// Access control level lower than required
// All-access pass granted
// All other cases: to be dealt in case-by-case basis
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\webapi\action\ActionFactory.java
/**
// Even though this is a DELETE action, PUT is used as DELETE does not allow usage of response body
//STUDENTS APIs
//STUDENT APIs
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\webapi\action\ActionResult.java
/**
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\webapi\action\AdminExceptionTestAction.java
/**
// deliberately done for testing
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\webapi\action\ArchiveCourseAction.java
/**
// Set the archive status and status shown to user and admin
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\webapi\action\AuthType.java
/**
/**
/**
/**
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\webapi\action\BasicFeedbackSubmissionAction.java
/**
/**
/**
// should not moderate question which instructors cannot see
/**
/**
/**
/**
/**
// should not view response under preview mode
/**
/**
/**
// validate the response itself
// validate responses of the question
// TODO: It's troublesome to validate Rank Recipient question's responses as REST requests are sent concurrently.
// need to find way to do so.
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\webapi\action\BinCourseAction.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\webapi\action\BinFeedbackSessionAction.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\webapi\action\ConfirmFeedbackSessionSubmissionAction.java
/**
/**
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\webapi\action\CreateAccountAction.java
/**
// Only admins can create new accounts
/**
// replace email
// replace name
// replace course
// Strategy to Generate New Demo Course Id:
// a. keep the part of email before "@"
//    replace "@" with "."
//    replace email host with their first 3 chars. eg, gmail.com -> gma
//    append "-demo"
//    to sum up: lebron@gmail.com -> lebron.gma-demo
//
// b. if the generated courseId already exists, create another one by appending a integer to the previous courseId.
//    if the newly generate id still exists, increment the id, until we find a feasible one
//    eg.
//    lebron@gmail.com -> lebron.gma-demo  // already exists!
//    lebron@gmail.com -> lebron.gma-demo0 // already exists!
//    lebron@gmail.com -> lebron.gma-demo1 // already exists!
//    ...
//    lebron@gmail.com -> lebron.gma-demo99 // already exists!
//    lebron@gmail.com -> lebron.gma-demo100 // found! a feasible id
//
// c. in any cases(a or b), if generated Id is longer than FieldValidator.COURSE_ID_MAX_LENGTH, shorten the part
//    before "@" of the initial input email, by continuously removing its last character
/**
/**
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\webapi\action\CreateCourseAction.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\webapi\action\CreateFeedbackQuestionAction.java
/**
// validate questions (giver & recipient)
// validate questions (question details)
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\webapi\action\CreateFeedbackResponseAction.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\webapi\action\CreateFeedbackResponseCommentAction.java
/**
// Set up visibility settings
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\webapi\action\CreateFeedbackSessionAction.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\webapi\action\CreateInstructorAction.java
/**
/* Process adding the instructor and setup status to be shown to user and admin */
/**
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\webapi\action\CsvResult.java
/**
/*
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\webapi\action\DeleteAccountAction.java
/**
// Only admins can delete accounts
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\webapi\action\DeleteCourseAction.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\webapi\action\DeleteDataBundleAction.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\webapi\action\DeleteFeedbackQuestionAction.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\webapi\action\DeleteFeedbackResponseAction.java
/**
// verify user is the giver of the response
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\webapi\action\DeleteFeedbackResponseCommentAction.java
/**
// giver, allowed by default
// Case 1: the delete request comes from instructor
// Case 2: the delete request comes from the feedback response giver
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\webapi\action\DeleteFeedbackSessionAction.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\webapi\action\DeleteInstructorAction.java
/**
//allow access to admins or instructor with modify permission
// Deleting last instructor from the course is not allowed if you're not the admin
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\webapi\action\DeleteStudentAction.java
/**
// if student is not found, fail silently
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\webapi\action\DeleteStudentProfilePictureAction.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\webapi\action\DeleteStudentsAction.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\webapi\action\DowngradeAccountAction.java
/**
// Only admins can downgrade accounts
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\webapi\action\EnrollStudentsAction.java
/**
// The student has been enrolled in the course.
// Unsuccessfully enrolled students will not be returned.
// The student is new.
// Unsuccessfully enrolled students will not be returned.
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\webapi\action\GetAccountAction.java
/**
// Only admins can downgrade accounts
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\webapi\action\GetAuthInfoAction.java
/**
// Login information is available to everyone
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\webapi\action\GetCourseAction.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\webapi\action\GetCourseEnrollStudentsAction.java
/**
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\webapi\action\GetCourseJoinStatusAction.java
/**
// Any user can use a join link as long as its parameters are valid
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\webapi\action\GetCoursesAction.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\webapi\action\GetCourseSectionNamesAction.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\webapi\action\GetFeedbackQuestionRecipientsAction.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\webapi\action\GetFeedbackQuestionsAction.java
/**
// filter out unmodifiable questions
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\webapi\action\GetFeedbackResponsesAction.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\webapi\action\GetFeedbackSessionAction.java
/**
// hide some attributes for submission
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\webapi\action\GetFeedbackSessionsAction.java
/**
// hide session not visible to student
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\webapi\action\GetFeedbackSessionStudentResponseAction.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\webapi\action\GetFeedbackSessionSubmittedGiverSetAction.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\webapi\action\GetHasResponsesAction.java
/**
//Only an instructor of the feedback session can check responses for questions within it.
//prefer question check over course checks
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\webapi\action\GetInstructorAction.java
/**
// TODO implement this when necessary
// TODO implement this when necessary
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\webapi\action\GetInstructorPrivilegeAction.java
/**
// fetching privilege for a particular instructor role.
// is getting privilege of another instructor
// course level privileges.
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\webapi\action\GetInstructorsAction.java
/**
// get partial details of instructors with information hiding
// student should belong to the course
// get all instructors of a course without information hiding
// this need instructor privileges
// hide information
// get all instructors of a course without information hiding
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\webapi\action\GetLocalDateTimeInfoAction.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\webapi\action\GetNationalitiesAction.java
/**
// Anyone can fetch the nationality data
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\webapi\action\GetOngoingSessionsAction.java
/**
// Only admins can get the list of all ongoing sessions
//test for bounds
//test for bounds
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\webapi\action\GetSessionResponseStatsAction.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\webapi\action\GetSessionResultsAction.java
/**
// Allow additional filter by question ID (equivalent to question number) and section name
// TODO optimize the logic layer to get rid of functions that are no longer necessary
// Question number and section name filters are not applied here
// TODO do something
// TODO do something else
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\webapi\action\GetStudentAction.java
/**
/** String indicating ACCESS is not given. */
/** Message indicating that a student not found. */
// hide information if not an instructor
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\webapi\action\GetStudentCoursesAction.java
/**
/**
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\webapi\action\GetStudentProfileAction.java
/**
// Student access his own profile
// Access someone else's profile
// The student has not registered.
// create one on the fly
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\webapi\action\GetStudentProfilePictureAction.java
/**
/** Indicates ACCESS is not given. */
/** Indicates profile picture not found. */
//viewing someone else's photo
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\webapi\action\GetStudentsAction.java
/**
// request to get all students of a course by instructor
// request to get team member by current student
// request to get all students of a course by instructor
// request to get team members by current student
// hide information for students
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\webapi\action\GetStudentsAsCsvAction.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\webapi\action\GetTimeZonesAction.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\webapi\action\ImageResult.java
/**
/** The blob key for the image. */
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\webapi\action\InstructorGetCoursesAction.java
/**
/**
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\webapi\action\InstructorInfo.java
/**
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\webapi\action\Intent.java
/**
/**
/**
/**
/**
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\webapi\action\JoinCourseAction.java
/**
// Any user can use a join link as long as its parameters are valid
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\webapi\action\JsonResult.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\webapi\action\LegacyUrlMapper.java
/**
// TODO
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\webapi\action\LogoutServlet.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\webapi\action\OriginCheckFilter.java
/**
// nothing to do
// Can bypass CSRF check with the correct key
// Requests with missing referrer information are given the benefit of the doubt
// to accommodate users who choose to disable the HTTP referrer setting in their browser
// for privacy reasons
/**
//teammatesv4.appspot.com/page/instructorCourseDelete?courseid=abcdef
//mail.google.com/mail/u/0/
//teammatesv4.appspot.com
//mail.google.com
//teammatesv4.appspot.com/page/instructorCourseDelete?courseid=abcdef
//teammatesv4.appspot.com/page/instructorCoursesPage
//teammatesv4.appspot.com
//teammatesv4.appspot.com
// due to MalformedURLException
// Exception to the rule: front-end dev server requesting data from back-end dev server
// Newly-created session
// nothing to do
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\webapi\action\package-info.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\webapi\action\PostStudentProfilePictureAction.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\webapi\action\PublishFeedbackSessionAction.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\webapi\action\PutDataBundleAction.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\webapi\action\RemindFeedbackSessionResultAction.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\webapi\action\RemindFeedbackSessionSubmissionAction.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\webapi\action\ResetAccountAction.java
/**
// Only admins can reset accounts
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\webapi\action\RestoreCourseAction.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\webapi\action\RestoreFeedbackSessionAction.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\webapi\action\SearchAccountsAction.java
/**
// Only admins can get accounts directly
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\webapi\action\SearchStudentsAndFeedbackSessionDataAction.java
/**
// Only instructor can search
//Start searching
/*
/**
/* Tables containing search results */
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\webapi\action\SendErrorReportAction.java
/**
// Anyone can submit an error report
// Anyone can submit an error report
// Severe logs will trigger email to the system admin
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\webapi\action\SendJoinReminderEmailAction.java
/**
// this is sending registration emails to all students in the course and we will check if the instructor
// canmodifystudent for course level since for modifystudent privilege there is only course level setting for now
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\webapi\action\SessionLinksRecoveryAction.java
/**
// no specific access control needed.
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\webapi\action\StudentGetCourseDetailsAction.java
/**
/**
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\webapi\action\StudentInfo.java
/**
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\webapi\action\UnpublishFeedbackSessionAction.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\webapi\action\UpdateCourseAction.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\webapi\action\UpdateFeedbackQuestionAction.java
/**
// update old value based on current request
// validate questions (giver & recipient)
// validate questions (question details)
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\webapi\action\UpdateFeedbackResponseAction.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\webapi\action\UpdateFeedbackResponseCommentAction.java
/**
// giver, allowed by default
// Edit comment text
// edit visibility settings
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\webapi\action\UpdateFeedbackSessionAction.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\webapi\action\UpdateInstructorAction.java
/**
/**
/**
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\webapi\action\UpdateInstructorPrivilegeAction.java
/**
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\webapi\action\UpdateInstructorPrivilegesAbstractAction.java
/**
/**
//check if session-specific permissions are to be used
/**
/**
/**
/**
/**
// indicate that section group covers the section
// and mark that this section is special
/**
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\webapi\action\UpdateStudentAction.java
/**
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\webapi\action\UpdateStudentProfileAction.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\webapi\action\WebApiServlet.java
/**
// used as fallback
// This exception may not be caught because GAE kills the request soon after throwing it
// In that case, the error message in the log will be emailed to the admin by a separate cron job
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\webapi\action\WebPageServlet.java
/**
//www.google.com/recaptcha/ https://www.gstatic.com/recaptcha/",
//www.google.com/recaptcha/",
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\webapi\output\AccountData.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\webapi\output\AdminSearchResultData.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\webapi\output\ApiOutput.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\webapi\output\AuthInfo.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\webapi\output\CourseArchiveData.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\webapi\output\CourseData.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\webapi\output\CoursesData.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\webapi\output\CourseSectionNamesData.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\webapi\output\FeedbackQuestionData.java
/**
// the visibility types are mixed in feedback participant type
// therefore, we convert them to visibility types
// specially handling for contribution questions
// TODO: remove the hack
// remove the redundant visibility type as GIVER_TEAM_MEMBERS is just RECIPIENT_TEAM_MEMBERS
// contribution question keep the redundancy for legacy reason
// TODO: remove the abstraction after migration
// need to migrate CONSTSUM to either CONSTSUM_OPTIONS or CONSTSUM_RECIPIENTS
// correct to either CONSTSUM_OPTIONS or CONSTSUM_RECIPIENTS
// TODO: remove after data migration
// distributePointsFor is added after forceUnevenDistribution, see #8577
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\webapi\output\FeedbackQuestionRecipientData.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\webapi\output\FeedbackQuestionRecipientsData.java
/**
// sort by name
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\webapi\output\FeedbackQuestionsData.java
/**
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\webapi\output\FeedbackResponseCommentData.java
/**
// TODO
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\webapi\output\FeedbackResponseData.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\webapi\output\FeedbackResponsesData.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\webapi\output\FeedbackSessionData.java
/**
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\webapi\output\FeedbackSessionPublishStatus.java
/**
/**
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\webapi\output\FeedbackSessionsData.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\webapi\output\FeedbackSessionStatsData.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\webapi\output\FeedbackSessionStudentResponseData.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\webapi\output\FeedbackSessionStudentsResponseData.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\webapi\output\FeedbackSessionSubmissionStatus.java
/**
/**
/**
/**
/**
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\webapi\output\FeedbackSessionSubmittedGiverSet.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\webapi\output\FeedbackVisibilityType.java
/**
/**
/**
/**
/**
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\webapi\output\HasResponsesData.java
/**
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\webapi\output\InstructorData.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\webapi\output\InstructorPermissionRole.java
/**
/**
/**
/**
/**
/**
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\webapi\output\InstructorPrivilegeData.java
/**
/**
/**
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\webapi\output\InstructorsData.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\webapi\output\JoinLinkData.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\webapi\output\JoinState.java
/**
/**
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\webapi\output\JoinStatus.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\webapi\output\LocalDateTimeInfo.java
/**
/**
/**
/**
/**
/**
/**
/**
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\webapi\output\MessageOutput.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\webapi\output\NationalitiesData.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\webapi\output\NumberOfEntitiesToGiveFeedbackToSetting.java
/**
/**
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\webapi\output\OngoingSession.java
/**
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\webapi\output\OngoingSessionsData.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\webapi\output\package-info.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\webapi\output\ResponseVisibleSetting.java
/**
/**
/**
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\webapi\output\SessionLinksRecoveryResponseData.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\webapi\output\SessionResultsData.java
/**
// If the giver is the user, show the real name of the recipient
// since the giver would know which recipient he/she gave the response to
// TODO fetch feedback response comments
// Student does not need to know the teams for giver and/or recipient
// TODO fetch feedback response comments
// For instructor view
// For student view
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\webapi\output\SessionVisibleSetting.java
/**
/**
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\webapi\output\StudentData.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\webapi\output\StudentProfileData.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\webapi\output\StudentProfilePictureResults.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\webapi\output\StudentsData.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\webapi\output\TimeZonesData.java
/**
// timezone name => offset from UTC in seconds
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\webapi\request\AccountCreateRequest.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\webapi\request\BasicRequest.java
/**
/**
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\webapi\request\CourseArchiveRequest.java
/**
//nothing to validate
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\webapi\request\CourseBasicRequest.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\webapi\request\CourseCreateRequest.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\webapi\request\CourseUpdateRequest.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\webapi\request\ErrorReportRequest.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\webapi\request\FeedbackQuestionBasicRequest.java
/**
/**
// TODO remove this after migrate CONSTSUM to either CONSTSUM_OPTIONS or CONSTSUM_RECIPIENTS
/**
/**
// specially handling for contribution questions
// TODO: remove the hack
// add the redundant participant type OWN_TEAM_MEMBERS even if it is just RECIPIENT_TEAM_MEMBERS
// contribution question keep the redundancy for legacy reason
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\webapi\request\FeedbackQuestionCreateRequest.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\webapi\request\FeedbackQuestionUpdateRequest.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\webapi\request\FeedbackResponseBasicRequest.java
/**
/**
// TODO remove this after migrate CONSTSUM to either CONSTSUM_OPTIONS or CONSTSUM_RECIPIENTS
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\webapi\request\FeedbackResponseCommentBasicRequest.java
/**
// TODO decide what to validate
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\webapi\request\FeedbackResponseCommentCreateRequest.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\webapi\request\FeedbackResponseCommentUpdateRequest.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\webapi\request\FeedbackResponseCreateRequest.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\webapi\request\FeedbackResponseUpdateRequest.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\webapi\request\FeedbackSessionBasicRequest.java
/**
/**
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\webapi\request\FeedbackSessionCreateRequest.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\webapi\request\FeedbackSessionStudentRemindRequest.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\webapi\request\FeedbackSessionUpdateRequest.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\webapi\request\InstructorCreateRequest.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\webapi\request\InstructorPrivilegeUpdateRequest.java
/**
// course level privileges should not be present.
// only session level privileges should be present.
/**
/**
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\webapi\request\package-info.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\webapi\request\StudentProfileUpdateRequest.java
/**
// no specific validation needed here.
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\webapi\request\StudentsEnrollRequest.java
/**
// Initialize to handle users make a http request with empty body.
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\main\java\teammates\ui\webapi\request\StudentUpdateRequest.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\BaseComponentTestCase.java
/**
// GaeSimulation is not thread safe
/*
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\BaseTestCase.java
/**
/**
/**
// CHECKSTYLE.OFF:AbbreviationAsWordInName|MethodName the weird name is for easy spotting.
// CHECKSTYLE.ON:AbbreviationAsWordInName|MethodName
/**
/**
/*
// This method is adapted from JUnit 5's assertThrows.
// Once we upgrade to JUnit 5, their built-in method shall be used instead.
// As per reference method's specification
/**
// This interface is adapted from JUnit 5's Executable interface.
// Once we upgrade to JUnit 5, this interface shall no longer be necessary.
/**
// CHECKSTYLE.OFF:IllegalThrows
// CHECKSTYLE.ON:IllegalThrows
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\BaseTestCaseWithDatastoreAccess.java
/**
// Ignore time field as it is stamped at the time of creation in testing
// Ignore time field as it is stamped at the time of creation in testing
// pretend keys match because the key is generated only before storing into database
// For these fields, we consider null and "" equivalent.
// pretend keys match because the key is generated only before storing into database
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\BaseTestCaseWithMinimalGaeEnvironment.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\BaseTestCaseWithObjectifyAccess.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\package-info.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\action\BaseActionTest.java
/**
/**
/**
/** Executes the action and returns the result.
/** Executes the action and returns the result.
/** Executes the action and returns the result.
/** Executes the action and returns the result.
/**
/**
/**
/*
//we omit checking for admin access because these are covered by UI tests
//No need to check for instructors of the same course since even other instructors can access.
/*
//not checking for non-masquerade mode because admin may not be an instructor
//not checking for non-masquerade mode because admin may not be a student
/*
/**
/**
/**
/**
/**
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\action\InstructorFeedbackResultsDownloadActionTest.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\action\InstructorFeedbackResultsPageActionTest.java
/**
// see setup()
// either will be chosen by default when a section is selected
// accessControl--filtering of the result is tested in FeedbackSessionsLogicTest,
// so the test here about filtering is not rigorous
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\action\InstructorStudentRecordsAjaxPageActionTest.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\action\package-info.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\architecture\ArchitectureTest.java
/**
// TODO fix these violations
// TODO fix this violation
// TODO remove the next after migration
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\architecture\package-info.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\automated\AutomatedServletTest.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\automated\BaseAutomatedActionTest.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\automated\FeedbackSessionClosedRemindersActionTest.java
/**
// Session is closed recently
// fsLogic will set the flag to false
// Ditto, but with disabled closed reminder
// fsLogic will set the flag to false
// Still in grace period; closed reminder should not be sent
// fsLogic will set the flag to false
// 5 students and 5 instructors in course1
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\automated\FeedbackSessionClosingRemindersActionTest.java
/**
// Modify session to close in 24 hours
// fsLogic will set the flag to true
// Ditto, but disable the closing reminder
// fsLogic will set the flag to true
// 1 session not yet opened; do not send the closing reminder
// fsLogic will set the flag to true
// 5 students and 5 instructors in course1, 1 student has completed the feedback session
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\automated\FeedbackSessionOpeningRemindersActionTest.java
/**
// Close the session and re-open with the opening time 1 day before
// 5 students and 5 instructors in course1
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\automated\FeedbackSessionPublishedEmailWorkerActionTest.java
/**
// 5 students and 5 instructors in course1
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\automated\FeedbackSessionPublishedRemindersActionTest.java
/**
// Publish session by moving automated publish time
// Publish session by moving automated publish time and disable publish reminder
// Do a manual publish
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\automated\FeedbackSessionRemindEmailWorkerActionTest.java
/**
// re-read from Datastore to update the respondents list
// 1 student and 4 instructors sent reminder, 1 instructor notified
// notification to only requesting instructors
// Ensure that every email recipient is accounted for
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\automated\FeedbackSessionRemindParticularUsersEmailWorkerActionTest.java
/**
// send 3 emails as specified in the submission parameters
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\automated\FeedbackSessionResendPublishedEmailWorkerActionTest.java
/**
// send 2 emails as specified in the submission parameters
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\automated\FeedbackSessionUnpublishedEmailWorkerActionTest.java
/**
// 5 students and 5 instructors in course1
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\automated\FeedbackSessionUpdateRespondentWorkerActionTest.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\automated\InstructorCourseJoinEmailWorkerActionTest.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\automated\package-info.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\automated\StudentCourseJoinEmailWorkerActionTest.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\browsertests\AdminAccountDetailsPageUiTest.java
/**
//no links or input validation to check
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\browsertests\AdminSearchPageUiTest.java
/**
/**
// Instructor table
// Student table
/**
/**
// courseName resides in tooltip and is expected to be sanitized in the attribute
// adjustments made based on differences in sanitization used in fn:escapeXml
/**
/**
// courseName resides in tooltip and is expected to be sanitized in the attribute
// adjustments made based on differences in sanitization used in fn:escapeXml
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\browsertests\AdminSessionsPageUiTest.java
/**
// no test data used in this test
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\browsertests\AllAccessControlUiTests.java
/**
// This test suite requires some real accounts; Here, we inject them to the test data.
// getHomePage();
//cannot access admin while logged in as student
// AppUrl nonExistentActionUrl = createUrl("/page/nonExistentAction");
// AppPage.getNewPageInstance(browser, nonExistentActionUrl, NotFoundPage.class);
// getHomePage().clickStudentLogin();
// getHomePage().clickInstructorLogin();
// getHomePage().clickInstructorLogin();
//cannot access directly
//cannot access by masquerading either
// A simple regex check is enough because we do full HTML tests
// elsewhere
// currentPage.changePageType(NotAuthorizedPage.class);
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\browsertests\AppPageUiTest.java
/**
// no test data used in this test
// users of this API are not supposed to let the following case happen
// empty table--trivial case, will not be tested
// empty cell--will not be tested
// cannot find table--will not be tested
// cannot find columns--will not be tested
//TODO: add test cases for other methods in AppPage
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\browsertests\AutomatedSessionRemindersTest.java
/**
/*
// Set closing time of one feedback session to tomorrow
// Set closing time of one feedback session to 30 mins ago
// Set opening time for one feedback session to yesterday
//Published time for one feedback session already set to some time in the past.
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\browsertests\BaseFeedbackQuestionUiTest.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\browsertests\FeedbackConstSumOptionQuestionUiTest.java
/**
//TODO: move/create other ConstSumOption question related UI tests here.
//i.e. results page, submit page.
// TODO: Check that after deleting, the value is cleared
/**
/**
/**
// Make sure that constSumPointsTotal radio button is selected by default
// Verify that constSumPointsForEachOption field is disabled
// Select constSumPointsPerOption radio button
// Verify that constSumPoints field is disabled
// Select constSumPointsTotal radio button.
// Verify that constSumPointsForEachOption field is disabled
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\browsertests\FeedbackConstSumRecipientQuestionUiTest.java
/**
//TODO: move/create other ConstSumRecipient question related UI tests here.
//i.e. results page, submit page.
/**
// Make sure that constSumPointsTotal radio button is selected by default
// Verify that constSumPointsForEachRecipient field is disabled
// Select constSumPointsPerOption radio button
// Verify that constSumPoints field is disabled
// Select constSumPointsTotal radio button.
// Verify that constSumPointsForEachRecipient field is disabled
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\browsertests\FeedbackContributionQuestionUiTest.java
/**
//TODO: move/create other Contribution question related UI tests here.
//i.e. results page, submit page.
//no question specific options to test
// default (first option)
//Check invalid feedback paths are disabled.
//Javascript should hide giver/recipient options that are not STUDENTS to OWN_TEAM_MEMBERS_INCLUDING_SELF
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\browsertests\FeedbackMcqQuestionUiTest.java
/**
//TODO: move/create other MCQ question related UI tests here.
//i.e. results page, submit page.
//Make the generate options checkbox unchecked
// TODO: Check that after deleting, the value is cleared
//NOTE: Tests feedback giver/recipient and visibility options are copied from previous question.
/**
// Check if the MCQ weights column are visible or not.
// Check the 'other' option is disabled and otherWeight cell is hidden
// Check Assign MCQ weights Enabled but other option disabled
// Assign Other option and test that other weight cell is displayed.
// Uncheck checkboxes for consistency among other tests,
// otherwise these settings will persist after cancelling the question form
// Uncheck the 'Choices are weighted' checkbox.
// Cancel question
// Check if the 'Choices are weighted' checkbox unchecked by default.
// Check if the MCQ weights column hidden by default
// Fill MCQ choices and check corresponding weight values
// Verify MCQ other weight default value
// verify html page
// Delete the question
// Add a question with valid weights to check front-end validation
// Edit the question to enter invalid weight values
// Check validation for MCQ weight cells
// Check validation for empty other weight
// Check validation for the weight cells added by 'add option' button
// Check validation for mcq weight box
// Check validation for other weight
// Check validation for weight cells added by 'Add Option' button
// Delete the question.
// Fill MCQ choices and corresponding weight values
// Check that weights have been added correctly
// Check that weights have been added correctly
// Test for choice that has only spaces
// Choices with only spaces
// The question form removes invalid choices,
// So, the corresponding weights should be removed as well, without throwing an error.
// Check that the invalid choice and the corresponding weight cell is removed from the question.
// Check that weight has not been added to the question.
// Size of weight list should remain 3 as weight has not been added.
// Delete the question.
// Add a question to test edit weight feature.
// Fill MCQ choices and check corresponding weight values
// verify weights for the question
// verify html page
// Test visibility of mcq weights and checkbox before selecting mcq generated option.
// Check that 'choices are weighted' checkbox is hidden
// Uncheck the generated option checkbox
// Check that weight fields are again visible after unchecking generated option,
// and also check that all the fields have the default values stored.
// Add One option and check MCQ assign weight checkbox to check the mcq weight field value.
// Check the other option to test the value of other weight
// Create the Action URI for 'MCQ Weights Session' to show the result page.
// This will collapse the particular question 1 panel
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\browsertests\FeedbackMsqQuestionUiTest.java
/**
//TODO: move/create other MSQ question related UI tests here.
//i.e. results page, submit page.
//Make the generate options checkbox unchecked
// TODO: Check that after deleting, the value is cleared
// Check min/max selectable restrictions for
// new MSQ question with custom options
// Check min/max selectable restrictions for
// existing MSQ question with custom options
// Check min/max selectable restrictions for new
// MSQ question with options generated from students
// Check min/max selectable restrictions for existing
// MSQ question with options generated from students
// checking inputs after enabling maxSelectableChoices restriction
// when maxSelectableChoices = numOfOptions and
// an option is removed, maxSelectableChoices should decrease
// add an option back, maxSelectableChoices should remain same
// enable minSelectableChoices restriction only
// check inputs after enabling minSelectableChoices
// when minSelectableChoices = numOfOptions and
// an option is removed, minSelectableChoices should decrease
// add an option back, minSelectableChoices should remain same
// enable minSelectableChoices and maxSelectableChoices
// check inputs after enabling minSelectableChoices and maxSelectableChoices
// if maxSelectableChoices = minSelectableChoices and
// maxSelectableChoices is decreased, minSelectableChoices should also decrease
// when minSelectableChoices = maxSelectableChoices = numOfOptions and an option
// is removed, both minSelectableChoices and maxSelectableChoices should decrease
// add an option back, both minSelectableChoices and maxSelectableChoices should remain same
// disable minSelectableChoices and maxSelectableChoices
/**
// Check minSelectableChoices/maxSelectableChoices restrictions
// for MSQ question with options generated from students
// Check minSelectableChoices/maxSelectableChoices
// restrictions for MSQ question with options generated from teams
// enable minSelectableChoices/maxSelectableChoices
// restrictions, change generated options for selection
// disable minSelectableChoices and maxSelectableChoices
// checking inputs after enabling maxSelectableChoices
// enable minSelectableChoices restriction only
// enable minSelectableChoices and maxSelectableChoices restrictions
// check inputs after enabling minSelectableChoices and maxSelectableChoices
// set maxSelectableChoices = numOfOptions and minSelectableChoices = numOfOptions,
// then decreasing maxSelectableChoices must decrease minSelectableChoices too
// disable minSelectableChoices and maxSelectableChoices
/**
// Check if the MSQ weights column are visible or not.
// Check the 'other' option is disabled and otherWeight cell is hidden
// Check Assign MSQ weights Enabled but other option disabled
// Assign Other option and test that other weight cell is displayed.
// Uncheck checkboxes for consistency among other tests,
// otherwise these settings will persist after cancelling the question form
// Uncheck the 'Choices are weighted' checkbox.
// Cancel question
// Check if the 'Choices are weighted' checkbox unchecked by default.
// Check if the MSQ weights column hidden by default
// Fill MSQ choices and check corresponding weight values
// Verify MSQ other weight default value
// verify html page
// Delete the question
// Add a question with valid weights to check front-end validation
// Edit the question to enter invalid weight values
// Check validation for MSQ weight cells
// Check validation for empty other weight
// Check validation for the weight cells added by 'add option' button
// Check validation for Msq weight box
// Check validation for other weight
// Check validation for weight cells added by 'Add Option' button
// Delete the question.
// Fill MSQ choices and corresponding weight values
// Check that weights have been added correctly
// Check that weights have been added correctly
// Test for choice that has only spaces
// Choices with only spaces
// The question form removes invalid choices,
// So, the corresponding weights should be removed as well, without throwing an error.
// Check that the invalid choice and the corresponding weight cell is removed from the question.
// Check that weight has not been added to the question.
// Size of weight list should remain 3 as weight has not been added.
// Delete the question.
// Add a question to test edit weight feature.
// Fill MSQ choices and check corresponding weight values
// verify weights for the question
// verify html page
// Test visibility of msq weights and checkbox before selecting msq generated option.
// Check that 'choices are weighted' checkbox is hidden
// Uncheck the generated option checkbox
// Check that weight fields are again visible after unchecking generated option,
// and also check that all the fields have the default values stored.
// Add One option and check MSQ assign weight checkbox to check the msq weight field value.
// Check the other option to test the value of other weight
// Create the Action URI for 'MCQ Weights Session' to show the result page.
// This will collapse the particular question 1 panel
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\browsertests\FeedbackNumScaleQuestionUiTest.java
/**
//TODO: move/create other NumScale question related UI tests here.
//i.e. results page, submit page.
//Tests javascript that automatically makes max = min+1 when max is <= min.
//Reset values
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\browsertests\FeedbackRankQuestionUiTest.java
/**
// verifies that question submit form without existing responses loads correctly
// to check if deleting responses work
// test rank messages
// try to submit with error
// Submit
// Go back to submission page and verify html
// try to submit duplicate ranks for question that permits it
// Go back to submission page
// to verify that the question submit form with existing response works correctly
// Question with only min options to be ranked restriction
// Question with only max options to be ranked restriction
// Question with both min and max options to be ranked restriction
// Question with only min recipients to be ranked restriction
// Question with only max recipients to be ranked restriction
// Question with both min and max options to be ranked restriction
// todo
// try to submit with insufficient non-blank option
// blank option at the start and end, to check they are removed
// Ensure that rank options is cleared.
// Unchecks and check to auto-fill with 1
// Verify that fields are editable
// Should end up with 4 choices, including (1) and (2)
// ticking "Maximum number of options a respondent must rank" checkbox only,
// should enable the maxOptionsToBeRanked input field only, with correct attributes
// ticking "Minimum number of options a respondent must rank" checkbox only,
// should enable the minOptionsToBeRanked input field only, with correct attributes
// ticking both "Minimum number of options a respondent must rank" checkbox and
// "Maximum number of options a respondent must rank" checkbox must enable both
// minOptionsToBeRanked and maxOptionsToBeRanked input fields, with correct attributes
// when maxOptionsToBeRanked = minOptionsToBeRanked,
// decreasing maxOptionsToBeRanked must decrease minOptionsToBeRanked too
// when maxOptionsToBeRanked = minOptionsToBeRanked,
// increasing minOptionsToBeRanked must increase maxOptionsToBeRanked too
// when maxOptionsToBeRanked = numOfOptions and maxOptionsToBeRanked = minOptionsToBeRanked,
// removing an option must decrease maxOptionsToBeRanked and minOptionsToBeRanked
// There are 2 instructors
// ticking "Maximum number of options a respondent must rank" checkbox only,
// should enable the maxOptionsToBeRanked input field only, with correct attributes
// ticking "Minimum number of options a respondent must rank" checkbox only,
// should enable the minOptionsToBeRanked input field only, with correct attributes
// ticking both "Minimum number of options a respondent must rank" checkbox and
// "Maximum number of options a respondent must rank" checkbox must enable both
// minOptionsToBeRanked and maxOptionsToBeRanked input fields, with correct attributes
// when maxOptionsToBeRanked = minOptionsToBeRanked,
// increasing minOptionsToBeRanked must increase maxOptionsToBeRanked too
// when maxOptionsToBeRanked = minOptionsToBeRanked,
// decreasing maxOptionsToBeRanked must decrease minOptionsToBeRanked too
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\browsertests\FeedbackRubricQuestionUiTest.java
/**
// Question view
// Giver Recipient Question View
// Giver Question Recipient View
// Recipient Question Giver View
// Recipient Giver Question View
// Question view
// Done in testStudentSubmitPage
// Select table cell
// Submit
// Go back to submission page and verify html
// Submit another feedback response using another student's account
// Checks if the empty weight box is focused after clicking on 'Save question' button.
// If it is, that means the front-end validation works and the question is not submitted.
// Check if the weight cells added by 'Add Column' button are 'required' or not.
// Check if the weight cells added by 'Add Row' button are 'required' or not.
// Check if the 'required' attribute is removed and the question is successfully added or not,
// after the checkbox is unchecked.
// TODO somebody do this?
// Click edit button
// Check that fields are editable
// Check question text is updated
// Edit sub-question for row 1
// Add new sub-question
// Remove existing sub-questions
// Add new sub-question
// Remove new sub-question
// Should end up with 1 question
// Edit choice for col 1
// Add new choice
// Remove existing choice
// Add new choice
// Remove new choice
// Should end up with 4 choices, including (1) and (2)
// Edit the weight of the first choice
// Edit description for 0-0
// Edit description for a new row, to test if the js generated html works.
// Should end up with 2 rubric descriptions, (0) and (1)
// new column index 4
// checking move column for new column and row
// new column index 5
// new row index 2
// move last column to first
// move second column to last
// check buttons for new rubric question
// move last column to first
// move second column to last
/**
// This determines which column needs to be swapped and compared with the current column.
// Value 1 indicates column needs to be moved right. Swaps and comparisons happen accordingly.
// Value -1 indicates column needs to be moved left. Swaps and comparisons happen accordingly.
// swap current column with column
// to the left/right depending on offset
// this tests whether the JS validation disallows empty rubric options
// add a new question
// start editing it
// try to remove everything
// TODO check if the rubric column and link is indeed empty
// add something so that we know that the elements are still there
// and so that we don't get empty sub question error
// Check if the weight cells are visible or not.
// Uncheck checkboxes for consistency among other tests,
// otherwise these settings will persist after cancelling the question form
// Uncheck the 'Choices are weighted' checkbox.
// Check weight cells are hidden when checkbox is unchecked.
// Cancel question
// Fill choices and check corresponding weight values
// verify html page
// Delete the question
// Fill existing weight cells.
// Check that weights have been added correctly
// Weight list should contain 2 list (one for each subquestion) containing 4 weights each.
// Check weight values.
// Fill weight cells added with the new sub question
// Check that weights have been added successfully
// Check weights for each cell
// Fill weight cells added with the new sub question
// Check that weights have been added successfully
// All subquestions should have 5 cells attached after adding an additional column.
// Check weights for each cell
// Empty sub question
// Fill weight cells added with the new sub question
// Check that weights for empty sub question have not been added.
// The size of the weight list should remain same if adding weights for empty sub question fails.
// Delete the question
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\browsertests\InstructorCourseDetailsPageUiTest.java
/**
// see beforeMethod()
// use both the student accounts injected for this test
//No input validation required
// student2 is yet to register, student1 is already registered
// get user authenticated so that we can access emails of them
// mark all emails as read to start from a clean state
// Hiding of the 'Send invite' link is already covered by content test.
//  (i.e., they contain cases of both hidden and visible 'Send invite' links.
// verify that all students did not receive reminders
// verify an unregistered student received reminder
// verify a registered student did not receive a reminder
// verify if sort is preserved after sending invite
// This is the full HTML verification for Instructor Course Details Page, the rest can all be verifyMainHtml
//the first table is the hidden table used for comments' visibility options
// ______TS("link: download student list");
// AppUrl studentListDownloadUrl = createUrl(Const.ActionURIs.INSTRUCTOR_COURSE_STUDENT_LIST_DOWNLOAD)
//                                 .withUserId("CCDetailsUiT.instr")
//                                 .withCourseId("CCDetailsUiT.CS2104");
// detailsPage.verifyDownloadLink(studentListDownloadUrl);
//Use ${test.student1} etc.
/**
// wait for some time for possible emails to arrive in the student's inbox
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\browsertests\InstructorCourseEditPageUiTest.java
/**
// This is the full HTML verification for Instructor Course Edit Page, the rest can all be verifyMainHtml
// Add instructor
// Edit instructor
// Add instructor
// Edit instructor
// not displayed to students
// select the role as Custom for instr1
// deselect some privileges from Co-owner default values
// after 3 sections added, no more things to add
// course level
// section level
// session level
// course level
// section level
// session level
// Create an registered instructor with all privileges except modifying instructors
// Create an unregistered instructor with co-owner privilege
// Delete own instructor role
// Delete other instructors
// Create another registered instructor with co-owner privilege
// Delete own instructor role
// Restore own instructor role to ensure remaining test cases work properly
/**
// TODO: use navigateTo instead
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\browsertests\InstructorCourseEnrollPageUiTest.java
/**
// This is the full HTML verification for Instructor Course Enroll Page, the rest can all be verifyMainHtml
/* We test both empty and non-empty courses because the generated
// Modify team for student within section
// Modify section and team
// A student with no comment
// A new student with name containing accented characters
// This is the full HTML verification for Instructor Course Enroll Results Page, the rest can all be verifyMainHtml
// Check 'Edit' link
// Ensure students were actually enrolled
// Make the course empty
// A student with no comment
// A new student with name containing accented characters
// Check 'Edit' link
// Ensure students were actually enrolled
// Check 'Edit' link
// Ensure students were actually enrolled
// A new student with no email input
// A new student with invalid email input
// A new student with invalid team name
// A new student with invalid name
// Enroll a student with a script in the name
// Check that the script does not appear on the InstructorCourseEnrollResult page
// Check that the script does not appear on the InstructorCourseEnroll page either
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\browsertests\InstructorCourseJoinConfirmationPageUiTest.java
/**
// use the instructor account injected for this test
/*covered in testJoinConfirmation()
// test content here to make test finish faster
// this test uses accounts from test.properties
// This is the full HTML verification for Instructor Course Join Confirmation Page,
// the rest can all be verifyMainHtml
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\browsertests\InstructorCoursesPageUiTest.java
/**
/* Comments given as 'Explanation:' are extra comments added to train
/* Explanation: This is made a global variable for convenience
/* Explanation: These two lines persist the test data on the server. */
/* Explanation: Ideally, there should not be 'state leaks' between
/*
// delete if it exists
/* Explanation: We bunch together everything as one test case instead
/* Explanation: We do 'non-invasive' (i.e., no changes to datastore) tests first */
// Explanation: Checks the rendering of the page content.
// Explanation: Checks the ajax request for course stats.
// Explanation: Checks if links going out of the page are correct
// Explanation: Checks if client-side input validation for fields
/* Explanation: We do 'invasive' tests last */
// Explanation: Checks 'actions' that can be performed using the page.
/* Explanation: The above categorization of test cases is useful in
/* Explanation: The page rendering is slightly different based on
// This is the full HTML verification for Instructor Courses Page, the rest can all be verifyMainHtml
// for course CS1101, current instructor cannot modify course or modify students
/* Explanation: We test each of 'view' links and 'enroll' links.
/* Explanation: When checking links, we check the destination page
/* Explanation: If the validation is done through one JS function
//one invalid case
//Checking max-length enforcement by the text boxes
/* Explanation: We test at least one valid case and one invalid case.
//this is a old instructor whose archive status is not set and is by default false
//after click archive button, new value will be assigned to instructor's isArchive attribute
//after this, his own archive status for this course will not be affected by other instructors
//of the same course
//this instructor already has his own non-null archive status
//so other instructors' archiving actions will not affect his own status
// TODO: Handling for the failure of archive and unarchive is still not good
// Need more improvement
// only possible if someone else delete the course while the user is viewing the page
// only possible if someone else delete the course while the user is viewing the page
// Delete and cancel
// Delete and confirm
// Delete all and cancel
// Delete all and confirm
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\browsertests\InstructorCourseStudentDetailsEditPageUiTest.java
/**
// no links to check
// This is the full HTML verification for Instructor Course Student Edit Page, the rest can all be verifyMainHtml
// Verify data
// Verify data
// Due to Google ID reset
// Verify adding the original student again does not overwrite the edited entity
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\browsertests\InstructorCourseStudentDetailsPageUiTest.java
/**
// This is the full HTML verification for Instructor Student Details Page, the rest can all be verifyMainHtml
// the helper here is configured to be able to view studentDetailsPage
// TODO: add test for the comment box in this page
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\browsertests\InstructorEditStudentFeedbackPageUiTest.java
/**
// test data is refreshed before each test case
// Full HTML verification already done in InstructorFeedbackSubmitPageUiTest
// Full HTML verification already done in InstructorFeedbackSubmitPageUiTest
// Unselect the mcq choice to remove response
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\browsertests\InstructorFeedbackEditCopyUiTest.java
/**
// Full HTML verification already done in InstructorFeedbackEditPageUiTest
// Full HTML verification already done in InstructorFeedbackEditPageUiTest
// Full HTML verification already done in InstructorFeedbackEditPageUiTest
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\browsertests\InstructorFeedbackEditPageUiTest.java
/**
/** This contains data for the feedback session to be edited during testing. */
// see prepareData()
// This is the full HTML verification for Instructor Feedback Edit Page, the rest can all be verifyMainHtml
// test uncommon settings for 'send emails'
// The statement below is a 'dummy' but valid statement to wait for the data in back-end to be persistent
// TODO: to implement a more sophisticated method to wait for the persistence of data
// uncommon settings panel not in default will be automatically expanded
// test uncommon settings for 'session responses visibility'
// The statement below is a 'dummy' but valid statement to wait for the data in back-end to be persistent
// TODO: to implement a more sophisticated method to wait for the persistence of data
// test expanded uncommon settings section
// uncommon settings panel not in default will be automatically expanded
// Restore defaults
// Do a backdoor 'manual' publish.
// Ensuring that the settings did not default back to original values after manual publishing
// Restore defaults
// check if each question panel is expandable
//TODO: use simple element checks instead of html checks after adding names to the checkboxes
//      in the edit page (follow todo in instructorsFeedbackEdit.js)
//change back
// use getAttribute("textContent") instead of getText
// because of the row of Recipient's Team Members is not displayed
// Add 2 questions
// Enable edit mode before testing canceling
// Delete both questions to reset the status for the following tests
// edit so that both questions have the same question number
// verify both can be edited
// fix inconsistent state
// Check that the duplicated question is added to the feedback session
// Content is not tested as it follows the same logic for copy question which is tested
// Remove the question duplicated to not affect other test cases
// revert back to state expected by tests after this by deleting new copied questions
// testing recipientTypes
// testing giverTypes
// testing specific giverType-recipientType combinations
// remove the header row
// Create a new question and save
// Delete the new question through the backdoor so that it still appears in the browser
// Edit the deleted question and save
// Restore feedbackEditPage
// Create a new question and save
// Create response for the new question
// Change the feedback path of the question and save
// Delete the question
// add questions for previewing
// restore feedbackeditpage
// check redirect to main feedback page
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\browsertests\InstructorFeedbackResultsPageResponseCommentUiTest.java
/**
// see prepareData()
// TODO: `clickCommentModalButton` should wait for modal to open before returning
// TODO: all instances of this should do an immediate check instead of waiting for the error message
// Add first comment to response
// TODO: Wait for comment to be added before returning
// TODO: all instances of this should do an immediate check instead of waiting for the comment to be added.
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\browsertests\InstructorFeedbackResultsPageUiTest.java
/**
// the actual test data is refreshed before each test method
// This is the full HTML verification for Instructor Feedback Results Page, the rest can all be verifyMainHtml
// results page should be able to load incorrect data and still display it gracefully
// need to retrieve question from datastore to get its questionId
// make both questions have the same question number
// compare html for each question panel
// to verify that the right responses are showing for each question
//div[contains(@class,'panel')][.//input[@name='questionid'][@value='"
//div[contains(@class, 'table-responsive')]");
//div[contains(@class,'panel')][.//input[@name='questionid'][@value='"
//div[contains(@class, 'table-responsive')]");
// Do not sort by team
// By question
// TODO: Test sorting fully instead of partially.
// Do not sort by team
// Mouseover actions do not work on Selenium-Chrome
// Change fs name so that the ajax request will fail
// Get an error page due to missing parameters in URL
// If admin is an instructor, expected url is InstructorHomePage
//                 otherwise, expected url is unauthorised.jsp
// assertTrue("Expected url is InstructorHomePage or Unauthorised page, but is " + afterReportDownloadUrl,
//            afterReportDownloadUrl.contains(Const.WebPageURIs.INSTRUCTOR_HOME_PAGE)
//            || afterReportDownloadUrl.contains(Const.ViewURIs.UNAUTHORIZED));
// return to the previous page
// check if the rows match the given order of values
// click the sort icon again and check for the reverse order
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\browsertests\InstructorFeedbackSessionsPageUiTest.java
/**
/** This contains data for the new feedback session to be created during testing. */
// the actual test data is refreshed before each test method
// This is the full HTML verification for Instructor Feedbacks Page, the rest can all be verifyMainHtml
// TODO: possibly remove some of the test cases below in the future
// Check that we are redirected to the edit page.
//TODO: check that the questions created match. Maybe do that in action test.
//Remove added session to prevent state leaks.
// disable emails for opening and closing
// fill in defaults
// set back to default course
// toggle emails for closing and results
// start time in past
// enable emails for closing
// visible from time is in future, hence the year.
//feedbackPage = getFeedbackPageForInstructor(idOfInstructorWithSessions);
/**
// Check that we are redirected to the edit page.
// Check that we are redirected to the edit page.
// Go back to previous page because 'copy feedback session' redirects to the 'FeedbackEdit' page.
// refresh page
// Delete and cancel
// Delete and confirm
// Delete all and cancel
// Delete all and confirm
//TODO implement this
// refresh page
// Test that the resend published link button doesn't exist
// Test that the resend published link button exists
// Test that the resend published link button can be clicked and the form can be cancelled
// Test the status message when the form is submitted with empty recipient list
// Test the status message when the form is submitted with a recipient list
// refresh page
// setup various dates for later test cases
// fill in default values for later test cases
//check if maxDate is start time and not publish time
// row -> row
// row -> radio
// radio -> radio
// radio -> row
// row -> radio (same row)
// refresh page
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\browsertests\InstructorFeedbackSubmitPageUiTest.java
/**
// test data is refreshed before each test case
// No links to test
// This is the full HTML verification for Instructor Feedback Submit Page, the rest can all be verifyMainHtml
// Test partial response for question
// Just check that some of the responses persisted.
// Test editing an existing response + fill up rest of responses at the same time
// Changed from "Algo" to "UI"
// Click on "None of the above", the option will be deselected when another option is clicked
// Just check the edited responses, and two new response.
// checks that "" can be submitted and other choices reset when "" is clicked
// mcq questions comments
/**
// Nothing much to test for input validation.
// Test fields are disabled when session is closed.
// Test input disabled
// Test that the recipient selection is disabled and not visible
// Test input disabled
// Test that the recipient selection is disabled and not visible
// Test input disabled
// Test that the recipient selection is disabled and not visible
// Test input disabled
// Test that the recipient selection is disabled and not visible
// Test input entered are valid numbers for the question.
// 1 decimal allowed, not a valid response
// > 3 decimals allowed but still not a valid response
// users not allowed to type letters but if somehow in, not a valid response
// if < minimum, textbox will be set to minimum
/* Note: Negative will be tested properly on Chrome or Safari but not on Firefox,
/* However, if we test -1.23, on Chrome and Safari it will be changed to 1 but on
// submitPage.fillResponseTextBox(qnNumber, responseNumber, "-1.23");
// assertEquals("1", submitPage.getResponseTextBoxValue(qnNumber, responseNumber));
// if > maximum, int or with decimals, textbox will be set to maximum
// Test input disabled
// Test that the recipient selection is disabled and not visible
// Test instructions displayed for filling the form
// Test messages for const sum (to recipient) qn without restriction
// Test messages for const sum (to option) qn without restriction
// Test messages for const sum (to recipient) qn with uneven distribution
// Test messages for const sum (to options) qn with uneven distribution
// Test messages for const sum (to recipients) qn with uneven distribution for at least some recipients
// Test messages for const sum (to options) qn with uneven distribution for at least some options
// No tests from instructor since contribution questions are only from students to own team members.
// Test by logging in as student instead.
// Test input disabled
// Test that the recipient selection is disabled and not visible
// Next, we edit some student data to cover editing of students after creating the responses.
// move one student out of Team 2 into a new team, should not cause the existing response to disappear
// delete one student, should remove (hide on page render; not deleted) the response made to him,
// and change the number of options in the recipient dropdown list.
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\browsertests\InstructorHelpPageUiTest.java
/**
// no test data used in this test
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\browsertests\InstructorHomePageUiTest.java
/**
// TODO: refactor this test. try to use admin login or create instructors and courses not using json
// Remove entities created during test
// This is the full HTML verification for Instructor Home Page, the rest can all be verifyMainHtml
//this case is implicitly tested when testing for 'delete course' action and
//new instructor without sample course
//loginAsInstructor(testData.accounts.get("newInstructorWithSampleCourse").email);
//already logged in
// Should not see private session
// update current instructor for CS1101 to have Co-owner privileges
// Test that download result button exist in homePage
// Verify an error page is returned due to missing parameters in URL
// assertTrue("Expected url is Unauthorised page, but is " + afterReportDownloadUrl,
//                 afterReportDownloadUrl.contains(Const.ViewURIs.UNAUTHORIZED));
// Redirect to the instructor home page after showing error page
// Test that the resend published link button exists for this published session
// Test that the resend published link button can be clicked and the form can be cancelled
// Test the status message when the form is submitted with empty recipient list
// Test that the resend published link button does not exist for this not published session
// Both will be false before it is archived for testing
//delete the course, then submit archive request to it
// assertTrue(browser.driver.getCurrentUrl().contains(Url.addParamToUrl(Const.ViewURIs.UNAUTHORIZED,
//         Const.ParamsNames.ERROR_FEEDBACK_URL_REQUESTED, Const.ActionURIs.INSTRUCTOR_COURSE_ARCHIVE)));
// recover the deleted course and its related entities
// Change action link so that ajax will fail
// Wait for modal to appear and show error.
//delete the other course as well
// Tested in student list page
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\browsertests\InstructorSearchPageUiTest.java
/**
// upload a profile picture for one of the students
// This is the full HTML verification for Instructor Search Page, the rest can all be verifyMainHtml
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\browsertests\InstructorStudentListPageUiTest.java
/**
// put the search document for students only
// upload a profile picture for one of the students
// This is the full HTML verification for Instructor Student List Page, the rest can all be verifyMainHtml
// verify copy email functionality
// update current instructor privileges
// Mouseover actions do not work on Selenium-Chrome
// The following photo-related tests somehow does not work in AppVeyor environment.
// This should not be the same "bug" as the Chrome-related above as similar tests in
// InstructorFeedbackResultsPageUiTest still pass.
// TODO fix this
// already covered under testContent()
// ______TS("content: search active")
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\browsertests\InstructorStudentRecordsPageUiTest.java
/**
// This is the full HTML verification for Instructor Student Records Page, the rest can all be verifyMainHtml
// TODO add link to a feedback session
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\browsertests\InstructorSubmissionAdjustmentUiTest.java
/**
// use the instructor account injected for this test
//load the enrollPage
//Wait briefly to allow task queue to successfully execute tasks
//Verify pre-existing submissions and responses
// It might take a while for the submission adjustment to persist (especially on the live server),
// during which the pre-existing submissions and responses would be counted.
// Hence, this needs to be retried several times until the count becomes zero.
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\browsertests\MashupPageUiTest.java
/**
// loginAdmin();
// We do not release the browser instance here because we want the tester to see the loaded page.
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\browsertests\package-info.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\browsertests\ScrollUnitTest.java
/**
// No need  of data. Dummy data only for scrolling purposes
// 400ms which gives enough time to scroll
// 400ms which gives enough time to scroll
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\browsertests\StudentCourseJoinConfirmationPageUiTest.java
/**
// use the 1st student account injected for this test
// TODO: remove this test by 21/09/2014
// this test uses accounts from test.properties.
// NOTE: the logout link at the bottom of the page has to be changed to {*}
//       since the link is different in dev and staging servers
// This is the full HTML verification for Student Course Join Confirmation Page, the rest can all be verifyMainHtml
/*covered in testJoinConfirmation()
// this test uses accounts from test.properties
// This is also a HTML verification for Student Course Join Confirmation Page because they use the
// same html file for verification
// continuously ask BackDoor to get the key until a legit key is returned
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\browsertests\StudentFeedbackResultsPageUiTest.java
/**
// Open Session
// Mcq Session
// This is the full HTML verification for Unregistered Student Feedback Results Page,
// the rest can all be verifyMainHtml
// This is the full HTML verification for Registered Student Feedback Results Page,
// the rest can all be verifyMainHtml
// clear the googleId
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\browsertests\StudentFeedbackSubmitPageUiTest.java
/**
// test data is refreshed before each test case
// This is the full HTML verification for Unregistered Student Feedback Submit Page,
// the rest can all be verifyMainHtml
// this session contains questions to instructors, and since instr3 is not displayed to students,
// student cannot submit to instr3
// This is the full HTML verification for Registered Student Feedback Submit Page, the rest can all be verifyMainHtml
// see comment for awaiting session
// Test partial response for question
// total sums up to expected value, verify empty entries are filled with 0
// delete an auto-filled 0, verify it's auto-filled again
// modify a non-zero value and remove a 0
// verify no longer auto-filled with 0
// clear both input box for successful form submission.
// Just check that some of the responses persisted.
// toggle 'Algo' radio option
// Test editing an existing response
// + fill up rest of responses at the same time
// Changed from "Algo" to "UI"
// Just check the edited responses, and two new response.
//check new response
//check edited
// Submit response with 1 option checked
// Submit response with 2 options checked
// Submit response with 3 options checked
// Submit response with 4 options checked
// Uncheck an option so that response is valid
// Submit response for 1st recipient with 2 options checked
// Submit response for 1st recipient with 3 options checked
// Submit response for 1st recipient with 4 options checked
// Test partial response for question
// this should not give any error since the value will be automatically adjusted before the form is submitted
// adjusted value should be 1
// this should not give any error since the value will be automatically adjusted before the form is submitted
// adjusted value should be 5
/* Attention: in safari or chrome, negative sign "-" can be input so the result will be adjusted to 1
// We need the final response value for this particular question to be "5"
// Select the first option for the first question for each student
// Switch to mobile view
// Test if changes on desktop view persisted to mobile view
// Clear option for the first question for each student
// Select the second option for the second question for each student
// Switch to desktop view
// Test if changes on mobile view persisted to desktop view
// Next, we edit some student data to cover editing of students
// after creating the responses.
// move one student out of Team 2 into a new team
// This should cause the page to render an extra response box for
// the team question.
// delete one student
// This should remove (hide on page render; not deleted) the response made to him,
// and change the number of options in the recipient dropdown list.
// move Benny out of Team >'"< 1 into team 2 and change her email
// This should cause the team mates question to disappear completely as
// no one else is in Team >'"< 1, but other responses to Benny should remain.
// verify submission with no-response questions are possible
// verify that existing responses with invalid recipients do not affect submission
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\browsertests\TableSortTest.java
/**
// no test data used in this test
// loginAdmin();
//check if the rows match the given order of values
//click the sort icon again and check for the reverse order
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\datatransfer\AccountAttributesTest.java
/**
//invalid name
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\datatransfer\AttributesDeletionQueryTest.java
/**
// nothing inside query
// course id with question id
// course id with response id
// session name without course id
// session name with question id
// session name with response id
// question id with response id
// build deletion of course
// build deletion of session
// build deletion of question
// build deletion of response
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\datatransfer\BaseAttributesTest.java
/**
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\datatransfer\CourseAttributesTest.java
/**
//already tested in testValidate() above
//already tested in testValidate() above
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\datatransfer\CourseRosterTest.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\datatransfer\FeedbackConstantSumResponseDetailsTest.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\datatransfer\FeedbackMcqQuestionDetailsTest.java
/**
// getMcqWeight() returns empty list as there are no mcq choices set.
// As one weight can not be parsed, there will be only one weight in the list
// As one weight can not be parsed, there will be only one weight in the list
// As weights are disabled, getMcqWeights should return an empty list.
// As 'other' option is disabled, 'otherWeight' will have default value of 0.0
// As weights is disabled, even though other is enabled, otherWeight will have it's default value.
// Other weight value before editing the question
// As 'aa' is not valid double value, other weight will keep the previous value
// Removed to send null as otherWeight parameter
// requestParams.put(Const.ParamsNames.FEEDBACK_QUESTION_MCQ_OTHER_WEIGHT, new String[] { "" });
// Remove this weight to make number of choices greater than number of weights
// requestParams.put(Const.ParamsNames.FEEDBACK_QUESTION_MCQ_WEIGHT + "-1", new String[] { "1.55" });
// Pass negative weight for choice 1 to check that negative weights are not allowed.
// Pass negative weight for 'Other' option to check that negative weights are not allowed.
//duplicate cases that has trailing and leading spaces
// As, weights does not support other generateOptionsFor options then 'NONE',
// here in this case, even though we assigned weights for 'Generate Options for Student'
// the weights will remain disabled, and the weights list will remain empty.
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\datatransfer\FeedbackMsqQuestionDetailsTest.java
/**
// getMsqWeight() returns empty list as there are no msq choices set.
// As one weight can not be parsed, there will be only one weight in the list
// As one weight can not be parsed, there will be only one weight in the list
// As weights are disabled, getMsqWeights should return an empty list.
// As 'other' option is disabled, 'otherWeight' will have default value of 0.0
// As weights is disabled, even though other is enabled, otherWeight will have it's default value.
// Other weight value before editing the question
// As 'aa' is not valid double value, other weight will keep the previous value
// The following line is commented out, so otherWeight parameter is missing from the requestParams.
// requestParams.put(Const.ParamsNames.FEEDBACK_QUESTION_MSQ_OTHER_WEIGHT, new String[] { "" });
// The following msqWeight-1 is commented out, so the number of Weights can become 1 whereas numOfChoices is 2.
// requestParams.put(Const.ParamsNames.FEEDBACK_QUESTION_MSQ_WEIGHT + "-1", new String[] { "1.55" });
// Pass negative weight for choice 1 to check that negative weights are not allowed.
// Pass negative weight for 'Other' option to check that negative weights are not allowed.
//duplicate cases that has trailing and leading spaces
// As, weights does not support other generateOptionsFor options then 'NONE',
// here in this case, even though we assigned weights for 'Generate Options for Student'
// the weights will remain disabled, and the weights list will remain empty.
// 'other' is NOT one of the choices
// 'other' is one of the choices
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\datatransfer\FeedbackQuestionAttributesTest.java
/**
// .build() will remove irrelevant visibilities options, so the lists showResponsesTo,
// showGiverNameTo, and showRecipientNameTo are not the same as the ones in qn
// check that other types are not removed
// RECEIVER_TEAM_MEMBERS is removed as it is irrelevant visibility
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\datatransfer\FeedbackQuestionDetailsTest.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\datatransfer\FeedbackResponseAttributesTest.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\datatransfer\FeedbackResponseCommentAttributesTest.java
/**
// Default values for following fields
//test.com/test.png\"></image> hello";
//test.com/test.png \"", commentText);
//test.com/test.png\"></image> hello";
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\datatransfer\FeedbackResponseDetailsTest.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\datatransfer\FeedbackRubricQuestionDetailsTest.java
/**
// getRubricWeightForEachCell() returns empty list as there are no choices set.
// getRubricWeightForEachCell() returns empty list as there are no sub questions set.
// As SubQn-0 is empty, no weights for SubQn-0 should be parsed,
// So, weight list will contain 1 value (weights for SubQn-1).
// Check weights for SubQn-1 (for cell-1-0, cell 1-1).
// As no weights have been passed, the weight list will be empty
// As invalid weight is passed for weight-0-0, there will be only one weight for SubQn-0.
// Check weights for SubQn-0 (for cell-0-1)
// Check weights for SubQn-1 (for cell-1-0, cell 1-1).
// As weights are disabled, weight list should be empty
// Check for the size of the weight list.
// Check weight list for correct values.
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\datatransfer\FeedbackRubricResponseDetailsTest.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\datatransfer\FeedbackSessionAttributesTest.java
/**
// Default values
// constructor update option based on existing update option
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\datatransfer\FeedbackSessionResultsBundleTest.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\datatransfer\GenderTest.java
/**
// invalid values
// valid values
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\datatransfer\InstructorAttributesTest.java
/**
// Check default values for optional params
// key remains
// regKey should not carried
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\datatransfer\InstructorPrivilegesTest.java
/**
// co-owner: all true
// manager: only one false
// observer: view only
// tutor
// helper
//TODO: more checking for this and the method follows
// restore courseLevel to pre-validate
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\datatransfer\package-info.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\datatransfer\StudentAttributesTest.java
/**
// last name is specified in updateOptions, use the value.
// last name not specified in updateOptions, split the name.
// Id is not given yet
// Id empty
// Id given
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\datatransfer\StudentProfileAttributesTest.java
/**
// the toString must be unique to the values in the object
// -------------------------------------------------------------------------------------------------------
// -------------------------------------- Helper Functions
// -----------------------------------------------
// -------------------------------------------------------------------------------------------------------
// tests both the constructor and the invalidity info
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\datatransfer\TeamEvalResultTest.java
/**
// CHECKSTYLE.OFF:SingleSpaceSeparator vertical alignment of values for readability
//only one person submitted
//only one person, submitted for self only
//two-person team
//TODO: special treatment for two-person teams?
//one-person team
//anther interesting mix of values (used in Ui Tests)
// CHECKSTYLE.ON:SingleSpaceSeparator
//mix of special values in filter
// target array has special values
//--------------------------------------------------------------------
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\logic\AccountsLogicTest.java
/**
// test data is refreshed before each test case
// Create correct student with original@email.com
// check that we have the corresponding new account created.
// promote account to instructor
// make the student 'unregistered' again
// rejoin
// check if still instructor
//Delete account to simulate Account object creation goes wrong
//Try to join course again, Account object should be recreated
// create a profile for the account
// verify the instructor is the last instructor of a course
// Make instructor account id a student too.
// course is deleted because it is the last instructor of the course
// verify the instructor is not the last instructor of a course
// course is not deleted
// verify the instructor is the last instructor of a course
// the archived instructor is also deleted
// the course is also deleted
// other irrelevant instructors remain
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\logic\BaseLogicTest.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\logic\CoursesLogicTest.java
/**
// test data is refreshed before each test case
// Student having zero courses is not applicable
// This student is in both course 1 and 2
// Get course details for student
// Verify number of courses received
// student with no courses is not applicable
// check if course belongs to this instructor
/* Explanation: SUT has 5 paths. They are,
//create a duplicate instructor
//remove the duplicate instructor object from the datastore.
// Ensure there are entities in the datastore under this course
// Ensure the course is not in Recycle Bin
// Ensure the course and related entities still exist in datastore
// Ensure the course is moved to Recycle Bin
// Ensure there are entities in the datastore under this course
// Ensure the course is currently in Recycle Bin
// Ensure the course and related entities still exist in datastore
// Ensure the course is restored from Recycle Bin
// Move the course back to Recycle Bin for further testing
// Ensure there are entities in the datastore under this course
// Ensure the course is currently in Recycle Bin
// Ensure the course and related entities still exist in datastore
// Ensure the courses are restored from Recycle Bin
// Move the course back to Recycle Bin for further testing
// Ensure there are entities in the datastore under this course
// Ensure the course and related entities are deleted
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\logic\DataBundleLogicTest.java
/**
// data bundle not persisted before test since the remove/restore data itself is being tested
// Not checking for invalid values in other entities because they
// should be checked at lower level methods
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\logic\EmailGeneratorTest.java
/**
// opened and unpublished.
// closed and unpublished
// opened and published.
// closed and published
// (5 instructors, 6 students reminded) and (1 instructor to be notified)
// Verify the student reminder email
// Verify the Student email copy send to the instructor
// Verify the instructor reminder email
// student1 has completed the feedback session and closing alert is only sent for those who are
// yet to complete, so we resort to student5
// InstructorAttributes sanitizes name before saving
// check recipient
// check subject
// check sender name
// check sender email
// check reply to address
// check email body for expected content
// check email body for no left placeholders
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\logic\EmailSenderTest.java
/**
// no test data used in this test
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\logic\FeedbackQuestionsLogicTest.java
/**
// see beforeMethod()
// other sessions are not affected
// 5 students minus giver himself
// instructor is not student so he can respond to all 5.
// 3 - giver = 2
//Appends a question to the back of the current question list
//new question should not have an ID.
//Add a question to session1course1 and sets its number to 1
//new question should not have an ID.
//Add a question to session1course1 and place it between existing question 2 and 3
//new question should not have an ID.
// the question has some responses and comments
// the responses and comments should gone
// verify that questions are shifted
// other questions not get affected
// the student only gives this response for the session
// suppose he is in the respondents list
// after deletion the question
// instructor respondents will not change
// the student should not in the respondents
// test that questions in other courses are unaffected
// construct a typical question
// NONE
// STUDENTS
// STUDENTS_EXCLUDING_SELF
// TEAMS
// TEAMS_EXCLUDING_SELF
// INSTRUCTORS
// construct a typical question
// TEAMS_EXCLUDING_SELF
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\logic\FeedbackResponseCommentsLogicTest.java
/**
// test data is refreshed before each test case
// reset email
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\logic\FeedbackResponsesLogicTest.java
/**
// test data is refreshed before each test case
// extra test data used on top of typical data bundle
// Alice will see 4 responses
// Benny will see 4 responses
// Charlie will see 3 responses
// Danny will see 3 responses
// Emily will see 1 response
// Cannot have invalid params as all possible invalid params
// are copied over from an existing response.
// Student 4 has 1 responses to him from team members,
// 1 response from him a team member, and
// 1 team response from him to another team.
// Add one more non-team response
// All these responses should be gone after he changes teams
// Non-team response should remain
// make sure it's the last response by the student
// the response is given by the student
// make sure it's not the last response by the student
// the response is given by the student
// Student 1 currently has 11 responses to him and 2 from himself.
// Student 1 currently has 1 response comment for responses from instructor to him
// and 1 response comment from responses from himself.
// student's comment
// instructor comment
// other more in-depth sectionDetail types are tested in FeedbackResponsesDbTest.java
//Create a "null" response to simulate trying to get a null student's response
// Only members of the recipient team should be able to see the recipient name
// suppose the student is in the respondents list of a session
// the responses also have some associated comments
// the student has some responses
// responses should be deleted
// comments should also be deleted
// the student is no longer in the respondents list
// should pass silently
// the response has comments
// associated comments are deleted
// test that responses are deleted
// test that responses from other courses are unaffected
// this is the only response the student has given for the session
// suppose the student is in the respondent list
// instructor respondents not change
// there is no student X in student respondents
// this is the only response the instructor has given for the session
// suppose the instructor is in the respondent list
// student respondents not change
// there is not instructor X in instructor respondents
// giver is student
// student is the recipient
// this is the only response the giver has given for the session
// suppose the student is in the respondent list
// after the recipient is moved from the course
// instructor respondents not change
// there is no student X in student respondents
// giver is instructor
// student is the recipient
// this is the only response the instructor has given for the session
// suppose the instructor is in the respondent list
// after the recipient is moved from the course
// student respondents not change
// there is not instructor X in instructor respondents
// both responses got some comments
// responses received by the team should be deleted
// their associated comments should be deleted
// the following two responses are given by student4InCourse1 as a representative of his team
// update the response's giver to the team name
// update the response's giver to the team name
// both responses got some comments
// responses received by the team should be deleted
// their associated comments should be deleted
// giver is instructor
// team is the recipient
// this is the only response the giver has given for the session
// suppose the instructor is in the respondent list
// after the team's responses are deleted
// student respondents not change
// there is no instructor1OfCourse2 in instructor respondents
// suppose the instructor is in the respondents list of a session
// the instructor has some responses
// the responses also have some associated comments
// responses should be deleted
// comments should be deleted
// it should no longer be in the session respondents list
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\logic\FeedbackSessionsLogicTest.java
/**
// see beforeMethod()
// delete existing feedback session directly
// delete feedback session in recycle bin
// they are in the same course
// delete all session under the course
// they should gone
// sessions in different courses should not be affected
// they are in the same course
// remove email from all respondents list
// the email should not appear
// they are in the same course
// remove email from all respondents list
// the email should not appear
// delete the instructor from the list
// delete the student from the list
// no need to removeAndRestoreTypicalDataInDatastore() as the previous test does not change the db
// restore the new course from Recycle Bin, and delete the newly added session as
// removeAndRestoreTypicalDataInDatastore() wont do it
// restore the new course from Recycle Bin, and delete the newly added session as
// removeAndRestoreTypicalDataInDatastore() wont do it
// restore the new course from Recycle Bin, and delete the newly added session as
// removeAndRestoreTypicalDataInDatastore() wont do it
// Create a question under the session to test for cascading during delete.
// This file contains a session with a standard
// session + a special session with all questions without recipients.
// 2 instructors, 6 students = 8
// 1 instructor, 1 student, did not respond => 8-2=6
// 2 instructors, 6 students = 8
// only 1 student responded
// 1 instructors, 1 students = 2
// no responses
// 2 valid sessions in course 1, 0 in course 2.
// Student can see sessions 1 and 2. Session 3 has no questions. Session 4 is not yet visible for students.
// Course 2 only has an instructor session.
// The instructor session has questions where responses are visible
// 3 valid sessions in course 1, 1 in course 2.
// Instructors should be able to see all sessions for the course
// We should only have one session here as there is only one session in the course.
// We just test this once.
// There should be 3 questions for students to do in session 1.
// Other questions are set for instructors.
// Question 1
// Comment on response 1 of question 1
// Question 2
// Comment on response 1 of question 2
// Question for students to instructors
// Check that instructors (except the one who is not displayed to student) appear as recipients
// Check that student3 get team member's (student4) feedback response as well (for team question).
// Question 1
// Question 2, no responses from this student yet
// We just test this once.
// There should be 2 question for students to do in session 1.
// The final question is set for SELF (creator) only.
// Question 1
// Comment on response 1 of question 1
// Question 2
// This file contains a session with a standard
// session which needs to have enough qn/response combinations to cover as much
// of the SUT as possible
/* Test result bundle for student1 */
// We just check for correct session once
// Student can see responses: q1r1, q2r1,3, q3r1, qr4r2-3, q5r1, q7r1-2, q8r1-2
// We don't check the actual IDs as this is also implicitly tested
// later when checking the visibility table.
// Test the user email-name maps used for display purposes
// Test the user email-teamName maps used for display purposes
// Test 'Append TeamName to Name' for display purposes with Typical Cases
// Test 'Append TeamName to Name' for display purposes with Special Cases
// case: Unknown User
// case: Nobody
// case: Anonymous User
// Test the generated response visibilityTable for userNames.
/* Test result bundle for instructor1 within a course */
// Instructor can see responses: q2r1-3, q3r1-2, q4r1-3, q5r1, q6r1
//Instructor should still see all questions
// Test the user email-name maps used for display purposes
// Test the user email-teamName maps used for display purposes
// Test the generated response visibilityTable for userNames.
/* Test result bundle for instructor1 within a section */
// Instructor can see responses: q2r1-3, q3r1-2, q4r1-3, q5r1, q6r1
// after filtering by section, the number of responses seen by instructor will differ.
// Responses viewed by instructor after filtering: q2r1-3, q3r1, q4r2-3, q5r1
//Instructor should still see all questions
// Test the user email-name maps used for display purposes
// Test the user email-teamName maps used for display purposes
// Test the generated response visibilityTable for userNames.
// TODO: test student2 too.
// Responses viewed by instructor after filtering: q1r1, q2r1, q4r3
// Responses viewed by instructor after filtering: q2r1-3, q3r1, q4r2-3, q5r1
// Responses viewed by instructor after filtering: q2r1, q2r3, q3r1, q4r3
//TODO: check for cases where a person is both a student and an instructor
// results for single question with sectionDetail is tested in InstructorFeedbackResultsDownloadActionTest.java
// instructor not allowed to see student
// instructor not allowed to view student responses in section
// updated session not open, status set to false
// updated session open, status set to true
// updated session closed, status set to true
//  updated session not closed, status set to false
// updated session not closed, status set to false
// closed in 10 minutes, should not send closing email anymore
// updated session published, status set to true
// updated session not published, status set to false
// set as manual publish
// Set real time of publishing
// Extract response id from datastore based on json key.
// Stringifies the visibility table for easy testing/comparison.
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\logic\GateKeeperTest.java
/**
//TODO: test isUserLoggedIn method
// also make this user a student of another course
// check for user not logged in
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\logic\InstructorsLogicTest.java
/**
// test data is refreshed before each test case
// responses are updated
// comment giver are updated
// last editor is updated
// respondents in session is updated
// the instructors has some responses in course
// there should be no response of the instructor
// the course is not empty at the beginning
// other course is not affected
// this is an archived instructor
// the instructor should be deleted also
// make instructor1OfCourse1 to have the same googleId with instructor1OfCourse2
// instructor1OfCourse1 has some responses in course
// the two instructors have the same googleId but in different courses
// delete instructors for google ID
// the two instructors should gone
// instructor1OfCourse1's responses should be deleted also
// Generate ArrayList<String> of emails of all coOwners in course from data bundle
// Generate ArrayList<String> of emails of all coOwners from instructorsLogic.getCoOwnersForCourse
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\logic\package-info.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\logic\ProfilesLogicTest.java
/**
// no test data used for this test
// 4 functions are tested together as:
//      => The functions are very simple (one-liners)
//      => They are fundamentally related and easily tested together
//      => It saves time during tests
// more tests in ProfilesDbTest
// make sure we create an profile with picture key
// check that profile get deleted and picture get deleted
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\logic\StudentsLogicTest.java
/**
// test data is refreshed before each test case
// move to a different team
// response exist
// response should not exist
// this student is in two courses, course1 and course 2.
// get list using student data from course 1
// get list using student data from course 2
// check the content from first list (we assume the content of the
// second list is similar.
// First student received turned out to be the one from course 2
// then the second student received must be from course 1
// the typical case below seems unnecessary though--it is not useful for now
// as the method itself is too simple
// they are in the same team
// delete the second student
// there is only one student in the team
// get the response from DB
// the team is the recipient of the response
// this is the only response the instructor has given for the session
// suppose the instructor is in the respondent list
// after the student is moved from the course
// team response will also be removed
// this will delete the response to the team
// the instructor will be removed from the respondents list
// should fail silently.
// the student has response
// verify responses of the student are gone
// verify that other students in the course are intact
// the student has response
// verify that the student is deleted
// his responses should also be deleted
// other students are not affected
// there are students in the course
// some have give responses
// students are deleted
// but course exist
// their responses are gone
// the two are in different course
// there are students in the course
// students are deleted
// students in other courses are not affected
// other students are not affected
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\search\BaseSearchTest.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\search\FeedbackResponseCommentSearchTest.java
/**
// search engine need time to persist changes
// perform normal search
// session soft-deleted
// session deleted completely
// get response1ForQ1S1C1 from the datastore
// create a new comment
// the newly created comment is searchable
// perform normal search
// delete comments inside the session
// document deleted, should have no search result
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\search\InstructorSearchTest.java
/**
// create a new instructor with unique displayed name to test that field
// current displayed names in data bundle are either helper or instructor, which matches on many other fields
// create a new instructor
// the newly created instructor is searchable
// there is search result before deletion
// delete a student
// the search result will change
// delete all instructors in course 2
// there should be no search result
/*
/*
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\search\package-info.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\search\StudentSearchTest.java
/**
// create a new student
// the newly created student is searchable
// there is search result before deletion
// delete a student
// the search result will change
// delete all students in course 2
// the search result will change
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\storage\AccountsDbTest.java
/**
// delete created account
// Should we not allow empty fields?
// please verify the log message manually to ensure that saving request is not issued
// please verify the log message manually to ensure that saving request is not issued
// the test is to ensure that optimized saving policy is implemented without false negative
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\storage\CoursesDbTest.java
/**
/*Explanation:
// please verify the log message manually to ensure that saving request is not issued
// please verify the log message manually to ensure that saving request is not issued
// the test is to ensure that optimized saving policy is implemented without false negative
// Should fail silently
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\storage\EntitiesDbTest.java
/**
//We are using CoursesDb to test EntitiesDb here.
/*Explanation:
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\storage\FeedbackQuestionsDbTest.java
/**
// remove possibly conflicting entity from the database
// Assert dates are now.
// Assert lastUpdate has changed, and is now.
// should pass silently
// should pass silently
// create a new question in current session
// create another question under another session
// the question under current session is deleted
// the question under different session remain
// no accident deletion
// no accident deletion
// no accident deletion
// create a new question in current course
// create another question under another course
// the question under current course is deleted
// the question under different course remain
// no accident deletion
// remove possibly conflicting entity from the database
// remove possibly conflicting entity from the database
// remove possibly conflicting entity from the database
// invalid feedback path
// the test is to ensure that optimized saving policy is implemented without false negative
// remove possibly conflicting entity from the database
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\storage\FeedbackResponseCommentsDbTest.java
/**
// fill back the Ids
// please verify the log message manually to ensure that saving request is not issued
// please verify the log message manually to ensure that saving request is not issued
// the test is to ensure that optimized saving policy is implemented without false negative
// should pass silently
// get another frc from data bundle and use it to create another feedback response
// for some reason, the id is 0 instead of null. so we explicitly set it to be null
// set this comment to have the same responseId as frcaData
// two comments exist in the DB
// delete one
// other irrelevant comment remains
// should pass silently
// comment deleted
// other irrelevant comment remains
// should pass silently
// should pass silently
// should pass silently
// should pass silently
// the two existing comment are in the same course
// create another comments different course
// same course's comments are deleted
// other course's data is not affected
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\storage\FeedbackResponsesDbTest.java
/**
// Add questions to DB
// Add responses for corresponding question to DB
// Update feedbackQuestionId for response
// remove possibly conflicting entity from the database
// Assert dates are now.
// Assert lastUpdate has changed, and is now.
// all response of questions are deleted
// responses of other questions remain
// should pass silently
// responses are not deleted accidentally
// response are belong to the same course
// but in different session
// other responses remains
// should pass silently
// other responses remain
// should pass silently
// other responses remain
// should pass silently
// other responses remain
// response are belong to different courses
// all response of courses are deleted
// responses of other course remain
// should pass silently
// responses are not deleted accidentally
// remove possibly conflicting entity from the database
// sets the id for fra
//Id from first success case
// the test is to ensure that optimized saving policy is implemented without false negative
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\storage\FeedbackSessionsDbTest.java
/**
// soft delete a feedback session now
// soft delete a feedback session now
// soft delete a feedback session now
// soft delete a feedback session now
// please verify the log message manually to ensure that saving request is not issued
// please verify the log message manually to ensure that saving request is not issued
// the test is to ensure that optimized saving policy is implemented without false negative
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\storage\InstructorsDbTest.java
/**
// Verifying less privileged 'Observer' role did not return false positive in case old 'Manager' role is unchanged.
// please verify that the log message manually to ensure that saving request is not issued
// please verify that the log message manually to ensure that saving request is not issued
// the test is to ensure that optimized saving policy is implemented without false negative
// please verify the log message manually to ensure that saving request is not issued
// please verify the log message manually to ensure that saving request is not issued
// the test is to ensure that optimized saving policy is implemented without false negative
// Verifying less privileged 'Observer' role did not return false positive in case old 'CoOwner' role is unchanged.
// other course is not affected
// other course is not affected
// other course is not affected
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\storage\package-info.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\storage\ProfilesDbTest.java
/**
// typical picture
// typical profiles
// save entity and picture
// delete entity
// delete picture
// tear down
// create empty profile
// tear down
// the test is to ensure that optimized saving policy is implemented without false negative
// cannot access entity with empty googleId
// update same profile
// other fields remain
// picture remains
// modifiedDate remains
// update nothing
// other fields remain
// picture remains
// modifiedDate remains
// tear down
// check that profile get deleted and picture get deleted
//-------------------------------------------------------------------------------------------------------
//-------------------------------------- Helper Functions -----------------------------------------------
//-------------------------------------------------------------------------------------------------------
// we upload a small text file as the actual file does not matter here
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\storage\StudentsDbTest.java
/**
// Assert dates are now.
// Assert lastUpdate has changed, and is now.
// remove possibly conflicting entity from the database
// Create a new student with valid attributes
// Create a second student with different email address
// clean up
// the original student is deleted
// the test is to ensure that optimized saving policy is implemented without false negative
// delete student not exist
// delete by course and email
// delete again - should fail silently
// delete all students in non-existent course
// should pass, others students remain
// delete all students in a course
// create another student in different course
// there are students in the course
// other course should remain
// clean up
// null params check:
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\testdriver\AssertHelperTest.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\testdriver\CsvCheckerTest.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\testdriver\EmailCheckerTest.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\testdriver\package-info.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\testdriver\TestNgXmlTest.java
/**
// <class name, package name>
/**
// BaseComponentTestCase, BaseTestCase (files in current directory) excluded because
// base classes are extended by the actual tests
/**
// If the package name is in TestNG in the form of <package name="teammates.test.cases.package.name" />
// then files in the current directory are excluded because the whole package would be tested by TestNG.
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\testdriver\TestPropertiestTest.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\util\ActivityLogEntryTest.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\util\BuildPropertiesTest.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\util\FieldValidatorTest.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\util\JsonUtilsTest.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\util\LogMessageGeneratorTest.java
/**
// other situations are tested in generateLogMessage_normalPageAction()
// auth success : unregistered student will be passed
// --------------- Google login ---------------
// userInfo and account will be passed for logged-in user
// AssertHelper.assertLogMessageEquals(logMessage, generatedMessage);
// AssertHelper.assertLogMessageEquals(logMessage, generatedMessage);
// AssertHelper.assertLogMessageEquals(logMessage, generatedMessage);
// AssertHelper.assertLogMessageEquals(logMessage, generatedMessage);
// AssertHelper.assertLogMessageEquals(logMessage, generatedMessage);
// masquerade: userInfo and account don't have the same google id
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\util\package-info.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\util\RecaptchaVerifierTest.java
/**
/**
// Use RecaptchaVerifierStub to mimic success response
// Use RecaptchaVerifierStub to mimic error codes
// Use RecaptchaVerifierStub to mimic runtime exceptions
/**
//developers.google.com/recaptcha/docs/verify#error-code-reference">reCAPTCHA API error codes</a>
// deliberately done for testing
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\util\SanitizationHelperTest.java
/**
// tested as name
// tested as email
// i.e., [\ " ' #]
// i.e., [\\ \&quot; \&#39; \#]
//\\ \" <The quick brown fox jumps over the lazy dog.>";
//teammatesv4.appspot.com\" onclick=\"alert('fail');\"></a>"
//teammatesv4.appspot.com/images/overview.png\" />"
//teammatesv4.appspot.com\"></a>"
//teammatesv4.appspot.com/images/overview.png\" />"
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\util\StringHelperTest.java
/**
//plaintext is less than 1 block long
//plaintext is equal to 1 block
//plaintext is more than 1 block long
/**
/**
// The decrypt function converts a hex string into an array of bytes before decryption.
// E.g AF is the byte 10101111
// Hence, non-hex strings should fail to decrypt.
// AES requires the length of data to be multiples of 128 bits.
// Hence, decryptionn should fail  for inputs of 120 and 136 bits.
// typical case
// input multiple square brackets, expected outermost brackets removed
// input nested square brackets, expected outermost brackets removed
// input no square brackets, expected same input string
// input unmatched brackets, expected same input string
// input empty string, expected empty string
// input null, expected null
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\util\TimeHelperTest.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\util\UrlTest.java
/**
///C:/path/to/file.ext");
///C:/path/to/file.ext", url.toAbsoluteString());
//www.google.com");
//www.google.com", url.toAbsoluteString());
//www.google.com/page?key1=value1");
//www.google.com/page?key1=value1", url.toAbsoluteString());
//www.google.com/page"));
//www.google.com/page?key1=value1&key2=value2&key1=newvalue1");
//www.google.com";
//www.google.com?key1=value1";
//www.google.com?key1=value1&key2=value2";
//www.google.com/page");
//www.google.com/page?key1=value1", newUrl.toAbsoluteString());
//www.google.com/page?key1=value1");
//www.google.com/page?key1=value1", url.toAbsoluteString());
//www.google.com");
//www.google.com", url.toAbsoluteString());
///C:/path/to/file.ext"));
//www.google.com";
//www.google.com/page?key1=value1";
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\webapi\ArchiveCourseActionTest.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\webapi\BaseActionTest.java
/**
/**
/**
/**
/**
/**
/**
/**
// The next few methods are for logging in as various user
/**
/**
/**
/**
/**
// The next few methods are for testing access control
// 'High-level' access-control tests: here it tests access control of an action for the full range of user types.
// 'Mid-level' access control tests: here it tests access control of an action for one user type.
//not checking for non-masquerade mode because admin may not be an instructor
// 'Low-level' access control tests: here it tests an action once with the given parameters.
// These methods are not aware of the user type.
/**
/**
/**
/**
// The next few methods are for parsing results
/**
/**
/**
// The next few methods are for verifying action results
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\webapi\BinCourseActionTest.java
/**
// clean up
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\webapi\BinFeedbackSessionActionTest.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\webapi\ConfirmFeedbackSessionSubmissionActionTest.java
/**
// verify 1 email sent
// verify update session's respondent list task added
// verify 1 email sent
// verify update session's respondent list task added
// verify update session's respondent list task added
// verify update session's respondent list task added
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\webapi\CreateAccountActionTest.java
/**
// 9
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\webapi\CreateCourseActionTest.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\webapi\CreateFeedbackQuestionActionTest.java
/**
// verify question is created
// verify question is created
// verify question is created
// contribution question cannot have students -> students feedback path
// verify question is created
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\webapi\CreateFeedbackResponseActionTest.java
/**
//show that this FeedbackResponse already exists
// create a question
// send create request
// create a question
// send create request
//verify not answerable to students
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\webapi\CreateFeedbackResponseCommentActionTest.java
/**
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\webapi\CreateFeedbackSessionActionTest.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\webapi\CreateInstructorActionTest.java
/**
// remove the newly added instructor
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\webapi\DeleteAccountActionTest.java
/**
// should fail silently.
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\webapi\DeleteCourseActionTest.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\webapi\DeleteFeedbackQuestionActionTest.java
/**
// question is deleted
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\webapi\DeleteFeedbackResponseActionTest.java
/**
// response is deleted
// delete the response again, throw NullPointerException
// response is deleted
// delete the response again, throw NullPointerException
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\webapi\DeleteFeedbackResponseCommentActionTest.java
/**
// non-existent feedback response comment id
// See each independent test case
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\webapi\DeleteFeedbackSessionActionTest.java
/**
// see test cases below
// Delete once
// Delete again
// Will fail silently and not throw any exception
// Will fail silently and not throw any exception
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\webapi\DeleteInstructorActionTest.java
/**
//see test cases below
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\webapi\DeleteStudentActionTest.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\webapi\DeleteStudentProfilePictureActionTest.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\webapi\DeleteStudentsActionTest.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\webapi\DowngradeAccountActionTest.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\webapi\EnrollStudentsActionTest.java
/**
// See test cases below.
// verify student in database
// verify response data is correct
// Ensure that student5InCourse1 has a unique team name in the course.
// Otherwise, it will give a duplicate team name error when changing section name.
// Enroll students up to but not exceeding limit.
// Enroll one more student to exceed limit.
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\webapi\GetAccountActionTest.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\webapi\GetAuthInfoActionTest.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\webapi\GetCourseActionTest.java
/**
//See test cases below
//see test cases below
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\webapi\GetCourseEnrollStudentsActionTest.java
/**
//no parameters
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\webapi\GetCourseJoinStatusActionTest.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\webapi\GetCoursesActionTest.java
/**
// See separated test cases below.
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\webapi\GetFeedbackQuestionRecipientsActionTest.java
/**
// See independent test cases
// Use typical bundle for testing access control because we want to make the login account consistent
// with "high-level" and "mid-level" access control tests, although accounts are same in two bundles
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\webapi\GetFeedbackQuestionsActionTest.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\webapi\GetFeedbackResponsesActionTest.java
/**
// See independent test cases
//see independent test cases
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\webapi\GetFeedbackSessionActionTest.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\webapi\GetFeedbackSessionsActionTest.java
/**
// Make student2InCourse2 and instructor1OfCourse1 belong to the same account.
// see individual tests
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\webapi\GetFeedbackSessionSubmittedGiverSetActionTest.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\webapi\GetHasResponsesActionTest.java
/**
//set test cases below
//Different results for question and course
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\webapi\GetInstructorActionTest.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\webapi\GetInstructorPrivilegeActionTest.java
/**
// update section privilege for testing purpose.
// course level privilege
// section level privilege
// session level privilege
// see individual tests.
// course id is used for instructor identify verification here.
// course id is used for instructor identify verification here.
// course id is used for instructor identify verification here.
// course id is used for instructor identify verification here.
// has privilege in any of the sections.
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\webapi\GetInstructorsActionTest.java
/**
// no parameters
// the #instructors is 5
// with information hiding, it is 4 instead
// information is hidden
// the #instructors is 5
// without information hiding, it is still 5
// try to access instructors in his own course
// try to access instructors in other course
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\webapi\GetLocalDateTimeInfoActionTest.java
/**
// After 2012-03-25 01:59:59, clocks sprang forward to 2012-03-25 03:00:00 in Europe/Andorra
// this time does't not exist in Europe/Andorra with DST
// After 2012-10-28 02:59:59, clocks fell back to 2012-10-28 02:00:00 in Europe/Andorra
// this time has two meanings in Europe/Andorra with DST
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\webapi\GetNationalitiesActionTest.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\webapi\GetOngoingSessionsActionTest.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\webapi\GetSessionResponseStatsActionTest.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\webapi\GetStudentActionTest.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\webapi\GetStudentCoursesActionTest.java
/**
// Note: this can happen only if the course was deleted after the student joined it.
// The 'welcome stranger' response is not really appropriate for this situation, but
// we keep it because the situation is rare and not worth extra coding.
// Create a student account without courses
// Access page in masquerade mode
// Delete additional sessions that were created
// check for persistence issue
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\webapi\GetStudentProfileActionTest.java
/**
// See test cases below.
// Prepare an unregistered teammate
// See test cases below.
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\webapi\GetStudentProfilePictureActionTest.java
/**
// check image key is the same as well
//student from another team
//student from another course
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\webapi\GetStudentsActionTest.java
/**
// no parameters
// information is hidden
// information is hidden
// try to access his own team
// try to access other team
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\webapi\GetStudentsAsCsvActionTest.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\webapi\GetTimeZonesActionTest.java
/**
// This test does not check the timezone database used is the latest
// Only check that the version number is returned, and some sample values for timezone offset
/*
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\webapi\JoinCourseActionTest.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\webapi\JsonResultTest.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\webapi\LegacyUrlMapperTest.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\webapi\OriginCheckFilterTest.java
/**
//localhost:8080");
//localhost:9090");
//localhost:9090");
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\webapi\package-info.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\webapi\PostStudentProfilePictureActionTest.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\webapi\PublishFeedbackSessionActionTest.java
/**
// Attempt to publish the same session again.
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\webapi\RemindFeedbackSessionResultActionTest.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\webapi\RemindFeedbackSessionSubmissionActionTest.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\webapi\ResetAccountActionTest.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\webapi\RestoreCourseActionTest.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\webapi\RestoreFeedbackSessionActionTest.java
/**
// TODO
// TODO
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\webapi\SearchAccountsActionTest.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\webapi\SendErrorReportActionTest.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\webapi\SendJoinReminderEmailActionTest.java
/**
/* Reassign the attributes to retrieve their keys */
// 2 unregistered students, thus 2 emails queued to be sent
// no unregistered students, thus no emails sent
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\webapi\SessionLinksRecoveryActionTest.java
/**
// no params
// see individual tests
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\webapi\StudentsEnrollRequestTest.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\webapi\UnublishFeedbackSessionActionTest.java
/**
// session is unpublished
// sent unpublish email task is added
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\webapi\UpdateCourseActionTest.java
/**
// verify time zone will be changed
// verify time zone did not change
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\webapi\UpdateFeedbackQuestionActionTest.java
/**
// There are already responses for this question
// All existing responses should remain
// question is not updated
// TODO: ADD this test case in FeedbackTextQuestionDetailsTest
// set recommended length as a negative integer
// question is not updated
// recommended length does not change
// question is not updated
// TODO first comment was there before, but the second one seems to be the one happening?
// Response rate should not change because other questions have the same respondents
// Response rate should decrease by 1 as response from student1 in qn1 is changed
// Response rate should decrease by 1 because the response of the unique instructor respondent is deleted
// Total possible respondents should decrease because instructors
// (except session creator) are no longer possible respondents
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\webapi\UpdateFeedbackResponseActionTest.java
/**
// TODO
// create a question
// create a response
// create a question
// create a response
// send update request
// TODO
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\webapi\UpdateFeedbackResponseCommentActionTest.java
/**
// this person is not the giver. so not accessible
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\webapi\UpdateFeedbackSessionActionTest.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\webapi\UpdateInstructorActionTest.java
/**
//remove the new instructor entity that was created
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\webapi\UpdateInstructorPrivilegeActionTest.java
/**
// see individual tests
// verify the privilege has indeed been updated
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\webapi\UpdateStudentActionTest.java
/**
//no parameters
//null student email
//null course id
// after trim, this is equal to newStudentEmail
// deleting edited student
// verify student in database
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\webapi\UpdateStudentProfileActionTest.java
/**
// simulate sanitization that occurs before persistence
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\webapi\WebApiServletTest.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\cases\webapi\WebPageServletTest.java
/**
// Nothing to test; just make sure that the response is 200
//localhost:4200");
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\driver\AssertHelper.java
/**
// utility class
/**
/**
/**
/**
/**
/**
/**
/**
// GoogleId is at position 6
/**
/**
/**
/**
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\driver\BackDoor.java
/**
//utility class
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
// For authentication
// necessary for reading stream response
/**
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\driver\CsvChecker.java
/**
// Utility class
/**
/**
/**
// anonymous participant names
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\driver\DataBundleHelper.java
/**
/**
/**
/**
/**
/**
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\driver\EmailChecker.java
/**
// Utility class
/**
/**
/**
/**
// regkey in URLs
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\driver\FileHelper.java
/**
// utility class
/**
/**
/**
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\driver\GaeSimulation.java
/**
// This can be any valid URL; it is not used beyond validation
//localhost:8080";
/** This is used only to generate an HttpServletRequest for given parameters. */
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
// HTTP method is not used here
/**
//TODO: eliminate this exception
// This is not testing servlet, so any HTTP method suffices
// TODO remove this portion once front-end migration is finished
// Reason: CSRF protection is not part of action tests
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\driver\MockEmailSender.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\driver\MockFilterChain.java
/**
// not used
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\driver\MockHttpServletRequest.java
/**
/**
/**
// not used
// not used
// not used
// not used
// not used
// not used
// not used
// not used
/**
// not used
/**
// not used
// not used
// not used
// not used
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\driver\MockHttpServletResponse.java
/**
// not used
// not used
// not used
// not used
// not used
// not used
// not used
// not used
// not used
// not used
// not used
// not used
// not used
// not used
// not used
// not used
// not used
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\driver\MockPart.java
/**
// not used
// not used
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\driver\MockTaskQueuer.java
/**
// countdown time not tested, thus fallback to another method
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\driver\package-info.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\driver\StringHelperExtension.java
/**
// utility class
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\driver\TestProperties.java
/**
/** The directory where HTML files for testing pages are stored. */
/** The directory where HTML files for testing email contents are stored. */
/** The directory where CSV files for testing CSV contents are stored. */
/** The directory where JSON files used to create data bundles are stored. */
/** The value of "test.persistence.timeout" in test.properties file. */
/** Indicates whether auto-update snapshot mode is activated. */
// access static fields directly
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\driver\TimeHelperExtension.java
/**
// utility class
/**
/**
//TODO: see if we can eliminate this method (i.e., merge with convertToDisplayValueInTimeDropDown)
/**
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\driver\UrlExtension.java
/**
// utility class
/**
// ensure that the given URL is not malformed
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\pageobjects\AdminAccountDetailsPage.java
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\pageobjects\AdminSearchPage.java
//table[@id = 'search_table']/tbody/tr[@id='" + createId(student) + "']");
/**
/**
//table[@id = 'search_table_instructor']/tbody/tr[@id='"
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\pageobjects\AdminSessionsPage.java
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\pageobjects\AppPage.java
/**
//code.google.com/p/selenium/wiki/PageObjects">https://code.google.com/p/selenium/wiki/PageObjects</a>
/** Browser instance the page is loaded into. */
/** Use for retrying due to persistence delays. */
/** Use for retrying due to transient UI issues. */
/** Firefox change handler for handling when `change` events are not fired in Firefox. */
/** Handler for tracking the state of a JQuery AJAX request. */
// These are elements common to most pages in our app
//*[@id=\"contentLinks\"]/ul[1]/li[1]/a")
/*[@id=\"contentLinks\"]/ul[1]/li[1]/a")
//*[@id=\"contentLinks\"]/ul[1]/li[2]/a")
/*[@id=\"contentLinks\"]/ul[1]/li[2]/a")
//*[@id=\"contentLinks\"]/ul[1]/li[4]/a")
/*[@id=\"contentLinks\"]/ul[1]/li[4]/a")
//*[@id=\"contentLinks\"]/ul[1]/li[6]/a")
/*[@id=\"contentLinks\"]/ul[1]/li[6]/a")
//*[@class=\"htCore\"]/tbody/tr/td[@class =\"enroll-handsontable\"])[1]")
/*[@class=\"htCore\"]/tbody/tr/td[@class =\"enroll-handsontable\"])[1]")
/**
// To minimize test failures due to eventual consistency, we try to
//  reload the page and compare once more.
/**
/**
/**
/**
/**
/**
/**
// due to MalformedURLException
/**
// Check https://developer.mozilla.org/en/docs/web/api/document/readystate
// to understand more on a web document's readyState
/**
/**
/**
/**
/**
/**
/**
/**
// Note: The implementation compares previous and current scroll positions so the polling interval should not be
// changed or set to too low a value or the comparisons may unexpectedly be equal.
// The first evaluation has no previous scrolling positions to compare to
// Because we are not truly detecting if the page has stopped scrolling,
// we make sure the scroll positions is the same for one more iteration
/**
/**
/**
/**
// Possible exploration: Change to listening to modal shown event as
// this is based on the implementation detail assumption that once modal-backdrop is added the modal is shown
// Possible exploration: Change to listening to modal hidden event as
// this is based on the implementation detail assumption that once modal-backdrop is removed the modal is hidden
/**
/**
/**
/**
/** Equivalent to pressing the 'back' button of the browser. <br>
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
// This method is a close mirror of HtmlUnitWebElement#clear(), except that events are not handled. Note that
// HtmlUnitWebElement is mirrored as opposed to RemoteWebElement (which is used with actual browsers) for convenience
// and the implementation can differ.
// Adapted from ExpectedConditions#stalenessOf which forces a staleness check. This allows a meaningful
// StaleElementReferenceException to be thrown rather than just getting a boolean from ExpectedConditions.
// Fail safe in case the implementation of staleness checks is changed
// It is important that a text box element is clickable before we fill it but due to legacy reasons we continue
// attempting to fill the text box element even if it's not clickable (which may lead to an unexpected failure
// later on)
// If the intended value is empty `clear` works well enough for us
// Otherwise we need to do special handling of entering input because `clear` and `sendKeys` work differently.
// See documentation for `clearAndSendKeys` for more details.
// Add event hook before blurring the text box element so we can detect the event.
// blur the element to receive events
// Although events should not be manually fired, the `change` event does not fire when text input is changed if
// Firefox is not in focus. Setting profile option `focusmanager.testmode = true` does not help as well.
// A temporary solution is to fire the `change` event until the buggy behavior is fixed.
// More details can be found in the umbrella issue of related bugs in the following link:
// https://github.com/mozilla/geckodriver/issues/906
// The firing of `change` event is also imperfect because no check for the type of the elements is done before firing
// the event, for instance a `change` event will be wrongly fired on any content editable element. The firing time of
// `change` events is also incorrect for several `input` types such as `checkbox` and `date`.
// See: https://developer.mozilla.org/en-US/docs/Web/Events/change
/**
// clear content programmatically; one implication is that an undo level is not added to the TinyMCE editor
// insert like a user does (one implication is that an undo level is added);
// this may result in some events (e.g. `Change`) firing immediately
// for consistent HTML verification across browsers
/**
/**
/**
/**
/**
// No AJAX request will be made if the value did not change
/**
/**
// No AJAX request will be made if the value did not change
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
/**
// Scroll to status message because it must be visible in order to get its text
/**
//TODO: implement a better way to download a file and check content
// (may be using HtmlUnit as the Webdriver?)
/**
//img[@src='/images/ajax-loader.gif' or @src='/images/ajax-preload.gif']"));
// ok to ignore
/**
/**
/**
// Note: Should first check if the button can actually dismiss the modal otherwise the state will be consistent.
// However, it is too difficult to check.
/**
//github.com/w3c/webdriver/issues/1005">Missing "scroll into view" Actions primitive</a>.
// TODO: migrate to `scrollIntoView` when Geckodriver is adopted
/**
/**
// row expected to be missing
/**
/**
/**
/**
/**
/**
// `$.active` is a counter for holding the number of active AJAX requests
// but is not documented because it is used by JQuery internally.
// see https://stackoverflow.com/questions/3148225/jquery-active-function/3148506#3148506
/**
/**
/**
/**
// Make sure that only a single AJAX request has previously occurred, this will be false if an AJAX
// request was made while there are other outstanding AJAX requests.
// Any AJAX requests made while executing the following script will result in undefined behavior.
/**
/**
/**
/**
/**
/**
/**
/**
/**
// The `change` event is fired with bubbling enabled to simulate how browsers fire them.
// See: https://developer.mozilla.org/en-US/docs/Web/Events/change
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\pageobjects\DevServerLoginPage.java
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\pageobjects\FeedbackSessionNotVisiblePage.java
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\pageobjects\FeedbackSubmitPage.java
//input[@name=" + name + " and @value=" + sanitizedChoiceName + "]"));
//input[@name=" + name + " and @value=" + sanitizedChoiceName + "]"));
//input[@name=" + name + " and @value=" + sanitizedChoiceName + "]"));
//select[@name=" + name + "]"));
// Waiting for modal visibility
// Verify modal header has success class
// Verify title content
//h4[@class='modal-title icon-success']"));
// Verify modal message content
//div[@class='bootbox-body']"));
/**
/**
/**
//div[@id='more-info-equal-share-modal']//button[@class='close']"));
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\pageobjects\GenericAppPage.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\pageobjects\GoogleLoginPage.java
// the login panel will have attribute `aria-busy="true"` while in animation
//div[contains(text(), 'Use another account')]");
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\pageobjects\HomePage.java
/**
//already logged in. We need to logout because the return type of
//  this method is a LoginPage
//already logged in. We need to logout because the return type of
//  this method is a LoginPage
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\pageobjects\InstructorCopyFsToModal.java
/**
/**
/**
/**
/**
/**
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\pageobjects\InstructorCourseDetailsPage.java
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\pageobjects\InstructorCourseEditPage.java
//form[@name='formAddInstructor']"
//input[@name='instructordisplayname']")
/**
// default values taken from courseEditAddInstructorPanel.tag
/**
/*
//*[starts-with(@id, 'instructorname')]"));
/*[starts-with(@id, 'instructorname')]"));
//a[contains(@class, 'view-role-details')][@data-role='" + role + "']"));
/**
/**
/**
/**
/**
// methods that return WebElements of the page go here
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\pageobjects\InstructorCourseEnrollPage.java
// Intentional check for opening h1 and not closing h1 because the following content is not static
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\pageobjects\InstructorCourseEnrollResultPage.java
// Intentional check for opening h1 and not closing h1 because the following content is not static
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\pageobjects\InstructorCourseJoinConfirmationPage.java
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\pageobjects\InstructorCoursesDetailsPage.java
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\pageobjects\InstructorCoursesPage.java
/** Represents the "Courses" page for Instructors. */
/* Explanation: This class follows the 'Page Objects Pattern' and as
/* Explanation: These are the elements in the page that we want to interact
//code.google.com/p/selenium/wiki/PageFactory) how to find
/** Used to check if the loaded page is indeed the 'Courses' page. */
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\pageobjects\InstructorCourseStudentDetailsEditPage.java
/**
/**
/**
// if team name is edited, the confirmation dialog will pop up
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\pageobjects\InstructorCourseStudentDetailsViewPage.java
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\pageobjects\InstructorEditStudentFeedbackPage.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\pageobjects\InstructorFeedbackEditPage.java
//input[@name='numofrecipientstype' and @value='max']")
//input[@name='numofrecipientstype' and @value='custom']")
/**
// Backspace to clear the extra 100 when box is cleared.
// Backspace to clear the extra 100 when box is cleared.
// Backspace to clear the extra 100 when box is cleared.
/**
/**
/**
/**
// checking move buttons of leftmost column
// checking move buttons of last column
// checking move buttons of remaining columns
/**
// checking rubric column values - choice, description-0, weight-0, description-1, weight-1,....
/**
// If weights are assigned, then rubric description values are at the odd indexes (i.e. 1,3,5,..),
// and rubric weights are at the even indexes (i.e. 2,4,..).
// Otherwise rubric description starts with index 1.
/**
/**
/**
//a[contains(@class, 'btn-duplicate-qn')][@data-qnnumber='" + qnIndex + "']"));
//a[contains(@class, 'btn-duplicate-qn')][@data-qnnumber='" + qnIndex + "']"));
//a[contains(@class, 'btn-delete-qn')][@data-qnnumber='" + qnIndex + "']"));
//a[contains(@class, 'btn-discard-changes')][@data-qnnumber='" + qnIndex + "']"));
//a[contains(@class, 'btn-discard-changes')][@data-qnnumber='" + qnIndex + "']"));
/**
// If the other option is selected, no AJAX request is made
// once the dropdown is assigned the class "open", the options should be visible unless not in the viewport
// Scroll to the option because it may not be in the viewport
// If the other option is selected, no AJAX request is made
/**
// new question doesn't have static question part
// need to wait for the panel to be fully expanded before checking the class
//substring trims colon from the retrieved question number text
/**
// && "Session visible from" radio buttons
// && "Send emails for" checkboxes
// && Submission times inputs
// && "Responses visible from" radio buttons
// No contribForm to check for.
/*
//div[@id='questionTable-" + questionNo + "']//div[@class='visibility-checkbox-delegate panel-body']"
//b[@class='visibility-title']/../..";
/**
// Navigate to the previous month
// Check if the dates of previous, current and next month are enabled
//div[@id='ui-datepicker-div']/table/tbody/tr/td"));
// Navigate to the next month
/**
/**
// LEGACY IMPLEMENTATION: Coupled to the implementation instructorFeedbackEdit.js#showNewQuestionFrame
// Creating a new question will result in scrolling, so it is assumed that all initialization is completed after
// scrolling is complete.
/**
/**
/**
/**
/**
/**
/**
/**
// Select start date
// Select deadline date
// Fill in instructions
// Select grace period
/**
/**
//div[@id='" + qnType + "OptionRow-"
//span[@class='glyphicon glyphicon-resize-vertical']"));
//div[@id='" + qnType + "OptionRow-"
//span[@class='glyphicon glyphicon-resize-vertical']"));
// drag option to target, move 10 units above target and release
// multiple movements are used to slow down drag movement and provide
// enough time for the grid to create empty slots
/**
/**
//click(addRubricRowLink);
// For rank recipients
// For SELF, OWN_TEAM, NONE
//a[@data-option-name='" + optionValue + "']/.."))
/**
// LEGACY IMPLEMENTATION: Status Message is scrolled to when we try to add an invalid question
// so we wait for no scrolling before verifying status message. This allows verification of status message to be
// faster because the text should already be visible. Any tests that follows will then also not get affected by the
// scrolling behavior.
// PROBABLE BETTER IMPLEMENTATION: All AJAX Status messages (not just error status messages) always cause scrolling
// so waiting for the status messages will include waiting for no scrolling before verifying the status messages.
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\pageobjects\InstructorFeedbackResultsPage.java
/**
// empty comment: wait until the textarea is clickable again
// non-empty comment: wait until the add comment form disappears
// empty comment: wait until the textarea is clickable again
/**
/**
/**
/**
// Case when element has been removed after JS processing
/**
/**
// Checks approximately that the added comment is constructed correctly
/**
/**
//div[contains(@class, 'panel-primary') or contains(@class, 'panel-default')]"
// Element changed (e.g. loading gif changed to actual image)
/**
/**
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\pageobjects\InstructorFeedbackSessionsPage.java
// fill in time values
// Fill in instructions
// Select grace period
/**
//tbody/tr[" + (sessionRowId + 1)
//tbody/tr[" + (sessionRowId + 1)
//tbody/tr[" + (sessionRowId + 1) + "]/td[contains(@class,'session-response-for-test')]"),
//tbody/tr[" + (sessionRowId + 1)
//button[contains(@class,'session-results-options')]")).isEnabled();
//tbody/tr[" + (sessionRowId + 1)
//a[contains(@class,'" + className + "')]"),
//tbody/tr[" + (sessionRowId + 1)
//a[contains(@class,'" + className + "')]"),
//tbody/tr[" + (sessionRowId + 1)
//a[contains(@class,'" + className + "')]"),
//table[contains(@id,'table-sessions')]//tbody/tr["
//a[contains(@class,'" + className + "')]"));
// wait for the async fetch before counting the number of feedback session
// give it some time to load as it is loaded via AJAX
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\pageobjects\InstructorHelpPage.java
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\pageobjects\InstructorHomePage.java
//TODO: rename course-add-eval-for-test
//tr[@id='session" + evaluationRowId + "']/td[contains(@class,'session-response-for-test')]/a";
//tbody/tr[" + (sessionRowId + 1)
//button[contains(@class,'session-results-options')]"));
//div[@id='course-%d']//tr[@id='session%d']";
//div[starts-with(@id, 'course-')]//tr")).size();
//td[1]", courseRowId,
//div[@id='course-" + id
//strong"))
// give it some time to load as it is loaded via AJAX
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\pageobjects\InstructorSearchPage.java
//tr[@id='student-c" + courseNumber + "." + rowId + "']"
//td[@id='" + Const.ParamsNames.STUDENT_NAME + "-c" + courseNumber + "." + rowId + "']";
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\pageobjects\InstructorStudentListPage.java
// standardize line separator
//div[@id='panelHeading-" + id + "']//strong"))
//tr[@id='student-c" + courseNumber + "." + rowId + "']"
//td[@id='" + Const.ParamsNames.STUDENT_NAME + "-c" + courseNumber + "." + rowId + "']";
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\pageobjects\InstructorStudentRecordsPage.java
/**
/**
/**
/**
/**
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\pageobjects\LoginPage.java
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\pageobjects\package-info.java
/**
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\pageobjects\StudentCourseJoinConfirmationPage.java
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\pageobjects\StudentFeedbackResultsPage.java
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\pageobjects\StudentHomePage.java
________________________________________________________________________________________
E:/AllLangDS/ds/java/teammates-master\teammates-master\src\test\java\teammates\test\pageobjects\StudentProfilePage.java
/**
/**
